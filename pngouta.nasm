;
; pngouta.nasm: remastering multi-target for PNGOUT (pngout-20150319)
; by pts@fazekas.hu at Tue May  9 00:29:55 CEST 2023
;
; See other pngout*.asm source files for compilation instructions of
; individual targets.
;
; Based on: pngout-20150319-linux/i686/pngout in https://www.jonof.id.au/files/kenutils/pngout-20150319-linux.tar.gz (87976 bytes)
; Based on: https://www.jonof.id.au/files/kenutils/
;
; This program targets 32-bit Intel architecture (IA-32), and within that
; the P6 (-march=i686, Pentium Pro) processor family or later. It doesn't
; work with earlier CPUs (e.g. 386, 486, 586 == P5 == Pentium) because the
; PNGOUT machine code uses some P6-specific instructions (e.g. fucomi,
; cmovs).
;
; Uses: %ifdef TARGET; %ifdn TARGET, ...
; Uses: %ifdef MDEBUG (for malloc debugging)
;

%ifndef TARGET
%define TARGET x  ; statically linked for Linux i386 using uClibc 0.9.30.1 (2009-03-02).
%endif

%ifidn TARGET, lo
%define TARGET ls
%define TARGET_LS_WITH_ELF_SECTIONS 1
%endif

%ifidn TARGET, x  ; statically linked for Linux i386 using uClibc.
  B.code equ -0x8042000
  B.data equ B.code-0x1000
%elifidn TARGET, l  ; dynamically linked for Linux i386 against glibc, remastered
  ; Originally created with glibc 2.19.
  ;
  ; TARGET==l is 0x1000 bytes smaller than TARGET==ls and TARGET==lo,
  ; because the .eh_frame is smaller, and the linker of TARGET==l wasn't
  ; smart to do move PT_LOAD entries closer with good remainder modulo 0x1000.
  B.code equ -0x8048000
  B.data equ B.code-0x1000
%elifidn TARGET, d  ; dynamically linked for macOS >=10.5 i386 against /usr/lib/libSystem.B.dylib
  ; TODO(pts): Add stripped macOS target. It's probably not worth it, it saves only 644 bytes.
  B.code equ -0x8048000
  B.data equ B.code
%elifidn TARGET, ls  ; dynamically linked for Linux i386 against glibc, section headers stripped
  ; Compiled on Debian with gcc 4.4.7-2 and 4.7.2-5, with crt*.o from glibc
  ; other than 2.19.
  ;
  ; Significant libc/gcc difference from TARGET=l: This symbol table doesn't
  ; contain symbols _ITM_deregisterTMCloneTable and
  ; _ITM_registerTMCloneTable, even though they are used (as 0).
  B.code equ -0x8048000
  B.data equ B.code
  %ifndef TARGET_LS_WITH_ELF_SECTIONS
    %define TARGET_LS_WITH_ELF_SECTIONS 0
  %elifidn TARGET_LS_WITH_ELF_SECTIONS,
    %define TARGET_LS_WITH_ELF_SECTIONS 0
  %endif
%else
  %error unknown target: TARGET
times 1/0 nop
%endif  ; TARGET, ...

bits 32
cpu 386
org 0
R.code equ $+B.code
A.code equ 0

;global main

; libc global variables used.
;extern stdin   ; FILE*.
;extern stdout  ; FILE*.
;extern stderr  ; FILE*.

; libc functions used.
;extern log  ; Reimplemented.
;extern read  ; Linux syscall.
;extern printf  ; Not used anymore in pngoutl and pngoutx. TODO(pts): Relink pngoutl with a shorter .plt etc. after all libc functions have been replaced.
;extern fflush
;extern memmove
;extern free
;extern memcpy
;extern fgets  ; Needs read buffering, only used from stdin.
;extern fclose
;extern time  ; Linux syscall.
;extern gettimeofday  ; Linux syscall.
;extern stpcpy
;extern fseek
;extern fwrite
;extern strcat
;extern fread
;extern strcpy
;extern realloc
;extern malloc
;extern puts  ; Not used anymore in pngoutl and pngoutx.
;extern exit  ; There is a corresponding Linux syscall _exit.
;extern srand  ; Reimplemented.
;extern strchr  ; Reimplemented.
;extern strlen  ; Reimplemented.
;extern strcasecmp  ; Reimplemented.
;extern ftell
;extern fopen
;extern memset
;extern fileno
;extern strtod  ; Reimplemented.
;extern fgetc  ; Needs read buffering, not from stdin.
;extern strncasecmp  ; Reimplemented.
;extern rand  ; Reimplemented.
;extern strtok
;extern vfprintf  ; Reimplemented.
;extern strtol  ; Reimplemented.
;extern fputc  ; Only for TARGET==x, called by vfprintf(...).

%ifdef MDEBUG
  %ifidn TARGET, x
    %define prog_malloc debug_malloc
    %define prog_realloc debug_realloc
    %define prog_free debug_free
  %endif  ; TARGET, x
%endif ; MDEBUG

%ifndef prog_malloc
  %define prog_malloc malloc
  %define prog_realloc realloc
  %define prog_free free
%endif

PT:  ; Symbolic constants for ELF PT_... (program header type).
.LOAD equ 1
.PHDR equ 6
.INTERP equ 3
.DYNAMIC equ 2
.NOTE equ 4
.GNU_EH_FRAME equ 0x6474e550
.GNU_STACK equ 0x6474e551  ; GNU stack.

%ifidn TARGET, x
X.ELF_ehdr:  ;0x00000..0x00034  +0x00034    ---
ehdr:					; Elf32_Ehdr
		db 0x7f, 'ELF'		;   e_ident[EI_MAG...]
		db 1			;   e_ident[EI_CLASS]: 32-bit
		db 1			;   e_ident[EI_DATA]: little endian
		db 1			;   e_ident[EI_VERSION]
		db 3			;   e_ident[EI_OSABI]: Linux
		db 0			;   e_ident[EI_ABIVERSION]
		db 0, 0, 0, 0, 0, 0, 0	;   e_ident[EI_PAD]
		dw 2			;   e_type == ET_EXEC.
		dw 3			;   e_machine == x86.
		dd 1			;   e_version
code_ptr_e_entry: equ $+0x8048000
		dd _start		;   e_entry
		dd phdr0-X.ELF_ehdr	;   e_phoff
		dd 0			;   e_shoff
		dd 0			;   e_flags
		dw .size		;   e_ehsize
		dw phdr0.size		;   e_phentsize
		dw (X.ELF_phdr.end-X.ELF_phdr)/phdr0.size  ;   e_phnum
		dw 0x28			;   e_shentsize
		dw 0			;   e_shnum
		dw 0			;   e_shstrndx
ehdr.size	equ $-ehdr

X.ELF_phdr:  ;0x00034..0x00094  +0x00060    ---
phdr0:					; Elf32_Phdr
		dd PT.LOAD		;   p_type
		dd 0			;   p_offset
		dd 0x8042000		;   p_vaddr
		dd 0x8042000		;   p_paddr
		dd +0x19a20		;   p_filesz
		dd +0x19a20		;   p_memsz
		dd 5			;   p_flags: r-x: read and execute, no write
		dd 0x1000		;   p_align
.size		equ $-phdr0
phdr1:					; Elf32_Phdr
		dd PT.LOAD		;   p_type
		dd 0x19f40		;   p_offset
		dd 0x805cf40		;   p_vaddr
		dd 0x805cf40		;   p_paddr
		dd +0x002b0		;   p_filesz
		dd +0x1821ee0		;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 0x1000		;   p_align
phdr2:					; Elf32_Phdr
		dd PT.GNU_STACK		;   p_type
		dd 0			;   p_offset
		dd 0			;   p_vaddr
		dd 0			;   p_paddr
		dd +0			;   p_filesz
		dd +0			;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 0			;   p_align
X.ELF_phdr.end:

X.gap1:      ;0x00094..0x004c0  +0x0042c    ---
times +0x0042c db 0

X.ucrodata:  ;0x004c0..0x01adc  +0x0161c    @0x80424c0...0x8043adc
times -($-$$+0x8042000)+0x80424c0 times 0 nop  ; Assert.
times +($-$$+0x8042000)-0x80424c0 times 0 nop  ; Assert.
ucrodata_unknown1: equ $-B.code  ; No labels here.
..@0x80424c0: db 0x00, 0x00, 0x80, 0xda, 0x00, 0x00, 0x80, 0x5a, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x40
unused_f32_10: equ $-B.code
..@0x80424d0: dd 0
f32_0.25: equ $-B.code
..@0x80424d4: dd 0x3e800000  ; 32-bit (float)0.25.
ucrodata_unknown4: equ $-B.code  ; No labels here.
  ..@0x80424d8: db 0x20, 0xbc, 0xbe, 0x4c, 0x28, 0x6b, 0x6e, 0x4e
  ..@0x80424e0: db 0x00, 0x00, 0xe0, 0xfe, 0x42, 0x2e, 0xe6, 0x3f, 0x76, 0x3c, 0x79, 0x35, 0xef, 0x39, 0xea, 0x3d
  ..@0x80424f0: db 0x55, 0x55, 0x55, 0x55, 0x55, 0x55, 0xd5, 0xbf, 0x76, 0x3c, 0x79, 0x35, 0xef, 0x39, 0xea, 0xbd
  ..@0x8042500: db 0x44, 0x52, 0x3e, 0xdf, 0x12, 0xf1, 0xc2, 0x3f, 0xde, 0x03, 0xcb, 0x96, 0x64, 0x46, 0xc7, 0x3f
  ..@0x8042510: db 0x59, 0x93, 0x22, 0x94, 0x24, 0x49, 0xd2, 0x3f, 0x93, 0x55, 0x55, 0x55, 0x55, 0x55, 0xe5, 0x3f
  ..@0x8042520: db 0x9f, 0xc6, 0x78, 0xd0, 0x09, 0x9a, 0xc3, 0x3f, 0xaf, 0x78, 0x8e, 0x1d, 0xc5, 0x71, 0xcc, 0x3f
  ..@0x8042530: db 0x04, 0xfa, 0x97, 0x99, 0x99, 0x99, 0xd9, 0x3f
f64_0: equ $-B.code:
..@0x8042538: dd 0, 0  ; 32-bit (float)0.0.
ucrodata_unknown5: equ $-B.code  ; No labels here.
  ..@0x8042540: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x3f
__stdio_mutex_initializer.4160: equ $-B.code
..@0x8042548: dd 0, 0, 0, 1, 0, 0  ; All uClibc locks look like this initially.
str_nil: equ $-B.code  ; No labels here.
..@0x8042560: db '(nil)', 0
str_null: equ $-B.code  ; No labels here.
..@0x8042566: db '(null)', 0
str_dev_null: equ $-B.code  ; No labels here.
..@0x804256d: db '/dev/null', 0
prefix.4371: equ $-B.code
..@0x8042577: db 0x2b, 0x00, 0x2d, 0x00, 0x20, 0x00, 0x30, 0x78, 0x00
  ..@0x8042580: db 0x30, 0x58, 0x00
spec_base.4370: equ $-B.code
..@0x8042583: db 0x10, 0x10, 0x10, 0x08, 0x0a, 0x0a, 0x0a
qual_chars.4377: equ $-B.code
..@0x804258a: db 'hlLjztqZ', 0
ucrodata_unknown2: equ $-B.code  ; No labels here.
..@0x8042593: db 0x02, 0x04, 0x08, 0x08, 0x00, 0x00, 0x08, 0x00, 0x00, 0x01, 0x08
spec_and_mask.4376: equ $-B.code
..@0x804259e: db 0x00, 0x1f
  ..@0x80425a0: db 0x05, 0x00, 0x00, 0x0f, 0x07, 0x08, 0x02, 0x00, 0x04, 0x00, 0x01, 0x00, 0x03, 0x00
spec_or_mask.4375: equ $-B.code
..@0x80425ae: db 0x00, 0x10
  ..@0x80425b0: db 0x05, 0x00, 0x00, 0x00, 0x07, 0x00, 0x02, 0x00, 0x04, 0x00, 0x01, 0x00, 0x03, 0x00
spec_ranges.4374: equ $-B.code
..@0x80425be: db 0x00, 0x01
  ..@0x80425c0: db 0x07, 0x0f, 0x10, 0x11, 0x12, 0x13, 0x15
spec_chars.4373: equ $-B.code
..@0x80425c7: db 'npxXoudifFeEgGaACScs', 0
spec_flags.4372: equ $-B.code
..@0x80425dc: db ' +0-#', 0x27, 'I', 0
type_codes: equ $-B.code
..@0x80425e4: db 0x08, 0x00, 0x05, 0x00, 0x03, 0x00, 0x04, 0x00, 0x01, 0x00, 0x00, 0x02
  ..@0x80425f0: db 0x00, 0x00, 0x00, 0x04, 0x00, 0x08, 0x02, 0x00, 0x07, 0x00, 0x07, 0x08
type_sizes: equ $-B.code
..@0x80425fc: db 0x00, 0x01, 0x01, 0x01
  ..@0x8042600: db 0x04, 0x02, 0x01, 0x01, 0x01, 0x01, 0x01, 0x01
unused_error_messages: equ $-B.code
..@0x8042608: times 0x80431a8-0x8042608 db 0  ; Padding of 0xba0 bytes.
nan_inf_str: equ $-B.code  ; 0x15 bytes. static char nan_inf_str[] in __strtofpmax.
..@0x80431a8: db 5, 'nan', 0, 0xa, 'infinity', 0, 5, 'inf', 0, 0
ucrodata_unknown3: equ $-B.code  ; Probably just padding.
..@0x80431bd: times 3 db 0
unused_sysconf_jump_table: equ $-B.code  ; Contains code pointers, for sysconf(i), there is a jump to pointer number i in thistable.
..@0x80431c0: times 0x8043420-0x80431c0 db 0
unused_ctype_data: equ $-B.code  ; 0x600 bytes.
..@0x8043420: times 0x600 db 0
unused_fmts: equ $-B.code  ; 0x9c bytes.
..@0x8043a20: times 0x8043adc-0x8043a20 db 0

X.gap2:      ;0x01adc..0x01ae0  +0x00004    @0x8043adc...0x8043ae0
times +0x00004 db 0

X.uctext:    ;0x01ae0..0x06d09  +0x05229    @0x8043ae0...0x8048d09
times -($-$$+0x8042000)+0x8043ae0 times 0 nop  ; Assert.
times +($-$$+0x8042000)-0x8043ae0 times 0 nop  ; Assert.
__pthread_initialize_minimal equ $$+0
dummy_init_and_fini: equ $-B.code
..@0x8043ae0: ret
_start: equ $-B.code
..@0x8043ae1: mov ebp, dummy_init_and_fini
..@0x8043ae6: pop esi
..@0x8043ae7: db 0x89, 0xe1  ; mov ecx, esp
..@0x8043ae9: and esp, strict byte -0x10
..@0x8043aec: push eax
..@0x8043aed: push esp
..@0x8043aee: push edx
..@0x8043aef: push ebp  ; No-op __libc_csu_fini, pointing to dummy_init_and_fini.
..@0x8043af0: push ebp  ; No-op __libc_csu_init, pointing to dummy_init_and_fini.
..@0x8043af1: push ecx
..@0x8043af2: push esi
..@0x8043af3: push strict dword main
..@0x8043af8: db 0x31, 0xed  ; xor ebp, ebp
..@0x8043afa: call B.code+__uClibc_main
%if 0
FAKE_main: equ $-B.code
..@0x8043aff: db 0x31, 0xc0  ; xor eax, eax
..@0x8043b01: ret
%else
..@0x8043aff: times 3 nop
%endif
..@0x8043b02: dw 0x9066  ;; o16 nop == xchg ax, ax
__restore_rt: equ $-B.code
..@0x8043b04: db 0xb8, 0xad, 0x00, 0x00, 0x00  ;; mov eax,0xad
..@0x8043b09: int 0x80  ; Linux i386 syscall.
__restore: equ $-B.code
..@0x8043b0b: pop eax
..@0x8043b0c: db 0xb8, 0x77, 0x00, 0x00, 0x00  ;; mov eax,0x77
..@0x8043b11: int 0x80  ; Linux i386 syscall.
..@0x8043b13: nop
mmap: equ $-B.code
..@0x8043b14: db 0x89, 0xda  ;; mov edx,ebx
..@0x8043b16: db 0xb8, 0x5a, 0x00, 0x00, 0x00  ;; mov eax,0x5a
..@0x8043b1b: db 0x8d, 0x5c, 0x24, 0x04  ;; lea ebx,[esp+0x4]
..@0x8043b1f: int 0x80  ; Linux i386 syscall.
..@0x8043b21: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8043b23: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8043b28: db 0x0f, 0x87, 0xa3, 0x50, 0x00, 0x00  ;; ja near __syscall_error
..@0x8043b2e: ret
..@0x8043b2f: nop
log: equ $-B.code  ; This needs an >=586 CPU, or a 386+387, or a 486+387. Linux, if the kernel is built with CONFIG_MATH_EMULATION, will emulate a 387.
..@0x8043b30: db 0xd9, 0xed  ;; fldln2
..@0x8043b32: db 0xdd, 0x44, 0x24, 0x04  ;; fld qword [esp+4]
..@0x8043b36: db 0xd9, 0xf1  ;; fyl2x
..@0x8043b38: db 0xdd, 0x5c, 0x24, 0x04  ;; fstp qword [esp+4]
..@0x8043b3c: db 0xdd, 0x44, 0x24, 0x04  ;; fld qword [esp+4]
..@0x8043b40: ret
..@0x8043b41: times 0x8043d57-0x8043b41 hlt  ; Unused, 0x216 bytes.
gettimeofday: equ $-B.code
..@0x8043d57: push ebx
..@0x8043d58: sub esp, strict byte 0x8
..@0x8043d5b: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x8043d5f: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8043d63: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8043d65: db 0xb8, 0x4e, 0x00, 0x00, 0x00  ;; mov eax,0x4e
..@0x8043d6a: int 0x80  ; Linux i386 syscall.
..@0x8043d6c: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8043d6e: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8043d73: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8043d75: db 0x76, 0x0c  ;; jna 0x8043d83
..@0x8043d77: call B.code+__errno_location
..@0x8043d7c: db 0xf7, 0xdb  ;; neg ebx
..@0x8043d7e: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8043d80: or ebx, strict byte -0x1
..@0x8043d83: pop edx
..@0x8043d84: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8043d86: pop ecx
..@0x8043d87: pop ebx
..@0x8043d88: ret
read: equ $-B.code
..@0x8043d89: push edi
..@0x8043d8a: sub esp, strict byte 0x8
..@0x8043d8d: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8043d91: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8043d95: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8043d99: push ebx
..@0x8043d9a: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8043d9c: db 0xb8, 0x03, 0x00, 0x00, 0x00  ;; mov eax,0x3
..@0x8043da1: int 0x80  ; Linux i386 syscall.
..@0x8043da3: pop ebx
..@0x8043da4: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8043da9: db 0x89, 0xc7  ;; mov edi,eax
..@0x8043dab: db 0x76, 0x0c  ;; jna 0x8043db9
..@0x8043dad: call B.code+__errno_location
..@0x8043db2: db 0xf7, 0xdf  ;; neg edi
..@0x8043db4: db 0x89, 0x38  ;; mov [eax],edi
..@0x8043db6: or edi, strict byte -0x1
..@0x8043db9: pop edx
..@0x8043dba: db 0x89, 0xf8  ;; mov eax,edi
..@0x8043dbc: pop ecx
..@0x8043dbd: pop edi
..@0x8043dbe: ret
time: equ $-B.code
..@0x8043dbf: push edi
..@0x8043dc0: sub esp, strict byte 0x8
..@0x8043dc3: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8043dc7: push ebx
..@0x8043dc8: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8043dca: db 0xb8, 0x0d, 0x00, 0x00, 0x00  ;; mov eax,0xd
..@0x8043dcf: int 0x80  ; Linux i386 syscall.
..@0x8043dd1: pop ebx
..@0x8043dd2: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8043dd7: db 0x89, 0xc7  ;; mov edi,eax
..@0x8043dd9: db 0x76, 0x0c  ;; jna 0x8043de7
..@0x8043ddb: call B.code+__errno_location
..@0x8043de0: db 0xf7, 0xdf  ;; neg edi
..@0x8043de2: db 0x89, 0x38  ;; mov [eax],edi
..@0x8043de4: or edi, strict byte -0x1
..@0x8043de7: pop edx
..@0x8043de8: db 0x89, 0xf8  ;; mov eax,edi
..@0x8043dea: pop ecx
..@0x8043deb: pop edi
..@0x8043dec: ret
__errno_location: equ $-B.code
..@0x8043ded: db 0xb8, 0x84, 0xea, 0x87, 0x09  ;; mov eax,errno
..@0x8043df2: ret
fclose: equ $-B.code
..@0x8043df3: push ebp
..@0x8043df4: push edi
..@0x8043df5: push esi
..@0x8043df6: push ebx
; The lack of _stdio_openlist here proves defined(__UCLIBC_HAS_THREADS__) and defined(__STDIO_BUFFERS).
..@0x8043df7: sub esp, strict byte 0x2c
..@0x8043dfa: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8043dfe: db 0x8b, 0x6e, 0x34  ;; mov ebp,[esi+0x34]
..@0x8043e01: db 0x85, 0xed  ;; test ebp,ebp
..@0x8043e03: db 0x75, 0x1f  ;; jnz 0x8043e24
..@0x8043e05: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8043e08: push ecx
..@0x8043e09: push ebx
..@0x8043e0a: push strict dword __pthread_return_0
..@0x8043e0f: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x8043e13: push eax
..@0x8043e14: call B.code+__pthread_return_void
..@0x8043e19: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8043e1c: call B.code+__pthread_return_0
..@0x8043e21: add esp, strict byte 0x10
..@0x8043e24: db 0x31, 0xff  ;; xor edi,edi
..@0x8043e26: db 0xf6, 0x06, 0x40  ;; test byte [esi],0x40
..@0x8043e29: db 0x74, 0x0e  ;; jz 0x8043e39  ; Keeps going if __STDIO_STREAM_IS_WRITING(stream).
..@0x8043e2b: sub esp, strict byte 0xc
..@0x8043e2e: push esi
..@0x8043e2f: call B.code+fflush_unlocked
..@0x8043e34: add esp, strict byte 0x10
..@0x8043e37: db 0x89, 0xc7  ;; mov edi,eax
..@0x8043e39: sub esp, strict byte 0xc
..@0x8043e3c: push dword [esi+0x4]
..@0x8043e3f: call B.code+close  ; close(stream->__filedes);
..@0x8043e44: add esp, strict byte 0xc
..@0x8043e47: db 0xc7, 0x46, 0x04, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esi+0x4],0xffffffff  ; stream->__filedes = -1;
..@0x8043e4e: push strict dword _stdio_openlist_del_lock
..@0x8043e53: push strict dword __pthread_return_0
..@0x8043e58: db 0x8d, 0x5c, 0x24, 0x18  ;; lea ebx,[esp+0x18]
..@0x8043e5c: push ebx
..@0x8043e5d: db 0x85, 0xc0  ;; test eax,eax
..@0x8043e5f: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8043e64: db 0x0f, 0x48, 0xf8  ;; cmovs edi,eax  ; This needs CPU >= 686 (P6).
..@0x8043e67: call B.code+__pthread_return_void
..@0x8043e6c: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x8043e73: call B.code+__pthread_return_0
..@0x8043e78: db 0xa1, 0x50, 0xca, 0x87, 0x09  ;; mov eax,[_stdio_openlist_use_count]
..@0x8043e7d: inc eax
..@0x8043e7e: db 0xa3, 0x50, 0xca, 0x87, 0x09  ;; mov [_stdio_openlist_use_count],eax
..@0x8043e83: pop eax
..@0x8043e84: pop edx
..@0x8043e85: push strict byte 0x1
..@0x8043e87: push ebx
..@0x8043e88: call B.code+__pthread_return_void
..@0x8043e8d: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8043e8f: add esp, strict byte 0x10
..@0x8043e92: db 0x25, 0x00, 0x60, 0x00, 0x00  ;; and eax,0x6000
..@0x8043e97: or eax, strict byte 0x30
..@0x8043e9a: db 0x85, 0xed  ;; test ebp,ebp
..@0x8043e9c: db 0x66, 0x89, 0x06  ;; mov [esi],ax
..@0x8043e9f: db 0x75, 0x11  ;; jnz 0x8043eb2
..@0x8043ea1: push ebp
..@0x8043ea2: push ebp
..@0x8043ea3: push strict byte 0x1
..@0x8043ea5: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x8043ea9: push eax
..@0x8043eaa: call B.code+__pthread_return_void
..@0x8043eaf: add esp, strict byte 0x10
..@0x8043eb2: db 0xf6, 0x46, 0x01, 0x40  ;; test byte [esi+0x1],0x40
..@0x8043eb6: db 0x74, 0x0e  ;; jz 0x8043ec6
..@0x8043eb8: sub esp, strict byte 0xc
..@0x8043ebb: push dword [esi+0x8]
..@0x8043ebe: call B.code+free  ; __STDIO_STREAM_FREE_BUFFER(stream);
..@0x8043ec3: add esp, strict byte 0x10
..@0x8043ec6: push ecx
..@0x8043ec7: push strict dword _stdio_openlist_del_lock
..@0x8043ecc: push strict dword __pthread_return_0
..@0x8043ed1: push ebx
..@0x8043ed2: call B.code+__pthread_return_void
..@0x8043ed7: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x8043ede: call B.code+__pthread_return_0
..@0x8043ee3: pop eax
..@0x8043ee4: db 0xff, 0x05, 0x54, 0xca, 0x87, 0x09  ;; inc dword [_stdio_openlist_del_count]
..@0x8043eea: pop edx
..@0x8043eeb: push strict byte 0x1
..@0x8043eed: push ebx
..@0x8043eee: call B.code+__pthread_return_void
..@0x8043ef3: call B.code+_stdio_openlist_dec_use  ; This will call free(stream).
..@0x8043ef8: add esp, strict byte 0x3c
..@0x8043efb: db 0x89, 0xf8  ;; mov eax,edi
..@0x8043efd: pop ebx
..@0x8043efe: pop esi
..@0x8043eff: pop edi
..@0x8043f00: pop ebp
..@0x8043f01: ret
fopen: equ $-B.code
..@0x8043f02: sub esp, strict byte 0xc
..@0x8043f05: push strict byte -0x1
..@0x8043f07: push strict byte 0x0
..@0x8043f09: push dword [esp+0x1c]
..@0x8043f0d: push dword [esp+0x1c]
..@0x8043f11: call B.code+_stdio_fopen
..@0x8043f16: add esp, strict byte 0x1c
..@0x8043f19: ret
fseek: equ $-B.code
fseeko: equ $-B.code
..@0x8043f1a: sub esp, strict byte 0xc
..@0x8043f1d: push dword [esp+0x18]
..@0x8043f21: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8043f25: cdq
..@0x8043f26: push edx
..@0x8043f27: push eax
..@0x8043f28: push dword [esp+0x1c]
..@0x8043f2c: call B.code+fseeko64
..@0x8043f31: add esp, strict byte 0x1c
..@0x8043f34: ret
ftell: equ $-B.code
ftello: equ $-B.code
..@0x8043f35: push esi
..@0x8043f36: push ebx
..@0x8043f37: sub esp, strict byte 0x10
..@0x8043f3a: push dword [esp+0x1c]
..@0x8043f3e: call B.code+ftello64
..@0x8043f43: add esp, strict byte 0x10
..@0x8043f46: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8043f48: db 0x89, 0xc6  ;; mov esi,eax
..@0x8043f4a: db 0xc1, 0xfb, 0x1f  ;; sar ebx,byte 0x1f
..@0x8043f4d: db 0x39, 0xd3  ;; cmp ebx,edx
..@0x8043f4f: db 0x75, 0x04  ;; jnz 0x8043f55
..@0x8043f51: db 0x39, 0xc0  ;; cmp eax,eax
..@0x8043f53: db 0x74, 0x0e  ;; jz 0x8043f63
..@0x8043f55: call B.code+__errno_location
..@0x8043f5a: or esi, strict byte -0x1
..@0x8043f5d: db 0xc7, 0x00, 0x4b, 0x00, 0x00, 0x00  ;; mov dword [eax],0x4b
..@0x8043f63: pop edx
..@0x8043f64: db 0x89, 0xf0  ;; mov eax,esi
..@0x8043f66: pop ebx
..@0x8043f67: pop esi
..@0x8043f68: ret
unused_puts_and_printf: equ $-B.code
..@0x8043f69: times 0x8044005-0x8043f69 hlt  ; Unused, 0x9c bytes.
fseeko64: equ $-B.code
..@0x8044005: push ebp
..@0x8044006: push edi
..@0x8044007: push esi
..@0x8044008: push ebx
..@0x8044009: sub esp, strict byte 0x2c
..@0x804400c: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x8044010: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x8044014: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x8044018: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804401c: cmp edi, strict byte 0x2
..@0x804401f: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x8044023: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x8044027: db 0x76, 0x13  ;; jna 0x804403c
..@0x8044029: call B.code+__errno_location
..@0x804402e: or ebx, strict byte -0x1
..@0x8044031: db 0xc7, 0x00, 0x16, 0x00, 0x00, 0x00  ;; mov dword [eax],0x16
..@0x8044037: jmp strict near R.code+0x80440e2
..@0x804403c: db 0x8b, 0x6e, 0x34  ;; mov ebp,[esi+0x34]
..@0x804403f: db 0x85, 0xed  ;; test ebp,ebp
..@0x8044041: db 0x75, 0x1f  ;; jnz 0x8044062
..@0x8044043: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8044046: push eax
..@0x8044047: push ebx
..@0x8044048: push strict dword __pthread_return_0
..@0x804404d: db 0x8d, 0x44, 0x24, 0x1c  ;; lea eax,[esp+0x1c]
..@0x8044051: push eax
..@0x8044052: call B.code+__pthread_return_void
..@0x8044057: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804405a: call B.code+__pthread_return_0
..@0x804405f: add esp, strict byte 0x10
..@0x8044062: db 0xf6, 0x06, 0x40  ;; test byte [esi],0x40
..@0x8044065: db 0x74, 0x10  ;; jz 0x8044077
..@0x8044067: sub esp, strict byte 0xc
..@0x804406a: push esi
..@0x804406b: call B.code+__stdio_wcommit
..@0x8044070: add esp, strict byte 0x10
..@0x8044073: db 0x85, 0xc0  ;; test eax,eax
..@0x8044075: db 0x75, 0x53  ;; jnz 0x80440ca
..@0x8044077: cmp edi, strict byte 0x1
..@0x804407a: db 0x75, 0x14  ;; jnz 0x8044090
..@0x804407c: push ecx
..@0x804407d: push ecx
..@0x804407e: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x8044082: push eax
..@0x8044083: push esi
..@0x8044084: call B.code+__stdio_adjust_position
..@0x8044089: add esp, strict byte 0x10
..@0x804408c: db 0x85, 0xc0  ;; test eax,eax
..@0x804408e: db 0x78, 0x3a  ;; js 0x80440ca
..@0x8044090: push edx
..@0x8044091: push edi
..@0x8044092: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x8044096: push eax
..@0x8044097: push esi
..@0x8044098: call B.code+__stdio_seek
..@0x804409d: add esp, strict byte 0x10
..@0x80440a0: db 0x85, 0xc0  ;; test eax,eax
..@0x80440a2: db 0x78, 0x26  ;; js 0x80440ca
..@0x80440a4: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x80440a6: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80440a8: db 0xc7, 0x46, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esi+0x2c],0x0
..@0x80440af: db 0xc6, 0x46, 0x02, 0x00  ;; mov byte [esi+0x2],0x0
..@0x80440b3: and eax, strict byte -0x48
..@0x80440b6: db 0x66, 0x89, 0x06  ;; mov [esi],ax
..@0x80440b9: db 0x8b, 0x46, 0x08  ;; mov eax,[esi+0x8]
..@0x80440bc: db 0x89, 0x46, 0x10  ;; mov [esi+0x10],eax
..@0x80440bf: db 0x89, 0x46, 0x14  ;; mov [esi+0x14],eax
..@0x80440c2: db 0x89, 0x46, 0x18  ;; mov [esi+0x18],eax
..@0x80440c5: db 0x89, 0x46, 0x1c  ;; mov [esi+0x1c],eax
..@0x80440c8: db 0xeb, 0x03  ;; jmp short 0x80440cd
..@0x80440ca: or ebx, strict byte -0x1
..@0x80440cd: db 0x85, 0xed  ;; test ebp,ebp
..@0x80440cf: db 0x75, 0x11  ;; jnz 0x80440e2
..@0x80440d1: push eax
..@0x80440d2: push eax
..@0x80440d3: push strict byte 0x1
..@0x80440d5: db 0x8d, 0x44, 0x24, 0x1c  ;; lea eax,[esp+0x1c]
..@0x80440d9: push eax
..@0x80440da: call B.code+__pthread_return_void
..@0x80440df: add esp, strict byte 0x10
..@0x80440e2: add esp, strict byte 0x2c
..@0x80440e5: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80440e7: pop ebx
..@0x80440e8: pop esi
..@0x80440e9: pop edi
..@0x80440ea: pop ebp
..@0x80440eb: ret
ftello64: equ $-B.code
..@0x80440ec: push edi
..@0x80440ed: push esi
..@0x80440ee: push ebx
..@0x80440ef: sub esp, strict byte 0x20
..@0x80440f2: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x80440f6: db 0xc7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x18],0x0
..@0x80440fe: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8044106: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x8044109: db 0x85, 0xff  ;; test edi,edi
..@0x804410b: db 0x75, 0x1f  ;; jnz 0x804412c
..@0x804410d: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8044110: push eax
..@0x8044111: push ebx
..@0x8044112: push strict dword __pthread_return_0
..@0x8044117: db 0x8d, 0x44, 0x24, 0x14  ;; lea eax,[esp+0x14]
..@0x804411b: push eax
..@0x804411c: call B.code+__pthread_return_void
..@0x8044121: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8044124: call B.code+__pthread_return_0
..@0x8044129: add esp, strict byte 0x10
..@0x804412c: db 0x0f, 0xb7, 0x06  ;; movzx eax,word [esi]
..@0x804412f: push ecx
..@0x8044130: db 0x25, 0x40, 0x04, 0x00, 0x00  ;; and eax,0x440
..@0x8044135: db 0x3d, 0x40, 0x04, 0x00, 0x00  ;; cmp eax,0x440
..@0x804413a: db 0x0f, 0x94, 0xc0  ;; setz al
..@0x804413d: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x8044140: inc eax
..@0x8044141: push eax
..@0x8044142: db 0x8d, 0x5c, 0x24, 0x20  ;; lea ebx,[esp+0x20]
..@0x8044146: push ebx
..@0x8044147: push esi
..@0x8044148: call B.code+__stdio_seek
..@0x804414d: add esp, strict byte 0x10
..@0x8044150: db 0x85, 0xc0  ;; test eax,eax
..@0x8044152: db 0x78, 0x10  ;; js 0x8044164
..@0x8044154: push edx
..@0x8044155: push edx
..@0x8044156: push ebx
..@0x8044157: push esi
..@0x8044158: call B.code+__stdio_adjust_position
..@0x804415d: add esp, strict byte 0x10
..@0x8044160: db 0x85, 0xc0  ;; test eax,eax
..@0x8044162: db 0x79, 0x10  ;; jns 0x8044174
..@0x8044164: db 0xc7, 0x44, 0x24, 0x18, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x18],0xffffffff
..@0x804416c: db 0xc7, 0x44, 0x24, 0x1c, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x1c],0xffffffff
..@0x8044174: db 0x85, 0xff  ;; test edi,edi
..@0x8044176: db 0x75, 0x11  ;; jnz 0x8044189
..@0x8044178: push eax
..@0x8044179: push eax
..@0x804417a: push strict byte 0x1
..@0x804417c: db 0x8d, 0x44, 0x24, 0x14  ;; lea eax,[esp+0x14]
..@0x8044180: push eax
..@0x8044181: call B.code+__pthread_return_void
..@0x8044186: add esp, strict byte 0x10
..@0x8044189: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x804418d: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8044191: add esp, strict byte 0x20
..@0x8044194: pop ebx
..@0x8044195: pop esi
..@0x8044196: pop edi
..@0x8044197: ret
__stdio_adjust_position: equ $-B.code
..@0x8044198: push edi
..@0x8044199: db 0x31, 0xd2  ;; xor edx,edx
..@0x804419b: push esi
..@0x804419c: push ebx
..@0x804419d: sub esp, strict byte 0x10
..@0x80441a0: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x80441a4: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x80441a8: db 0x0f, 0xb7, 0x0b  ;; movzx ecx,word [ebx]
..@0x80441ab: db 0x89, 0xc8  ;; mov eax,ecx
..@0x80441ad: and eax, strict byte 0x3
..@0x80441b0: db 0x74, 0x2a  ;; jz 0x80441dc
..@0x80441b2: db 0x89, 0xc2  ;; mov edx,eax
..@0x80441b4: dec edx
..@0x80441b5: db 0x74, 0x25  ;; jz 0x80441dc
..@0x80441b7: db 0xf6, 0xc5, 0x08  ;; test ch,0x8
..@0x80441ba: db 0x74, 0x20  ;; jz 0x80441dc
..@0x80441bc: cmp edx, strict byte 0x1
..@0x80441bf: db 0x7f, 0x6f  ;; jg 0x8044230
..@0x80441c1: db 0x83, 0x7b, 0x28, 0x00  ;; cmp dword [ebx+0x28],byte +0x0
..@0x80441c5: db 0x75, 0x69  ;; jnz 0x8044230
..@0x80441c7: db 0x0f, 0xb6, 0x43, 0x03  ;; movzx eax,byte [ebx+0x3]
..@0x80441cb: db 0x29, 0xc2  ;; sub edx,eax
..@0x80441cd: db 0x83, 0x7b, 0x2c, 0x00  ;; cmp dword [ebx+0x2c],byte +0x0
..@0x80441d1: db 0x8d, 0x52, 0xff  ;; lea edx,[edx-0x1]
..@0x80441d4: db 0x7e, 0x06  ;; jng 0x80441dc
..@0x80441d6: db 0x0f, 0xb6, 0x43, 0x02  ;; movzx eax,byte [ebx+0x2]
..@0x80441da: db 0x29, 0xc2  ;; sub edx,eax
..@0x80441dc: db 0xf6, 0xc1, 0x40  ;; test cl,0x40
..@0x80441df: db 0x74, 0x05  ;; jz 0x80441e6
..@0x80441e1: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x80441e4: db 0xeb, 0x03  ;; jmp short 0x80441e9
..@0x80441e6: db 0x8b, 0x43, 0x14  ;; mov eax,[ebx+0x14]
..@0x80441e9: db 0x2b, 0x43, 0x10  ;; sub eax,[ebx+0x10]
..@0x80441ec: db 0x8b, 0x0f  ;; mov ecx,[edi]
..@0x80441ee: db 0x8b, 0x5f, 0x04  ;; mov ebx,[edi+0x4]
..@0x80441f1: db 0x8d, 0x34, 0x02  ;; lea esi,[edx+eax]
..@0x80441f4: db 0x89, 0xf0  ;; mov eax,esi
..@0x80441f6: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x80441f9: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x80441fd: db 0x89, 0xc8  ;; mov eax,ecx
..@0x80441ff: db 0x89, 0xda  ;; mov edx,ebx
..@0x8044201: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x8044205: db 0x2b, 0x44, 0x24, 0x08  ;; sub eax,[esp+0x8]
..@0x8044209: db 0x1b, 0x54, 0x24, 0x0c  ;; sbb edx,[esp+0xc]
..@0x804420d: db 0x89, 0x07  ;; mov [edi],eax
..@0x804420f: db 0x89, 0x57, 0x04  ;; mov [edi+0x4],edx
..@0x8044212: db 0x39, 0x5f, 0x04  ;; cmp [edi+0x4],ebx
..@0x8044215: db 0x7c, 0x08  ;; jl 0x804421f
..@0x8044217: db 0x7f, 0x04  ;; jg 0x804421d
..@0x8044219: db 0x39, 0x0f  ;; cmp [edi],ecx
..@0x804421b: db 0x76, 0x02  ;; jna 0x804421f
..@0x804421d: db 0xf7, 0xde  ;; neg esi
..@0x804421f: db 0x85, 0xf6  ;; test esi,esi
..@0x8044221: db 0x79, 0x10  ;; jns 0x8044233
..@0x8044223: call B.code+__errno_location
..@0x8044228: db 0xc7, 0x00, 0x4b, 0x00, 0x00, 0x00  ;; mov dword [eax],0x4b
..@0x804422e: db 0xeb, 0x03  ;; jmp short 0x8044233
..@0x8044230: or esi, strict byte -0x1
..@0x8044233: add esp, strict byte 0x10
..@0x8044236: db 0x89, 0xf0  ;; mov eax,esi
..@0x8044238: pop ebx
..@0x8044239: pop esi
..@0x804423a: pop edi
..@0x804423b: ret
_stdio_fopen: equ $-B.code
..@0x804423c: push ebp
..@0x804423d: push edi
..@0x804423e: push esi
..@0x804423f: push ebx
..@0x8044240: sub esp, strict byte 0x2c
..@0x8044243: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8044247: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804424b: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x804424f: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x8044253: db 0x8a, 0x02  ;; mov al,[edx]
..@0x8044255: db 0x3c, 0x72  ;; cmp al,0x72
..@0x8044257: db 0x74, 0x3e  ;; jz 0x8044297
..@0x8044259: db 0x3c, 0x77  ;; cmp al,0x77
..@0x804425b: db 0xbb, 0x41, 0x02, 0x00, 0x00  ;; mov ebx,0x241
..@0x8044260: db 0x74, 0x37  ;; jz 0x8044299
..@0x8044262: db 0x3c, 0x61  ;; cmp al,0x61
..@0x8044264: db 0x66, 0xbb, 0x41, 0x04  ;; mov bx,0x441
..@0x8044268: db 0x74, 0x2f  ;; jz 0x8044299
..@0x804426a: call B.code+__errno_location
..@0x804426f: db 0x85, 0xed  ;; test ebp,ebp
..@0x8044271: db 0xc7, 0x00, 0x16, 0x00, 0x00, 0x00  ;; mov dword [eax],0x16
..@0x8044277: db 0x0f, 0x84, 0xf6, 0x01, 0x00, 0x00  ;; jz near 0x8044473
..@0x804427d: db 0xf6, 0x45, 0x01, 0x20  ;; test byte [ebp+0x1],0x20
..@0x8044281: db 0x0f, 0x84, 0xec, 0x01, 0x00, 0x00  ;; jz near 0x8044473
..@0x8044287: sub esp, strict byte 0xc
..@0x804428a: push ebp
..@0x804428b: db 0x31, 0xed  ;; xor ebp,ebp
..@0x804428d: call B.code+free
..@0x8044292: jmp strict near R.code+0x804446e
..@0x8044297: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8044299: db 0x80, 0x7a, 0x01, 0x62  ;; cmp byte [edx+0x1],0x62
..@0x804429d: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x80442a0: db 0x74, 0x02  ;; jz 0x80442a4
..@0x80442a2: db 0x89, 0xd0  ;; mov eax,edx
..@0x80442a4: db 0x80, 0x78, 0x01, 0x2b  ;; cmp byte [eax+0x1],0x2b
..@0x80442a8: db 0x75, 0x08  ;; jnz 0x80442b2
..@0x80442aa: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80442ac: or eax, strict byte 0x1
..@0x80442af: db 0x8d, 0x58, 0x01  ;; lea ebx,[eax+0x1]
..@0x80442b2: db 0x85, 0xed  ;; test ebp,ebp
..@0x80442b4: db 0x75, 0x32  ;; jnz 0x80442e8
..@0x80442b6: sub esp, strict byte 0xc
..@0x80442b9: push strict byte 0x50
..@0x80442bb: call B.code+malloc
..@0x80442c0: add esp, strict byte 0x10
..@0x80442c3: db 0x85, 0xc0  ;; test eax,eax
..@0x80442c5: db 0x89, 0xc5  ;; mov ebp,eax
..@0x80442c7: db 0x0f, 0x84, 0xa8, 0x01, 0x00, 0x00  ;; jz near 0x8044475
..@0x80442cd: db 0x66, 0xc7, 0x00, 0x00, 0x20  ;; mov word [eax],0x2000
..@0x80442d2: sub esp, strict byte 0xc
..@0x80442d5: db 0xc7, 0x40, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+0x8],0x0
..@0x80442dc: db 0x8d, 0x40, 0x38  ;; lea eax,[eax+0x38]
..@0x80442df: push eax
..@0x80442e0: call B.code+__stdio_init_mutex
..@0x80442e5: add esp, strict byte 0x10
..@0x80442e8: db 0x85, 0xff  ;; test edi,edi
..@0x80442ea: db 0x78, 0x49  ;; js 0x8044335
..@0x80442ec: db 0x89, 0xda  ;; mov edx,ebx
..@0x80442ee: db 0x81, 0xe2, 0x03, 0x80, 0x00, 0x00  ;; and edx,0x8003
..@0x80442f4: inc edx
..@0x80442f5: db 0x8d, 0x46, 0x01  ;; lea eax,[esi+0x1]
..@0x80442f8: db 0x21, 0xd0  ;; and eax,edx
..@0x80442fa: db 0x39, 0xd0  ;; cmp eax,edx
..@0x80442fc: db 0x89, 0x7d, 0x04  ;; mov [ebp+0x4],edi
..@0x80442ff: db 0x0f, 0x85, 0x65, 0xff, 0xff, 0xff  ;; jnz near 0x804426a
..@0x8044305: db 0x89, 0xf0  ;; mov eax,esi
..@0x8044307: db 0xf7, 0xd0  ;; not eax
..@0x8044309: db 0x25, 0x00, 0x04, 0x00, 0x00  ;; and eax,0x400
..@0x804430e: db 0x85, 0xd8  ;; test eax,ebx
..@0x8044310: db 0x74, 0x19  ;; jz 0x804432b
..@0x8044312: push eax
..@0x8044313: push strict dword 0x400
..@0x8044318: push strict byte 0x4
..@0x804431a: push edi
..@0x804431b: call B.code+fcntl
..@0x8044320: add esp, strict byte 0x10
..@0x8044323: db 0x85, 0xc0  ;; test eax,eax
..@0x8044325: db 0x0f, 0x85, 0x3f, 0xff, 0xff, 0xff  ;; jnz near 0x804426a
..@0x804432b: db 0x81, 0xe6, 0x00, 0x80, 0x00, 0x00  ;; and esi,0x8000
..@0x8044331: db 0x09, 0xf3  ;; or ebx,esi
..@0x8044333: db 0xeb, 0x24  ;; jmp short 0x8044359
..@0x8044335: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8044337: db 0x80, 0xcc, 0x80  ;; or ah,0x80
..@0x804433a: inc edi
..@0x804433b: db 0x0f, 0x45, 0xd8  ;; cmovnz ebx,eax
..@0x804433e: push eax
..@0x804433f: push strict dword 0x1b6
..@0x8044344: push ebx
..@0x8044345: push esi
..@0x8044346: call B.code+open
..@0x804434b: add esp, strict byte 0x10
..@0x804434e: db 0x85, 0xc0  ;; test eax,eax
..@0x8044350: db 0x89, 0x45, 0x04  ;; mov [ebp+0x4],eax
..@0x8044353: db 0x0f, 0x88, 0x24, 0xff, 0xff, 0xff  ;; js near 0x804427d
..@0x8044359: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x804435c: db 0x25, 0x00, 0x20, 0x00, 0x00  ;; and eax,0x2000
..@0x8044361: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x8044365: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8044367: db 0x81, 0xe3, 0x00, 0x84, 0xff, 0xff  ;; and ebx,0xffff8400
..@0x804436d: db 0x8b, 0x55, 0x00  ;; mov edx,[ebp+0x0]
..@0x8044370: and eax, strict byte 0x3
..@0x8044373: inc eax
..@0x8044374: xor eax, strict byte 0x3
..@0x8044377: db 0xc1, 0xe0, 0x04  ;; shl eax,byte 0x4
..@0x804437a: db 0x09, 0xd3  ;; or ebx,edx
..@0x804437c: db 0x09, 0xd8  ;; or eax,ebx
..@0x804437e: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x8044382: call B.code+__errno_location
..@0x8044387: sub esp, strict byte 0xc
..@0x804438a: db 0x0f, 0xb7, 0x5d, 0x00  ;; movzx ebx,word [ebp+0x0]
..@0x804438e: db 0x8b, 0x38  ;; mov edi,[eax]
..@0x8044390: db 0x89, 0xc6  ;; mov esi,eax
..@0x8044392: push dword [ebp+0x4]
..@0x8044395: call B.code+isatty
..@0x804439a: add esp, strict byte 0x10
..@0x804439d: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x80443a0: db 0x09, 0xc3  ;; or ebx,eax
..@0x80443a2: db 0x66, 0x89, 0x5d, 0x00  ;; mov [ebp+0x0],bx
..@0x80443a6: db 0x89, 0x3e  ;; mov [esi],edi
..@0x80443a8: db 0x83, 0x7d, 0x08, 0x00  ;; cmp dword [ebp+0x8],byte +0x0
..@0x80443ac: db 0x75, 0x32  ;; jnz 0x80443e0
..@0x80443ae: sub esp, strict byte 0xc
..@0x80443b1: push strict dword 0x1000
..@0x80443b6: call B.code+malloc
..@0x80443bb: add esp, strict byte 0x10
..@0x80443be: db 0x85, 0xc0  ;; test eax,eax
..@0x80443c0: db 0x89, 0x45, 0x08  ;; mov [ebp+0x8],eax
..@0x80443c3: db 0x74, 0x14  ;; jz 0x80443d9
..@0x80443c5: db 0x05, 0x00, 0x10, 0x00, 0x00  ;; add eax,0x1000
..@0x80443ca: db 0x89, 0x45, 0x0c  ;; mov [ebp+0xc],eax
..@0x80443cd: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x80443d0: db 0x80, 0xcc, 0x40  ;; or ah,0x40
..@0x80443d3: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x80443d7: db 0xeb, 0x07  ;; jmp short 0x80443e0
..@0x80443d9: db 0xc7, 0x45, 0x0c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0xc],0x0
..@0x80443e0: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x80443e3: db 0xc6, 0x45, 0x02, 0x00  ;; mov byte [ebp+0x2],0x0
..@0x80443e7: db 0xc7, 0x45, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0x2c],0x0
..@0x80443ee: db 0xf6, 0x45, 0x01, 0x20  ;; test byte [ebp+0x1],0x20
..@0x80443f2: db 0x89, 0x45, 0x18  ;; mov [ebp+0x18],eax
..@0x80443f5: db 0x89, 0x45, 0x1c  ;; mov [ebp+0x1c],eax
..@0x80443f8: db 0x89, 0x45, 0x10  ;; mov [ebp+0x10],eax
..@0x80443fb: db 0x89, 0x45, 0x14  ;; mov [ebp+0x14],eax
..@0x80443fe: db 0xa1, 0x88, 0xcf, 0x05, 0x08  ;; mov eax,[_stdio_user_locking]
..@0x8044403: db 0x89, 0x45, 0x34  ;; mov [ebp+0x34],eax
..@0x8044406: db 0x74, 0x6d  ;; jz 0x8044475
..@0x8044408: push eax
..@0x8044409: push strict dword _stdio_openlist_del_lock
..@0x804440e: push strict dword __pthread_return_0
..@0x8044413: db 0x8d, 0x74, 0x24, 0x28  ;; lea esi,[esp+0x28]
..@0x8044417: push esi
..@0x8044418: call B.code+__pthread_return_void
..@0x804441d: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x8044424: call B.code+__pthread_return_0
..@0x8044429: add esp, strict byte 0xc
..@0x804442c: push strict dword _stdio_openlist_add_lock
..@0x8044431: push strict dword __pthread_return_0
..@0x8044436: db 0x8d, 0x5c, 0x24, 0x18  ;; lea ebx,[esp+0x18]
..@0x804443a: push ebx
..@0x804443b: call B.code+__pthread_return_void
..@0x8044440: db 0xc7, 0x04, 0x24, 0x58, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_add_lock
..@0x8044447: call B.code+__pthread_return_0
..@0x804444c: db 0xa1, 0x54, 0xcf, 0x05, 0x08  ;; mov eax,[_stdio_openlist]
..@0x8044451: db 0x89, 0x45, 0x20  ;; mov [ebp+0x20],eax
..@0x8044454: pop ecx
..@0x8044455: db 0x89, 0x2d, 0x54, 0xcf, 0x05, 0x08  ;; mov [_stdio_openlist],ebp
..@0x804445b: pop edi
..@0x804445c: push strict byte 0x1
..@0x804445e: push ebx
..@0x804445f: call B.code+__pthread_return_void
..@0x8044464: pop eax
..@0x8044465: pop edx
..@0x8044466: push strict byte 0x1
..@0x8044468: push esi
..@0x8044469: call B.code+__pthread_return_void
..@0x804446e: add esp, strict byte 0x10
..@0x8044471: db 0xeb, 0x02  ;; jmp short 0x8044475
..@0x8044473: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8044475: add esp, strict byte 0x2c
..@0x8044478: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804447a: pop ebx
..@0x804447b: pop esi
..@0x804447c: pop edi
..@0x804447d: pop ebp
..@0x804447e: ret
_stdio_init: equ $-B.code
..@0x804447f: push ebp
..@0x8044480: push edi
..@0x8044481: push esi
..@0x8044482: push ebx
..@0x8044483: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x8044488: sub esp, strict byte 0xc
..@0x804448b: call B.code+__errno_location
..@0x8044490: sub esp, strict byte 0xc
..@0x8044493: db 0x0f, 0xb7, 0x35, 0xa0, 0xcf, 0x05, 0x08  ;; movzx esi,word [_stdio_streams]
..@0x804449a: db 0x8b, 0x28  ;; mov ebp,[eax]
..@0x804449c: db 0x89, 0xc7  ;; mov edi,eax
..@0x804449e: push strict byte 0x0
..@0x80444a0: call B.code+isatty
..@0x80444a5: db 0x89, 0xda  ;; mov edx,ebx
..@0x80444a7: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x80444ae: db 0x29, 0xc2  ;; sub edx,eax
..@0x80444b0: db 0x89, 0xd0  ;; mov eax,edx
..@0x80444b2: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x80444b5: db 0x31, 0xc6  ;; xor esi,eax
..@0x80444b7: db 0x66, 0x89, 0x35, 0xa0, 0xcf, 0x05, 0x08  ;; mov [_stdio_streams],si
..@0x80444be: db 0x0f, 0xb7, 0x35, 0xf0, 0xcf, 0x05, 0x08  ;; movzx esi,word [0x805cff0]
..@0x80444c5: call B.code+isatty
..@0x80444ca: db 0x29, 0xc3  ;; sub ebx,eax
..@0x80444cc: db 0xc1, 0xe3, 0x08  ;; shl ebx,byte 0x8
..@0x80444cf: db 0x31, 0xde  ;; xor esi,ebx
..@0x80444d1: db 0x66, 0x89, 0x35, 0xf0, 0xcf, 0x05, 0x08  ;; mov [0x805cff0],si
..@0x80444d8: db 0x89, 0x2f  ;; mov [edi],ebp
..@0x80444da: add esp, strict byte 0x1c
..@0x80444dd: pop ebx
..@0x80444de: pop esi
..@0x80444df: pop edi
..@0x80444e0: pop ebp
..@0x80444e1: ret
__stdio_init_mutex: equ $-B.code
..@0x80444e2: sub esp, strict byte 0x10
..@0x80444e5: push strict byte 0x18
..@0x80444e7: push strict dword __stdio_mutex_initializer.4160
..@0x80444ec: push dword [esp+0x1c]
..@0x80444f0: call B.code+memcpy
..@0x80444f5: add esp, strict byte 0x1c
..@0x80444f8: ret
_stdio_term: equ $-B.code
..@0x80444f9: push esi
..@0x80444fa: push ebx
..@0x80444fb: sub esp, strict byte 0x10
..@0x80444fe: push strict dword _stdio_openlist_add_lock
..@0x8044503: call B.code+__stdio_init_mutex
..@0x8044508: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x804450f: call B.code+__stdio_init_mutex
..@0x8044514: db 0x8b, 0x1d, 0x54, 0xcf, 0x05, 0x08  ;; mov ebx,[_stdio_openlist]
..@0x804451a: db 0xeb, 0x3a  ;; jmp short 0x8044556
..@0x804451c: sub esp, strict byte 0xc
..@0x804451f: db 0x8d, 0x73, 0x38  ;; lea esi,[ebx+0x38]
..@0x8044522: push esi
..@0x8044523: call B.code+__pthread_return_0
..@0x8044528: add esp, strict byte 0x10
..@0x804452b: db 0x85, 0xc0  ;; test eax,eax
..@0x804452d: db 0x74, 0x14  ;; jz 0x8044543
..@0x804452f: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x8044532: db 0x66, 0xc7, 0x03, 0x30, 0x00  ;; mov word [ebx],0x30
..@0x8044537: db 0x89, 0x43, 0x18  ;; mov [ebx+0x18],eax
..@0x804453a: db 0x89, 0x43, 0x1c  ;; mov [ebx+0x1c],eax
..@0x804453d: db 0x89, 0x43, 0x10  ;; mov [ebx+0x10],eax
..@0x8044540: db 0x89, 0x43, 0x14  ;; mov [ebx+0x14],eax
..@0x8044543: sub esp, strict byte 0xc
..@0x8044546: db 0xc7, 0x43, 0x34, 0x01, 0x00, 0x00, 0x00  ;; mov dword [ebx+0x34],0x1
..@0x804454d: push esi
..@0x804454e: call B.code+__stdio_init_mutex
..@0x8044553: db 0x8b, 0x5b, 0x20  ;; mov ebx,[ebx+0x20]
..@0x8044556: add esp, strict byte 0x10
..@0x8044559: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804455b: db 0x75, 0xbf  ;; jnz 0x804451c
..@0x804455d: db 0x8b, 0x1d, 0x54, 0xcf, 0x05, 0x08  ;; mov ebx,[_stdio_openlist]
..@0x8044563: db 0xeb, 0x14  ;; jmp short 0x8044579
..@0x8044565: db 0xf6, 0x03, 0x40  ;; test byte [ebx],0x40
..@0x8044568: db 0x74, 0x0c  ;; jz 0x8044576
..@0x804456a: sub esp, strict byte 0xc
..@0x804456d: push ebx
..@0x804456e: call B.code+__stdio_wcommit
..@0x8044573: add esp, strict byte 0x10
..@0x8044576: db 0x8b, 0x5b, 0x20  ;; mov ebx,[ebx+0x20]
..@0x8044579: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804457b: db 0x75, 0xe8  ;; jnz 0x8044565
..@0x804457d: pop eax
..@0x804457e: pop ebx
..@0x804457f: pop esi
..@0x8044580: ret
__stdio_wcommit: equ $-B.code
..@0x8044581: push ebx
..@0x8044582: sub esp, strict byte 0x8
..@0x8044585: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8044589: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x804458c: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x804458f: db 0x29, 0xd0  ;; sub eax,edx
..@0x8044591: db 0x74, 0x0f  ;; jz 0x80445a2
..@0x8044593: db 0x89, 0x53, 0x10  ;; mov [ebx+0x10],edx
..@0x8044596: push ecx
..@0x8044597: push eax
..@0x8044598: push edx
..@0x8044599: push ebx
..@0x804459a: call B.code+__stdio_WRITE
..@0x804459f: add esp, strict byte 0x10
..@0x80445a2: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x80445a5: db 0x2b, 0x43, 0x08  ;; sub eax,[ebx+0x8]
..@0x80445a8: pop edx
..@0x80445a9: pop ecx
..@0x80445aa: pop ebx
..@0x80445ab: ret
__stdio_seek: equ $-B.code
..@0x80445ac: push ebx
..@0x80445ad: sub esp, strict byte 0x8
..@0x80445b0: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x80445b4: push dword [esp+0x18]
..@0x80445b8: push dword [ebx+0x4]
..@0x80445bb: push dword [ebx]
..@0x80445bd: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x80445c1: push dword [eax+0x4]
..@0x80445c4: call B.code+lseek64
..@0x80445c9: add esp, strict byte 0x10
..@0x80445cc: db 0x85, 0xd2  ;; test edx,edx
..@0x80445ce: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80445d0: db 0x78, 0x07  ;; js 0x80445d9
..@0x80445d2: db 0x89, 0x03  ;; mov [ebx],eax
..@0x80445d4: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80445d6: db 0x89, 0x53, 0x04  ;; mov [ebx+0x4],edx
..@0x80445d9: pop edx
..@0x80445da: db 0x89, 0xc8  ;; mov eax,ecx
..@0x80445dc: pop ecx
..@0x80445dd: pop ebx
..@0x80445de: ret
unused_old_vfprintf: equ $-B.code
..@0x80445df: times 0x8044707-0x80445df hlt  ; Unused, 0x128 bytes.
vfprintf: equ $-B.code  ; uClibc function replaced with manually optimized shorter (and simpler) implementation, which doesn't support floats. Uses str_null.
..@0x8044707:
; Based on this C code (but heavily optimized manually afterwards).
; /* It supports format flags '-', '+', '0', and length modifiers. */
; #include <stdarg.h>
; #define BBPRINTF_INT int
; #define CONFIG_BBPRINTF_LONG 0
; #define PAD_RIGHT 1
; #define PAD_ZERO 2
; #define PAD_PLUS 4
; typedef struct _FILE *FILE;
; extern int mini_fputc(int c, FILE *filep);
; int mini_vfprintf(FILE *filep, const char *format, va_list args) {
;   register unsigned width, pad;
;   register unsigned pc = 0;
;   /* String buffer large enough for the longest %u and %x. */
;   char print_buf[sizeof(BBPRINTF_INT) == 4 ? 11 : sizeof(BBPRINTF_INT) == 2 ? 6 : sizeof(BBPRINTF_INT) * 3 + 1];
;   char c;
;   unsigned BBPRINTF_INT u;
;   unsigned b;
;   unsigned char letbase, t;
;   /*register*/ char *s;
;   char neg;
;
;   for (; *format != 0; ++format) {
;     if (*format == '%') {
;       ++format;
;       width = pad = 0;
;       if (*format == '\0') break;
;       if (*format == '%') goto out;
;       if (*format == '-') {
;         ++format;
;         pad = PAD_RIGHT;
;       } else if (*format == '+') {
;         ++format;
;         pad = PAD_PLUS;
;       }
;       while (*format == '0') {
;         ++format;
;         pad |= PAD_ZERO;
;       }
;       for (; *format >= '0' && *format <= '9'; ++format) {
;         width *= 10;
;         width += *format - '0';
;       }
;       c = *format;
;       s = print_buf;
;       if (c == 's') {
;         s = va_arg(args, char*);
;         if (!s) s = (char*)"(null)";
;        do_print_s:
;         /* pc += prints(filep, s, width, pad); */
;         c = ' ';  /* padchar. */
;         if (width > 0) {
;           register unsigned len = 0;
;           register const char *ptr;
;           for (ptr = s; *ptr; ++ptr) ++len;
;           if (len >= width) width = 0;
;           else width -= len;
;           if (pad & PAD_ZERO) c = '0';
;         }
;         if (!(pad & PAD_RIGHT)) {
;           for (; width > 0; --width) {
;             mini_fputc(c, filep);
;             ++pc;
;           }
;         }
;         for (; *s ; ++s) {
;           mini_fputc(*s, filep);
;           ++pc;
;         }
;         for (; width > 0; --width) {
;           mini_fputc(c, filep);
;           ++pc;
;         }
;       } else if (c == 'c') {
;         /* char are converted to int then pushed on the stack */
;         s[0] = (char)va_arg(args, int);
;         if (width == 0) {  /* Print '\0'. */
;           mini_fputc(s[0], filep);
;           ++pc;
;         } else {
;           s[1] = '\0';
;           goto do_print_s;
;         }
;       } else {
; #if CONFIG_BBPRINTF_LONG
;         if (c == 'l') {
;           u = va_arg(args, unsigned long);
;           c = *++format;
;         } else {
;           u = va_arg(args, unsigned);
;         }
; #else
;         u = va_arg(args, unsigned);
; #endif
;         if (!(c == 'd' || c == 'u' || (c | 32) == 'x' )) goto done;  /* Assumes ASCII. */
;         /* pc += printi(filep, va_arg(args, int), (c | 32) == 'x' ? 16 : 10, c == 'd', width, pad, c == 'X' ? 'A' : 'a'); */
;         /* This code block modifies `width', and it's fine to modify `width' and `pad'. */
;         b = ((c | 32) == 'x') ? 16 : 10;
;         letbase = ((c == 'X') ? 'A' : 'a') - '0' - 10;
;         if (c == 'd' && b == 10 && (BBPRINTF_INT)u < 0) {
;           neg = '-';
;           u = -(BBPRINTF_INT)u;  /* Casting to BBPRINTF_INT to avoid Borland C++ 5.2 warning: Negating unsigned value. */
;         } else if (pad & PAD_PLUS) {
;           neg = '+';
;         } else {
;           neg = 0;
;         }
;         s = print_buf + sizeof(print_buf) - 1;
;         *s = '\0';
;         do {
;           t = u % b;
;           if (t >= 10) t += letbase;
;           *--s = t + '0';
;           u /= b;
;         } while (u);
;         if (neg) {
;           if (width && (pad & PAD_ZERO)) {
;             mini_fputc(neg, filep);
;             ++pc;
;             --width;
;           } else {
;             *--s = neg;
;           }
;         }
;         goto do_print_s;
;       }
;     } else { out:
;       mini_fputc(*format, filep);
;       ++pc;
;     }
;   }
;  done:
;   va_end(args);
;   return pc;
; }
		push ebx
		push esi
		push edi
		push ebp
		sub esp, byte 0x20
		mov ebx, [esp+0x38]
		xor ebp, ebp
.1:
		mov al, [ebx]
		test al, al
		je near .33
		cmp al, 0x25
		jne near .30
		xor eax, eax
		mov [esp+0x10], eax
		xor edi, edi
		inc ebx
		mov al, [ebx]
		test al, al
		je near .33
		cmp al, 0x25
		je near .30
		lea edx, [ebx+0x1]
		cmp al, 0x2d
		jne .2
		mov dword [esp+0x10], 0x1
		jmp short .3
.2:
		cmp al, 0x2b
		jne .4
		mov dword [esp+0x10], 0x4
.3:
		mov ebx, edx
.4:
		cmp byte [ebx], 0x30
		jne .5
		or byte [esp+0x10], 0x2
		inc ebx
		jmp .4
.5:
		xor eax, eax
.5cont:
		mov al, [ebx]
		sub al, '0'
		jl short .6
		cmp al, 9
		jg short .6
		imul edi, byte 0xa
		add edi, eax
		inc ebx
		jmp .5cont
.6:
		mov al, [ebx]
		mov esi, esp
		mov ecx, [esp+0x3c]
		add ecx, byte 0x4
		cmp al, 0x73
		jne .16
		mov [esp+0x3c], ecx
		mov esi, [ecx-0x4]
		test esi, esi
		jne .7
%ifdef CONFIG_PIC
		call .after_str_null
.str_null:
		; This is also valid i386 machine code:
		; db '(nu'  ;  sub [esi+0x75], ch
		; db 'l'  ; insb
		; db 'l'  ; insb
		; db ')', 0  ; sub [eax], eax
		db '(null)', 0
.after_str_null:
		pop esi  ; ESI := &.str_null.
%else  ; CONFIG_PIC
		mov esi, str_null
%endif  ; CONFIG_PIC
.7:
		mov byte [esp+0x1c], 0x20
		test edi, edi
		jbe .12
		xor edx, edx
		mov ecx, esi
.8:
		cmp byte [ecx], 0x0
		je .9
		inc edx
		inc ecx
		jmp .8
.9:
		cmp edx, edi
		jb .10
		xor edi, edi
		jmp short .11
.10:
		sub edi, edx
.11:
		test byte [esp+0x10], 0x2
		je .12
		mov byte [esp+0x1c], 0x30
.12:
		test byte [esp+0x10], 0x1
		jne .14
.13:
		test edi, edi
		jbe .14
		mov al, byte [esp+0x1c]
		call .call_fputc
		dec edi
		jmp .13
.14:
		mov al, [esi]
		test al, al
		je .15
		call .call_fputc
		inc esi
		jmp .14
.15:
		test edi, edi
		jbe near .32
		mov al, byte [esp+0x1c]
		call .call_fputc
		dec edi
		jmp .15
.16:
		cmp al, 0x63
		jne .17
		mov [esp+0x3c], ecx
		mov al, [ecx-0x4]
		mov [esp], al
		test edi, edi
		je near .31
		mov byte [esp+0x1], 0x0
		jmp .7
.17:
		mov [esp+0x3c], ecx
		mov ecx, [ecx-0x4]
		cmp al, 0x64
		je .18
		cmp al, 0x75
		je .18
		mov dl, al
		or dl, 0x20
		cmp dl, 0x78
		jne near .33
.18:
		mov dl, al
		or dl, 0x20
		cmp dl, 0x78
		jne .19
		mov edx, 0x10
		jmp short .20
.19:
		mov edx, 0xa
.20:
		mov [esp+0xc], edx
		cmp al, 0x58
		jne .21
		mov edx, 0x41
		jmp short .22
.21:
		mov edx, 0x61
.22:
		sub edx, byte 0x3a
		mov [esp+0x18], dl
		cmp al, 0x64
		jne .23
		cmp dword [esp+0xc], byte 0xa
		jne .23
		test ecx, ecx
		jge .23
		mov byte [esp+0x14], 0x2d
		neg ecx
		jmp short .25
.23:
		test byte [esp+0x10], 0x4
		je .24
		mov byte [esp+0x14], 0x2b
		jmp short .25
.24:
		mov byte [esp+0x14], 0x0
.25:
		lea esi, [esp+0xa]
		mov byte [esi], 0x0
		xchg eax, ecx  ; EAX := positive number to print; ECX := junk.
.26:
		xor edx, edx
		div dword [esp+0xc]
		xchg eax, edx  ; EAX := remainder; EDX := quotient.
		cmp al, 10
		jb .27
		add al, [esp+0x18]
.27:
		add al, 0x30
		dec esi
		mov [esi], al
		xchg edx, eax  ; Ater this: EAX == quotient.
		test eax, eax
		jnz .26
		cmp byte [esp+0x14], 0x0
		je .7
		test edi, edi
		jz .28
		test byte [esp+0x10], 0x2
		jz .28
		mov al, byte [esp+0x14]
		call .call_fputc
		dec edi  ; EDI contains the (remaining) width of the current number.
		jmp .7
.28:
		dec esi
		mov al, [esp+0x14]
		mov [esi], al
		jmp .7
.30:
		mov al, byte [ebx]
.31:
		call .call_fputc
.32:
		inc ebx  ; TODO(pts): Swap the role of EBX and ESI, and use lodsb.
		jmp .1
.33:
		xchg eax, ebp  ; EAX := number of bytes written; EBP := junk.
		add esp, byte 0x20
		pop ebp
		pop edi
		pop esi
		pop ebx
		ret
.call_fputc:
		push dword [esp+0x38]
		push eax  ; Only the low 8 bits matter for fputc, the high 24 bits of EAX is garbage here.
		; movsx eax, al : Not neede,d fputc ignores the high 24 bits anyway.
		call B.code+fputc
		times 2 pop eax  ; Shorter than `add esp, strict byte 8'.
		inc ebp
		ret
;
srand: equ $-B.code  ; uClibc function replaced with manually optimized shorter (and simpler) implementation. Uses seed.
; static unsigned long long seed;
; void mini_srand(unsigned s) { seed = s - 1; }
		mov eax, [esp+0x4]
		dec eax
		push edi
		mov edi, seed
		stosd
		xor eax, eax
		stosd
		pop edi
		ret
;
rand: equ $-B.code  ; uClibc function replaced with manually optimized shorter (and simpler) implementation. Uses seed.
		push edi
; static unsigned long long seed;
; int mini_rand(void) {
;   seed = 6364136223846793005ULL * seed + 1;
;   return seed >> 33;
; }
		mov edi, seed
		imul dword eax, [edi], 0x5851f42d  ; 32*32-->32 bit multiplication.
		imul dword ecx, [edi+0x4], 0x4c957f2d  ; 32*32-->32 bit multiplication.
		add ecx, eax
		mov eax, 0x4c957f2d
		mul dword [edi]  ; Unsigned 32*32-->64 bit multiplication.
		add eax, byte 1
		adc edx, ecx
		stosd
		xchg eax, edx  ; EAX := EDX; EDX := junk.
		stosd
		shr eax, 1
		pop edi
		ret
;
		times $$+0x8045279-$+B.code hlt  ; Unused, 0x64 bytes.
fflush: equ $-B.code
..@0x8045279: push edi
..@0x804527a: push esi
..@0x804527b: push ebx
..@0x804527c: sub esp, strict byte 0x10
..@0x804527f: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x8045283: db 0x85, 0xf6  ;; test esi,esi
..@0x8045285: db 0x74, 0x50  ;; jz 0x80452d7
..@0x8045287: db 0x81, 0xfe, 0x54, 0xcf, 0x05, 0x08  ;; cmp esi,_stdio_openlist  ; This proves: defined(__STDIO_HAS_OPENLIST).
..@0x804528d: db 0x74, 0x48  ;; jz 0x80452d7
..@0x804528f: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x8045292: db 0x85, 0xff  ;; test edi,edi
..@0x8045294: db 0x75, 0x1f  ;; jnz 0x80452b5
..@0x8045296: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8045299: push edx
..@0x804529a: push ebx
..@0x804529b: push strict dword __pthread_return_0
..@0x80452a0: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80452a4: push eax
..@0x80452a5: call B.code+__pthread_return_void
..@0x80452aa: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80452ad: call B.code+__pthread_return_0
..@0x80452b2: add esp, strict byte 0x10
..@0x80452b5: sub esp, strict byte 0xc
..@0x80452b8: push esi
..@0x80452b9: call B.code+fflush_unlocked
..@0x80452be: add esp, strict byte 0x10
..@0x80452c1: db 0x85, 0xff  ;; test edi,edi
..@0x80452c3: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80452c5: db 0x75, 0x1e  ;; jnz 0x80452e5
..@0x80452c7: push eax
..@0x80452c8: push eax
..@0x80452c9: push strict byte 0x1
..@0x80452cb: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80452cf: push eax
..@0x80452d0: call B.code+__pthread_return_void
..@0x80452d5: db 0xeb, 0x0b  ;; jmp short 0x80452e2
..@0x80452d7: sub esp, strict byte 0xc
..@0x80452da: push esi
..@0x80452db: call B.code+fflush_unlocked
..@0x80452e0: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80452e2: add esp, strict byte 0x10
..@0x80452e5: add esp, strict byte 0x10
..@0x80452e8: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80452ea: pop ebx
..@0x80452eb: pop esi
..@0x80452ec: pop edi
..@0x80452ed: ret
fgetc: equ $-B.code
getc: equ $-B.code
..@0x80452ee: push esi
..@0x80452ef: push ebx
..@0x80452f0: sub esp, strict byte 0x14
..@0x80452f3: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x80452f7: db 0x83, 0x7e, 0x34, 0x00  ;; cmp dword [esi+0x34],byte +0x0
..@0x80452fb: db 0x74, 0x1e  ;; jz 0x804531b
..@0x80452fd: db 0x8b, 0x46, 0x10  ;; mov eax,[esi+0x10]
..@0x8045300: db 0x3b, 0x46, 0x18  ;; cmp eax,[esi+0x18]
..@0x8045303: db 0x73, 0x09  ;; jnc 0x804530e
..@0x8045305: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x8045308: inc eax
..@0x8045309: db 0x89, 0x46, 0x10  ;; mov [esi+0x10],eax
..@0x804530c: db 0xeb, 0x5c  ;; jmp short 0x804536a
..@0x804530e: sub esp, strict byte 0xc
..@0x8045311: push esi
..@0x8045312: call B.code+getc_unlocked
..@0x8045317: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045319: db 0xeb, 0x4c  ;; jmp short 0x8045367
..@0x804531b: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x804531e: push edx
..@0x804531f: push ebx
..@0x8045320: push strict dword __pthread_return_0
..@0x8045325: db 0x8d, 0x44, 0x24, 0x10  ;; lea eax,[esp+0x10]
..@0x8045329: push eax
..@0x804532a: call B.code+__pthread_return_void
..@0x804532f: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8045332: call B.code+__pthread_return_0
..@0x8045337: db 0x8b, 0x46, 0x10  ;; mov eax,[esi+0x10]
..@0x804533a: add esp, strict byte 0x10
..@0x804533d: db 0x3b, 0x46, 0x18  ;; cmp eax,[esi+0x18]
..@0x8045340: db 0x73, 0x09  ;; jnc 0x804534b
..@0x8045342: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x8045345: inc eax
..@0x8045346: db 0x89, 0x46, 0x10  ;; mov [esi+0x10],eax
..@0x8045349: db 0xeb, 0x0e  ;; jmp short 0x8045359
..@0x804534b: sub esp, strict byte 0xc
..@0x804534e: push esi
..@0x804534f: call B.code+getc_unlocked
..@0x8045354: add esp, strict byte 0x10
..@0x8045357: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045359: push eax
..@0x804535a: push eax
..@0x804535b: push strict byte 0x1
..@0x804535d: db 0x8d, 0x44, 0x24, 0x10  ;; lea eax,[esp+0x10]
..@0x8045361: push eax
..@0x8045362: call B.code+__pthread_return_void
..@0x8045367: add esp, strict byte 0x10
..@0x804536a: add esp, strict byte 0x14
..@0x804536d: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804536f: pop ebx
..@0x8045370: pop esi
..@0x8045371: ret
fgets: equ $-B.code
..@0x8045372: push edi
..@0x8045373: push esi
..@0x8045374: push ebx
..@0x8045375: sub esp, strict byte 0x10
..@0x8045378: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x804537c: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x804537f: db 0x85, 0xff  ;; test edi,edi
..@0x8045381: db 0x75, 0x1f  ;; jnz 0x80453a2
..@0x8045383: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8045386: push ecx
..@0x8045387: push ebx
..@0x8045388: push strict dword __pthread_return_0
..@0x804538d: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x8045391: push eax
..@0x8045392: call B.code+__pthread_return_void
..@0x8045397: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804539a: call B.code+__pthread_return_0
..@0x804539f: add esp, strict byte 0x10
..@0x80453a2: push edx
..@0x80453a3: push esi
..@0x80453a4: push dword [esp+0x2c]
..@0x80453a8: push dword [esp+0x2c]
..@0x80453ac: call B.code+fgets_unlocked
..@0x80453b1: add esp, strict byte 0x10
..@0x80453b4: db 0x85, 0xff  ;; test edi,edi
..@0x80453b6: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80453b8: db 0x75, 0x11  ;; jnz 0x80453cb
..@0x80453ba: push eax
..@0x80453bb: push eax
..@0x80453bc: push strict byte 0x1
..@0x80453be: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80453c2: push eax
..@0x80453c3: call B.code+__pthread_return_void
..@0x80453c8: add esp, strict byte 0x10
..@0x80453cb: add esp, strict byte 0x10
..@0x80453ce: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80453d0: pop ebx
..@0x80453d1: pop esi
..@0x80453d2: pop edi
..@0x80453d3: ret
fileno: equ $-B.code
..@0x80453d4: push edi
..@0x80453d5: push esi
..@0x80453d6: push ebx
..@0x80453d7: sub esp, strict byte 0x10
..@0x80453da: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x80453de: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x80453e1: db 0x85, 0xff  ;; test edi,edi
..@0x80453e3: db 0x75, 0x1f  ;; jnz 0x8045404
..@0x80453e5: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x80453e8: push edx
..@0x80453e9: push ebx
..@0x80453ea: push strict dword __pthread_return_0
..@0x80453ef: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80453f3: push eax
..@0x80453f4: call B.code+__pthread_return_void
..@0x80453f9: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80453fc: call B.code+__pthread_return_0
..@0x8045401: add esp, strict byte 0x10
..@0x8045404: sub esp, strict byte 0xc
..@0x8045407: push esi
..@0x8045408: call B.code+fileno_unlocked
..@0x804540d: add esp, strict byte 0x10
..@0x8045410: db 0x85, 0xff  ;; test edi,edi
..@0x8045412: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045414: db 0x75, 0x11  ;; jnz 0x8045427
..@0x8045416: push eax
..@0x8045417: push eax
..@0x8045418: push strict byte 0x1
..@0x804541a: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x804541e: push eax
..@0x804541f: call B.code+__pthread_return_void
..@0x8045424: add esp, strict byte 0x10
..@0x8045427: add esp, strict byte 0x10
..@0x804542a: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804542c: pop ebx
..@0x804542d: pop esi
..@0x804542e: pop edi
..@0x804542f: ret
fread: equ $-B.code
..@0x8045430: push edi
..@0x8045431: push esi
..@0x8045432: push ebx
..@0x8045433: sub esp, strict byte 0x10
..@0x8045436: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x804543a: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x804543d: db 0x85, 0xff  ;; test edi,edi
..@0x804543f: db 0x75, 0x1f  ;; jnz 0x8045460
..@0x8045441: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x8045444: push edx
..@0x8045445: push ebx
..@0x8045446: push strict dword __pthread_return_0
..@0x804544b: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x804544f: push eax
..@0x8045450: call B.code+__pthread_return_void
..@0x8045455: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8045458: call B.code+__pthread_return_0
..@0x804545d: add esp, strict byte 0x10
..@0x8045460: push esi
..@0x8045461: push dword [esp+0x2c]
..@0x8045465: push dword [esp+0x2c]
..@0x8045469: push dword [esp+0x2c]
..@0x804546d: call B.code+fread_unlocked
..@0x8045472: add esp, strict byte 0x10
..@0x8045475: db 0x85, 0xff  ;; test edi,edi
..@0x8045477: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045479: db 0x75, 0x11  ;; jnz 0x804548c
..@0x804547b: push eax
..@0x804547c: push eax
..@0x804547d: push strict byte 0x1
..@0x804547f: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x8045483: push eax
..@0x8045484: call B.code+__pthread_return_void
..@0x8045489: add esp, strict byte 0x10
..@0x804548c: add esp, strict byte 0x10
..@0x804548f: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8045491: pop ebx
..@0x8045492: pop esi
..@0x8045493: pop edi
..@0x8045494: ret
fwrite: equ $-B.code
..@0x8045495: push edi
..@0x8045496: push esi
..@0x8045497: push ebx
..@0x8045498: sub esp, strict byte 0x10
..@0x804549b: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x804549f: db 0x8b, 0x7e, 0x34  ;; mov edi,[esi+0x34]
..@0x80454a2: db 0x85, 0xff  ;; test edi,edi
..@0x80454a4: db 0x75, 0x1f  ;; jnz 0x80454c5
..@0x80454a6: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x80454a9: push edx
..@0x80454aa: push ebx
..@0x80454ab: push strict dword __pthread_return_0
..@0x80454b0: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80454b4: push eax
..@0x80454b5: call B.code+__pthread_return_void
..@0x80454ba: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80454bd: call B.code+__pthread_return_0
..@0x80454c2: add esp, strict byte 0x10
..@0x80454c5: push esi
..@0x80454c6: push dword [esp+0x2c]
..@0x80454ca: push dword [esp+0x2c]
..@0x80454ce: push dword [esp+0x2c]
..@0x80454d2: call B.code+fwrite_unlocked
..@0x80454d7: add esp, strict byte 0x10
..@0x80454da: db 0x85, 0xff  ;; test edi,edi
..@0x80454dc: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80454de: db 0x75, 0x11  ;; jnz 0x80454f1
..@0x80454e0: push eax
..@0x80454e1: push eax
..@0x80454e2: push strict byte 0x1
..@0x80454e4: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x80454e8: push eax
..@0x80454e9: call B.code+__pthread_return_void
..@0x80454ee: add esp, strict byte 0x10
..@0x80454f1: add esp, strict byte 0x10
..@0x80454f4: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80454f6: pop ebx
..@0x80454f7: pop esi
..@0x80454f8: pop edi
..@0x80454f9: ret
_stdio_openlist_dec_use: equ $-B.code
..@0x80454fa: push esi
..@0x80454fb: push ebx
..@0x80454fc: sub esp, strict byte 0x28
..@0x80454ff: push strict dword _stdio_openlist_del_lock
..@0x8045504: push strict dword __pthread_return_0
..@0x8045509: db 0x8d, 0x44, 0x24, 0x20  ;; lea eax,[esp+0x20]
..@0x804550d: push eax
..@0x804550e: call B.code+__pthread_return_void
..@0x8045513: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x804551a: call B.code+__pthread_return_0
..@0x804551f: db 0xa1, 0x50, 0xca, 0x87, 0x09  ;; mov eax,[_stdio_openlist_use_count]
..@0x8045524: add esp, strict byte 0x10
..@0x8045527: dec eax
..@0x8045528: db 0x0f, 0x85, 0x91, 0x00, 0x00, 0x00  ;; jnz near 0x80455bf
..@0x804552e: db 0x83, 0x3d, 0x54, 0xca, 0x87, 0x09, 0x00  ;; cmp dword [_stdio_openlist_del_count],byte +0x0
..@0x8045535: db 0x0f, 0x8e, 0x84, 0x00, 0x00, 0x00  ;; jng near 0x80455bf
..@0x804553b: push ecx
..@0x804553c: db 0x31, 0xf6  ;; xor esi,esi
..@0x804553e: push strict dword _stdio_openlist_add_lock
..@0x8045543: push strict dword __pthread_return_0
..@0x8045548: db 0x8d, 0x44, 0x24, 0x10  ;; lea eax,[esp+0x10]
..@0x804554c: push eax
..@0x804554d: call B.code+__pthread_return_void
..@0x8045552: db 0xc7, 0x04, 0x24, 0x58, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_add_lock
..@0x8045559: call B.code+__pthread_return_0
..@0x804555e: db 0x8b, 0x15, 0x54, 0xcf, 0x05, 0x08  ;; mov edx,[_stdio_openlist]
..@0x8045564: add esp, strict byte 0x10
..@0x8045567: db 0xeb, 0x37  ;; jmp short 0x80455a0
..@0x8045569: db 0x0f, 0xb7, 0x02  ;; movzx eax,word [edx]
..@0x804556c: db 0x8b, 0x5a, 0x20  ;; mov ebx,[edx+0x20]
..@0x804556f: db 0x25, 0x30, 0x80, 0x00, 0x00  ;; and eax,0x8030
..@0x8045574: cmp eax, strict byte 0x30
..@0x8045577: db 0x74, 0x04  ;; jz 0x804557d
..@0x8045579: db 0x89, 0xd6  ;; mov esi,edx
..@0x804557b: db 0xeb, 0x21  ;; jmp short 0x804559e
..@0x804557d: db 0x85, 0xf6  ;; test esi,esi
..@0x804557f: db 0x75, 0x08  ;; jnz 0x8045589
..@0x8045581: db 0x89, 0x1d, 0x54, 0xcf, 0x05, 0x08  ;; mov [_stdio_openlist],ebx
..@0x8045587: db 0xeb, 0x03  ;; jmp short 0x804558c
..@0x8045589: db 0x89, 0x5e, 0x20  ;; mov [esi+0x20],ebx
..@0x804558c: db 0xf6, 0x42, 0x01, 0x20  ;; test byte [edx+0x1],0x20
..@0x8045590: db 0x74, 0x0c  ;; jz 0x804559e
..@0x8045592: sub esp, strict byte 0xc
..@0x8045595: push edx
..@0x8045596: call B.code+free  ; __STDIO_STREAM_FREE_FILE(stream);
..@0x804559b: add esp, strict byte 0x10
..@0x804559e: db 0x89, 0xda  ;; mov edx,ebx
..@0x80455a0: db 0x85, 0xd2  ;; test edx,edx
..@0x80455a2: db 0x75, 0xc5  ;; jnz 0x8045569
..@0x80455a4: push edx
..@0x80455a5: push edx
..@0x80455a6: push strict byte 0x1
..@0x80455a8: db 0x8d, 0x44, 0x24, 0x10  ;; lea eax,[esp+0x10]
..@0x80455ac: push eax
..@0x80455ad: call B.code+__pthread_return_void
..@0x80455b2: add esp, strict byte 0x10
..@0x80455b5: db 0xc7, 0x05, 0x54, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [_stdio_openlist_del_count],0x0
..@0x80455bd: db 0x00, 0x00
..@0x80455bf: db 0xa1, 0x50, 0xca, 0x87, 0x09  ;; mov eax,[_stdio_openlist_use_count]
..@0x80455c4: dec eax
..@0x80455c5: db 0xa3, 0x50, 0xca, 0x87, 0x09  ;; mov [_stdio_openlist_use_count],eax
..@0x80455ca: push eax
..@0x80455cb: push eax
..@0x80455cc: push strict byte 0x1
..@0x80455ce: db 0x8d, 0x44, 0x24, 0x20  ;; lea eax,[esp+0x20]
..@0x80455d2: push eax
..@0x80455d3: call B.code+__pthread_return_void
..@0x80455d8: add esp, strict byte 0x34
..@0x80455db: pop ebx
..@0x80455dc: pop esi
..@0x80455dd: ret
fflush_unlocked: equ $-B.code
..@0x80455de: push ebp
..@0x80455df: db 0x31, 0xed  ;; xor ebp,ebp
..@0x80455e1: push edi
..@0x80455e2: push esi
..@0x80455e3: push ebx
..@0x80455e4: sub esp, strict byte 0x1c
..@0x80455e7: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x80455eb: db 0x81, 0xfb, 0x54, 0xcf, 0x05, 0x08  ;; cmp ebx,_stdio_openlist
..@0x80455f1: db 0x74, 0x0c  ;; jz 0x80455ff
..@0x80455f3: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80455f5: db 0x66, 0xbd, 0x00, 0x01  ;; mov bp,0x100
..@0x80455f9: db 0x0f, 0x85, 0xf8, 0x00, 0x00, 0x00  ;; jnz near 0x80456f7
..@0x80455ff: push edi
..@0x8045600: db 0x31, 0xff  ;; xor edi,edi
..@0x8045602: push strict dword _stdio_openlist_del_lock
..@0x8045607: push strict dword __pthread_return_0
..@0x804560c: db 0x8d, 0x5c, 0x24, 0x18  ;; lea ebx,[esp+0x18]
..@0x8045610: push ebx
..@0x8045611: call B.code+__pthread_return_void
..@0x8045616: db 0xc7, 0x04, 0x24, 0x70, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_del_lock
..@0x804561d: call B.code+__pthread_return_0
..@0x8045622: db 0xa1, 0x50, 0xca, 0x87, 0x09  ;; mov eax,[_stdio_openlist_use_count]
..@0x8045627: pop ecx
..@0x8045628: pop esi
..@0x8045629: inc eax
..@0x804562a: db 0xa3, 0x50, 0xca, 0x87, 0x09  ;; mov [_stdio_openlist_use_count],eax
..@0x804562f: push strict byte 0x1
..@0x8045631: push ebx
..@0x8045632: call B.code+__pthread_return_void
..@0x8045637: add esp, strict byte 0xc
..@0x804563a: push strict dword _stdio_openlist_add_lock
..@0x804563f: push strict dword __pthread_return_0
..@0x8045644: push ebx
..@0x8045645: call B.code+__pthread_return_void
..@0x804564a: db 0xc7, 0x04, 0x24, 0x58, 0xcf, 0x05, 0x08  ;; mov dword [esp],_stdio_openlist_add_lock
..@0x8045651: call B.code+__pthread_return_0
..@0x8045656: db 0x8b, 0x35, 0x54, 0xcf, 0x05, 0x08  ;; mov esi,[_stdio_openlist]
..@0x804565c: pop eax
..@0x804565d: pop edx
..@0x804565e: push strict byte 0x1
..@0x8045660: push ebx
..@0x8045661: call B.code+__pthread_return_void
..@0x8045666: add esp, strict byte 0x10
..@0x8045669: db 0xeb, 0x7d  ;; jmp short 0x80456e8
..@0x804566b: db 0xf6, 0x06, 0x40  ;; test byte [esi],0x40
..@0x804566e: db 0x74, 0x75  ;; jz 0x80456e5
..@0x8045670: db 0x83, 0x3d, 0x88, 0xcf, 0x05, 0x08, 0x02  ;; cmp dword [_stdio_user_locking],byte +0x2
..@0x8045677: db 0x74, 0x1f  ;; jz 0x8045698
..@0x8045679: db 0x8d, 0x5e, 0x38  ;; lea ebx,[esi+0x38]
..@0x804567c: push eax
..@0x804567d: push ebx
..@0x804567e: push strict dword __pthread_return_0
..@0x8045683: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8045687: push eax
..@0x8045688: call B.code+__pthread_return_void
..@0x804568d: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8045690: call B.code+__pthread_return_0
..@0x8045695: add esp, strict byte 0x10
..@0x8045698: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x804569a: db 0x09, 0xe8  ;; or eax,ebp
..@0x804569c: db 0x35, 0x40, 0x01, 0x00, 0x00  ;; xor eax,0x140
..@0x80456a1: db 0xa9, 0x40, 0x03, 0x00, 0x00  ;; test eax,0x340
..@0x80456a6: db 0x75, 0x23  ;; jnz 0x80456cb
..@0x80456a8: sub esp, strict byte 0xc
..@0x80456ab: push esi
..@0x80456ac: call B.code+__stdio_wcommit
..@0x80456b1: add esp, strict byte 0x10
..@0x80456b4: db 0x85, 0xc0  ;; test eax,eax
..@0x80456b6: db 0x74, 0x05  ;; jz 0x80456bd
..@0x80456b8: or edi, strict byte -0x1
..@0x80456bb: db 0xeb, 0x0e  ;; jmp short 0x80456cb
..@0x80456bd: db 0x8b, 0x46, 0x08  ;; mov eax,[esi+0x8]
..@0x80456c0: db 0x89, 0x46, 0x1c  ;; mov [esi+0x1c],eax
..@0x80456c3: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x80456c5: and eax, strict byte -0x41
..@0x80456c8: db 0x66, 0x89, 0x06  ;; mov [esi],ax
..@0x80456cb: db 0x83, 0x3d, 0x88, 0xcf, 0x05, 0x08, 0x02  ;; cmp dword [_stdio_user_locking],byte +0x2
..@0x80456d2: db 0x74, 0x11  ;; jz 0x80456e5
..@0x80456d4: push ebx
..@0x80456d5: push ebx
..@0x80456d6: push strict byte 0x1
..@0x80456d8: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x80456dc: push eax
..@0x80456dd: call B.code+__pthread_return_void
..@0x80456e2: add esp, strict byte 0x10
..@0x80456e5: db 0x8b, 0x76, 0x20  ;; mov esi,[esi+0x20]
..@0x80456e8: db 0x85, 0xf6  ;; test esi,esi
..@0x80456ea: db 0x0f, 0x85, 0x7b, 0xff, 0xff, 0xff  ;; jnz near 0x804566b
..@0x80456f0: call B.code+_stdio_openlist_dec_use
..@0x80456f5: db 0xeb, 0x2a  ;; jmp short 0x8045721
..@0x80456f7: db 0x31, 0xff  ;; xor edi,edi
..@0x80456f9: db 0xf6, 0x03, 0x40  ;; test byte [ebx],0x40
..@0x80456fc: db 0x74, 0x23  ;; jz 0x8045721
..@0x80456fe: sub esp, strict byte 0xc
..@0x8045701: or edi, strict byte -0x1
..@0x8045704: push ebx
..@0x8045705: call B.code+__stdio_wcommit
..@0x804570a: add esp, strict byte 0x10
..@0x804570d: db 0x85, 0xc0  ;; test eax,eax
..@0x804570f: db 0x75, 0x10  ;; jnz 0x8045721
..@0x8045711: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x8045714: db 0x31, 0xff  ;; xor edi,edi
..@0x8045716: db 0x89, 0x43, 0x1c  ;; mov [ebx+0x1c],eax
..@0x8045719: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804571b: and eax, strict byte -0x41
..@0x804571e: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8045721: add esp, strict byte 0x1c
..@0x8045724: db 0x89, 0xf8  ;; mov eax,edi
..@0x8045726: pop ebx
..@0x8045727: pop esi
..@0x8045728: pop edi
..@0x8045729: pop ebp
..@0x804572a: ret
getc_unlocked: equ $-B.code
..@0x804572b: push ebx
..@0x804572c: sub esp, strict byte 0x18
..@0x804572f: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x8045733: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x8045736: db 0x3b, 0x43, 0x18  ;; cmp eax,[ebx+0x18]
..@0x8045739: db 0x0f, 0x82, 0x99, 0x00, 0x00, 0x00  ;; jc near 0x80457d8
..@0x804573f: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x8045742: db 0x25, 0x83, 0x00, 0x00, 0x00  ;; and eax,0x83
..@0x8045747: db 0x3d, 0x80, 0x00, 0x00, 0x00  ;; cmp eax,0x80
..@0x804574c: db 0x77, 0x18  ;; ja 0x8045766
..@0x804574e: push edx
..@0x804574f: push edx
..@0x8045750: push strict dword 0x80
..@0x8045755: push ebx
..@0x8045756: call B.code+__stdio_trans2r_o
..@0x804575b: add esp, strict byte 0x10
..@0x804575e: db 0x85, 0xc0  ;; test eax,eax
..@0x8045760: db 0x0f, 0x85, 0x97, 0x00, 0x00, 0x00  ;; jnz near 0x80457fd
..@0x8045766: db 0x0f, 0xb7, 0x0b  ;; movzx ecx,word [ebx]
..@0x8045769: db 0xf6, 0xc1, 0x02  ;; test cl,0x2
..@0x804576c: db 0x74, 0x1b  ;; jz 0x8045789
..@0x804576e: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8045770: and eax, strict byte 0x1
..@0x8045773: db 0x8a, 0x54, 0x83, 0x24  ;; mov dl,[ebx+eax*4+0x24]
..@0x8045777: db 0x8d, 0x41, 0xff  ;; lea eax,[ecx-0x1]
..@0x804577a: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x804577d: db 0xc7, 0x43, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebx+0x28],0x0
..@0x8045784: db 0x0f, 0xb6, 0xd2  ;; movzx edx,dl
..@0x8045787: db 0xeb, 0x77  ;; jmp short 0x8045800
..@0x8045789: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x804578c: db 0x39, 0x43, 0x14  ;; cmp [ebx+0x14],eax
..@0x804578f: db 0x75, 0x47  ;; jnz 0x80457d8
..@0x8045791: db 0x83, 0x7b, 0x04, 0xfe  ;; cmp dword [ebx+0x4],byte -0x2
..@0x8045795: db 0x75, 0x08  ;; jnz 0x804579f
..@0x8045797: or ecx, strict byte 0x4
..@0x804579a: db 0x66, 0x89, 0x0b  ;; mov [ebx],cx
..@0x804579d: db 0xeb, 0x5e  ;; jmp short 0x80457fd
..@0x804579f: db 0xf6, 0xc5, 0x03  ;; test ch,0x3
..@0x80457a2: db 0x74, 0x10  ;; jz 0x80457b4
..@0x80457a4: sub esp, strict byte 0xc
..@0x80457a7: push strict dword _stdio_openlist
..@0x80457ac: call B.code+fflush_unlocked
..@0x80457b1: add esp, strict byte 0x10
..@0x80457b4: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x80457b7: db 0x39, 0x43, 0x0c  ;; cmp [ebx+0xc],eax
..@0x80457ba: db 0x74, 0x25  ;; jz 0x80457e1
..@0x80457bc: sub esp, strict byte 0xc
..@0x80457bf: db 0x89, 0x43, 0x18  ;; mov [ebx+0x18],eax
..@0x80457c2: push ebx
..@0x80457c3: call B.code+__stdio_rfill
..@0x80457c8: add esp, strict byte 0x10
..@0x80457cb: db 0x85, 0xc0  ;; test eax,eax
..@0x80457cd: db 0x74, 0x2e  ;; jz 0x80457fd
..@0x80457cf: db 0x8b, 0x43, 0x14  ;; mov eax,[ebx+0x14]
..@0x80457d2: db 0x89, 0x43, 0x18  ;; mov [ebx+0x18],eax
..@0x80457d5: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x80457d8: db 0x0f, 0xb6, 0x10  ;; movzx edx,byte [eax]
..@0x80457db: inc eax
..@0x80457dc: db 0x89, 0x43, 0x10  ;; mov [ebx+0x10],eax
..@0x80457df: db 0xeb, 0x1f  ;; jmp short 0x8045800
..@0x80457e1: push eax
..@0x80457e2: push strict byte 0x1
..@0x80457e4: db 0x8d, 0x44, 0x24, 0x1f  ;; lea eax,[esp+0x1f]
..@0x80457e8: push eax
..@0x80457e9: push ebx
..@0x80457ea: call B.code+__stdio_READ
..@0x80457ef: add esp, strict byte 0x10
..@0x80457f2: db 0x85, 0xc0  ;; test eax,eax
..@0x80457f4: db 0x74, 0x07  ;; jz 0x80457fd
..@0x80457f6: db 0x0f, 0xb6, 0x54, 0x24, 0x17  ;; movzx edx,byte [esp+0x17]
..@0x80457fb: db 0xeb, 0x03  ;; jmp short 0x8045800
..@0x80457fd: or edx, strict byte -0x1
..@0x8045800: add esp, strict byte 0x18
..@0x8045803: db 0x89, 0xd0  ;; mov eax,edx
..@0x8045805: pop ebx
..@0x8045806: ret
fgets_unlocked: equ $-B.code
..@0x8045807: push ebp
..@0x8045808: push edi
..@0x8045809: push esi
..@0x804580a: push ebx
..@0x804580b: sub esp, strict byte 0xc
..@0x804580e: db 0x8b, 0x74, 0x24, 0x24  ;; mov esi,[esp+0x24]
..@0x8045812: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8045816: db 0x8b, 0x6c, 0x24, 0x28  ;; mov ebp,[esp+0x28]
..@0x804581a: db 0x85, 0xf6  ;; test esi,esi
..@0x804581c: db 0x89, 0xfb  ;; mov ebx,edi
..@0x804581e: db 0x7f, 0x38  ;; jg 0x8045858
..@0x8045820: db 0xeb, 0x42  ;; jmp short 0x8045864
..@0x8045822: db 0x8b, 0x45, 0x10  ;; mov eax,[ebp+0x10]
..@0x8045825: db 0x3b, 0x45, 0x18  ;; cmp eax,[ebp+0x18]
..@0x8045828: db 0x73, 0x0e  ;; jnc 0x8045838
..@0x804582a: db 0x8a, 0x10  ;; mov dl,[eax]
..@0x804582c: inc eax
..@0x804582d: db 0x88, 0x13  ;; mov [ebx],dl
..@0x804582f: inc ebx
..@0x8045830: db 0x80, 0xfa, 0x0a  ;; cmp dl,0xa
..@0x8045833: db 0x89, 0x45, 0x10  ;; mov [ebp+0x10],eax
..@0x8045836: db 0xeb, 0x1e  ;; jmp short 0x8045856
..@0x8045838: sub esp, strict byte 0xc
..@0x804583b: push ebp
..@0x804583c: call B.code+getc_unlocked
..@0x8045841: add esp, strict byte 0x10
..@0x8045844: cmp eax, strict byte -0x1
..@0x8045847: db 0x75, 0x08  ;; jnz 0x8045851
..@0x8045849: db 0xf6, 0x45, 0x00, 0x08  ;; test byte [ebp+0x0],0x8
..@0x804584d: db 0x74, 0x0c  ;; jz 0x804585b
..@0x804584f: db 0xeb, 0x13  ;; jmp short 0x8045864
..@0x8045851: db 0x88, 0x03  ;; mov [ebx],al
..@0x8045853: inc ebx
..@0x8045854: db 0x3c, 0x0a  ;; cmp al,0xa
..@0x8045856: db 0x74, 0x03  ;; jz 0x804585b
..@0x8045858: dec esi
..@0x8045859: db 0x75, 0xc7  ;; jnz 0x8045822
..@0x804585b: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x804585d: db 0x76, 0x05  ;; jna 0x8045864
..@0x804585f: db 0xc6, 0x03, 0x00  ;; mov byte [ebx],0x0
..@0x8045862: db 0xeb, 0x02  ;; jmp short 0x8045866
..@0x8045864: db 0x31, 0xff  ;; xor edi,edi
..@0x8045866: add esp, strict byte 0xc
..@0x8045869: db 0x89, 0xf8  ;; mov eax,edi
..@0x804586b: pop ebx
..@0x804586c: pop esi
..@0x804586d: pop edi
..@0x804586e: pop ebp
..@0x804586f: ret
fileno_unlocked: equ $-B.code
..@0x8045870: sub esp, strict byte 0xc
..@0x8045873: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8045877: db 0x8b, 0x40, 0x04  ;; mov eax,[eax+0x4]
..@0x804587a: db 0x85, 0xc0  ;; test eax,eax
..@0x804587c: db 0x79, 0x0e  ;; jns 0x804588c
..@0x804587e: call B.code+__errno_location
..@0x8045883: db 0xc7, 0x00, 0x09, 0x00, 0x00, 0x00  ;; mov dword [eax],0x9
..@0x8045889: or eax, strict byte -0x1
..@0x804588c: add esp, strict byte 0xc
..@0x804588f: ret
fputc_unlocked: equ $-B.code
putc_unlocked: equ $-B.code
fputc: equ $-B.code
..@0x8045890: push esi
..@0x8045891: push ebx
..@0x8045892: sub esp, strict byte 0x14
..@0x8045895: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x8045899: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804589d: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x80458a0: db 0x3b, 0x43, 0x1c  ;; cmp eax,[ebx+0x1c]
..@0x80458a3: db 0x73, 0x0a  ;; jnc 0x80458af
..@0x80458a5: db 0x89, 0xf2  ;; mov edx,esi
..@0x80458a7: db 0x88, 0x10  ;; mov [eax],dl
..@0x80458a9: inc eax
..@0x80458aa: db 0x89, 0x43, 0x10  ;; mov [ebx+0x10],eax
..@0x80458ad: db 0xeb, 0x2b  ;; jmp short 0x80458da
..@0x80458af: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x80458b2: db 0x25, 0xc0, 0x00, 0x00, 0x00  ;; and eax,0xc0
..@0x80458b7: db 0x3d, 0xc0, 0x00, 0x00, 0x00  ;; cmp eax,0xc0
..@0x80458bc: db 0x74, 0x14  ;; jz 0x80458d2
..@0x80458be: push edx
..@0x80458bf: push edx
..@0x80458c0: push strict dword 0x80
..@0x80458c5: push ebx
..@0x80458c6: call B.code+__stdio_trans2w_o
..@0x80458cb: add esp, strict byte 0x10
..@0x80458ce: db 0x85, 0xc0  ;; test eax,eax
..@0x80458d0: db 0x75, 0x70  ;; jnz 0x8045942
..@0x80458d2: db 0x83, 0x7b, 0x04, 0xfe  ;; cmp dword [ebx+0x4],byte -0x2
..@0x80458d6: db 0x75, 0x07  ;; jnz 0x80458df
..@0x80458d8: db 0x89, 0xf2  ;; mov edx,esi
..@0x80458da: db 0x0f, 0xb6, 0xc2  ;; movzx eax,dl
..@0x80458dd: db 0xeb, 0x66  ;; jmp short 0x8045945
..@0x80458df: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x80458e2: db 0x3b, 0x43, 0x08  ;; cmp eax,[ebx+0x8]
..@0x80458e5: db 0x74, 0x40  ;; jz 0x8045927
..@0x80458e7: db 0x3b, 0x43, 0x10  ;; cmp eax,[ebx+0x10]
..@0x80458ea: db 0x75, 0x10  ;; jnz 0x80458fc
..@0x80458ec: sub esp, strict byte 0xc
..@0x80458ef: push ebx
..@0x80458f0: call B.code+__stdio_wcommit
..@0x80458f5: add esp, strict byte 0x10
..@0x80458f8: db 0x85, 0xc0  ;; test eax,eax
..@0x80458fa: db 0x75, 0x46  ;; jnz 0x8045942
..@0x80458fc: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x80458ff: db 0x89, 0xf2  ;; mov edx,esi
..@0x8045901: db 0x88, 0x10  ;; mov [eax],dl
..@0x8045903: inc eax
..@0x8045904: db 0xf6, 0x43, 0x01, 0x01  ;; test byte [ebx+0x1],0x1
..@0x8045908: db 0x89, 0x43, 0x10  ;; mov [ebx+0x10],eax
..@0x804590b: db 0x74, 0xcb  ;; jz 0x80458d8
..@0x804590d: db 0x80, 0xfa, 0x0a  ;; cmp dl,0xa
..@0x8045910: db 0x75, 0xc6  ;; jnz 0x80458d8
..@0x8045912: sub esp, strict byte 0xc
..@0x8045915: push ebx
..@0x8045916: call B.code+__stdio_wcommit
..@0x804591b: add esp, strict byte 0x10
..@0x804591e: db 0x85, 0xc0  ;; test eax,eax
..@0x8045920: db 0x74, 0xb6  ;; jz 0x80458d8
..@0x8045922: db 0xff, 0x4b, 0x10  ;; dec dword [ebx+0x10]
..@0x8045925: db 0xeb, 0x1b  ;; jmp short 0x8045942
..@0x8045927: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8045929: db 0x88, 0x4c, 0x24, 0x13  ;; mov [esp+0x13],cl
..@0x804592d: push eax
..@0x804592e: push strict byte 0x1
..@0x8045930: db 0x8d, 0x44, 0x24, 0x1b  ;; lea eax,[esp+0x1b]
..@0x8045934: push eax
..@0x8045935: push ebx
..@0x8045936: call B.code+__stdio_WRITE
..@0x804593b: add esp, strict byte 0x10
..@0x804593e: db 0x85, 0xc0  ;; test eax,eax
..@0x8045940: db 0x75, 0x96  ;; jnz 0x80458d8
..@0x8045942: or eax, strict byte -0x1
..@0x8045945: add esp, strict byte 0x14
..@0x8045948: pop ebx
..@0x8045949: pop esi
..@0x804594a: ret
fputs_unlocked: equ $-B.code
..@0x804594b: push esi
..@0x804594c: push ebx
..@0x804594d: sub esp, strict byte 0x10
..@0x8045950: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8045954: push ebx
..@0x8045955: call B.code+strlen
..@0x804595a: add esp, strict byte 0x10
..@0x804595d: push dword [esp+0x14]
..@0x8045961: push eax
..@0x8045962: db 0x89, 0xc6  ;; mov esi,eax
..@0x8045964: push strict byte 0x1
..@0x8045966: push ebx
..@0x8045967: call B.code+fwrite_unlocked
..@0x804596c: db 0x89, 0xc2  ;; mov edx,eax
..@0x804596e: or eax, strict byte -0x1
..@0x8045971: db 0x39, 0xf2  ;; cmp edx,esi
..@0x8045973: db 0x0f, 0x44, 0xc2  ;; cmovz eax,edx
..@0x8045976: add esp, strict byte 0x14
..@0x8045979: pop ebx
..@0x804597a: pop esi
..@0x804597b: ret
fread_unlocked: equ $-B.code
..@0x804597c: push ebp
..@0x804597d: push edi
..@0x804597e: push esi
..@0x804597f: push ebx
..@0x8045980: sub esp, strict byte 0xc
..@0x8045983: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x8045987: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x804598b: db 0x0f, 0xb7, 0x45, 0x00  ;; movzx eax,word [ebp+0x0]
..@0x804598f: db 0x25, 0x83, 0x00, 0x00, 0x00  ;; and eax,0x83
..@0x8045994: db 0x3d, 0x80, 0x00, 0x00, 0x00  ;; cmp eax,0x80
..@0x8045999: db 0x77, 0x18  ;; ja 0x80459b3
..@0x804599b: push esi
..@0x804599c: push esi
..@0x804599d: push strict dword 0x80
..@0x80459a2: push ebp
..@0x80459a3: call B.code+__stdio_trans2r_o
..@0x80459a8: add esp, strict byte 0x10
..@0x80459ab: db 0x85, 0xc0  ;; test eax,eax
..@0x80459ad: db 0x0f, 0x85, 0xd7, 0x00, 0x00, 0x00  ;; jnz near 0x8045a8a
..@0x80459b3: db 0x83, 0x7c, 0x24, 0x24, 0x00  ;; cmp dword [esp+0x24],byte +0x0
..@0x80459b8: db 0x0f, 0x84, 0xcc, 0x00, 0x00, 0x00  ;; jz near 0x8045a8a
..@0x80459be: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80459c0: db 0x0f, 0x84, 0xc4, 0x00, 0x00, 0x00  ;; jz near 0x8045a8a
..@0x80459c6: or eax, strict byte -0x1
..@0x80459c9: db 0x31, 0xd2  ;; xor edx,edx
..@0x80459cb: db 0xf7, 0x74, 0x24, 0x24  ;; div dword [esp+0x24]
..@0x80459cf: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x80459d1: db 0x0f, 0x87, 0x9e, 0x00, 0x00, 0x00  ;; ja near 0x8045a75
..@0x80459d7: db 0x0f, 0xaf, 0x5c, 0x24, 0x24  ;; imul ebx,[esp+0x24]
..@0x80459dc: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x80459e0: db 0x89, 0xde  ;; mov esi,ebx
..@0x80459e2: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x80459e6: db 0xeb, 0x1d  ;; jmp short 0x8045a05
..@0x80459e8: db 0x89, 0xd0  ;; mov eax,edx
..@0x80459ea: and eax, strict byte 0x1
..@0x80459ed: dec esi
..@0x80459ee: db 0x8b, 0x44, 0x85, 0x24  ;; mov eax,[ebp+eax*4+0x24]
..@0x80459f2: db 0x88, 0x07  ;; mov [edi],al
..@0x80459f4: db 0x8d, 0x42, 0xff  ;; lea eax,[edx-0x1]
..@0x80459f7: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x80459fb: db 0xc7, 0x45, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0x28],0x0
..@0x8045a02: db 0x74, 0x61  ;; jz 0x8045a65
..@0x8045a04: inc edi
..@0x8045a05: db 0x0f, 0xb7, 0x55, 0x00  ;; movzx edx,word [ebp+0x0]
..@0x8045a09: db 0xf6, 0xc2, 0x02  ;; test dl,0x2
..@0x8045a0c: db 0x75, 0xda  ;; jnz 0x80459e8
..@0x8045a0e: db 0x8b, 0x55, 0x10  ;; mov edx,[ebp+0x10]
..@0x8045a11: db 0x8b, 0x45, 0x14  ;; mov eax,[ebp+0x14]
..@0x8045a14: db 0x29, 0xd0  ;; sub eax,edx
..@0x8045a16: db 0x74, 0x1c  ;; jz 0x8045a34
..@0x8045a18: db 0x39, 0xc6  ;; cmp esi,eax
..@0x8045a1a: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045a1c: db 0x0f, 0x46, 0xde  ;; cmovna ebx,esi
..@0x8045a1f: push ecx
..@0x8045a20: push ebx
..@0x8045a21: push edx
..@0x8045a22: push edi
..@0x8045a23: call B.code+memcpy
..@0x8045a28: add esp, strict byte 0x10
..@0x8045a2b: db 0x01, 0x5d, 0x10  ;; add [ebp+0x10],ebx
..@0x8045a2e: db 0x29, 0xde  ;; sub esi,ebx
..@0x8045a30: db 0x74, 0x33  ;; jz 0x8045a65
..@0x8045a32: db 0x01, 0xdf  ;; add edi,ebx
..@0x8045a34: db 0x0f, 0xb7, 0x45, 0x00  ;; movzx eax,word [ebp+0x0]
..@0x8045a38: db 0xf6, 0xc4, 0x03  ;; test ah,0x3
..@0x8045a3b: db 0x74, 0x18  ;; jz 0x8045a55
..@0x8045a3d: sub esp, strict byte 0xc
..@0x8045a40: push strict dword _stdio_openlist
..@0x8045a45: call B.code+fflush_unlocked
..@0x8045a4a: add esp, strict byte 0x10
..@0x8045a4d: db 0xeb, 0x06  ;; jmp short 0x8045a55
..@0x8045a4f: db 0x29, 0xc6  ;; sub esi,eax
..@0x8045a51: db 0x74, 0x12  ;; jz 0x8045a65
..@0x8045a53: db 0x01, 0xc7  ;; add edi,eax
..@0x8045a55: push eax
..@0x8045a56: push esi
..@0x8045a57: push edi
..@0x8045a58: push ebp
..@0x8045a59: call B.code+__stdio_READ
..@0x8045a5e: add esp, strict byte 0x10
..@0x8045a61: db 0x85, 0xc0  ;; test eax,eax
..@0x8045a63: db 0x75, 0xea  ;; jnz 0x8045a4f
..@0x8045a65: db 0x29, 0x74, 0x24, 0x08  ;; sub [esp+0x8],esi
..@0x8045a69: db 0x31, 0xd2  ;; xor edx,edx
..@0x8045a6b: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8045a6f: db 0xf7, 0x74, 0x24, 0x24  ;; div dword [esp+0x24]
..@0x8045a73: db 0xeb, 0x17  ;; jmp short 0x8045a8c
..@0x8045a75: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x8045a78: or eax, strict byte 0x8
..@0x8045a7b: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x8045a7f: call B.code+__errno_location
..@0x8045a84: db 0xc7, 0x00, 0x16, 0x00, 0x00, 0x00  ;; mov dword [eax],0x16
..@0x8045a8a: db 0x31, 0xc0  ;; xor eax,eax
..@0x8045a8c: add esp, strict byte 0xc
..@0x8045a8f: pop ebx
..@0x8045a90: pop esi
..@0x8045a91: pop edi
..@0x8045a92: pop ebp
..@0x8045a93: ret
fwrite_unlocked: equ $-B.code
..@0x8045a94: push edi
..@0x8045a95: push esi
..@0x8045a96: push ebx
..@0x8045a97: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8045a9b: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8045a9f: db 0x8b, 0x7c, 0x24, 0x18  ;; mov edi,[esp+0x18]
..@0x8045aa3: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x8045aa6: db 0x25, 0xc0, 0x00, 0x00, 0x00  ;; and eax,0xc0
..@0x8045aab: db 0x3d, 0xc0, 0x00, 0x00, 0x00  ;; cmp eax,0xc0
..@0x8045ab0: db 0x74, 0x14  ;; jz 0x8045ac6
..@0x8045ab2: push edx
..@0x8045ab3: push edx
..@0x8045ab4: push strict dword 0x80
..@0x8045ab9: push ebx
..@0x8045aba: call B.code+__stdio_trans2w_o
..@0x8045abf: add esp, strict byte 0x10
..@0x8045ac2: db 0x85, 0xc0  ;; test eax,eax
..@0x8045ac4: db 0x75, 0x40  ;; jnz 0x8045b06
..@0x8045ac6: db 0x85, 0xf6  ;; test esi,esi
..@0x8045ac8: db 0x74, 0x3c  ;; jz 0x8045b06
..@0x8045aca: db 0x85, 0xff  ;; test edi,edi
..@0x8045acc: db 0x74, 0x38  ;; jz 0x8045b06
..@0x8045ace: or eax, strict byte -0x1
..@0x8045ad1: db 0x31, 0xd2  ;; xor edx,edx
..@0x8045ad3: db 0xf7, 0xf6  ;; div esi
..@0x8045ad5: db 0x39, 0xc7  ;; cmp edi,eax
..@0x8045ad7: db 0x77, 0x1a  ;; ja 0x8045af3
..@0x8045ad9: push eax
..@0x8045ada: db 0x89, 0xf0  ;; mov eax,esi
..@0x8045adc: db 0x0f, 0xaf, 0xc7  ;; imul eax,edi
..@0x8045adf: push ebx
..@0x8045ae0: push eax
..@0x8045ae1: push dword [esp+0x1c]
..@0x8045ae5: call B.code+__stdio_fwrite
..@0x8045aea: db 0x31, 0xd2  ;; xor edx,edx
..@0x8045aec: add esp, strict byte 0x10
..@0x8045aef: db 0xf7, 0xf6  ;; div esi
..@0x8045af1: db 0xeb, 0x15  ;; jmp short 0x8045b08
..@0x8045af3: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8045af5: or eax, strict byte 0x8
..@0x8045af8: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8045afb: call B.code+__errno_location
..@0x8045b00: db 0xc7, 0x00, 0x16, 0x00, 0x00, 0x00  ;; mov dword [eax],0x16
..@0x8045b06: db 0x31, 0xc0  ;; xor eax,eax
..@0x8045b08: pop ebx
..@0x8045b09: pop esi
..@0x8045b0a: pop edi
..@0x8045b0b: ret
memcpy: equ $-B.code
..@0x8045b0c: push edi
..@0x8045b0d: push esi
..@0x8045b0e: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045b12: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x8045b16: db 0x8b, 0x7c, 0x24, 0x0c  ;; mov edi,[esp+0xc]
..@0x8045b1a: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8045b1c: db 0xc1, 0xe9, 0x02  ;; shr ecx,byte 0x2
..@0x8045b1f: db 0xf3, 0xa5  ;; rep movsd
..@0x8045b21: db 0xa8, 0x02  ;; test al,0x2
..@0x8045b23: db 0x74, 0x02  ;; jz 0x8045b27
..@0x8045b25: db 0x66, 0xa5  ;; movsw
..@0x8045b27: db 0xa8, 0x01  ;; test al,0x1
..@0x8045b29: db 0x74, 0x01  ;; jz 0x8045b2c
..@0x8045b2b: movsb
..@0x8045b2c: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8045b30: pop esi
..@0x8045b31: pop edi
..@0x8045b32: ret
memmove: equ $-B.code
..@0x8045b33: push edi
..@0x8045b34: push esi
..@0x8045b35: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8045b39: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x8045b3d: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8045b41: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8045b43: db 0x73, 0x06  ;; jnc 0x8045b4b
..@0x8045b45: db 0x89, 0xc7  ;; mov edi,eax
..@0x8045b47: db 0xf3, 0xa4  ;; rep movsb
..@0x8045b49: db 0xeb, 0x0c  ;; jmp short 0x8045b57
..@0x8045b4b: db 0x8d, 0x74, 0x0e, 0xff  ;; lea esi,[esi+ecx-0x1]
..@0x8045b4f: db 0x8d, 0x7c, 0x08, 0xff  ;; lea edi,[eax+ecx-0x1]
..@0x8045b53: std
..@0x8045b54: db 0xf3, 0xa4  ;; rep movsb
..@0x8045b56: cld
..@0x8045b57: pop esi
..@0x8045b58: pop edi
..@0x8045b59: ret
memset: equ $-B.code
..@0x8045b5a: push edi
..@0x8045b5b: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8045b5f: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x8045b63: db 0x8b, 0x7c, 0x24, 0x08  ;; mov edi,[esp+0x8]
..@0x8045b67: db 0xf3, 0xaa  ;; rep stosb
..@0x8045b69: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8045b6d: pop edi
..@0x8045b6e: ret
strcat: equ $-B.code
..@0x8045b6f: push edi
..@0x8045b70: db 0x31, 0xc0  ;; xor eax,eax
..@0x8045b72: push esi
..@0x8045b73: or ecx, strict byte -0x1
..@0x8045b76: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x8045b7a: db 0x8b, 0x7c, 0x24, 0x0c  ;; mov edi,[esp+0xc]
..@0x8045b7e: db 0xf2, 0xae  ;; repne scasb
..@0x8045b80: dec edi
..@0x8045b81: lodsb
..@0x8045b82: stosb
..@0x8045b83: db 0x84, 0xc0  ;; test al,al
..@0x8045b85: db 0x75, 0xfa  ;; jnz 0x8045b81
..@0x8045b87: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8045b8b: pop esi
..@0x8045b8c: pop edi
..@0x8045b8d: ret
unused_strchr: times 0x8045bac-0x8045b8e hlt  ; Padding.
strcpy: equ $-B.code
..@0x8045bac: push edi
..@0x8045bad: push esi
..@0x8045bae: sub esp, strict byte 0x4
..@0x8045bb1: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8045bb5: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8045bb9: lodsb
..@0x8045bba: stosb
..@0x8045bbb: db 0x84, 0xc0  ;; test al,al
..@0x8045bbd: db 0x75, 0xfa  ;; jnz 0x8045bb9
..@0x8045bbf: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8045bc3: pop edx
..@0x8045bc4: pop esi
..@0x8045bc5: pop edi
..@0x8045bc6: ret
unused_strlen: equ $-B.code
..@0x8045bc7: times 0x8045bda-0x8045bc7 hlt  ; Padding.
strnlen: equ $-B.code
..@0x8045bda: db 0x8b, 0x4c, 0x24, 0x04  ;; mov ecx,[esp+0x4]
..@0x8045bde: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x8045be2: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8045be4: inc edx
..@0x8045be5: db 0xeb, 0x06  ;; jmp short 0x8045bed
..@0x8045be7: db 0x80, 0x38, 0x00  ;; cmp byte [eax],0x0
..@0x8045bea: db 0x74, 0x04  ;; jz 0x8045bf0
..@0x8045bec: inc eax
..@0x8045bed: dec edx
..@0x8045bee: db 0x75, 0xf7  ;; jnz 0x8045be7
..@0x8045bf0: db 0x29, 0xc8  ;; sub eax,ecx
..@0x8045bf2: ret
unused_strerrors: equ $-B.code
..@0x8045bf3: times 0x8045cc6-0x8045bf3 hlt  ; Unused, 0xd3 bytes.
stpcpy: equ $-B.code
..@0x8045cc6: db 0x8b, 0x54, 0x24, 0x04  ;; mov edx,[esp+0x4]
..@0x8045cca: db 0x8b, 0x4c, 0x24, 0x08  ;; mov ecx,[esp+0x8]
..@0x8045cce: db 0x8a, 0x01  ;; mov al,[ecx]
..@0x8045cd0: inc ecx
..@0x8045cd1: db 0x88, 0x02  ;; mov [edx],al
..@0x8045cd3: inc edx
..@0x8045cd4: db 0x84, 0xc0  ;; test al,al
..@0x8045cd6: db 0x75, 0xf6  ;; jnz 0x8045cce
..@0x8045cd8: db 0x8d, 0x42, 0xff  ;; lea eax,[edx-0x1]
..@0x8045cdb: ret
unused_strcasecmp_and_strncasecmp: equ $-B.code
..@0x8045cdc: times 0x8045d53-0x8045cdc hlt  ; Padding
strtok: equ $-B.code
..@0x8045d53: sub esp, strict byte 0x10
..@0x8045d56: push strict dword next_start.1278
..@0x8045d5b: push dword [esp+0x1c]
..@0x8045d5f: push dword [esp+0x1c]
..@0x8045d63: call B.code+strtok_r
..@0x8045d68: add esp, strict byte 0x1c
..@0x8045d6b: ret
isatty: equ $-B.code
..@0x8045d6c: sub esp, strict byte 0x54
..@0x8045d6f: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8045d73: push eax
..@0x8045d74: push dword [esp+0x5c]
..@0x8045d78: call B.code+tcgetattr_used_by_isatty
..@0x8045d7d: db 0x85, 0xc0  ;; test eax,eax
..@0x8045d7f: db 0x0f, 0x94, 0xc0  ;; setz al
..@0x8045d82: add esp, strict byte 0x5c
..@0x8045d85: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x8045d88: ret
tcgetattr_used_by_isatty: equ $-B.code
..@0x8045d89: push esi
..@0x8045d8a: push ebx
..@0x8045d8b: sub esp, strict byte 0x38
..@0x8045d8e: db 0x8d, 0x44, 0x24, 0x14  ;; lea eax,[esp+0x14]
..@0x8045d92: db 0x8b, 0x5c, 0x24, 0x48  ;; mov ebx,[esp+0x48]
..@0x8045d96: push eax
..@0x8045d97: push strict dword 0x5401
..@0x8045d9c: push dword [esp+0x4c]
..@0x8045da0: call B.code+ioctl
..@0x8045da5: add esp, strict byte 0x10
..@0x8045da8: db 0x85, 0xc0  ;; test eax,eax
..@0x8045daa: db 0x89, 0xc6  ;; mov esi,eax
..@0x8045dac: db 0x75, 0x43  ;; jnz 0x8045df1
..@0x8045dae: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8045db2: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8045db4: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045db8: db 0x89, 0x43, 0x04  ;; mov [ebx+0x4],eax
..@0x8045dbb: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8045dbf: db 0x89, 0x43, 0x08  ;; mov [ebx+0x8],eax
..@0x8045dc2: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x8045dc6: db 0x89, 0x43, 0x0c  ;; mov [ebx+0xc],eax
..@0x8045dc9: db 0x8a, 0x44, 0x24, 0x20  ;; mov al,[esp+0x20]
..@0x8045dcd: db 0x88, 0x43, 0x10  ;; mov [ebx+0x10],al
..@0x8045dd0: push eax
..@0x8045dd1: push strict byte 0x13
..@0x8045dd3: db 0x8d, 0x44, 0x24, 0x29  ;; lea eax,[esp+0x29]
..@0x8045dd7: push eax
..@0x8045dd8: db 0x8d, 0x43, 0x11  ;; lea eax,[ebx+0x11]
..@0x8045ddb: push eax
..@0x8045ddc: call B.code+mempcpy
..@0x8045de1: add esp, strict byte 0xc
..@0x8045de4: push strict byte 0xd
..@0x8045de6: push strict byte 0x0
..@0x8045de8: push eax
..@0x8045de9: call B.code+memset
..@0x8045dee: add esp, strict byte 0x10
..@0x8045df1: add esp, strict byte 0x34
..@0x8045df4: db 0x89, 0xf0  ;; mov eax,esi
..@0x8045df6: pop ebx
..@0x8045df7: pop esi
..@0x8045df8: ret
__malloc_largebin_index: equ $-B.code
..@0x8045df9: db 0x89, 0xc2  ;; mov edx,eax
..@0x8045dfb: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8045dfe: db 0x81, 0xfa, 0xff, 0xff, 0x00, 0x00  ;; cmp edx,0xffff
..@0x8045e04: push ebx
..@0x8045e05: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8045e07: db 0xb8, 0x5f, 0x00, 0x00, 0x00  ;; mov eax,0x5f
..@0x8045e0c: db 0x77, 0x0f  ;; ja 0x8045e1d
..@0x8045e0e: db 0x0f, 0xbd, 0xc2  ;; bsr eax,edx
..@0x8045e11: db 0x8d, 0x48, 0x06  ;; lea ecx,[eax+0x6]
..@0x8045e14: db 0xd3, 0xeb  ;; shr ebx,cl
..@0x8045e16: and ebx, strict byte 0x3
..@0x8045e19: db 0x8d, 0x44, 0x83, 0x20  ;; lea eax,[ebx+eax*4+0x20]
..@0x8045e1d: pop ebx
..@0x8045e1e: ret
malloc: equ $-B.code
..@0x8045e1f: push ebp
..@0x8045e20: push edi
..@0x8045e21: push esi
..@0x8045e22: push ebx
..@0x8045e23: sub esp, strict byte 0x40
..@0x8045e26: db 0x8b, 0x5c, 0x24, 0x54  ;; mov ebx,[esp+0x54]
..@0x8045e2a: push strict dword __malloc_lock
..@0x8045e2f: push strict dword __pthread_return_0
..@0x8045e34: db 0x8d, 0x44, 0x24, 0x38  ;; lea eax,[esp+0x38]
..@0x8045e38: push eax
..@0x8045e39: call B.code+__pthread_return_void
..@0x8045e3e: db 0xc7, 0x04, 0x24, 0x90, 0xd0, 0x05, 0x08  ;; mov dword [esp],__malloc_lock
..@0x8045e45: call B.code+__pthread_return_0
..@0x8045e4a: add esp, strict byte 0x10
..@0x8045e4d: cmp ebx, strict byte -0x21
..@0x8045e50: db 0x76, 0x12  ;; jna 0x8045e64
..@0x8045e52: call B.code+__errno_location
..@0x8045e57: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8045e59: db 0xc7, 0x00, 0x0c, 0x00, 0x00, 0x00  ;; mov dword [eax],0xc
..@0x8045e5f: jmp strict near R.code+0x80465b7
..@0x8045e64: db 0x8d, 0x43, 0x0b  ;; lea eax,[ebx+0xb]
..@0x8045e67: cmp eax, strict byte 0xf
..@0x8045e6a: db 0xc7, 0x44, 0x24, 0x14, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp+0x14],0x10
..@0x8045e72: db 0x76, 0x07  ;; jna 0x8045e7b
..@0x8045e74: and eax, strict byte -0x8
..@0x8045e77: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x8045e7b: db 0x8b, 0x1d, 0xa0, 0xea, 0x87, 0x09  ;; mov ebx,[__malloc_state]
..@0x8045e81: db 0xf6, 0xc3, 0x01  ;; test bl,0x1
..@0x8045e84: db 0x75, 0x1d  ;; jnz 0x8045ea3
..@0x8045e86: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8045e88: db 0x0f, 0x85, 0xf8, 0x02, 0x00, 0x00  ;; jnz near 0x8046186
..@0x8045e8e: sub esp, strict byte 0xc
..@0x8045e91: push strict dword __malloc_state
..@0x8045e96: call B.code+__malloc_consolidate
..@0x8045e9b: add esp, strict byte 0x10
..@0x8045e9e: jmp strict near R.code+0x8046186
..@0x8045ea3: db 0x39, 0x5c, 0x24, 0x14  ;; cmp [esp+0x14],ebx
..@0x8045ea7: db 0x77, 0x1b  ;; ja 0x8045ec4
..@0x8045ea9: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045ead: db 0xd1, 0xe8  ;; shr eax,1
..@0x8045eaf: db 0x8d, 0x88, 0xa0, 0xea, 0x87, 0x09  ;; lea ecx,[eax+__malloc_state]
..@0x8045eb5: db 0x8b, 0x51, 0xfc  ;; mov edx,[ecx-0x4]
..@0x8045eb8: db 0x85, 0xd2  ;; test edx,edx
..@0x8045eba: db 0x74, 0x08  ;; jz 0x8045ec4
..@0x8045ebc: db 0x8b, 0x42, 0x08  ;; mov eax,[edx+0x8]
..@0x8045ebf: db 0x89, 0x41, 0xfc  ;; mov [ecx-0x4],eax
..@0x8045ec2: db 0xeb, 0x39  ;; jmp short 0x8045efd
..@0x8045ec4: db 0x81, 0x7c, 0x24, 0x14, 0xff, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x14],0xff
..@0x8045ecc: db 0x77, 0x37  ;; ja 0x8045f05
..@0x8045ece: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045ed2: db 0xc1, 0xe8, 0x03  ;; shr eax,byte 0x3
..@0x8045ed5: db 0x8d, 0x0c, 0xc5, 0xcc, 0xea, 0x87, 0x09  ;; lea ecx,[eax*8+0x987eacc]
..@0x8045edc: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x8045ee0: db 0x8b, 0x51, 0x0c  ;; mov edx,[ecx+0xc]
..@0x8045ee3: db 0x39, 0xca  ;; cmp edx,ecx
..@0x8045ee5: db 0x0f, 0x84, 0x16, 0x01, 0x00, 0x00  ;; jz near 0x8046001
..@0x8045eeb: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x8045eef: db 0x8b, 0x42, 0x0c  ;; mov eax,[edx+0xc]
..@0x8045ef2: db 0x83, 0x4c, 0x1a, 0x04, 0x01  ;; or dword [edx+ebx+0x4],byte +0x1
..@0x8045ef7: db 0x89, 0x41, 0x0c  ;; mov [ecx+0xc],eax
..@0x8045efa: db 0x89, 0x48, 0x08  ;; mov [eax+0x8],ecx
..@0x8045efd: db 0x8d, 0x5a, 0x08  ;; lea ebx,[edx+0x8]
..@0x8045f00: jmp strict near R.code+0x80465a6
..@0x8045f05: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045f09: call B.code+__malloc_largebin_index
..@0x8045f0e: db 0xf6, 0xc3, 0x02  ;; test bl,0x2
..@0x8045f11: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x8045f15: db 0x0f, 0x84, 0xe6, 0x00, 0x00, 0x00  ;; jz near 0x8046001
..@0x8045f1b: sub esp, strict byte 0xc
..@0x8045f1e: push strict dword __malloc_state
..@0x8045f23: call B.code+__malloc_consolidate
..@0x8045f28: add esp, strict byte 0x10
..@0x8045f2b: jmp strict near R.code+0x8046001
..@0x8045f30: db 0x8b, 0x7d, 0x04  ;; mov edi,[ebp+0x4]
..@0x8045f33: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x8045f36: and edi, strict byte -0x4
..@0x8045f39: db 0x81, 0x7c, 0x24, 0x14, 0xff, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x14],0xff
..@0x8045f41: db 0x77, 0x1f  ;; ja 0x8045f62
..@0x8045f43: db 0x81, 0xfa, 0xd4, 0xea, 0x87, 0x09  ;; cmp edx,0x987ead4
..@0x8045f49: db 0x75, 0x17  ;; jnz 0x8045f62
..@0x8045f4b: db 0x3b, 0x2d, 0xd0, 0xea, 0x87, 0x09  ;; cmp ebp,[0x987ead0]
..@0x8045f51: db 0x75, 0x0f  ;; jnz 0x8045f62
..@0x8045f53: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x8045f57: add eax, strict byte 0x10
..@0x8045f5a: db 0x39, 0xc7  ;; cmp edi,eax
..@0x8045f5c: db 0x0f, 0x87, 0xdf, 0x05, 0x00, 0x00  ;; ja near 0x8046541
..@0x8045f62: db 0xb8, 0xd4, 0xea, 0x87, 0x09  ;; mov eax,0x987ead4
..@0x8045f67: db 0x89, 0x50, 0x0c  ;; mov [eax+0xc],edx
..@0x8045f6a: db 0x89, 0x42, 0x08  ;; mov [edx+0x8],eax
..@0x8045f6d: db 0x3b, 0x7c, 0x24, 0x14  ;; cmp edi,[esp+0x14]
..@0x8045f71: db 0x0f, 0x84, 0x0b, 0x06, 0x00, 0x00  ;; jz near 0x8046582
..@0x8045f77: db 0x81, 0xff, 0xff, 0x00, 0x00, 0x00  ;; cmp edi,0xff
..@0x8045f7d: db 0x77, 0x11  ;; ja 0x8045f90
..@0x8045f7f: db 0x89, 0xfe  ;; mov esi,edi
..@0x8045f81: db 0xc1, 0xee, 0x03  ;; shr esi,byte 0x3
..@0x8045f84: db 0x8d, 0x1c, 0xf5, 0xcc, 0xea, 0x87, 0x09  ;; lea ebx,[esi*8+0x987eacc]
..@0x8045f8b: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x8045f8e: db 0xeb, 0x25  ;; jmp short 0x8045fb5
..@0x8045f90: db 0x89, 0xf8  ;; mov eax,edi
..@0x8045f92: call B.code+__malloc_largebin_index
..@0x8045f97: db 0x89, 0xc6  ;; mov esi,eax
..@0x8045f99: db 0x8d, 0x04, 0xc5, 0xcc, 0xea, 0x87, 0x09  ;; lea eax,[eax*8+0x987eacc]
..@0x8045fa0: db 0x8b, 0x50, 0x08  ;; mov edx,[eax+0x8]
..@0x8045fa3: db 0x39, 0xc2  ;; cmp edx,eax
..@0x8045fa5: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8045fa7: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x8045fab: db 0x74, 0x2c  ;; jz 0x8045fd9
..@0x8045fad: db 0x8b, 0x58, 0x0c  ;; mov ebx,[eax+0xc]
..@0x8045fb0: db 0x3b, 0x7b, 0x04  ;; cmp edi,[ebx+0x4]
..@0x8045fb3: db 0x73, 0x06  ;; jnc 0x8045fbb
..@0x8045fb5: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8045fb9: db 0xeb, 0x1e  ;; jmp short 0x8045fd9
..@0x8045fbb: db 0x89, 0xf8  ;; mov eax,edi
..@0x8045fbd: or eax, strict byte 0x1
..@0x8045fc0: db 0xeb, 0x0b  ;; jmp short 0x8045fcd
..@0x8045fc2: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8045fc6: db 0x8b, 0x49, 0x08  ;; mov ecx,[ecx+0x8]
..@0x8045fc9: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x8045fcd: db 0x8b, 0x5c, 0x24, 0x0c  ;; mov ebx,[esp+0xc]
..@0x8045fd1: db 0x3b, 0x43, 0x04  ;; cmp eax,[ebx+0x4]
..@0x8045fd4: db 0x72, 0xec  ;; jc 0x8045fc2
..@0x8045fd6: db 0x8b, 0x5b, 0x0c  ;; mov ebx,[ebx+0xc]
..@0x8045fd9: db 0x89, 0xf2  ;; mov edx,esi
..@0x8045fdb: and esi, strict byte 0x1f
..@0x8045fde: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8045fe0: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8045fe5: db 0xc1, 0xfa, 0x05  ;; sar edx,byte 0x5
..@0x8045fe8: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8045fea: db 0x09, 0x04, 0x95, 0xd4, 0xed, 0x87, 0x09  ;; or [edx*4+0x987edd4],eax
..@0x8045ff1: db 0x89, 0x5d, 0x0c  ;; mov [ebp+0xc],ebx
..@0x8045ff4: db 0x8b, 0x74, 0x24, 0x0c  ;; mov esi,[esp+0xc]
..@0x8045ff8: db 0x89, 0x75, 0x08  ;; mov [ebp+0x8],esi
..@0x8045ffb: db 0x89, 0x6e, 0x0c  ;; mov [esi+0xc],ebp
..@0x8045ffe: db 0x89, 0x6b, 0x08  ;; mov [ebx+0x8],ebp
..@0x8046001: db 0x8b, 0x2d, 0xe0, 0xea, 0x87, 0x09  ;; mov ebp,[0x987eae0]
..@0x8046007: db 0x81, 0xfd, 0xd4, 0xea, 0x87, 0x09  ;; cmp ebp,0x987ead4
..@0x804600d: db 0x0f, 0x85, 0x1d, 0xff, 0xff, 0xff  ;; jnz near 0x8045f30
..@0x8046013: db 0x81, 0x7c, 0x24, 0x14, 0xff, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x14],0xff
..@0x804601b: db 0x0f, 0x86, 0x80, 0x00, 0x00, 0x00  ;; jna near 0x80460a1
..@0x8046021: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8046025: db 0x8d, 0x14, 0xc5, 0xcc, 0xea, 0x87, 0x09  ;; lea edx,[eax*8+0x987eacc]
..@0x804602c: db 0x8b, 0x42, 0x0c  ;; mov eax,[edx+0xc]
..@0x804602f: db 0xeb, 0x6c  ;; jmp short 0x804609d
..@0x8046031: db 0x8b, 0x58, 0x04  ;; mov ebx,[eax+0x4]
..@0x8046034: db 0x8b, 0x48, 0x0c  ;; mov ecx,[eax+0xc]
..@0x8046037: and ebx, strict byte -0x4
..@0x804603a: db 0x3b, 0x5c, 0x24, 0x14  ;; cmp ebx,[esp+0x14]
..@0x804603e: db 0x72, 0x5b  ;; jc 0x804609b
..@0x8046040: db 0x8b, 0x50, 0x08  ;; mov edx,[eax+0x8]
..@0x8046043: db 0x39, 0x42, 0x0c  ;; cmp [edx+0xc],eax
..@0x8046046: db 0x75, 0x05  ;; jnz 0x804604d
..@0x8046048: db 0x39, 0x41, 0x08  ;; cmp [ecx+0x8],eax
..@0x804604b: db 0x74, 0x05  ;; jz 0x8046052
..@0x804604d: call B.code+abort
..@0x8046052: db 0x89, 0xde  ;; mov esi,ebx
..@0x8046054: db 0x2b, 0x74, 0x24, 0x14  ;; sub esi,[esp+0x14]
..@0x8046058: db 0x89, 0x4a, 0x0c  ;; mov [edx+0xc],ecx
..@0x804605b: db 0x89, 0x51, 0x08  ;; mov [ecx+0x8],edx
..@0x804605e: db 0x8d, 0x48, 0x08  ;; lea ecx,[eax+0x8]
..@0x8046061: cmp esi, strict byte 0xf
..@0x8046064: db 0x0f, 0x86, 0x26, 0x05, 0x00, 0x00  ;; jna near 0x8046590
..@0x804606a: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x804606e: db 0x8d, 0x14, 0x18  ;; lea edx,[eax+ebx]
..@0x8046071: or ebx, strict byte 0x1
..@0x8046074: db 0x89, 0x58, 0x04  ;; mov [eax+0x4],ebx
..@0x8046077: db 0x89, 0xf0  ;; mov eax,esi
..@0x8046079: or eax, strict byte 0x1
..@0x804607c: db 0x89, 0x55, 0x08  ;; mov [ebp+0x8],edx
..@0x804607f: db 0x89, 0x55, 0x0c  ;; mov [ebp+0xc],edx
..@0x8046082: db 0xc7, 0x42, 0x08, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [edx+0x8],0x987ead4
..@0x8046089: db 0xc7, 0x42, 0x0c, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [edx+0xc],0x987ead4
..@0x8046090: db 0x89, 0x42, 0x04  ;; mov [edx+0x4],eax
..@0x8046093: db 0x89, 0x34, 0x32  ;; mov [edx+esi],esi
..@0x8046096: jmp strict near R.code+0x8046595
..@0x804609b: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804609d: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804609f: db 0x75, 0x90  ;; jnz 0x8046031
..@0x80460a1: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x80460a5: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x80460aa: inc ecx
..@0x80460ab: db 0x89, 0xcf  ;; mov edi,ecx
..@0x80460ad: db 0xc1, 0xef, 0x05  ;; shr edi,byte 0x5
..@0x80460b0: db 0x8b, 0x14, 0xbd, 0xd4, 0xed, 0x87, 0x09  ;; mov edx,[edi*4+0x987edd4]
..@0x80460b7: db 0x8d, 0x1c, 0xcd, 0xcc, 0xea, 0x87, 0x09  ;; lea ebx,[ecx*8+0x987eacc]
..@0x80460be: and ecx, strict byte 0x1f
..@0x80460c1: db 0xd3, 0xe6  ;; shl esi,cl
..@0x80460c3: db 0x39, 0xd6  ;; cmp esi,edx
..@0x80460c5: db 0x77, 0x04  ;; ja 0x80460cb
..@0x80460c7: db 0x85, 0xf6  ;; test esi,esi
..@0x80460c9: db 0x75, 0x2c  ;; jnz 0x80460f7
..@0x80460cb: inc edi
..@0x80460cc: cmp edi, strict byte 0x2
..@0x80460cf: db 0x0f, 0x87, 0xb1, 0x00, 0x00, 0x00  ;; ja near 0x8046186
..@0x80460d5: db 0x8b, 0x14, 0xbd, 0xd4, 0xed, 0x87, 0x09  ;; mov edx,[edi*4+0x987edd4]
..@0x80460dc: db 0x85, 0xd2  ;; test edx,edx
..@0x80460de: db 0x74, 0xeb  ;; jz 0x80460cb
..@0x80460e0: db 0x89, 0xf8  ;; mov eax,edi
..@0x80460e2: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x80460e7: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x80460ea: db 0x8d, 0x98, 0xcc, 0xea, 0x87, 0x09  ;; lea ebx,[eax+0x987eacc]
..@0x80460f0: db 0xeb, 0x05  ;; jmp short 0x80460f7
..@0x80460f2: add ebx, strict byte 0x8
..@0x80460f5: db 0x01, 0xf6  ;; add esi,esi
..@0x80460f7: db 0x85, 0xf2  ;; test edx,esi
..@0x80460f9: db 0x74, 0xf7  ;; jz 0x80460f2
..@0x80460fb: db 0x8b, 0x4b, 0x0c  ;; mov ecx,[ebx+0xc]
..@0x80460fe: db 0x39, 0xd9  ;; cmp ecx,ebx
..@0x8046100: db 0x75, 0x14  ;; jnz 0x8046116
..@0x8046102: db 0x89, 0xf0  ;; mov eax,esi
..@0x8046104: db 0x01, 0xf6  ;; add esi,esi
..@0x8046106: db 0xf7, 0xd0  ;; not eax
..@0x8046108: db 0x21, 0xc2  ;; and edx,eax
..@0x804610a: db 0x8d, 0x59, 0x08  ;; lea ebx,[ecx+0x8]
..@0x804610d: db 0x89, 0x14, 0xbd, 0xd4, 0xed, 0x87, 0x09  ;; mov [edi*4+0x987edd4],edx
..@0x8046114: db 0xeb, 0xad  ;; jmp short 0x80460c3
..@0x8046116: db 0x8b, 0x51, 0x04  ;; mov edx,[ecx+0x4]
..@0x8046119: db 0x8b, 0x41, 0x0c  ;; mov eax,[ecx+0xc]
..@0x804611c: and edx, strict byte -0x4
..@0x804611f: db 0x89, 0xd6  ;; mov esi,edx
..@0x8046121: db 0x2b, 0x74, 0x24, 0x14  ;; sub esi,[esp+0x14]
..@0x8046125: db 0x89, 0x43, 0x0c  ;; mov [ebx+0xc],eax
..@0x8046128: db 0x89, 0x58, 0x08  ;; mov [eax+0x8],ebx
..@0x804612b: cmp esi, strict byte 0xf
..@0x804612e: db 0x77, 0x07  ;; ja 0x8046137
..@0x8046130: db 0x83, 0x4c, 0x11, 0x04, 0x01  ;; or dword [ecx+edx+0x4],byte +0x1
..@0x8046135: db 0xeb, 0x47  ;; jmp short 0x804617e
..@0x8046137: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x804613b: db 0x8d, 0x04, 0x11  ;; lea eax,[ecx+edx]
..@0x804613e: db 0x81, 0xfa, 0xff, 0x00, 0x00, 0x00  ;; cmp edx,0xff
..@0x8046144: db 0x89, 0x45, 0x08  ;; mov [ebp+0x8],eax
..@0x8046147: db 0x89, 0x45, 0x0c  ;; mov [ebp+0xc],eax
..@0x804614a: db 0xc7, 0x40, 0x08, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [eax+0x8],0x987ead4
..@0x8046151: db 0xc7, 0x40, 0x0c, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [eax+0xc],0x987ead4
..@0x8046158: db 0x8b, 0x15, 0xd0, 0xea, 0x87, 0x09  ;; mov edx,[0x987ead0]
..@0x804615e: db 0x0f, 0x46, 0xd0  ;; cmovna edx,eax
..@0x8046161: db 0x83, 0x4c, 0x24, 0x14, 0x01  ;; or dword [esp+0x14],byte +0x1
..@0x8046166: db 0x89, 0x15, 0xd0, 0xea, 0x87, 0x09  ;; mov [0x987ead0],edx
..@0x804616c: db 0x89, 0xf2  ;; mov edx,esi
..@0x804616e: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x8046172: or edx, strict byte 0x1
..@0x8046175: db 0x89, 0x34, 0x30  ;; mov [eax+esi],esi
..@0x8046178: db 0x89, 0x59, 0x04  ;; mov [ecx+0x4],ebx
..@0x804617b: db 0x89, 0x50, 0x04  ;; mov [eax+0x4],edx
..@0x804617e: db 0x8d, 0x59, 0x08  ;; lea ebx,[ecx+0x8]
..@0x8046181: jmp strict near R.code+0x80465a6
..@0x8046186: db 0x8b, 0x1d, 0xcc, 0xea, 0x87, 0x09  ;; mov ebx,[0x987eacc]
..@0x804618c: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8046190: db 0x8b, 0x4b, 0x04  ;; mov ecx,[ebx+0x4]
..@0x8046193: add esi, strict byte 0x10
..@0x8046196: db 0x89, 0x74, 0x24, 0x10  ;; mov [esp+0x10],esi
..@0x804619a: and ecx, strict byte -0x4
..@0x804619d: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x804619f: db 0x72, 0x1c  ;; jc 0x80461bd
..@0x80461a1: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x80461a5: db 0x8d, 0x14, 0x03  ;; lea edx,[ebx+eax]
..@0x80461a8: or eax, strict byte 0x1
..@0x80461ab: db 0x89, 0x15, 0xcc, 0xea, 0x87, 0x09  ;; mov [0x987eacc],edx
..@0x80461b1: db 0x89, 0x43, 0x04  ;; mov [ebx+0x4],eax
..@0x80461b4: db 0x2b, 0x4c, 0x24, 0x14  ;; sub ecx,[esp+0x14]
..@0x80461b8: jmp strict near R.code+0x8046536
..@0x80461bd: db 0xf6, 0x05, 0xa0, 0xea, 0x87, 0x09, 0x02  ;; test byte [__malloc_state],0x2
..@0x80461c4: db 0x8b, 0x15, 0xfc, 0xed, 0x87, 0x09  ;; mov edx,[0x987edfc]
..@0x80461ca: db 0x74, 0x25  ;; jz 0x80461f1
..@0x80461cc: sub esp, strict byte 0xc
..@0x80461cf: push strict dword __malloc_state
..@0x80461d4: call B.code+__malloc_consolidate
..@0x80461d9: pop ebx
..@0x80461da: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x80461de: sub eax, strict byte 0x7
..@0x80461e1: push eax
..@0x80461e2: call B.code+malloc
..@0x80461e7: add esp, strict byte 0x10
..@0x80461ea: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80461ec: jmp strict near R.code+0x80465a6
..@0x80461f1: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x80461f5: db 0x8d, 0x4a, 0xff  ;; lea ecx,[edx-0x1]
..@0x80461f8: db 0x3b, 0x1d, 0xec, 0xed, 0x87, 0x09  ;; cmp ebx,[0x987edec]
..@0x80461fe: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x8046202: db 0x0f, 0x82, 0xcb, 0x00, 0x00, 0x00  ;; jc near 0x80462d3
..@0x8046208: db 0xa1, 0xf0, 0xed, 0x87, 0x09  ;; mov eax,[0x987edf0]
..@0x804620d: db 0x3b, 0x05, 0xf4, 0xed, 0x87, 0x09  ;; cmp eax,[0x987edf4]
..@0x8046213: db 0x0f, 0x8d, 0xba, 0x00, 0x00, 0x00  ;; jnl near 0x80462d3
..@0x8046219: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804621b: db 0x8d, 0x5c, 0x1a, 0x0a  ;; lea ebx,[edx+ebx+0xa]
..@0x804621f: db 0xf7, 0xd0  ;; not eax
..@0x8046221: db 0x21, 0xc3  ;; and ebx,eax
..@0x8046223: db 0x3b, 0x5c, 0x24, 0x14  ;; cmp ebx,[esp+0x14]
..@0x8046227: db 0x0f, 0x86, 0xa6, 0x00, 0x00, 0x00  ;; jna near 0x80462d3
..@0x804622d: push ecx
..@0x804622e: push ecx
..@0x804622f: push strict byte 0x0
..@0x8046231: push strict byte 0x0
..@0x8046233: push strict byte 0x22
..@0x8046235: push strict byte 0x3
..@0x8046237: push ebx
..@0x8046238: push strict byte 0x0
..@0x804623a: call B.code+mmap
..@0x804623f: add esp, strict byte 0x20
..@0x8046242: cmp eax, strict byte -0x1
..@0x8046245: db 0x89, 0xc2  ;; mov edx,eax
..@0x8046247: db 0x0f, 0x84, 0x86, 0x00, 0x00, 0x00  ;; jz near 0x80462d3
..@0x804624d: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804624f: and ecx, strict byte 0x7
..@0x8046252: db 0x74, 0x14  ;; jz 0x8046268
..@0x8046254: db 0xb8, 0x08, 0x00, 0x00, 0x00  ;; mov eax,0x8
..@0x8046259: db 0x89, 0xde  ;; mov esi,ebx
..@0x804625b: db 0x29, 0xc8  ;; sub eax,ecx
..@0x804625d: db 0x8d, 0x0c, 0x02  ;; lea ecx,[edx+eax]
..@0x8046260: db 0x29, 0xc6  ;; sub esi,eax
..@0x8046262: db 0x89, 0x01  ;; mov [ecx],eax
..@0x8046264: db 0x89, 0xf0  ;; mov eax,esi
..@0x8046266: db 0xeb, 0x0a  ;; jmp short 0x8046272
..@0x8046268: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804626a: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x8046270: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8046272: or eax, strict byte 0x2
..@0x8046275: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x8046278: db 0xa1, 0xf0, 0xed, 0x87, 0x09  ;; mov eax,[0x987edf0]
..@0x804627d: db 0x8b, 0x15, 0x10, 0xee, 0x87, 0x09  ;; mov edx,[0x987ee10]
..@0x8046283: inc eax
..@0x8046284: db 0x3b, 0x05, 0xf8, 0xed, 0x87, 0x09  ;; cmp eax,[0x987edf8]
..@0x804628a: db 0xa3, 0xf0, 0xed, 0x87, 0x09  ;; mov [0x987edf0],eax
..@0x804628f: db 0x0f, 0x4e, 0x05, 0xf8, 0xed, 0x87, 0x09  ;; cmovng eax,[0x987edf8]
..@0x8046296: db 0xa3, 0xf8, 0xed, 0x87, 0x09  ;; mov [0x987edf8],eax
..@0x804629b: db 0xa1, 0x04, 0xee, 0x87, 0x09  ;; mov eax,[0x987ee04]
..@0x80462a0: db 0x01, 0xd8  ;; add eax,ebx
..@0x80462a2: db 0x3b, 0x05, 0x10, 0xee, 0x87, 0x09  ;; cmp eax,[0x987ee10]
..@0x80462a8: db 0xa3, 0x04, 0xee, 0x87, 0x09  ;; mov [0x987ee04],eax
..@0x80462ad: db 0x0f, 0x47, 0xd0  ;; cmova edx,eax
..@0x80462b0: db 0x03, 0x05, 0x08, 0xee, 0x87, 0x09  ;; add eax,[0x987ee08]
..@0x80462b6: db 0x89, 0x15, 0x10, 0xee, 0x87, 0x09  ;; mov [0x987ee10],edx
..@0x80462bc: db 0x3b, 0x05, 0x14, 0xee, 0x87, 0x09  ;; cmp eax,[0x987ee14]
..@0x80462c2: db 0x0f, 0x46, 0x05, 0x14, 0xee, 0x87, 0x09  ;; cmovna eax,[0x987ee14]
..@0x80462c9: db 0xa3, 0x14, 0xee, 0x87, 0x09  ;; mov [0x987ee14],eax
..@0x80462ce: jmp strict near R.code+0x804617e
..@0x80462d3: db 0xa1, 0xcc, 0xea, 0x87, 0x09  ;; mov eax,[0x987eacc]
..@0x80462d8: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x80462dc: db 0x8b, 0x68, 0x04  ;; mov ebp,[eax+0x4]
..@0x80462df: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x80462e3: and ebp, strict byte -0x4
..@0x80462e6: add eax, strict byte 0x10
..@0x80462e9: db 0x03, 0x05, 0xe8, 0xed, 0x87, 0x09  ;; add eax,[0x987ede8]
..@0x80462ef: db 0x89, 0xc2  ;; mov edx,eax
..@0x80462f1: db 0x29, 0xea  ;; sub edx,ebp
..@0x80462f3: db 0xf6, 0x05, 0x00, 0xee, 0x87, 0x09, 0x01  ;; test byte [0x987ee00],0x1
..@0x80462fa: db 0x0f, 0x45, 0xc2  ;; cmovnz eax,edx
..@0x80462fd: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8046301: db 0x03, 0x44, 0x24, 0x18  ;; add eax,[esp+0x18]
..@0x8046305: db 0xf7, 0xd2  ;; not edx
..@0x8046307: db 0x89, 0xd6  ;; mov esi,edx
..@0x8046309: db 0x21, 0xc6  ;; and esi,eax
..@0x804630b: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804630f: db 0x7e, 0x16  ;; jng 0x8046327
..@0x8046311: sub esp, strict byte 0xc
..@0x8046314: push esi
..@0x8046315: call B.code+sbrk
..@0x804631a: add esp, strict byte 0x10
..@0x804631d: or edx, strict byte -0x1
..@0x8046320: cmp eax, strict byte -0x1
..@0x8046323: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8046325: db 0x75, 0x57  ;; jnz 0x804637e
..@0x8046327: db 0xf6, 0x05, 0x00, 0xee, 0x87, 0x09, 0x01  ;; test byte [0x987ee00],0x1
..@0x804632e: db 0x74, 0x0c  ;; jz 0x804633c
..@0x8046330: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8046334: db 0x01, 0xe8  ;; add eax,ebp
..@0x8046336: db 0x01, 0xc6  ;; add esi,eax
..@0x8046338: db 0x23, 0x74, 0x24, 0x20  ;; and esi,[esp+0x20]
..@0x804633c: db 0x81, 0xfe, 0xff, 0xff, 0x0f, 0x00  ;; cmp esi,0xfffff
..@0x8046342: db 0xb8, 0x00, 0x00, 0x10, 0x00  ;; mov eax,0x100000
..@0x8046347: db 0x0f, 0x46, 0xf0  ;; cmovna esi,eax
..@0x804634a: db 0x3b, 0x74, 0x24, 0x14  ;; cmp esi,[esp+0x14]
..@0x804634e: db 0x0f, 0x86, 0x45, 0x02, 0x00, 0x00  ;; jna near 0x8046599
..@0x8046354: push edx
..@0x8046355: push edx
..@0x8046356: push strict byte 0x0
..@0x8046358: push strict byte 0x0
..@0x804635a: push strict byte 0x22
..@0x804635c: push strict byte 0x3
..@0x804635e: push esi
..@0x804635f: push strict byte 0x0
..@0x8046361: call B.code+mmap
..@0x8046366: add esp, strict byte 0x20
..@0x8046369: cmp eax, strict byte -0x1
..@0x804636c: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804636e: db 0x0f, 0x84, 0x25, 0x02, 0x00, 0x00  ;; jz near 0x8046599
..@0x8046374: db 0x83, 0x25, 0x00, 0xee, 0x87, 0x09, 0xfe  ;; and dword [0x987ee00],byte -0x2
..@0x804637b: db 0x8d, 0x14, 0x30  ;; lea edx,[eax+esi]
..@0x804637e: cmp ebx, strict byte -0x1
..@0x8046381: db 0x0f, 0x84, 0x12, 0x02, 0x00, 0x00  ;; jz near 0x8046599
..@0x8046387: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x804638b: db 0x01, 0x35, 0x08, 0xee, 0x87, 0x09  ;; add [0x987ee08],esi
..@0x8046391: db 0x01, 0xe9  ;; add ecx,ebp
..@0x8046393: db 0x39, 0xcb  ;; cmp ebx,ecx
..@0x8046395: db 0x75, 0x17  ;; jnz 0x80463ae
..@0x8046397: cmp edx, strict byte -0x1
..@0x804639a: db 0x75, 0x12  ;; jnz 0x80463ae
..@0x804639c: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x80463a0: db 0x8d, 0x04, 0x2e  ;; lea eax,[esi+ebp]
..@0x80463a3: or eax, strict byte 0x1
..@0x80463a6: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x80463a9: jmp strict near R.code+0x80464db
..@0x80463ae: db 0xa1, 0x00, 0xee, 0x87, 0x09  ;; mov eax,[0x987ee00]
..@0x80463b3: db 0xa8, 0x01  ;; test al,0x1
..@0x80463b5: db 0x74, 0x10  ;; jz 0x80463c7
..@0x80463b7: db 0x85, 0xed  ;; test ebp,ebp
..@0x80463b9: db 0x74, 0x0c  ;; jz 0x80463c7
..@0x80463bb: db 0x39, 0xcb  ;; cmp ebx,ecx
..@0x80463bd: db 0x73, 0x08  ;; jnc 0x80463c7
..@0x80463bf: and eax, strict byte -0x2
..@0x80463c2: db 0xa3, 0x00, 0xee, 0x87, 0x09  ;; mov [0x987ee00],eax
..@0x80463c7: db 0xf6, 0x05, 0x00, 0xee, 0x87, 0x09, 0x01  ;; test byte [0x987ee00],0x1
..@0x80463ce: db 0x74, 0x75  ;; jz 0x8046445
..@0x80463d0: db 0x85, 0xed  ;; test ebp,ebp
..@0x80463d2: db 0x74, 0x0a  ;; jz 0x80463de
..@0x80463d4: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80463d6: db 0x29, 0xc8  ;; sub eax,ecx
..@0x80463d8: db 0x01, 0x05, 0x08, 0xee, 0x87, 0x09  ;; add [0x987ee08],eax
..@0x80463de: db 0x89, 0xda  ;; mov edx,ebx
..@0x80463e0: and edx, strict byte 0x7
..@0x80463e3: db 0x75, 0x06  ;; jnz 0x80463eb
..@0x80463e5: db 0x89, 0xdf  ;; mov edi,ebx
..@0x80463e7: db 0x31, 0xc0  ;; xor eax,eax
..@0x80463e9: db 0xeb, 0x0a  ;; jmp short 0x80463f5
..@0x80463eb: db 0xb8, 0x08, 0x00, 0x00, 0x00  ;; mov eax,0x8
..@0x80463f0: db 0x29, 0xd0  ;; sub eax,edx
..@0x80463f2: db 0x8d, 0x3c, 0x03  ;; lea edi,[ebx+eax]
..@0x80463f5: db 0x8d, 0x34, 0x33  ;; lea esi,[ebx+esi]
..@0x80463f8: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x80463fc: db 0x89, 0xf2  ;; mov edx,esi
..@0x80463fe: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x8046402: db 0x8d, 0x0c, 0x28  ;; lea ecx,[eax+ebp]
..@0x8046405: db 0x01, 0xca  ;; add edx,ecx
..@0x8046407: db 0x8d, 0x04, 0x32  ;; lea eax,[edx+esi]
..@0x804640a: db 0x23, 0x44, 0x24, 0x20  ;; and eax,[esp+0x20]
..@0x804640e: sub esp, strict byte 0xc
..@0x8046411: db 0x29, 0xd0  ;; sub eax,edx
..@0x8046413: db 0x8d, 0x34, 0x01  ;; lea esi,[ecx+eax]
..@0x8046416: push esi
..@0x8046417: call B.code+sbrk
..@0x804641c: add esp, strict byte 0x10
..@0x804641f: cmp eax, strict byte -0x1
..@0x8046422: db 0x89, 0xc2  ;; mov edx,eax
..@0x8046424: db 0x75, 0x0e  ;; jnz 0x8046434
..@0x8046426: sub esp, strict byte 0xc
..@0x8046429: push strict byte 0x0
..@0x804642b: call B.code+sbrk
..@0x8046430: db 0x89, 0xc2  ;; mov edx,eax
..@0x8046432: db 0xeb, 0x34  ;; jmp short 0x8046468
..@0x8046434: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8046436: db 0x73, 0x35  ;; jnc 0x804646d
..@0x8046438: db 0x83, 0x25, 0x00, 0xee, 0x87, 0x09, 0xfe  ;; and dword [0x987ee00],byte -0x2
..@0x804643f: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8046443: db 0xeb, 0x07  ;; jmp short 0x804644c
..@0x8046445: cmp edx, strict byte -0x1
..@0x8046448: db 0x74, 0x06  ;; jz 0x8046450
..@0x804644a: db 0x89, 0xdf  ;; mov edi,ebx
..@0x804644c: db 0x31, 0xf6  ;; xor esi,esi
..@0x804644e: db 0xeb, 0x1d  ;; jmp short 0x804646d
..@0x8046450: sub esp, strict byte 0xc
..@0x8046453: db 0x89, 0xdf  ;; mov edi,ebx
..@0x8046455: push strict byte 0x0
..@0x8046457: call B.code+sbrk
..@0x804645c: db 0x89, 0xc2  ;; mov edx,eax
..@0x804645e: db 0x29, 0xd8  ;; sub eax,ebx
..@0x8046460: db 0x29, 0xf0  ;; sub eax,esi
..@0x8046462: db 0x01, 0x05, 0x08, 0xee, 0x87, 0x09  ;; add [0x987ee08],eax
..@0x8046468: db 0x31, 0xf6  ;; xor esi,esi
..@0x804646a: add esp, strict byte 0x10
..@0x804646d: cmp edx, strict byte -0x1
..@0x8046470: db 0x74, 0x69  ;; jz 0x80464db
..@0x8046472: db 0x29, 0xfa  ;; sub edx,edi
..@0x8046474: db 0x8d, 0x04, 0x32  ;; lea eax,[edx+esi]
..@0x8046477: or eax, strict byte 0x1
..@0x804647a: db 0x89, 0x3d, 0xcc, 0xea, 0x87, 0x09  ;; mov [0x987eacc],edi
..@0x8046480: db 0x89, 0x47, 0x04  ;; mov [edi+0x4],eax
..@0x8046483: db 0x01, 0x35, 0x08, 0xee, 0x87, 0x09  ;; add [0x987ee08],esi
..@0x8046489: db 0x85, 0xed  ;; test ebp,ebp
..@0x804648b: db 0x74, 0x4e  ;; jz 0x80464db
..@0x804648d: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x8046491: db 0x8d, 0x45, 0xf4  ;; lea eax,[ebp-0xc]
..@0x8046494: and eax, strict byte -0x8
..@0x8046497: db 0x89, 0xc2  ;; mov edx,eax
..@0x8046499: or edx, strict byte 0x1
..@0x804649c: cmp eax, strict byte 0xf
..@0x804649f: db 0x89, 0x51, 0x04  ;; mov [ecx+0x4],edx
..@0x80464a2: db 0xc7, 0x44, 0x01, 0x04, 0x05, 0x00, 0x00, 0x00  ;; mov dword [ecx+eax+0x4],0x5
..@0x80464aa: db 0xc7, 0x44, 0x01, 0x08, 0x05, 0x00, 0x00, 0x00  ;; mov dword [ecx+eax+0x8],0x5
..@0x80464b2: db 0x76, 0x27  ;; jna 0x80464db
..@0x80464b4: db 0x8b, 0x1d, 0xe4, 0xed, 0x87, 0x09  ;; mov ebx,[0x987ede4]
..@0x80464ba: db 0x89, 0xc8  ;; mov eax,ecx
..@0x80464bc: sub esp, strict byte 0xc
..@0x80464bf: add eax, strict byte 0x8
..@0x80464c2: push eax
..@0x80464c3: db 0xc7, 0x05, 0xe4, 0xed, 0x87, 0x09, 0xff, 0xff  ;; mov dword [0x987ede4],0xffffffff
..@0x80464cb: db 0xff, 0xff
..@0x80464cd: call B.code+free
..@0x80464d2: add esp, strict byte 0x10
..@0x80464d5: db 0x89, 0x1d, 0xe4, 0xed, 0x87, 0x09  ;; mov [0x987ede4],ebx
..@0x80464db: db 0xa1, 0x08, 0xee, 0x87, 0x09  ;; mov eax,[0x987ee08]
..@0x80464e0: db 0x8b, 0x15, 0x0c, 0xee, 0x87, 0x09  ;; mov edx,[0x987ee0c]
..@0x80464e6: db 0x3b, 0x05, 0x0c, 0xee, 0x87, 0x09  ;; cmp eax,[0x987ee0c]
..@0x80464ec: db 0x8b, 0x1d, 0xcc, 0xea, 0x87, 0x09  ;; mov ebx,[0x987eacc]
..@0x80464f2: db 0x0f, 0x47, 0xd0  ;; cmova edx,eax
..@0x80464f5: db 0x03, 0x05, 0x04, 0xee, 0x87, 0x09  ;; add eax,[0x987ee04]
..@0x80464fb: db 0x89, 0x15, 0x0c, 0xee, 0x87, 0x09  ;; mov [0x987ee0c],edx
..@0x8046501: db 0x3b, 0x05, 0x14, 0xee, 0x87, 0x09  ;; cmp eax,[0x987ee14]
..@0x8046507: db 0x0f, 0x46, 0x05, 0x14, 0xee, 0x87, 0x09  ;; cmovna eax,[0x987ee14]
..@0x804650e: db 0xa3, 0x14, 0xee, 0x87, 0x09  ;; mov [0x987ee14],eax
..@0x8046513: db 0x8b, 0x4b, 0x04  ;; mov ecx,[ebx+0x4]
..@0x8046516: and ecx, strict byte -0x4
..@0x8046519: db 0x3b, 0x4c, 0x24, 0x10  ;; cmp ecx,[esp+0x10]
..@0x804651d: db 0x72, 0x7a  ;; jc 0x8046599
..@0x804651f: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8046523: db 0x89, 0xf0  ;; mov eax,esi
..@0x8046525: db 0x29, 0xf1  ;; sub ecx,esi
..@0x8046527: db 0x8d, 0x14, 0x33  ;; lea edx,[ebx+esi]
..@0x804652a: or eax, strict byte 0x1
..@0x804652d: db 0x89, 0x15, 0xcc, 0xea, 0x87, 0x09  ;; mov [0x987eacc],edx
..@0x8046533: db 0x89, 0x43, 0x04  ;; mov [ebx+0x4],eax
..@0x8046536: or ecx, strict byte 0x1
..@0x8046539: add ebx, strict byte 0x8
..@0x804653c: db 0x89, 0x4a, 0x04  ;; mov [edx+0x4],ecx
..@0x804653f: db 0xeb, 0x65  ;; jmp short 0x80465a6
..@0x8046541: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8046545: db 0x89, 0xf8  ;; mov eax,edi
..@0x8046547: db 0x2b, 0x44, 0x24, 0x14  ;; sub eax,[esp+0x14]
..@0x804654b: db 0x8d, 0x54, 0x0d, 0x00  ;; lea edx,[ebp+ecx+0x0]
..@0x804654f: or ecx, strict byte 0x1
..@0x8046552: db 0x89, 0x15, 0xd0, 0xea, 0x87, 0x09  ;; mov [0x987ead0],edx
..@0x8046558: db 0x89, 0x4d, 0x04  ;; mov [ebp+0x4],ecx
..@0x804655b: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804655d: or ecx, strict byte 0x1
..@0x8046560: db 0x89, 0x15, 0xdc, 0xea, 0x87, 0x09  ;; mov [0x987eadc],edx
..@0x8046566: db 0x89, 0x15, 0xe0, 0xea, 0x87, 0x09  ;; mov [0x987eae0],edx
..@0x804656c: db 0xc7, 0x42, 0x08, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [edx+0x8],0x987ead4
..@0x8046573: db 0xc7, 0x42, 0x0c, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [edx+0xc],0x987ead4
..@0x804657a: db 0x89, 0x4a, 0x04  ;; mov [edx+0x4],ecx
..@0x804657d: db 0x89, 0x04, 0x02  ;; mov [edx+eax],eax
..@0x8046580: db 0xeb, 0x09  ;; jmp short 0x804658b
..@0x8046582: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x8046586: db 0x83, 0x4c, 0x1d, 0x04, 0x01  ;; or dword [ebp+ebx+0x4],byte +0x1
..@0x804658b: db 0x8d, 0x5d, 0x08  ;; lea ebx,[ebp+0x8]
..@0x804658e: db 0xeb, 0x16  ;; jmp short 0x80465a6
..@0x8046590: db 0x83, 0x4c, 0x18, 0x04, 0x01  ;; or dword [eax+ebx+0x4],byte +0x1
..@0x8046595: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8046597: db 0xeb, 0x0d  ;; jmp short 0x80465a6
..@0x8046599: call B.code+__errno_location
..@0x804659e: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80465a0: db 0xc7, 0x00, 0x0c, 0x00, 0x00, 0x00  ;; mov dword [eax],0xc
..@0x80465a6: push eax
..@0x80465a7: push eax
..@0x80465a8: push strict byte 0x1
..@0x80465aa: db 0x8d, 0x44, 0x24, 0x38  ;; lea eax,[esp+0x38]
..@0x80465ae: push eax
..@0x80465af: call B.code+__pthread_return_void
..@0x80465b4: add esp, strict byte 0x10
..@0x80465b7: add esp, strict byte 0x3c
..@0x80465ba: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80465bc: pop ebx
..@0x80465bd: pop esi
..@0x80465be: pop edi
..@0x80465bf: pop ebp
..@0x80465c0: ret
realloc: equ $-B.code
..@0x80465c1: push ebp
..@0x80465c2: push edi
..@0x80465c3: push esi
..@0x80465c4: push ebx
..@0x80465c5: sub esp, strict byte 0x1c
..@0x80465c8: db 0x83, 0x7c, 0x24, 0x30, 0x00  ;; cmp dword [esp+0x30],byte +0x0
..@0x80465cd: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x80465d1: db 0x75, 0x10  ;; jnz 0x80465e3
..@0x80465d3: sub esp, strict byte 0xc
..@0x80465d6: push ebx
..@0x80465d7: call B.code+malloc
..@0x80465dc: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80465de: jmp strict near R.code+0x80468ea
..@0x80465e3: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80465e5: db 0x75, 0x11  ;; jnz 0x80465f8
..@0x80465e7: sub esp, strict byte 0xc
..@0x80465ea: push dword [esp+0x3c]
..@0x80465ee: call B.code+free
..@0x80465f3: jmp strict near R.code+0x80468ea
..@0x80465f8: push edi
..@0x80465f9: push strict dword __malloc_lock
..@0x80465fe: push strict dword __pthread_return_0
..@0x8046603: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8046607: push eax
..@0x8046608: call B.code+__pthread_return_void
..@0x804660d: db 0xc7, 0x04, 0x24, 0x90, 0xd0, 0x05, 0x08  ;; mov dword [esp],__malloc_lock
..@0x8046614: call B.code+__pthread_return_0
..@0x8046619: add esp, strict byte 0x10
..@0x804661c: cmp ebx, strict byte -0x21
..@0x804661f: db 0x76, 0x12  ;; jna 0x8046633
..@0x8046621: call B.code+__errno_location
..@0x8046626: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8046628: db 0xc7, 0x00, 0x0c, 0x00, 0x00, 0x00  ;; mov dword [eax],0xc
..@0x804662e: jmp strict near R.code+0x80468ed
..@0x8046633: db 0x8d, 0x43, 0x0b  ;; lea eax,[ebx+0xb]
..@0x8046636: cmp eax, strict byte 0xf
..@0x8046639: db 0xc7, 0x44, 0x24, 0x04, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x10
..@0x8046641: db 0x76, 0x07  ;; jna 0x804664a
..@0x8046643: and eax, strict byte -0x8
..@0x8046646: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804664a: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x804664e: sub edi, strict byte 0x8
..@0x8046651: db 0x8b, 0x57, 0x04  ;; mov edx,[edi+0x4]
..@0x8046654: db 0x89, 0xd0  ;; mov eax,edx
..@0x8046656: and eax, strict byte -0x4
..@0x8046659: db 0xf6, 0xc2, 0x02  ;; test dl,0x2
..@0x804665c: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8046660: db 0x0f, 0x85, 0x94, 0x01, 0x00, 0x00  ;; jnz near 0x80467fa
..@0x8046666: db 0x8b, 0x4c, 0x24, 0x04  ;; mov ecx,[esp+0x4]
..@0x804666a: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804666c: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804666e: db 0x0f, 0x83, 0x31, 0x01, 0x00, 0x00  ;; jnc near 0x80467a5
..@0x8046674: db 0x8d, 0x34, 0x07  ;; lea esi,[edi+eax]
..@0x8046677: db 0x3b, 0x35, 0xcc, 0xea, 0x87, 0x09  ;; cmp esi,[0x987eacc]
..@0x804667d: db 0x75, 0x38  ;; jnz 0x80466b7
..@0x804667f: db 0x8b, 0x46, 0x04  ;; mov eax,[esi+0x4]
..@0x8046682: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8046684: and eax, strict byte -0x4
..@0x8046687: db 0x01, 0xc1  ;; add ecx,eax
..@0x8046689: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x804668d: add eax, strict byte 0x10
..@0x8046690: db 0x39, 0xc1  ;; cmp ecx,eax
..@0x8046692: db 0x72, 0x61  ;; jc 0x80466f5
..@0x8046694: and edx, strict byte 0x1
..@0x8046697: db 0x0b, 0x54, 0x24, 0x04  ;; or edx,[esp+0x4]
..@0x804669b: db 0x89, 0x57, 0x04  ;; mov [edi+0x4],edx
..@0x804669e: db 0x8b, 0x74, 0x24, 0x04  ;; mov esi,[esp+0x4]
..@0x80466a2: db 0x29, 0xf1  ;; sub ecx,esi
..@0x80466a4: db 0x8d, 0x04, 0x37  ;; lea eax,[edi+esi]
..@0x80466a7: or ecx, strict byte 0x1
..@0x80466aa: db 0xa3, 0xcc, 0xea, 0x87, 0x09  ;; mov [0x987eacc],eax
..@0x80466af: db 0x89, 0x48, 0x04  ;; mov [eax+0x4],ecx
..@0x80466b2: jmp strict near R.code+0x80468d8
..@0x80466b7: db 0x8b, 0x56, 0x04  ;; mov edx,[esi+0x4]
..@0x80466ba: db 0x89, 0xd0  ;; mov eax,edx
..@0x80466bc: and eax, strict byte -0x2
..@0x80466bf: db 0xf6, 0x44, 0x06, 0x04, 0x01  ;; test byte [esi+eax+0x4],0x1
..@0x80466c4: db 0x75, 0x2f  ;; jnz 0x80466f5
..@0x80466c6: db 0x8b, 0x5c, 0x24, 0x08  ;; mov ebx,[esp+0x8]
..@0x80466ca: and edx, strict byte -0x4
..@0x80466cd: db 0x01, 0xd3  ;; add ebx,edx
..@0x80466cf: db 0x3b, 0x5c, 0x24, 0x04  ;; cmp ebx,[esp+0x4]
..@0x80466d3: db 0x72, 0x20  ;; jc 0x80466f5
..@0x80466d5: db 0x8b, 0x56, 0x08  ;; mov edx,[esi+0x8]
..@0x80466d8: db 0x8b, 0x46, 0x0c  ;; mov eax,[esi+0xc]
..@0x80466db: db 0x39, 0x72, 0x0c  ;; cmp [edx+0xc],esi
..@0x80466de: db 0x75, 0x05  ;; jnz 0x80466e5
..@0x80466e0: db 0x39, 0x70, 0x08  ;; cmp [eax+0x8],esi
..@0x80466e3: db 0x74, 0x05  ;; jz 0x80466ea
..@0x80466e5: call B.code+abort
..@0x80466ea: db 0x89, 0x42, 0x0c  ;; mov [edx+0xc],eax
..@0x80466ed: db 0x89, 0x50, 0x08  ;; mov [eax+0x8],edx
..@0x80466f0: jmp strict near R.code+0x80467a5
..@0x80466f5: sub esp, strict byte 0xc
..@0x80466f8: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x80466fc: sub eax, strict byte 0x7
..@0x80466ff: push eax
..@0x8046700: call B.code+malloc
..@0x8046705: add esp, strict byte 0x10
..@0x8046708: db 0x85, 0xc0  ;; test eax,eax
..@0x804670a: db 0x89, 0xc2  ;; mov edx,eax
..@0x804670c: db 0x0f, 0x84, 0xc2, 0x01, 0x00, 0x00  ;; jz near 0x80468d4
..@0x8046712: db 0x8d, 0x58, 0xf8  ;; lea ebx,[eax-0x8]
..@0x8046715: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8046717: db 0x8b, 0x43, 0x04  ;; mov eax,[ebx+0x4]
..@0x804671a: db 0x75, 0x0c  ;; jnz 0x8046728
..@0x804671c: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x8046720: and eax, strict byte -0x4
..@0x8046723: db 0x8d, 0x1c, 0x10  ;; lea ebx,[eax+edx]
..@0x8046726: db 0xeb, 0x7d  ;; jmp short 0x80467a5
..@0x8046728: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x804672c: sub eax, strict byte 0x4
..@0x804672f: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8046731: db 0xc1, 0xe9, 0x02  ;; shr ecx,byte 0x2
..@0x8046734: cmp ecx, strict byte 0x9
..@0x8046737: db 0x76, 0x11  ;; jna 0x804674a
..@0x8046739: push esi
..@0x804673a: push eax
..@0x804673b: push dword [esp+0x38]
..@0x804673f: push edx
..@0x8046740: call B.code+memcpy
..@0x8046745: add esp, strict byte 0x10
..@0x8046748: db 0xeb, 0x47  ;; jmp short 0x8046791
..@0x804674a: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804674e: cmp ecx, strict byte 0x4
..@0x8046751: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8046753: db 0x89, 0x02  ;; mov [edx],eax
..@0x8046755: db 0x8b, 0x46, 0x04  ;; mov eax,[esi+0x4]
..@0x8046758: db 0x89, 0x42, 0x04  ;; mov [edx+0x4],eax
..@0x804675b: db 0x8b, 0x46, 0x08  ;; mov eax,[esi+0x8]
..@0x804675e: db 0x89, 0x42, 0x08  ;; mov [edx+0x8],eax
..@0x8046761: db 0x76, 0x2e  ;; jna 0x8046791
..@0x8046763: db 0x8b, 0x46, 0x0c  ;; mov eax,[esi+0xc]
..@0x8046766: cmp ecx, strict byte 0x6
..@0x8046769: db 0x89, 0x42, 0x0c  ;; mov [edx+0xc],eax
..@0x804676c: db 0x8b, 0x46, 0x10  ;; mov eax,[esi+0x10]
..@0x804676f: db 0x89, 0x42, 0x10  ;; mov [edx+0x10],eax
..@0x8046772: db 0x76, 0x1d  ;; jna 0x8046791
..@0x8046774: db 0x8b, 0x46, 0x14  ;; mov eax,[esi+0x14]
..@0x8046777: cmp ecx, strict byte 0x8
..@0x804677a: db 0x89, 0x42, 0x14  ;; mov [edx+0x14],eax
..@0x804677d: db 0x8b, 0x46, 0x18  ;; mov eax,[esi+0x18]
..@0x8046780: db 0x89, 0x42, 0x18  ;; mov [edx+0x18],eax
..@0x8046783: db 0x76, 0x0c  ;; jna 0x8046791
..@0x8046785: db 0x8b, 0x46, 0x1c  ;; mov eax,[esi+0x1c]
..@0x8046788: db 0x89, 0x42, 0x1c  ;; mov [edx+0x1c],eax
..@0x804678b: db 0x8b, 0x46, 0x20  ;; mov eax,[esi+0x20]
..@0x804678e: db 0x89, 0x42, 0x20  ;; mov [edx+0x20],eax
..@0x8046791: sub esp, strict byte 0xc
..@0x8046794: add ebx, strict byte 0x8
..@0x8046797: push dword [esp+0x3c]
..@0x804679b: call B.code+free
..@0x80467a0: jmp strict near R.code+0x80468cf
..@0x80467a5: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x80467a7: db 0x2b, 0x4c, 0x24, 0x04  ;; sub ecx,[esp+0x4]
..@0x80467ab: cmp ecx, strict byte 0xf
..@0x80467ae: db 0x77, 0x12  ;; ja 0x80467c2
..@0x80467b0: db 0x8b, 0x47, 0x04  ;; mov eax,[edi+0x4]
..@0x80467b3: and eax, strict byte 0x1
..@0x80467b6: db 0x09, 0xd8  ;; or eax,ebx
..@0x80467b8: db 0x89, 0x47, 0x04  ;; mov [edi+0x4],eax
..@0x80467bb: db 0x83, 0x4c, 0x1f, 0x04, 0x01  ;; or dword [edi+ebx+0x4],byte +0x1
..@0x80467c0: db 0xeb, 0x30  ;; jmp short 0x80467f2
..@0x80467c2: db 0x8b, 0x54, 0x24, 0x04  ;; mov edx,[esp+0x4]
..@0x80467c6: db 0x8d, 0x04, 0x17  ;; lea eax,[edi+edx]
..@0x80467c9: db 0x8b, 0x57, 0x04  ;; mov edx,[edi+0x4]
..@0x80467cc: and edx, strict byte 0x1
..@0x80467cf: db 0x0b, 0x54, 0x24, 0x04  ;; or edx,[esp+0x4]
..@0x80467d3: sub esp, strict byte 0xc
..@0x80467d6: db 0x89, 0x57, 0x04  ;; mov [edi+0x4],edx
..@0x80467d9: db 0x89, 0xca  ;; mov edx,ecx
..@0x80467db: or edx, strict byte 0x1
..@0x80467de: db 0x89, 0x50, 0x04  ;; mov [eax+0x4],edx
..@0x80467e1: db 0x83, 0x4c, 0x08, 0x04, 0x01  ;; or dword [eax+ecx+0x4],byte +0x1
..@0x80467e6: add eax, strict byte 0x8
..@0x80467e9: push eax
..@0x80467ea: call B.code+free
..@0x80467ef: add esp, strict byte 0x10
..@0x80467f2: db 0x8d, 0x5f, 0x08  ;; lea ebx,[edi+0x8]
..@0x80467f5: jmp strict near R.code+0x80468dc
..@0x80467fa: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80467fe: db 0xa1, 0xfc, 0xed, 0x87, 0x09  ;; mov eax,[0x987edfc]
..@0x8046803: db 0x8b, 0x74, 0x24, 0x04  ;; mov esi,[esp+0x4]
..@0x8046807: db 0x8b, 0x69, 0xf8  ;; mov ebp,[ecx-0x8]
..@0x804680a: dec eax
..@0x804680b: add esi, strict byte 0x4
..@0x804680e: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8046811: db 0x8d, 0x14, 0x28  ;; lea edx,[eax+ebp]
..@0x8046814: db 0xf7, 0xd0  ;; not eax
..@0x8046816: db 0x8d, 0x34, 0x32  ;; lea esi,[edx+esi]
..@0x8046819: db 0x21, 0xc6  ;; and esi,eax
..@0x804681b: db 0x89, 0xf3  ;; mov ebx,esi
..@0x804681d: db 0x29, 0xeb  ;; sub ebx,ebp
..@0x804681f: db 0x39, 0x5c, 0x24, 0x08  ;; cmp [esp+0x8],ebx
..@0x8046823: db 0x0f, 0x84, 0xaf, 0x00, 0x00, 0x00  ;; jz near 0x80468d8
..@0x8046829: push strict byte 0x1
..@0x804682b: db 0x29, 0xef  ;; sub edi,ebp
..@0x804682d: push esi
..@0x804682e: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8046832: db 0x01, 0xe8  ;; add eax,ebp
..@0x8046834: push eax
..@0x8046835: push edi
..@0x8046836: call B.code+mremap
..@0x804683b: add esp, strict byte 0x10
..@0x804683e: cmp eax, strict byte -0x1
..@0x8046841: db 0x74, 0x4d  ;; jz 0x8046890
..@0x8046843: db 0x01, 0xe8  ;; add eax,ebp
..@0x8046845: or ebx, strict byte 0x2
..@0x8046848: db 0x89, 0x58, 0x04  ;; mov [eax+0x4],ebx
..@0x804684b: db 0x89, 0xf2  ;; mov edx,esi
..@0x804684d: db 0x2b, 0x54, 0x24, 0x08  ;; sub edx,[esp+0x8]
..@0x8046851: db 0x8b, 0x0d, 0x10, 0xee, 0x87, 0x09  ;; mov ecx,[0x987ee10]
..@0x8046857: db 0x8d, 0x58, 0x08  ;; lea ebx,[eax+0x8]
..@0x804685a: db 0x03, 0x15, 0x04, 0xee, 0x87, 0x09  ;; add edx,[0x987ee04]
..@0x8046860: db 0x3b, 0x15, 0x10, 0xee, 0x87, 0x09  ;; cmp edx,[0x987ee10]
..@0x8046866: db 0x89, 0x15, 0x04, 0xee, 0x87, 0x09  ;; mov [0x987ee04],edx
..@0x804686c: db 0x0f, 0x47, 0xca  ;; cmova ecx,edx
..@0x804686f: db 0x03, 0x15, 0x08, 0xee, 0x87, 0x09  ;; add edx,[0x987ee08]
..@0x8046875: db 0x89, 0x0d, 0x10, 0xee, 0x87, 0x09  ;; mov [0x987ee10],ecx
..@0x804687b: db 0x3b, 0x15, 0x14, 0xee, 0x87, 0x09  ;; cmp edx,[0x987ee14]
..@0x8046881: db 0x0f, 0x46, 0x15, 0x14, 0xee, 0x87, 0x09  ;; cmovna edx,[0x987ee14]
..@0x8046888: db 0x89, 0x15, 0x14, 0xee, 0x87, 0x09  ;; mov [0x987ee14],edx
..@0x804688e: db 0xeb, 0x4c  ;; jmp short 0x80468dc
..@0x8046890: db 0x8b, 0x04, 0x24  ;; mov eax,[esp]
..@0x8046893: db 0x39, 0x44, 0x24, 0x08  ;; cmp [esp+0x8],eax
..@0x8046897: db 0x73, 0x3f  ;; jnc 0x80468d8
..@0x8046899: sub esp, strict byte 0xc
..@0x804689c: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x80468a0: sub eax, strict byte 0x7
..@0x80468a3: push eax
..@0x80468a4: call B.code+malloc
..@0x80468a9: add esp, strict byte 0x10
..@0x80468ac: db 0x85, 0xc0  ;; test eax,eax
..@0x80468ae: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80468b0: db 0x74, 0x22  ;; jz 0x80468d4
..@0x80468b2: push ecx
..@0x80468b3: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80468b7: sub eax, strict byte 0x8
..@0x80468ba: push eax
..@0x80468bb: push dword [esp+0x38]
..@0x80468bf: push ebx
..@0x80468c0: call B.code+memcpy
..@0x80468c5: pop edx
..@0x80468c6: push dword [esp+0x3c]
..@0x80468ca: call B.code+free
..@0x80468cf: add esp, strict byte 0x10
..@0x80468d2: db 0xeb, 0x08  ;; jmp short 0x80468dc
..@0x80468d4: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80468d6: db 0xeb, 0x04  ;; jmp short 0x80468dc
..@0x80468d8: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x80468dc: push eax
..@0x80468dd: push eax
..@0x80468de: push strict byte 0x1
..@0x80468e0: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x80468e4: push eax
..@0x80468e5: call B.code+__pthread_return_void
..@0x80468ea: add esp, strict byte 0x10
..@0x80468ed: add esp, strict byte 0x1c
..@0x80468f0: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80468f2: pop ebx
..@0x80468f3: pop esi
..@0x80468f4: pop edi
..@0x80468f5: pop ebp
..@0x80468f6: ret
__malloc_trim: equ $-B.code
..@0x80468f7: push ebp
..@0x80468f8: db 0x89, 0xd5  ;; mov ebp,edx
..@0x80468fa: push edi
..@0x80468fb: push esi
..@0x80468fc: push ebx
..@0x80468fd: sub esp, strict byte 0xc
..@0x8046900: db 0x8b, 0x8a, 0x5c, 0x03, 0x00, 0x00  ;; mov ecx,[edx+0x35c]
..@0x8046906: db 0x8b, 0x52, 0x2c  ;; mov edx,[edx+0x2c]
..@0x8046909: db 0x8b, 0x72, 0x04  ;; mov esi,[edx+0x4]
..@0x804690c: and esi, strict byte -0x4
..@0x804690f: db 0x89, 0xf2  ;; mov edx,esi
..@0x8046911: db 0x29, 0xc2  ;; sub edx,eax
..@0x8046913: db 0x8d, 0x44, 0x0a, 0xef  ;; lea eax,[edx+ecx-0x11]
..@0x8046917: db 0x31, 0xd2  ;; xor edx,edx
..@0x8046919: db 0xf7, 0xf1  ;; div ecx
..@0x804691b: db 0x8d, 0x58, 0xff  ;; lea ebx,[eax-0x1]
..@0x804691e: db 0x0f, 0xaf, 0xd9  ;; imul ebx,ecx
..@0x8046921: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8046923: db 0x7e, 0x55  ;; jng 0x804697a
..@0x8046925: sub esp, strict byte 0xc
..@0x8046928: push strict byte 0x0
..@0x804692a: call B.code+sbrk
..@0x804692f: add esp, strict byte 0x10
..@0x8046932: db 0x89, 0xc7  ;; mov edi,eax
..@0x8046934: db 0x89, 0xf0  ;; mov eax,esi
..@0x8046936: db 0x03, 0x45, 0x2c  ;; add eax,[ebp+0x2c]
..@0x8046939: db 0x39, 0xc7  ;; cmp edi,eax
..@0x804693b: db 0x75, 0x3d  ;; jnz 0x804697a
..@0x804693d: sub esp, strict byte 0xc
..@0x8046940: db 0xf7, 0xdb  ;; neg ebx
..@0x8046942: push ebx
..@0x8046943: call B.code+sbrk
..@0x8046948: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x804694f: call B.code+sbrk
..@0x8046954: add esp, strict byte 0x10
..@0x8046957: cmp eax, strict byte -0x1
..@0x804695a: db 0x74, 0x1e  ;; jz 0x804697a
..@0x804695c: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804695e: db 0x29, 0xc1  ;; sub ecx,eax
..@0x8046960: db 0x74, 0x18  ;; jz 0x804697a
..@0x8046962: db 0x8b, 0x45, 0x2c  ;; mov eax,[ebp+0x2c]
..@0x8046965: db 0x29, 0xce  ;; sub esi,ecx
..@0x8046967: db 0x29, 0x8d, 0x68, 0x03, 0x00, 0x00  ;; sub [ebp+0x368],ecx
..@0x804696d: or esi, strict byte 0x1
..@0x8046970: db 0x89, 0x70, 0x04  ;; mov [eax+0x4],esi
..@0x8046973: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8046978: db 0xeb, 0x02  ;; jmp short 0x804697c
..@0x804697a: db 0x31, 0xc0  ;; xor eax,eax
..@0x804697c: add esp, strict byte 0xc
..@0x804697f: pop ebx
..@0x8046980: pop esi
..@0x8046981: pop edi
..@0x8046982: pop ebp
..@0x8046983: ret
__malloc_consolidate: equ $-B.code
..@0x8046984: push ebp
..@0x8046985: push edi
..@0x8046986: push esi
..@0x8046987: push ebx
..@0x8046988: sub esp, strict byte 0x1c
..@0x804698b: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x804698f: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x8046991: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8046996: db 0x85, 0xc0  ;; test eax,eax
..@0x8046998: db 0x0f, 0x84, 0x21, 0x01, 0x00, 0x00  ;; jz near 0x8046abf
..@0x804699e: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80469a2: and eax, strict byte -0x3
..@0x80469a5: db 0x89, 0x01  ;; mov [ecx],eax
..@0x80469a7: add ecx, strict byte 0x34
..@0x80469aa: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80469ae: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x80469b2: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x80469b6: add eax, strict byte 0x4
..@0x80469b9: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x80469bd: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x80469bf: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x80469c3: db 0xc1, 0xe8, 0x03  ;; shr eax,byte 0x3
..@0x80469c6: db 0x8d, 0x44, 0x81, 0xf8  ;; lea eax,[ecx+eax*4-0x8]
..@0x80469ca: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x80469ce: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80469d2: db 0x8b, 0x08  ;; mov ecx,[eax]
..@0x80469d4: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80469d6: db 0x0f, 0x84, 0xc0, 0x00, 0x00, 0x00  ;; jz near 0x8046a9c
..@0x80469dc: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x80469e2: db 0x8b, 0x51, 0x08  ;; mov edx,[ecx+0x8]
..@0x80469e5: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x80469e9: db 0x8b, 0x41, 0x04  ;; mov eax,[ecx+0x4]
..@0x80469ec: db 0x89, 0xc7  ;; mov edi,eax
..@0x80469ee: and edi, strict byte -0x2
..@0x80469f1: db 0xa8, 0x01  ;; test al,0x1
..@0x80469f3: db 0x8d, 0x1c, 0x39  ;; lea ebx,[ecx+edi]
..@0x80469f6: db 0x8b, 0x53, 0x04  ;; mov edx,[ebx+0x4]
..@0x80469f9: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x80469fd: db 0x75, 0x20  ;; jnz 0x8046a1f
..@0x80469ff: db 0x8b, 0x29  ;; mov ebp,[ecx]
..@0x8046a01: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8046a03: db 0x29, 0xe8  ;; sub eax,ebp
..@0x8046a05: db 0x8b, 0x70, 0x08  ;; mov esi,[eax+0x8]
..@0x8046a08: db 0x8b, 0x50, 0x0c  ;; mov edx,[eax+0xc]
..@0x8046a0b: db 0x8b, 0x4e, 0x0c  ;; mov ecx,[esi+0xc]
..@0x8046a0e: db 0x39, 0xc1  ;; cmp ecx,eax
..@0x8046a10: db 0x75, 0x3d  ;; jnz 0x8046a4f
..@0x8046a12: db 0x39, 0x4a, 0x08  ;; cmp [edx+0x8],ecx
..@0x8046a15: db 0x75, 0x38  ;; jnz 0x8046a4f
..@0x8046a17: db 0x01, 0xef  ;; add edi,ebp
..@0x8046a19: db 0x89, 0x56, 0x0c  ;; mov [esi+0xc],edx
..@0x8046a1c: db 0x89, 0x72, 0x08  ;; mov [edx+0x8],esi
..@0x8046a1f: db 0x8b, 0x6c, 0x24, 0x08  ;; mov ebp,[esp+0x8]
..@0x8046a23: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8046a27: and ebp, strict byte -0x4
..@0x8046a2a: db 0x3b, 0x58, 0x2c  ;; cmp ebx,[eax+0x2c]
..@0x8046a2d: db 0x74, 0x51  ;; jz 0x8046a80
..@0x8046a2f: db 0x8b, 0x44, 0x2b, 0x04  ;; mov eax,[ebx+ebp+0x4]
..@0x8046a33: db 0x89, 0x6b, 0x04  ;; mov [ebx+0x4],ebp
..@0x8046a36: and eax, strict byte 0x1
..@0x8046a39: db 0x85, 0xc0  ;; test eax,eax
..@0x8046a3b: db 0x75, 0x1f  ;; jnz 0x8046a5c
..@0x8046a3d: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x8046a40: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x8046a43: db 0x8b, 0x72, 0x0c  ;; mov esi,[edx+0xc]
..@0x8046a46: db 0x39, 0xde  ;; cmp esi,ebx
..@0x8046a48: db 0x75, 0x05  ;; jnz 0x8046a4f
..@0x8046a4a: db 0x39, 0x70, 0x08  ;; cmp [eax+0x8],esi
..@0x8046a4d: db 0x74, 0x05  ;; jz 0x8046a54
..@0x8046a4f: call B.code+abort
..@0x8046a54: db 0x01, 0xef  ;; add edi,ebp
..@0x8046a56: db 0x89, 0x42, 0x0c  ;; mov [edx+0xc],eax
..@0x8046a59: db 0x89, 0x50, 0x08  ;; mov [eax+0x8],edx
..@0x8046a5c: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8046a60: db 0x8b, 0x50, 0x08  ;; mov edx,[eax+0x8]
..@0x8046a63: db 0x89, 0x48, 0x08  ;; mov [eax+0x8],ecx
..@0x8046a66: db 0x89, 0xf8  ;; mov eax,edi
..@0x8046a68: or eax, strict byte 0x1
..@0x8046a6b: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x8046a6e: db 0x89, 0x4a, 0x0c  ;; mov [edx+0xc],ecx
..@0x8046a71: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8046a75: db 0x89, 0x51, 0x08  ;; mov [ecx+0x8],edx
..@0x8046a78: db 0x89, 0x3c, 0x39  ;; mov [ecx+edi],edi
..@0x8046a7b: db 0x89, 0x41, 0x0c  ;; mov [ecx+0xc],eax
..@0x8046a7e: db 0xeb, 0x10  ;; jmp short 0x8046a90
..@0x8046a80: db 0x8d, 0x04, 0x2f  ;; lea eax,[edi+ebp]
..@0x8046a83: or eax, strict byte 0x1
..@0x8046a86: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x8046a89: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8046a8d: db 0x89, 0x4a, 0x2c  ;; mov [edx+0x2c],ecx
..@0x8046a90: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8046a94: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8046a96: db 0x0f, 0x85, 0x46, 0xff, 0xff, 0xff  ;; jnz near 0x80469e2
..@0x8046a9c: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x8046aa0: db 0x39, 0x4c, 0x24, 0x0c  ;; cmp [esp+0xc],ecx
..@0x8046aa4: db 0x74, 0x7e  ;; jz 0x8046b24
..@0x8046aa6: db 0x83, 0x44, 0x24, 0x0c, 0x04  ;; add dword [esp+0xc],byte +0x4
..@0x8046aab: jmp strict near R.code+0x80469ce
..@0x8046ab0: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8046ab4: db 0x8d, 0x44, 0xd1, 0x2c  ;; lea eax,[ecx+edx*8+0x2c]
..@0x8046ab8: inc edx
..@0x8046ab9: db 0x89, 0x40, 0x0c  ;; mov [eax+0xc],eax
..@0x8046abc: db 0x89, 0x40, 0x08  ;; mov [eax+0x8],eax
..@0x8046abf: cmp edx, strict byte 0x5f
..@0x8046ac2: db 0x7e, 0xec  ;; jng 0x8046ab0
..@0x8046ac4: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8046ac8: db 0x83, 0x88, 0x60, 0x03, 0x00, 0x00, 0x01  ;; or dword [eax+0x360],byte +0x1
..@0x8046acf: db 0xc7, 0x80, 0x48, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+0x348],0x0
..@0x8046ad7: db 0x00, 0x00
..@0x8046ad9: db 0xc7, 0x80, 0x54, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+0x354],0x10000
..@0x8046ae1: db 0x01, 0x00
..@0x8046ae3: db 0xc7, 0x80, 0x4c, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+0x34c],0x40000
..@0x8046aeb: db 0x04, 0x00
..@0x8046aed: db 0xc7, 0x80, 0x44, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+0x344],0x40000
..@0x8046af5: db 0x04, 0x00
..@0x8046af7: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8046afb: sub esp, strict byte 0xc
..@0x8046afe: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x8046b00: and eax, strict byte 0x3
..@0x8046b03: or eax, strict byte 0x48
..@0x8046b06: db 0x89, 0x02  ;; mov [edx],eax
..@0x8046b08: db 0x89, 0xd0  ;; mov eax,edx
..@0x8046b0a: add eax, strict byte 0x34
..@0x8046b0d: db 0x89, 0x42, 0x2c  ;; mov [edx+0x2c],eax
..@0x8046b10: mov eax, [__pagesize]  ; PAGE_SIZE == 0x1000 always on i386 and amd64 (see https://wiki.debian.org/ArchitectureSpecificsMemo).
..@0x8046b15: push eax  ; Simulate function call argument.
..@0x8046b16: nop  ; Padding.
..@0x8046b17: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x8046b1b: add esp, strict byte 0x10
..@0x8046b1e: db 0x89, 0x81, 0x5c, 0x03, 0x00, 0x00  ;; mov [ecx+0x35c],eax
..@0x8046b24: add esp, strict byte 0x1c
..@0x8046b27: pop ebx
..@0x8046b28: pop esi
..@0x8046b29: pop edi
..@0x8046b2a: pop ebp
..@0x8046b2b: ret
free: equ $-B.code
..@0x8046b2c: push ebp
..@0x8046b2d: push edi
..@0x8046b2e: push esi
..@0x8046b2f: push ebx
..@0x8046b30: sub esp, strict byte 0x1c
..@0x8046b33: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8046b37: db 0x85, 0xff  ;; test edi,edi
..@0x8046b39: db 0x0f, 0x84, 0x81, 0x01, 0x00, 0x00  ;; jz near 0x8046cc0
..@0x8046b3f: push esi
..@0x8046b40: push strict dword __malloc_lock
..@0x8046b45: push strict dword __pthread_return_0
..@0x8046b4a: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8046b4e: push eax
..@0x8046b4f: call B.code+__pthread_return_void
..@0x8046b54: db 0xc7, 0x04, 0x24, 0x90, 0xd0, 0x05, 0x08  ;; mov dword [esp],__malloc_lock
..@0x8046b5b: call B.code+__pthread_return_0
..@0x8046b60: db 0x8d, 0x4f, 0xf8  ;; lea ecx,[edi-0x8]
..@0x8046b63: db 0xa1, 0xa0, 0xea, 0x87, 0x09  ;; mov eax,[__malloc_state]
..@0x8046b68: db 0x8b, 0x51, 0x04  ;; mov edx,[ecx+0x4]
..@0x8046b6b: add esp, strict byte 0x10
..@0x8046b6e: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8046b70: and ebx, strict byte -0x4
..@0x8046b73: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x8046b75: db 0x77, 0x20  ;; ja 0x8046b97
..@0x8046b77: or eax, strict byte 0x3
..@0x8046b7a: db 0xc1, 0xeb, 0x03  ;; shr ebx,byte 0x3
..@0x8046b7d: db 0xa3, 0xa0, 0xea, 0x87, 0x09  ;; mov [__malloc_state],eax
..@0x8046b82: db 0x8d, 0x14, 0x9d, 0xa0, 0xea, 0x87, 0x09  ;; lea edx,[ebx*4+__malloc_state]
..@0x8046b89: db 0x8b, 0x42, 0xfc  ;; mov eax,[edx-0x4]
..@0x8046b8c: db 0x89, 0x41, 0x08  ;; mov [ecx+0x8],eax
..@0x8046b8f: db 0x89, 0x4a, 0xfc  ;; mov [edx-0x4],ecx
..@0x8046b92: jmp strict near R.code+0x8046caf
..@0x8046b97: db 0xf6, 0xc2, 0x02  ;; test dl,0x2
..@0x8046b9a: db 0x0f, 0x85, 0xef, 0x00, 0x00, 0x00  ;; jnz near 0x8046c8f
..@0x8046ba0: or eax, strict byte 0x1
..@0x8046ba3: db 0xa3, 0xa0, 0xea, 0x87, 0x09  ;; mov [__malloc_state],eax
..@0x8046ba8: db 0x8d, 0x34, 0x19  ;; lea esi,[ecx+ebx]
..@0x8046bab: db 0x8b, 0x46, 0x04  ;; mov eax,[esi+0x4]
..@0x8046bae: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8046bb2: db 0xf6, 0x41, 0x04, 0x01  ;; test byte [ecx+0x4],0x1
..@0x8046bb6: db 0x75, 0x21  ;; jnz 0x8046bd9
..@0x8046bb8: db 0x8b, 0x6f, 0xf8  ;; mov ebp,[edi-0x8]
..@0x8046bbb: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8046bbd: db 0x29, 0xe8  ;; sub eax,ebp
..@0x8046bbf: db 0x8b, 0x78, 0x08  ;; mov edi,[eax+0x8]
..@0x8046bc2: db 0x8b, 0x50, 0x0c  ;; mov edx,[eax+0xc]
..@0x8046bc5: db 0x8b, 0x4f, 0x0c  ;; mov ecx,[edi+0xc]
..@0x8046bc8: db 0x39, 0xc1  ;; cmp ecx,eax
..@0x8046bca: db 0x75, 0x3c  ;; jnz 0x8046c08
..@0x8046bcc: db 0x39, 0x4a, 0x08  ;; cmp [edx+0x8],ecx
..@0x8046bcf: db 0x75, 0x37  ;; jnz 0x8046c08
..@0x8046bd1: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8046bd3: db 0x89, 0x57, 0x0c  ;; mov [edi+0xc],edx
..@0x8046bd6: db 0x89, 0x7a, 0x08  ;; mov [edx+0x8],edi
..@0x8046bd9: db 0x8b, 0x6c, 0x24, 0x08  ;; mov ebp,[esp+0x8]
..@0x8046bdd: and ebp, strict byte -0x4
..@0x8046be0: db 0x3b, 0x35, 0xcc, 0xea, 0x87, 0x09  ;; cmp esi,[0x987eacc]
..@0x8046be6: db 0x74, 0x52  ;; jz 0x8046c3a
..@0x8046be8: db 0x8b, 0x44, 0x2e, 0x04  ;; mov eax,[esi+ebp+0x4]
..@0x8046bec: db 0x89, 0x6e, 0x04  ;; mov [esi+0x4],ebp
..@0x8046bef: and eax, strict byte 0x1
..@0x8046bf2: db 0x85, 0xc0  ;; test eax,eax
..@0x8046bf4: db 0x75, 0x1f  ;; jnz 0x8046c15
..@0x8046bf6: db 0x8b, 0x56, 0x08  ;; mov edx,[esi+0x8]
..@0x8046bf9: db 0x8b, 0x46, 0x0c  ;; mov eax,[esi+0xc]
..@0x8046bfc: db 0x8b, 0x7a, 0x0c  ;; mov edi,[edx+0xc]
..@0x8046bff: db 0x39, 0xf7  ;; cmp edi,esi
..@0x8046c01: db 0x75, 0x05  ;; jnz 0x8046c08
..@0x8046c03: db 0x39, 0x78, 0x08  ;; cmp [eax+0x8],edi
..@0x8046c06: db 0x74, 0x05  ;; jz 0x8046c0d
..@0x8046c08: call B.code+abort
..@0x8046c0d: db 0x89, 0x42, 0x0c  ;; mov [edx+0xc],eax
..@0x8046c10: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8046c12: db 0x89, 0x50, 0x08  ;; mov [eax+0x8],edx
..@0x8046c15: db 0xa1, 0xdc, 0xea, 0x87, 0x09  ;; mov eax,[0x987eadc]
..@0x8046c1a: db 0xc7, 0x41, 0x0c, 0xd4, 0xea, 0x87, 0x09  ;; mov dword [ecx+0xc],0x987ead4
..@0x8046c21: db 0x89, 0x1c, 0x19  ;; mov [ecx+ebx],ebx
..@0x8046c24: db 0x89, 0x41, 0x08  ;; mov [ecx+0x8],eax
..@0x8046c27: db 0x89, 0x48, 0x0c  ;; mov [eax+0xc],ecx
..@0x8046c2a: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8046c2c: or eax, strict byte 0x1
..@0x8046c2f: db 0x89, 0x0d, 0xdc, 0xea, 0x87, 0x09  ;; mov [0x987eadc],ecx
..@0x8046c35: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x8046c38: db 0xeb, 0x10  ;; jmp short 0x8046c4a
..@0x8046c3a: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8046c3c: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8046c3e: or eax, strict byte 0x1
..@0x8046c41: db 0x89, 0x41, 0x04  ;; mov [ecx+0x4],eax
..@0x8046c44: db 0x89, 0x0d, 0xcc, 0xea, 0x87, 0x09  ;; mov [0x987eacc],ecx
..@0x8046c4a: db 0x81, 0xfb, 0xff, 0xff, 0x01, 0x00  ;; cmp ebx,0x1ffff
..@0x8046c50: db 0x76, 0x5d  ;; jna 0x8046caf
..@0x8046c52: db 0xf6, 0x05, 0xa0, 0xea, 0x87, 0x09, 0x02  ;; test byte [__malloc_state],0x2
..@0x8046c59: db 0x74, 0x10  ;; jz 0x8046c6b
..@0x8046c5b: sub esp, strict byte 0xc
..@0x8046c5e: push strict dword __malloc_state
..@0x8046c63: call B.code+__malloc_consolidate
..@0x8046c68: add esp, strict byte 0x10
..@0x8046c6b: db 0xa1, 0xcc, 0xea, 0x87, 0x09  ;; mov eax,[0x987eacc]
..@0x8046c70: db 0x8b, 0x40, 0x04  ;; mov eax,[eax+0x4]
..@0x8046c73: and eax, strict byte -0x4
..@0x8046c76: db 0x3b, 0x05, 0xe4, 0xed, 0x87, 0x09  ;; cmp eax,[0x987ede4]
..@0x8046c7c: db 0x72, 0x31  ;; jc 0x8046caf
..@0x8046c7e: db 0xa1, 0xe8, 0xed, 0x87, 0x09  ;; mov eax,[0x987ede8]
..@0x8046c83: db 0xba, 0xa0, 0xea, 0x87, 0x09  ;; mov edx,__malloc_state
..@0x8046c88: call B.code+__malloc_trim
..@0x8046c8d: db 0xeb, 0x20  ;; jmp short 0x8046caf
..@0x8046c8f: db 0x8b, 0x57, 0xf8  ;; mov edx,[edi-0x8]
..@0x8046c92: db 0xff, 0x0d, 0xf0, 0xed, 0x87, 0x09  ;; dec dword [0x987edf0]
..@0x8046c98: db 0x8d, 0x04, 0x13  ;; lea eax,[ebx+edx]
..@0x8046c9b: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8046c9d: push ebx
..@0x8046c9e: push ebx
..@0x8046c9f: push eax
..@0x8046ca0: push ecx
..@0x8046ca1: db 0x29, 0x05, 0x04, 0xee, 0x87, 0x09  ;; sub [0x987ee04],eax
..@0x8046ca7: call B.code+munmap
..@0x8046cac: add esp, strict byte 0x10
..@0x8046caf: push eax
..@0x8046cb0: push eax
..@0x8046cb1: push strict byte 0x1
..@0x8046cb3: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8046cb7: push eax
..@0x8046cb8: call B.code+__pthread_return_void
..@0x8046cbd: add esp, strict byte 0x10
..@0x8046cc0: add esp, strict byte 0x1c
..@0x8046cc3: pop ebx
..@0x8046cc4: pop esi
..@0x8046cc5: pop edi
..@0x8046cc6: pop ebp
..@0x8046cc7: ret
malloc_trim: equ $-B.code
..@0x8046cc8: push ebx
..@0x8046cc9: sub esp, strict byte 0x14
..@0x8046ccc: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8046cd0: push strict dword __malloc_state
..@0x8046cd5: call B.code+__malloc_consolidate
..@0x8046cda: add esp, strict byte 0x18
..@0x8046cdd: db 0xba, 0xa0, 0xea, 0x87, 0x09  ;; mov edx,__malloc_state
..@0x8046ce2: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8046ce4: pop ebx
..@0x8046ce5: jmp strict near B.code+__malloc_trim
abort: equ $-B.code
..@0x8046cea: push ebx
..@0x8046ceb: db 0x81, 0xec, 0x24, 0x01, 0x00, 0x00  ;; sub esp,0x124
..@0x8046cf1: push strict dword __mylock1
..@0x8046cf6: call B.code+__pthread_return_0
..@0x8046cfb: db 0xb8, 0x20, 0x00, 0x00, 0x00  ;; mov eax,0x20
..@0x8046d00: add esp, strict byte 0x10
..@0x8046d03: db 0xeb, 0x0b  ;; jmp short 0x8046d10
..@0x8046d05: db 0xc7, 0x84, 0x84, 0x98, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+eax*4+0x98],0x0
..@0x8046d0d: db 0x00, 0x00, 0x00
..@0x8046d10: dec eax
..@0x8046d11: db 0x79, 0xf2  ;; jns 0x8046d05
..@0x8046d13: push ebx
..@0x8046d14: push ebx
..@0x8046d15: push strict byte 0x6
..@0x8046d17: db 0x8d, 0x9c, 0x24, 0xa4, 0x00, 0x00, 0x00  ;; lea ebx,[esp+0xa4]
..@0x8046d1e: push ebx
..@0x8046d1f: call B.code+__sigaddset
..@0x8046d24: add esp, strict byte 0x10
..@0x8046d27: db 0x85, 0xc0  ;; test eax,eax
..@0x8046d29: db 0x75, 0x0e  ;; jnz 0x8046d39
..@0x8046d2b: push ecx
..@0x8046d2c: push strict byte 0x0
..@0x8046d2e: push ebx
..@0x8046d2f: push strict byte 0x1
..@0x8046d31: call B.code+sigprocmask
..@0x8046d36: add esp, strict byte 0x10
..@0x8046d39: db 0x80, 0x3d, 0x64, 0xea, 0x87, 0x09, 0x00  ;; cmp byte [been_there_done_that],0x0
..@0x8046d40: db 0x75, 0x2f  ;; jnz 0x8046d71
..@0x8046d42: db 0xc6, 0x05, 0x64, 0xea, 0x87, 0x09, 0x01  ;; mov byte [been_there_done_that],0x1
..@0x8046d49: sub esp, strict byte 0xc
..@0x8046d4c: push strict dword __mylock1
..@0x8046d51: call B.code+__pthread_return_0
..@0x8046d56: db 0xc7, 0x04, 0x24, 0x06, 0x00, 0x00, 0x00  ;; mov dword [esp],0x6
..@0x8046d5d: call B.code+raise
..@0x8046d62: db 0xc7, 0x04, 0x24, 0xa8, 0xd0, 0x05, 0x08  ;; mov dword [esp],__mylock1
..@0x8046d69: call B.code+__pthread_return_0
..@0x8046d6e: add esp, strict byte 0x10
..@0x8046d71: db 0xa0, 0x64, 0xea, 0x87, 0x09  ;; mov al,[been_there_done_that]
..@0x8046d76: db 0x3c, 0x01  ;; cmp al,0x1
..@0x8046d78: db 0x75, 0x58  ;; jnz 0x8046dd2
..@0x8046d7a: push edx
..@0x8046d7b: push strict dword 0x8c
..@0x8046d80: push strict byte 0x0
..@0x8046d82: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x8046d86: push eax
..@0x8046d87: db 0xc6, 0x05, 0x64, 0xea, 0x87, 0x09, 0x02  ;; mov byte [been_there_done_that],0x2
..@0x8046d8e: call B.code+memset
..@0x8046d93: db 0xb8, 0x20, 0x00, 0x00, 0x00  ;; mov eax,0x20
..@0x8046d98: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8046da0: add esp, strict byte 0x10
..@0x8046da3: db 0xeb, 0x08  ;; jmp short 0x8046dad
..@0x8046da5: db 0xc7, 0x44, 0x84, 0x10, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+eax*4+0x10],0xffffffff
..@0x8046dad: dec eax
..@0x8046dae: db 0x79, 0xf5  ;; jns 0x8046da5
..@0x8046db0: db 0xc7, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x90],0x0
..@0x8046db8: db 0x00, 0x00, 0x00
..@0x8046dbb: push eax
..@0x8046dbc: push strict byte 0x0
..@0x8046dbe: db 0x8d, 0x44, 0x24, 0x14  ;; lea eax,[esp+0x14]
..@0x8046dc2: push eax
..@0x8046dc3: push strict byte 0x6
..@0x8046dc5: call B.code+sigaction
..@0x8046dca: add esp, strict byte 0x10
..@0x8046dcd: jmp strict near R.code+0x8046d49
..@0x8046dd2: db 0x3c, 0x02  ;; cmp al,0x2
..@0x8046dd4: db 0x75, 0x08  ;; jnz 0x8046dde
..@0x8046dd6: db 0xc6, 0x05, 0x64, 0xea, 0x87, 0x09, 0x03  ;; mov byte [been_there_done_that],0x3
..@0x8046ddd: hlt
..@0x8046dde: db 0x80, 0x3d, 0x64, 0xea, 0x87, 0x09, 0x03  ;; cmp byte [been_there_done_that],0x3
..@0x8046de5: db 0x75, 0x11  ;; jnz 0x8046df8
..@0x8046de7: sub esp, strict byte 0xc
..@0x8046dea: push strict byte 0x7f
..@0x8046dec: db 0xc6, 0x05, 0x64, 0xea, 0x87, 0x09, 0x04  ;; mov byte [been_there_done_that],0x4
..@0x8046df3: call B.code+_exit
..@0x8046df8: hlt
..@0x8046df9: db 0xeb, 0xfd  ;; jmp short 0x8046df8
..@0x8046dfb:
%ifdef MDEBUG
; See malloc_*.out for debug output. The malloc usage pattern is not
; trivial. Total number of allocations for each coversion: c + n, where c is
; constant <= 6 and n <= 16 is the number of output attempts. The larger the
; input image, the larger n is. For 1920x1080 images, n was 19.
;
; It's still feasible to do an mmap(2) for each allocation, wasting ~4 KiB
; of memory foe each allocatoins, and incurring a syscall overhead.
malloc_bigx.out 19 25
malloc_kdrx.out 11 17
malloc_testx.out 6 11

malloc_bigx.out 25
malloc_kdrx.out 17
malloc_testx.out 11

debug_malloc: equ $-B.code
%if 0
		push dword [esp+4]  ; size.
		push strict dword 0  ; NULL
		call B.code+prog_realloc
		pop edx
		pop edx
%else
		push strict dword [esp+4]
		call B.code+malloc
		pop edx
		push eax  ; Result pointer.
		push strict dword [esp+8]  ; `size' in bytes.
		push strict dword str_fmt_malloc
		call B.code+prog_printf
		pop eax
		pop eax
		pop eax  ; EAX := result pointer.
%endif
		ret
str_fmt_malloc: equ $-B.code
		db 'mdebug: malloc 0x%x = ptr 0x%x', 10, 0
debug_realloc: equ $-B.code
		push dword [esp+8]
		push dword [esp+8]
		call B.code+realloc
		pop edx
		pop edx
		push eax  ; Result pointer.
		push strict dword [esp+0xc]  ; `size' in bytes.
		push strict dword [esp+0xc]  ; Original pointer (`ptr').
		push strict dword str_fmt_realloc
		call B.code+prog_printf
		pop eax
		pop eax
		pop eax
		pop eax  ; EAX := result pointer.
		ret
str_fmt_realloc: equ $-B.code
		db 'mdebug: realloc ptr 0x%x 0x%x = ptr 0x%x', 10, 0
debug_free: equ $-B.code
		push dword [esp+4]  ; Pointer.
		push dword str_fmt_free
		call B.code+prog_printf
		pop eax
		pop eax
		jmp strict near B.code+free
str_fmt_free: equ $-B.code
		db 'mdebug: free ptr 0x%x', 10, 0
%endif  ; MDEBUG
		times $$+0x804717b-$+B.code hlt  ; Unused, 0x64 bytes.
;
strtol: equ $-B.code  ; long strtol(const char *nptr, char **endptr, int base);
..@0x804717b:
; Register allocation:
;
; EAX: Scratch for input bytes (`byte [esi]') and digits. After the main loop (.after_loop), it's the (return) value.
; EBX: Usually var_base variable, initial value coming from ARG_BASE. Near the beginning and near the end, scratch for [ARG_ENDPTR].
; ECX: CH is [var_overflow] (0 or 1), CL is a bitfield (var_minus=1, var_at_least_one_digit=2). Other bits are 0.
; EDX: Before the main loop: stratch. During the main loop: the (return) value. After the main loop: scratch.
; ESI: var_p (pointer starting at nptr).
; EDI: var_overflow_limit. After initialization, its value is 0xffffffff / var_base.
; EBP: Unused.
; ESP: Stack pointer. Stack at ESP: (0)saved_EDI (4)saved_ESI (8)saved_EBX (0xc)return_address (0x10)ARG_NPTR (0x14)ARG_ENDPTR (0x18)ARG_BASE.
;
; We dn't make ARG_* ebp+... (rather than esp+...), because the size saving
; (1 byte per use in an effective address) is 0 (push ebp ++ mov ebp, esp ++
; pop ebp == 4 bytes).
%define STRTOL_ARG_NPTR esp+0x10
%define STRTOL_ARG_ENDPTR STRTOL_ARG_NPTR+4
%define STRTOL_ARG_BASE STRTOL_ARG_ENDPTR+4
		push ebx
		push esi
		push edi
		mov esi, [STRTOL_ARG_NPTR]
		mov ebx, [STRTOL_ARG_ENDPTR]
		test ebx, ebx
		jz .endptr_null_1
		mov [ebx], esi
.endptr_null_1:	
.isspace_next:	lodsb
		sub al, 9  ; ASCII 9 is the smallest allowed whitespace.
		cmp al, ' '-9  ; ASCII 32 (space).
		je .isspace_next
		cmp al, 13-9  ; ASCII 9+4 == 13 is the largest allowed non-space whitespace.
		jna .isspace_next
		dec esi
		xor ecx, ecx  ; CH (var_overflow) := 0; CL (var_minus) := 0.
		lodsb
		cmp al, '-'
		jne .not_minus
		inc ecx  ; CL (var_minus) := 1.
		jmp short .after_sign
.not_minus:	cmp al, '+'
		je .after_sign
		dec esi
.after_sign:	mov ebx, [STRTOL_ARG_BASE]
		cmp ebx, byte 16
		je .maybe_base_16
		test ebx, ebx
		jnz .base_nonzero
.maybe_base_16: cmp byte [esi], '0'
		jne .maybe_base_8
		mov al, [esi+1]
		or al, 0x20
		cmp al, 'x'
		jne .maybe_base_8
		inc esi
		inc esi
		mov bl, 16  ; EBX (var_base) := 16.
		jmp short .base_nonzero
.maybe_base_8:	test ebx, ebx
		jnz .base_nonzero
		cmp byte [esi], '0'
		mov bl, 8  ; [var_base] := 8.
		je .base_nonzero
		mov bl, 10  ; [var_base] := 10.
.base_nonzero:  lea eax, [ebx-2]
		cmp eax, byte 36-2
		jbe .base_valid
		xor eax, eax  ; [var_value] := 0, indicating EDOM/EINVAL error.
		jmp short .done
.base_valid:	xor edx, edx
		or eax, byte 0xffffffff  ; EAX := 0xfffffff.
		div ebx  ; EAX := 0xffffffff / EBX (var_base); EDX := junk (remainder).
		xchg eax, edi  ; [var_overflow_limit] := 0xfffffff / [var_base]; EAX := junk.
		xor eax, eax  ; Clear higher bits, AL will contain a single byte below, from [var_p].
		xor edx, edx  ; [var_value] := 0.
.next_digit:	mov al, [esi]  ; Main loop body starts here.
		sub al, '0'
		cmp al, 9
		jbe .good_digit
		add al, '0'
		or al, 0x20  ; Convert to lowercase.
		sub al, 'a'
		cmp al, 26
		jnc short .after_loop  ; Bad digit.
		add al, 10
.good_digit:	cmp eax, ebx
		jnb short .after_loop  ; Jump iff [var_digit] >= [var_base].
.below_digit:	inc esi
		or cl, 2
		cmp edx, edi
		jna .no_overflow_1
		mov ch, 1
.no_overflow_1:	imul edx, ebx  ; [var_value] *= [var_base].
		add edx, eax
		jnc .no_overflow_2
		mov ch, 1
.no_overflow_2: jmp .next_digit
.after_loop:	test cl, 2
		jz .endptr_null_2
		mov ebx, [STRTOL_ARG_ENDPTR]
		test ebx, ebx
		jz .endptr_null_2
		mov [ebx], esi
.endptr_null_2:	xchg eax, edx  ; EAX := value; EDX := junk. From now on we use EAX as value and EDX as scratch.
		test ch, ch
		jnz .has_overflow
		mov edx, 0x80000000
		cmp eax, edx
		jb .no_overflow
		jne .has_overflow
		test cl, 1
		jnz .no_overflow
.has_overflow:	; Overflow would be indicated by setting errno := ERANGE, but we don't set it, because this libc doesn't support errno.
		xchg eax, edx  ; EAX := 0x80000000; EDX := junk.
		test cl, 1
		jnz .done
		dec eax
		jmp short .done
.no_overflow:	test cl, 1
		jz .done
		neg eax
.done:		pop edi
		pop esi
		pop ebx
		ret
;
strtod: equ $-B.code  ; double strtod(const char *str, char **endptr)
%define STRTOD_VAR_TMP_DIGIT 0  ; 4 bytes.
%define STRTOD_VAR_F32_10 4  ; 4 bytes f32.
%define STRTOD_VARS_SIZE 8
; esp+9 is pushed EBP.
; esp+0xc is pushed EDI.
; esp+0x10 is pushed ESI.
; esp+0x14 is pushed EBX.
; esp+0x18 is the return address.
%define STRTOD_ARG_STR 0x1c  ; 4 bytes char*.
%define STRTOD_ARG_ENDPTR 0x20  ; 4 bytes char**.
STRTOD_DECIMAL_BIG equ 21
STRTOD_MAX_ALLOWED_EXP equ 4973
strtod_labels:
		push ebx
		push esi
		push edi
		push ebp
		push dword 0x41200000  ; (f32)10.0.
		push ebp  ; Just a shorter `sub esp, byte 4'.
		mov ebx, [esp+STRTOD_ARG_STR]
.1:		mov al, [ebx]
		cmp al, ' '
		je .2
		mov ah, al
		sub ah, 9  ; "\t".
		cmp ah, 4  ; ord("\r")-ord("\t").
		ja .3
.2:		inc ebx
		jmp .1
.3:		xor ebp, ebp
		cmp al, '-'
		je .4
		cmp al, '+'
		je .5
		jmp short .6
.4:		inc ebp  ; ++pos;
.5:		inc ebx
.6:		or eax, byte -1  ; num_digits = -1;
		xor edi, edi
		xor esi, esi
		fldz  ; number = 0;  `number' will be kept in ST0 for most of this function.
		xor edx, edx  ; Clear high 24 bits, for the `mov [esp+STRTOD_VAR_TMP_DIGIT], edx' below.
.loop7:		mov dl, [ebx]
		sub dl, '0'
		cmp dl, 9
		ja .after_loop7
		test eax, eax
		jge .8
		inc eax
.8:		test eax, eax
		jnz .9
		test dl, dl
		jz .10
.9:		inc eax
		cmp eax, byte STRTOD_DECIMAL_BIG
		jg .10
		mov [esp+STRTOD_VAR_TMP_DIGIT], edx
		fmul dword [esp+STRTOD_VAR_F32_10]
		fiadd dword [esp+STRTOD_VAR_TMP_DIGIT]
.10:		inc ebx
		jmp .loop7
.after_loop7:	cmp dl, '.'-'0'
		jne .done_loop7
		test esi, esi
		jne .done_loop7
		inc ebx
		mov esi, ebx  ; pos0 = pos;
		jmp .loop7
.done_loop7:	test eax, eax
		jge .18
		test esi, esi
		jne .17
		; Now we use ESI for something else (i), with initial value already 0.
		xor ecx, ecx  ; Keep high 24 bits 0, for ch and ecx below.
		mov [esp+STRTOD_VAR_TMP_DIGIT], esi  ; 0.
		mov esi, nan_inf_str
.loop13:	mov edx, ebx
		mov eax, esi
		lea eax, [esi+1]  ; Same size as `mov' + `inc'.
.14:		mov cl, [edx]
		or cl, 0x20
		cmp cl, [eax]
		jne .16
		inc edx
		inc eax
		cmp [eax], ch  ; Same as: cmp byte [eax], 0
		jne .14
		fstp st0  ; Pop `number' (originally in ST0) from the stack.
		fild dword [esp+STRTOD_VAR_TMP_DIGIT]
		fldz
		fdivp st1, st0
		test ebp, ebp
		je .15
		fchs  ; number = -number.
.15:		mov cl, [esi]
		add ebx, ecx
		dec ebx
		dec ebx
		jmp short .store_done
.16:		mov cl, [esi]
		add esi, ecx
		inc byte [esp+STRTOD_VAR_TMP_DIGIT]  ; Set it to anything positive.
		cmp cl, ch
		jne .loop13
.17:		mov ebx, [esp+STRTOD_ARG_STR]  ; pos = str;
		jmp short .store_done
.18:		cmp eax, byte STRTOD_DECIMAL_BIG
		jle .19
		sub eax, byte STRTOD_DECIMAL_BIG
		add edi, eax
.19:		test esi, esi
		je .20
		mov eax, esi
		sub eax, ebx
		add edi, eax
.20:		test ebp, ebp  ; if (negative);
		je .21
		fchs  ; number = -number;
.21:		mov al, [ebx]
		or al, 0x20
		cmp al, 'e'
		jne .29
		mov [esp+STRTOD_VAR_TMP_DIGIT], ebx  ; pos1 = pos;  ! Maybe push ebx/pop ebx? Only if we don't use other variables in the meantime.
		xor esi, esi
		inc esi  ; negative = 1;
		inc ebx  ; Skip past the 'e'.
		mov al, [ebx]
		cmp al, '-'
		je .22
		cmp al, '+'
		je .23
		jmp short .24
; We put this to the middle so that we don't need `jmp near'.
.store_done:	; STRTOD_VAR_NUMBER is already populated.
		mov eax, [esp+STRTOD_ARG_ENDPTR]  ; Argument endptr.
		test eax, eax
		je .36
		mov [eax], ebx
.36:		fstp qword [esp]
		fld qword [esp]  ; By doing this fstp+fld combo, we round the result to f64.
		times 2 pop ebp  ; Just `add esp, byte STRTOD_VARS_SIZE'.
		pop ebp
		pop edi
		pop esi
		pop ebx
		ret
.22:		neg esi  ; negative = -1;
.23:		inc ebx
.24:		mov ebp, ebx
		xor eax, eax
		xor edx, edx  ; Clear high 24 bits, for the `add eax, edx' below.
.loop25:	mov dl, [ebx]
		sub dl, '0'
		cmp dl, 9
		ja .27
		cmp eax, STRTOD_MAX_ALLOWED_EXP  ; if (exponent_temp < STRTOD_MAX_ALLOWED_EXP);
		jge .26
		imul eax, byte 10
		add eax, edx
.26:		inc ebx
		jmp .loop25
.27:		cmp ebx, ebp
		jne .28
		mov ebx, [esp+STRTOD_VAR_TMP_DIGIT]  ; pos = pos1;
.28:		imul eax, esi
		add edi, eax
.29:		fldz
		db 0xdf, 0xe9  ; fucomip st1  ; if (number == 0.);  True for +0.0 and -0.0.  ; Needs i686 (P6).
		je .store_done  ; if (number == 0.) goto DONE;
		mov eax, edi
		test eax, eax
		jz .store_done
		jge .skip_neg
		neg eax  ; Exponent_temp = -exponent_temp;
.skip_neg:	fld dword [esp+STRTOD_VAR_F32_10]  ; p_base = 10.0, but with higher (f80) precision.
.loop31:	; Now: ST0 is p_base, ST1 is number.
		test al, 1
		jz .34
		test edi, edi
		jge .32
		fdiv st1, st0  ; number /= p_base;
		jmp short .34
.32:		fmul st1, st0  ; number *= p_base;
.34:		fmul st0, st0  ; p_base *= p_base;
		shr eax, 1
		jnz .loop31
		; Now: ST0 is p_base, ST1 is number.
		fstp st0  ; Pop p_base. `number' remains on the stack.
		jmp short .store_done
;
strlen: equ $-B.code:  ; size_t strlen(const char *s);
		push edi
		mov edi, [esp+8]  ; Argument s.
		xchg eax, eax
		or ecx, byte -1  ; ECX := -1.
		repne scasb
		sub eax, ecx
		dec eax
		dec eax
		pop edi
		ret
;
strchr: equ $-B.code  ; char *strchr(const char *s, int c);
index: equ $-B.code  ; char *index(const char *s, int c);
		push esi
		mov al, [esp+0xc]
		mov esi, [esp+8]
		mov ah, al
.next:		lodsb
		cmp al, ah
		je .found
		test al, al
		jnz .next
		xor esi, esi  ; Not found, we will return NULL.
		inc esi
.found:		xchg eax, esi  ; EAX := ESI; ESI := junk.
		dec eax
		pop esi
		ret
;
strcasecmp: equ $-B.code  ; int strcasecmp(const char *l, const char *r);
		or ecx, byte -1  ; ECX := -1.
		jmp strict short B.code+strncasecmp.have_ecx
;
; Manually written, 0x4a bytes.
strncasecmp: equ $-B.code  ; int strncasecmp(const char *l, const char *r, size_t n);
		mov ecx, [esp+3*4]  ; n (maximum number of bytes to scan).
strncasecmp.have_ecx: equ $-B.code
		push esi
		push edi
		push ebx
		mov esi, [esp+4*4]  ; Start of string l.
		mov edi, [esp+5*4]  ; Start of string r.
; ESI: Start of string l. Will be ruined.
; EDI: Start of string r. Will be ruined.
; ECX: n (maximum number of bytes to scan). Will be ruined.
; EBX: Scratch. Will be ruined.
; EDX: Scratch. Will be ruined.
; EAX: Scratch. The result is returned here.
		xor eax, eax
		xor ebx, ebx
.again:		jecxz .return
		dec ecx
		lodsb
		mov dh, al
		sub dh, 'A'
		cmp dh, 'Z'-'A'
		mov dl, al
		ja .2a
		or al, 0x20
.2a:		movzx eax, al
		mov bl, [edi]
		inc edi
		mov dh, bl
		sub dh, 'A'
		cmp dh, 'Z'-'A'
		mov dh, bl
		ja .2b
		or bl, 0x20
.2b:		sub eax, ebx  ; EAX := tolower(*l) - tolower(*r), zero-extended.
		jnz .return
		test dh, dh
		jz .return
		test dl, dl
		jnz .again
.return:	pop ebx
		pop edi
		pop esi
		ret
;
		times $$+0x8047552-$+B.code hlt  ; Padding.
exit: equ $-B.code
..@0x8047552: push esi
..@0x8047553: push ebx
..@0x8047554: sub esp, strict byte 0x18
..@0x8047557: db 0x8b, 0x74, 0x24, 0x24  ;; mov esi,[esp+0x24]
..@0x804755b: push strict dword __atexit_lock
..@0x8047560: push strict dword __pthread_return_0
..@0x8047565: db 0x8d, 0x5c, 0x24, 0x10  ;; lea ebx,[esp+0x10]
..@0x8047569: push ebx
..@0x804756a: call B.code+__pthread_return_void
..@0x804756f: db 0xc7, 0x04, 0x24, 0x80, 0xd1, 0x05, 0x08  ;; mov dword [esp],__atexit_lock
..@0x8047576: call B.code+__pthread_return_0
..@0x804757b: db 0xa1, 0x68, 0xea, 0x87, 0x09  ;; mov eax,[__exit_cleanup]
..@0x8047580: add esp, strict byte 0x10
..@0x8047583: db 0x85, 0xc0  ;; test eax,eax
..@0x8047585: db 0x74, 0x09  ;; jz 0x8047590
..@0x8047587: sub esp, strict byte 0xc
..@0x804758a: push esi
..@0x804758b: call eax
..@0x804758d: add esp, strict byte 0x10
..@0x8047590: push eax
..@0x8047591: push eax
..@0x8047592: push strict byte 0x1
..@0x8047594: push ebx
..@0x8047595: call B.code+__pthread_return_void
..@0x804759a: call B.code+__uClibc_fini
..@0x804759f: db 0xb8, 0xf9, 0x44, 0x04, 0x08  ;; mov eax,_stdio_term
..@0x80475a4: add esp, strict byte 0x10
..@0x80475a7: db 0x85, 0xc0  ;; test eax,eax
..@0x80475a9: db 0x74, 0x05  ;; jz 0x80475b0
..@0x80475ab: call B.code+_stdio_term
..@0x80475b0: sub esp, strict byte 0xc
..@0x80475b3: push esi
..@0x80475b4: call B.code+_exit
unused_sysconf: equ $-B.code
..@0x80475b9: times 0x80476fe-0x80475b9 hlt
__uClibc_fini: equ $-B.code
..@0x80476fe: push ebx
..@0x80476ff: db 0xbb, 0xdc, 0x4a, 0x04, 0x08  ;; mov ebx,0x8044adc
..@0x8047704: db 0x81, 0xeb, 0xdc, 0x4a, 0x04, 0x08  ;; sub ebx,0x8044adc
..@0x804770a: sub esp, strict byte 0x8
..@0x804770d: db 0xc1, 0xfb, 0x02  ;; sar ebx,byte 0x2
..@0x8047710: db 0xeb, 0x07  ;; jmp short 0x8047719
..@0x8047712: db 0xff, 0x14, 0x9d, 0xdc, 0x4a, 0x04, 0x08  ;; call [ebx*4+0x8044adc]
..@0x8047719: dec ebx
..@0x804771a: cmp ebx, strict byte -0x1
..@0x804771d: db 0x75, 0xf3  ;; jnz 0x8047712
..@0x804771f: db 0xa1, 0x78, 0xea, 0x87, 0x09  ;; mov eax,[__app_fini]
..@0x8047724: db 0x85, 0xc0  ;; test eax,eax
..@0x8047726: db 0x74, 0x02  ;; jz 0x804772a
..@0x8047728: call eax
..@0x804772a: db 0x8b, 0x0d, 0x7c, 0xea, 0x87, 0x09  ;; mov ecx,[__rtld_fini]
..@0x8047730: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8047732: db 0x74, 0x05  ;; jz 0x8047739
..@0x8047734: pop ebx
..@0x8047735: pop eax
..@0x8047736: pop ebx
..@0x8047737: db 0xff, 0xe1  ;; jmp ecx
..@0x8047739: pop eax
..@0x804773a: pop edx
..@0x804773b: pop ebx
..@0x804773c: ret
__pthread_mutex_init: equ $-B.code
__pthread_mutex_lock: equ $-B.code
__pthread_mutex_trylock: equ $-B.code
__pthread_mutex_unlock: equ $-B.code
__pthread_return_0: equ $-B.code
..@0x804773d: db 0x31, 0xc0  ;; xor eax,eax
..@0x804773f: ret
_pthread_cleanup_pop_restore: equ $-B.code
_pthread_cleanup_push_defer: equ $-B.code
__pthread_return_void: equ $-B.code
..@0x8047740: ret
__check_one_fd: equ $-B.code
..@0x8047741: push esi
..@0x8047742: db 0x89, 0xc6  ;; mov esi,eax
..@0x8047744: push ebx
..@0x8047745: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8047747: sub esp, strict byte 0xc
..@0x804774a: push strict byte 0x1
..@0x804774c: push eax
..@0x804774d: call B.code+fcntl
..@0x8047752: add esp, strict byte 0x10
..@0x8047755: inc eax
..@0x8047756: db 0x75, 0x19  ;; jnz 0x8047771
..@0x8047758: push eax
..@0x8047759: push eax
..@0x804775a: push ebx
..@0x804775b: push strict dword 0x804256d
..@0x8047760: call B.code+open
..@0x8047765: add esp, strict byte 0x10
..@0x8047768: db 0x39, 0xf0  ;; cmp eax,esi
..@0x804776a: db 0x74, 0x05  ;; jz 0x8047771
..@0x804776c: call B.code+abort
..@0x8047771: pop eax
..@0x8047772: pop ebx
..@0x8047773: pop esi
..@0x8047774: ret
__uClibc_init: equ $-B.code
..@0x8047775: sub esp, strict byte 0xc
..@0x8047778: db 0x80, 0x3d, 0x80, 0xea, 0x87, 0x09, 0x00  ;; cmp byte [is_uClibc_jnit_called],0x0
..@0x804777f: db 0x75, 0x30  ;; jnz 0x80477b1
..@0x8047781: mov eax, __pthread_initialize_minimal  ; NULL now.
..@0x8047786: db 0x85, 0xc0  ;; test eax,eax
..@0x8047788: db 0xc6, 0x05, 0x80, 0xea, 0x87, 0x09, 0x01  ;; mov byte [is_uClibc_jnit_called],0x1
..@0x804778f: db 0xc7, 0x05, 0x74, 0xea, 0x87, 0x09, 0x00, 0x10, 0x00, 0x00  ;; mov dword [__pagesize],0x1000  ; PAGE_SIZE == 0x1000.
..@0x8047799: db 0x74, 0x05  ;; jz 0x80477a0
..@0x804779b: call B.code+__pthread_initialize_minimal  ; Never called, because of the NULL check above.
..@0x80477a0: mov eax, _stdio_init
..@0x80477a5: db 0x85, 0xc0  ;; test eax,eax
..@0x80477a7: db 0x74, 0x08  ;; jz 0x80477b1  ; Always false (_stdio_init != NULL).
..@0x80477a9: add esp, strict byte 0xc
..@0x80477ac: jmp strict near B.code+_stdio_init
..@0x80477b1: add esp, strict byte 0xc
..@0x80477b4: ret
__uClibc_main: equ $-B.code
..@0x80477b5: push ebp
..@0x80477b6: push edi
..@0x80477b7: push esi
..@0x80477b8: push ebx
..@0x80477b9: db 0x81, 0xec, 0x90, 0x00, 0x00, 0x00  ;; sub esp,0x90
..@0x80477bf: db 0x8b, 0x84, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xbc]
..@0x80477c6: db 0x8b, 0xbc, 0x24, 0xac, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xac]
..@0x80477cd: db 0x8b, 0x94, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xa8]
..@0x80477d4: db 0x8b, 0xac, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov ebp,[esp+0xb0]
..@0x80477db: db 0xa3, 0x6c, 0xea, 0x87, 0x09  ;; mov [__libc_stack_end],eax
..@0x80477e0: db 0x8b, 0x84, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xb8]
..@0x80477e7: db 0xa3, 0x7c, 0xea, 0x87, 0x09  ;; mov [__rtld_fini],eax
..@0x80477ec: db 0x8d, 0x04, 0x97  ;; lea eax,[edi+edx*4]
..@0x80477ef: db 0x8d, 0x50, 0x04  ;; lea edx,[eax+0x4]
..@0x80477f2: db 0x89, 0x15, 0x70, 0xea, 0x87, 0x09  ;; mov [__environ],edx
..@0x80477f8: db 0x3b, 0x17  ;; cmp edx,[edi]
..@0x80477fa: push strict byte 0x78
..@0x80477fc: push strict byte 0x0
..@0x80477fe: db 0x0f, 0x45, 0xc2  ;; cmovnz eax,edx
..@0x8047801: db 0xa3, 0x70, 0xea, 0x87, 0x09  ;; mov [__environ],eax
..@0x8047806: db 0x8d, 0x44, 0x24, 0x20  ;; lea eax,[esp+0x20]
..@0x804780a: push eax
..@0x804780b: call B.code+memset
..@0x8047810: db 0xa1, 0x70, 0xea, 0x87, 0x09  ;; mov eax,[__environ]
..@0x8047815: add esp, strict byte 0x10
..@0x8047818: db 0x83, 0x38, 0x00  ;; cmp dword [eax],byte +0x0
..@0x804781b: db 0x8d, 0x40, 0x04  ;; lea eax,[eax+0x4]
..@0x804781e: db 0x75, 0xf8  ;; jnz 0x8047818
..@0x8047820: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047822: db 0xeb, 0x1b  ;; jmp short 0x804783f
..@0x8047824: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8047826: cmp eax, strict byte 0xe
..@0x8047829: db 0x77, 0x11  ;; ja 0x804783c
..@0x804782b: push edx
..@0x804782c: push strict byte 0x8
..@0x804782e: push ebx
..@0x804782f: db 0x8d, 0x44, 0xc4, 0x20  ;; lea eax,[esp+eax*8+0x20]
..@0x8047833: push eax
..@0x8047834: call B.code+memcpy
..@0x8047839: add esp, strict byte 0x10
..@0x804783c: add ebx, strict byte 0x8
..@0x804783f: db 0x83, 0x3b, 0x00  ;; cmp dword [ebx],byte +0x0
..@0x8047842: db 0x75, 0xe0  ;; jnz 0x8047824
..@0x8047844: db 0x8d, 0x44, 0x24, 0x14  ;; lea eax,[esp+0x14]
..@0x8047848: call B.code+_dl_aux_init
..@0x804784d: call B.code+__uClibc_init
..@0x8047852: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]  ; Gets AT_PAGESZ (page size) from auxv. It will always be 0x1000 (4 KiB).
..@0x8047856: db 0xba, 0x00, 0x10, 0x00, 0x00  ;; mov edx,0x1000  ; Default page size.
..@0x804785b: db 0x85, 0xc0  ;; test eax,eax
..@0x804785d: db 0x0f, 0x44, 0xc2  ;; cmovz eax,edx
..@0x8047860: db 0x83, 0x7c, 0x24, 0x70, 0xff  ;; cmp dword [esp+0x70],byte -0x1
..@0x8047865: db 0xa3, 0x74, 0xea, 0x87, 0x09  ;; mov [__pagesize],eax
..@0x804786a: db 0x75, 0x20  ;; jnz 0x804788c
..@0x804786c: call B.code+getuid
..@0x8047871: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047873: call B.code+geteuid
..@0x8047878: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x804787a: db 0x75, 0x2f  ;; jnz 0x80478ab
..@0x804787c: call B.code+getgid
..@0x8047881: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047883: call B.code+getegid
..@0x8047888: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x804788a: db 0x75, 0x1f  ;; jnz 0x80478ab
..@0x804788c: db 0x8b, 0x44, 0x24, 0x70  ;; mov eax,[esp+0x70]
..@0x8047890: cmp eax, strict byte -0x1
..@0x8047893: db 0x74, 0x40  ;; jz 0x80478d5
..@0x8047895: db 0x3b, 0x44, 0x24, 0x78  ;; cmp eax,[esp+0x78]
..@0x8047899: db 0x75, 0x10  ;; jnz 0x80478ab
..@0x804789b: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x80478a2: db 0x3b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00  ;; cmp eax,[esp+0x88]
..@0x80478a9: db 0x74, 0x2a  ;; jz 0x80478d5
..@0x80478ab: db 0xba, 0x00, 0x00, 0x02, 0x00  ;; mov edx,0x20000
..@0x80478b0: db 0x31, 0xc0  ;; xor eax,eax
..@0x80478b2: call B.code+__check_one_fd
..@0x80478b7: db 0xba, 0x02, 0x00, 0x02, 0x00  ;; mov edx,0x20002
..@0x80478bc: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80478c1: call B.code+__check_one_fd
..@0x80478c6: db 0xba, 0x02, 0x00, 0x02, 0x00  ;; mov edx,0x20002
..@0x80478cb: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x80478d0: call B.code+__check_one_fd
..@0x80478d5: db 0x8b, 0x07  ;; mov eax,[edi]
..@0x80478d7: db 0xbe, 0xdc, 0x4a, 0x04, 0x08  ;; mov esi,0x8044adc
..@0x80478dc: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80478de: db 0x81, 0xee, 0xdc, 0x4a, 0x04, 0x08  ;; sub esi,0x8044adc
..@0x80478e4: db 0xc1, 0xfe, 0x02  ;; sar esi,byte 0x2
..@0x80478e7: db 0xa3, 0x98, 0xd1, 0x05, 0x08  ;; mov [__uclibc_progname],eax
..@0x80478ec: db 0x8b, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xb0]
..@0x80478f3: db 0xa3, 0x78, 0xea, 0x87, 0x09  ;; mov [__app_fini],eax
..@0x80478f8: db 0xeb, 0x08  ;; jmp short 0x8047902
..@0x80478fa: db 0xff, 0x14, 0x9d, 0xdc, 0x4a, 0x04, 0x08  ;; call [ebx*4+0x8044adc]
..@0x8047901: inc ebx
..@0x8047902: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8047904: db 0x72, 0xf4  ;; jc 0x80478fa
..@0x8047906: db 0x85, 0xed  ;; test ebp,ebp
..@0x8047908: db 0x74, 0x02  ;; jz 0x804790c
..@0x804790a: call ebp
..@0x804790c: db 0xbe, 0xdc, 0x4a, 0x04, 0x08  ;; mov esi,0x8044adc
..@0x8047911: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8047913: db 0x81, 0xee, 0xdc, 0x4a, 0x04, 0x08  ;; sub esi,0x8044adc
..@0x8047919: db 0xc1, 0xfe, 0x02  ;; sar esi,byte 0x2
..@0x804791c: db 0xeb, 0x08  ;; jmp short 0x8047926
..@0x804791e: db 0xff, 0x14, 0x9d, 0xdc, 0x4a, 0x04, 0x08  ;; call [ebx*4+0x8044adc]
..@0x8047925: inc ebx
..@0x8047926: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8047928: db 0x72, 0xf4  ;; jc 0x804791e
..@0x804792a: db 0xb8, 0xed, 0x3d, 0x04, 0x08  ;; mov eax,__errno_location
..@0x804792f: db 0x85, 0xc0  ;; test eax,eax
..@0x8047931: db 0x74, 0x0b  ;; jz 0x804793e
..@0x8047933: call B.code+__errno_location
..@0x8047938: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x804793e: db 0xb8, 0x00, 0x00, 0x00, 0x00  ;; mov eax,0x0
..@0x8047943: db 0x85, 0xc0  ;; test eax,eax
..@0x8047945: db 0x74, 0x0b  ;; jz 0x8047952
..@0x8047947: call R.code+0x0
..@0x804794c: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x8047952: push eax
..@0x8047953: push dword [environ]
..@0x8047959: push edi
..@0x804795a: push dword [esp+0xb0]
..@0x8047961: db 0xff, 0x94, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; call [esp+0xb0]
..@0x8047968: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804796b: call B.code+exit
__GI_sigaction: equ $-B.code
sigaction: equ $-B.code
..@0x8047970: push esi
..@0x8047971: push ebx
..@0x8047972: db 0x81, 0xec, 0x24, 0x01, 0x00, 0x00  ;; sub esp,0x124
..@0x8047978: db 0x8b, 0x9c, 0x24, 0x34, 0x01, 0x00, 0x00  ;; mov ebx,[esp+0x134]
..@0x804797f: db 0x8b, 0xb4, 0x24, 0x38, 0x01, 0x00, 0x00  ;; mov esi,[esp+0x138]
..@0x8047986: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8047988: db 0x74, 0x50  ;; jz 0x80479da
..@0x804798a: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804798c: db 0x89, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov [esp+0x98],eax
..@0x8047993: db 0x8d, 0x43, 0x04  ;; lea eax,[ebx+0x4]
..@0x8047996: push edx
..@0x8047997: push strict dword 0x80
..@0x804799c: push eax
..@0x804799d: db 0x8d, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; lea eax,[esp+0xb0]
..@0x80479a4: push eax
..@0x80479a5: call B.code+memcpy
..@0x80479aa: db 0x8b, 0x83, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[ebx+0x84]
..@0x80479b0: db 0xba, 0x0b, 0x3b, 0x04, 0x08  ;; mov edx,__restore
..@0x80479b5: db 0x0d, 0x00, 0x00, 0x00, 0x04  ;; or eax,0x4000000
..@0x80479ba: db 0x89, 0x84, 0x24, 0xac, 0x00, 0x00, 0x00  ;; mov [esp+0xac],eax
..@0x80479c1: add esp, strict byte 0x10
..@0x80479c4: db 0xb8, 0x04, 0x3b, 0x04, 0x08  ;; mov eax,__restore_rt
..@0x80479c9: db 0xf6, 0x83, 0x84, 0x00, 0x00, 0x00, 0x04  ;; test byte [ebx+0x84],0x4
..@0x80479d0: db 0x0f, 0x44, 0xc2  ;; cmovz eax,edx
..@0x80479d3: db 0x89, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00  ;; mov [esp+0xa0],eax
..@0x80479da: db 0x31, 0xd2  ;; xor edx,edx
..@0x80479dc: db 0x85, 0xf6  ;; test esi,esi
..@0x80479de: db 0x74, 0x04  ;; jz 0x80479e4
..@0x80479e0: db 0x8d, 0x54, 0x24, 0x0c  ;; lea edx,[esp+0xc]
..@0x80479e4: db 0x31, 0xc0  ;; xor eax,eax
..@0x80479e6: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80479e8: db 0x74, 0x07  ;; jz 0x80479f1
..@0x80479ea: db 0x8d, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00  ;; lea eax,[esp+0x98]
..@0x80479f1: push strict byte 0x8
..@0x80479f3: push edx
..@0x80479f4: push eax
..@0x80479f5: push dword [esp+0x13c]
..@0x80479fc: call B.code+__syscall_rt_sigaction
..@0x8047a01: add esp, strict byte 0x10
..@0x8047a04: db 0x85, 0xf6  ;; test esi,esi
..@0x8047a06: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047a08: db 0x74, 0x35  ;; jz 0x8047a3f
..@0x8047a0a: db 0x85, 0xc0  ;; test eax,eax
..@0x8047a0c: db 0x78, 0x31  ;; js 0x8047a3f
..@0x8047a0e: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8047a12: db 0x89, 0x06  ;; mov [esi],eax
..@0x8047a14: push eax
..@0x8047a15: push strict dword 0x80
..@0x8047a1a: db 0x8d, 0x44, 0x24, 0x20  ;; lea eax,[esp+0x20]
..@0x8047a1e: push eax
..@0x8047a1f: db 0x8d, 0x46, 0x04  ;; lea eax,[esi+0x4]
..@0x8047a22: push eax
..@0x8047a23: call B.code+memcpy
..@0x8047a28: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8047a2c: db 0x89, 0x86, 0x84, 0x00, 0x00, 0x00  ;; mov [esi+0x84],eax
..@0x8047a32: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8047a36: add esp, strict byte 0x10
..@0x8047a39: db 0x89, 0x86, 0x88, 0x00, 0x00, 0x00  ;; mov [esi+0x88],eax
..@0x8047a3f: db 0x81, 0xc4, 0x24, 0x01, 0x00, 0x00  ;; add esp,0x124
..@0x8047a45: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047a47: pop ebx
..@0x8047a48: pop esi
..@0x8047a49: ret
fcntl: equ $-B.code
..@0x8047a4a: push edi
..@0x8047a4b: push ebx
..@0x8047a4c: sub esp, strict byte 0x14
..@0x8047a4f: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x8047a53: db 0x8d, 0x44, 0x24, 0x2c  ;; lea eax,[esp+0x2c]
..@0x8047a57: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x8047a5b: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8047a5f: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8047a63: db 0x8d, 0x41, 0xf4  ;; lea eax,[ecx-0xc]
..@0x8047a66: cmp eax, strict byte 0x2
..@0x8047a69: db 0x77, 0x0e  ;; ja 0x8047a79
..@0x8047a6b: push eax
..@0x8047a6c: push edx
..@0x8047a6d: push ecx
..@0x8047a6e: push edi
..@0x8047a6f: call B.code+fcntl64
..@0x8047a74: add esp, strict byte 0x10
..@0x8047a77: db 0xeb, 0x22  ;; jmp short 0x8047a9b
..@0x8047a79: push ebx
..@0x8047a7a: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047a7c: db 0xb8, 0x37, 0x00, 0x00, 0x00  ;; mov eax,0x37
..@0x8047a81: int 0x80  ; Linux i386 syscall.
..@0x8047a83: pop ebx
..@0x8047a84: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047a89: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047a8b: db 0x76, 0x0c  ;; jna 0x8047a99
..@0x8047a8d: call B.code+__errno_location
..@0x8047a92: db 0xf7, 0xdb  ;; neg ebx
..@0x8047a94: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047a96: or ebx, strict byte -0x1
..@0x8047a99: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047a9b: add esp, strict byte 0x14
..@0x8047a9e: pop ebx
..@0x8047a9f: pop edi
..@0x8047aa0: ret
fcntl64: equ $-B.code
..@0x8047aa1: push edi
..@0x8047aa2: sub esp, strict byte 0x18
..@0x8047aa5: db 0x8d, 0x44, 0x24, 0x2c  ;; lea eax,[esp+0x2c]
..@0x8047aa9: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8047aad: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x8047ab1: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x8047ab5: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8047ab9: push ebx
..@0x8047aba: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047abc: db 0xb8, 0xdd, 0x00, 0x00, 0x00  ;; mov eax,0xdd
..@0x8047ac1: int 0x80  ; Linux i386 syscall.
..@0x8047ac3: pop ebx
..@0x8047ac4: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047ac9: db 0x89, 0xc7  ;; mov edi,eax
..@0x8047acb: db 0x76, 0x0c  ;; jna 0x8047ad9
..@0x8047acd: call B.code+__errno_location
..@0x8047ad2: db 0xf7, 0xdf  ;; neg edi
..@0x8047ad4: db 0x89, 0x38  ;; mov [eax],edi
..@0x8047ad6: or edi, strict byte -0x1
..@0x8047ad9: add esp, strict byte 0x18
..@0x8047adc: db 0x89, 0xf8  ;; mov eax,edi
..@0x8047ade: pop edi
..@0x8047adf: ret
__syscall_rt_sigaction: equ $-B.code
..@0x8047ae0: push edi
..@0x8047ae1: push esi
..@0x8047ae2: sub esp, strict byte 0x4
..@0x8047ae5: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8047ae9: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8047aed: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8047af1: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8047af5: push ebx
..@0x8047af6: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047af8: db 0xb8, 0xae, 0x00, 0x00, 0x00  ;; mov eax,0xae
..@0x8047afd: int 0x80  ; Linux i386 syscall.
..@0x8047aff: pop ebx
..@0x8047b00: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047b05: db 0x89, 0xc6  ;; mov esi,eax
..@0x8047b07: db 0x76, 0x0c  ;; jna 0x8047b15
..@0x8047b09: call B.code+__errno_location
..@0x8047b0e: db 0xf7, 0xde  ;; neg esi
..@0x8047b10: db 0x89, 0x30  ;; mov [eax],esi
..@0x8047b12: or esi, strict byte -0x1
..@0x8047b15: pop edx
..@0x8047b16: db 0x89, 0xf0  ;; mov eax,esi
..@0x8047b18: pop esi
..@0x8047b19: pop edi
..@0x8047b1a: ret
_exit: equ $-B.code
..@0x8047b1b: push edi
..@0x8047b1c: push ebx
..@0x8047b1d: sub esp, strict byte 0x4
..@0x8047b20: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8047b24: push ebx
..@0x8047b25: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047b27: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8047b2c: int 0x80  ; Linux i386 syscall.
..@0x8047b2e: pop ebx
..@0x8047b2f: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047b34: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047b36: db 0x76, 0xec  ;; jna 0x8047b24
..@0x8047b38: call B.code+__errno_location
..@0x8047b3d: db 0xf7, 0xdb  ;; neg ebx
..@0x8047b3f: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047b41: db 0xeb, 0xe1  ;; jmp short 0x8047b24
unused_clock_getres: equ $-B.code
..@0x8047b43: times 0x8047b75-0x8047b43 hlt  ; Padding.
close: equ $-B.code
..@0x8047b75: push edi
..@0x8047b76: sub esp, strict byte 0x8
..@0x8047b79: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8047b7d: push ebx
..@0x8047b7e: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047b80: db 0xb8, 0x06, 0x00, 0x00, 0x00  ;; mov eax,0x6
..@0x8047b85: int 0x80  ; Linux i386 syscall.
..@0x8047b87: pop ebx
..@0x8047b88: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047b8d: db 0x89, 0xc7  ;; mov edi,eax
..@0x8047b8f: db 0x76, 0x0c  ;; jna 0x8047b9d
..@0x8047b91: call B.code+__errno_location
..@0x8047b96: db 0xf7, 0xdf  ;; neg edi
..@0x8047b98: db 0x89, 0x38  ;; mov [eax],edi
..@0x8047b9a: or edi, strict byte -0x1
..@0x8047b9d: pop edx
..@0x8047b9e: db 0x89, 0xf8  ;; mov eax,edi
..@0x8047ba0: pop ecx
..@0x8047ba1: pop edi
..@0x8047ba2: ret
unused_getdtablesize: equ $-B.code
..@0x8047ba3: times 0x8047bc8-0x8047ba3 hlt  ; Padding.
getegid: equ $-B.code
..@0x8047bc8: push ebx
..@0x8047bc9: sub esp, strict byte 0x8
..@0x8047bcc: db 0xb8, 0xca, 0x00, 0x00, 0x00  ;; mov eax,0xca
..@0x8047bd1: int 0x80  ; Linux i386 syscall.
..@0x8047bd3: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047bd8: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047bda: db 0x76, 0x0c  ;; jna 0x8047be8
..@0x8047bdc: call B.code+__errno_location
..@0x8047be1: db 0xf7, 0xdb  ;; neg ebx
..@0x8047be3: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047be5: or ebx, strict byte -0x1
..@0x8047be8: pop edx
..@0x8047be9: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047beb: pop ecx
..@0x8047bec: pop ebx
..@0x8047bed: ret
geteuid: equ $-B.code
..@0x8047bee: push ebx
..@0x8047bef: sub esp, strict byte 0x8
..@0x8047bf2: db 0xb8, 0xc9, 0x00, 0x00, 0x00  ;; mov eax,0xc9
..@0x8047bf7: int 0x80  ; Linux i386 syscall.
..@0x8047bf9: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047bfe: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047c00: db 0x76, 0x0c  ;; jna 0x8047c0e
..@0x8047c02: call B.code+__errno_location
..@0x8047c07: db 0xf7, 0xdb  ;; neg ebx
..@0x8047c09: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047c0b: or ebx, strict byte -0x1
..@0x8047c0e: pop edx
..@0x8047c0f: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047c11: pop ecx
..@0x8047c12: pop ebx
..@0x8047c13: ret
getgid: equ $-B.code
..@0x8047c14: push ebx
..@0x8047c15: sub esp, strict byte 0x8
..@0x8047c18: db 0xb8, 0xc8, 0x00, 0x00, 0x00  ;; mov eax,0xc8
..@0x8047c1d: int 0x80  ; Linux i386 syscall.
..@0x8047c1f: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047c24: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047c26: db 0x76, 0x0c  ;; jna 0x8047c34
..@0x8047c28: call B.code+__errno_location
..@0x8047c2d: db 0xf7, 0xdb  ;; neg ebx
..@0x8047c2f: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047c31: or ebx, strict byte -0x1
..@0x8047c34: pop edx
..@0x8047c35: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047c37: pop ecx
..@0x8047c38: pop ebx
..@0x8047c39: ret
unused_getpagesize: equ $-B.code
..@0x8047c3a: times 0x8047c4b-0x8047c3a hlt  ; Padding.
unused_getrlimit: equ $-B.code
..@0x8047c4b: times 0x8047c7d-0x8047c4b hlt  ; Padding.
getuid: equ $-B.code
..@0x8047c7d: push ebx
..@0x8047c7e: sub esp, strict byte 0x8
..@0x8047c81: db 0xb8, 0xc7, 0x00, 0x00, 0x00  ;; mov eax,0xc7
..@0x8047c86: int 0x80  ; Linux i386 syscall.
..@0x8047c88: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047c8d: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047c8f: db 0x76, 0x0c  ;; jna 0x8047c9d
..@0x8047c91: call B.code+__errno_location
..@0x8047c96: db 0xf7, 0xdb  ;; neg ebx
..@0x8047c98: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047c9a: or ebx, strict byte -0x1
..@0x8047c9d: pop edx
..@0x8047c9e: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047ca0: pop ecx
..@0x8047ca1: pop ebx
..@0x8047ca2: ret
ioctl: equ $-B.code
..@0x8047ca3: push edi
..@0x8047ca4: sub esp, strict byte 0x18
..@0x8047ca7: db 0x8d, 0x44, 0x24, 0x2c  ;; lea eax,[esp+0x2c]
..@0x8047cab: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8047caf: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x8047cb3: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x8047cb7: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8047cbb: push ebx
..@0x8047cbc: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047cbe: db 0xb8, 0x36, 0x00, 0x00, 0x00  ;; mov eax,0x36
..@0x8047cc3: int 0x80  ; Linux i386 syscall.
..@0x8047cc5: pop ebx
..@0x8047cc6: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047ccb: db 0x89, 0xc7  ;; mov edi,eax
..@0x8047ccd: db 0x76, 0x0c  ;; jna 0x8047cdb
..@0x8047ccf: call B.code+__errno_location
..@0x8047cd4: db 0xf7, 0xdf  ;; neg edi
..@0x8047cd6: db 0x89, 0x38  ;; mov [eax],edi
..@0x8047cd8: or edi, strict byte -0x1
..@0x8047cdb: add esp, strict byte 0x18
..@0x8047cde: db 0x89, 0xf8  ;; mov eax,edi
..@0x8047ce0: pop edi
..@0x8047ce1: ret
lseek64: equ $-B.code
..@0x8047ce2: push edi
..@0x8047ce3: push esi
..@0x8047ce4: push ebx
..@0x8047ce5: sub esp, strict byte 0x10
..@0x8047ce8: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8047cec: db 0x8d, 0x74, 0x24, 0x08  ;; lea esi,[esp+0x8]
..@0x8047cf0: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8047cf4: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8047cf8: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x8047cfc: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8047cfe: push ebx
..@0x8047cff: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047d01: db 0xb8, 0x8c, 0x00, 0x00, 0x00  ;; mov eax,0x8c
..@0x8047d06: int 0x80  ; Linux i386 syscall.
..@0x8047d08: pop ebx
..@0x8047d09: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047d0e: db 0x89, 0xc6  ;; mov esi,eax
..@0x8047d10: db 0x76, 0x0e  ;; jna 0x8047d20
..@0x8047d12: call B.code+__errno_location
..@0x8047d17: db 0xf7, 0xde  ;; neg esi
..@0x8047d19: db 0x89, 0x30  ;; mov [eax],esi
..@0x8047d1b: or esi, strict byte -0x1
..@0x8047d1e: db 0xeb, 0x04  ;; jmp short 0x8047d24
..@0x8047d20: db 0x85, 0xc0  ;; test eax,eax
..@0x8047d22: db 0x74, 0x05  ;; jz 0x8047d29
..@0x8047d24: db 0x89, 0xf0  ;; mov eax,esi
..@0x8047d26: cdq
..@0x8047d27: db 0xeb, 0x08  ;; jmp short 0x8047d31
..@0x8047d29: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8047d2d: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x8047d31: add esp, strict byte 0x10
..@0x8047d34: pop ebx
..@0x8047d35: pop esi
..@0x8047d36: pop edi
..@0x8047d37: ret
mremap: equ $-B.code
..@0x8047d38: push edi
..@0x8047d39: push esi
..@0x8047d3a: sub esp, strict byte 0x4
..@0x8047d3d: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8047d41: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8047d45: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8047d49: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8047d4d: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8047d51: push ebx
..@0x8047d52: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047d54: db 0xb8, 0xa3, 0x00, 0x00, 0x00  ;; mov eax,0xa3
..@0x8047d59: int 0x80  ; Linux i386 syscall.
..@0x8047d5b: pop ebx
..@0x8047d5c: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047d61: db 0x89, 0xc6  ;; mov esi,eax
..@0x8047d63: db 0x76, 0x0c  ;; jna 0x8047d71
..@0x8047d65: call B.code+__errno_location
..@0x8047d6a: db 0xf7, 0xde  ;; neg esi
..@0x8047d6c: db 0x89, 0x30  ;; mov [eax],esi
..@0x8047d6e: or esi, strict byte -0x1
..@0x8047d71: pop edx
..@0x8047d72: db 0x89, 0xf0  ;; mov eax,esi
..@0x8047d74: pop esi
..@0x8047d75: pop edi
..@0x8047d76: ret
munmap: equ $-B.code
..@0x8047d77: push ebx
..@0x8047d78: sub esp, strict byte 0x8
..@0x8047d7b: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x8047d7f: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8047d83: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8047d85: db 0xb8, 0x5b, 0x00, 0x00, 0x00  ;; mov eax,0x5b
..@0x8047d8a: int 0x80  ; Linux i386 syscall.
..@0x8047d8c: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8047d8e: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047d93: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047d95: db 0x76, 0x0c  ;; jna 0x8047da3
..@0x8047d97: call B.code+__errno_location
..@0x8047d9c: db 0xf7, 0xdb  ;; neg ebx
..@0x8047d9e: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047da0: or ebx, strict byte -0x1
..@0x8047da3: pop edx
..@0x8047da4: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047da6: pop ecx
..@0x8047da7: pop ebx
..@0x8047da8: ret
open: equ $-B.code
..@0x8047da9: push edi
..@0x8047daa: db 0x31, 0xc0  ;; xor eax,eax
..@0x8047dac: push ebx
..@0x8047dad: sub esp, strict byte 0x14
..@0x8047db0: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x8047db4: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8047db8: db 0xf6, 0xc1, 0x40  ;; test cl,0x40
..@0x8047dbb: db 0x74, 0x0c  ;; jz 0x8047dc9
..@0x8047dbd: db 0x8d, 0x44, 0x24, 0x2c  ;; lea eax,[esp+0x2c]
..@0x8047dc1: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x8047dc5: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8047dc9: db 0x0f, 0xb7, 0xd0  ;; movzx edx,ax
..@0x8047dcc: push ebx
..@0x8047dcd: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047dcf: db 0xb8, 0x05, 0x00, 0x00, 0x00  ;; mov eax,0x5
..@0x8047dd4: int 0x80  ; Linux i386 syscall.
..@0x8047dd6: pop ebx
..@0x8047dd7: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047ddc: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047dde: db 0x76, 0x0c  ;; jna 0x8047dec
..@0x8047de0: call B.code+__errno_location
..@0x8047de5: db 0xf7, 0xdb  ;; neg ebx
..@0x8047de7: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8047de9: or ebx, strict byte -0x1
..@0x8047dec: add esp, strict byte 0x14
..@0x8047def: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047df1: pop ebx
..@0x8047df2: pop edi
..@0x8047df3: ret
creat: equ $-B.code
..@0x8047df4: sub esp, strict byte 0x10
..@0x8047df7: push dword [esp+0x18]
..@0x8047dfb: push strict dword 0x241
..@0x8047e00: push dword [esp+0x1c]
..@0x8047e04: call B.code+open
..@0x8047e09: add esp, strict byte 0x1c
..@0x8047e0c: ret
sbrk: equ $-B.code
..@0x8047e0d: push esi
..@0x8047e0e: push ebx
..@0x8047e0f: sub esp, strict byte 0x4
..@0x8047e12: db 0x83, 0x3d, 0x8c, 0xea, 0x87, 0x09, 0x00  ;; cmp dword [__curbrk],byte +0x0
..@0x8047e19: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x8047e1d: db 0x75, 0x11  ;; jnz 0x8047e30
..@0x8047e1f: sub esp, strict byte 0xc
..@0x8047e22: push strict byte 0x0
..@0x8047e24: call B.code+brk
..@0x8047e29: add esp, strict byte 0x10
..@0x8047e2c: db 0x85, 0xc0  ;; test eax,eax
..@0x8047e2e: db 0x78, 0x22  ;; js 0x8047e52
..@0x8047e30: db 0x85, 0xf6  ;; test esi,esi
..@0x8047e32: db 0xa1, 0x8c, 0xea, 0x87, 0x09  ;; mov eax,[__curbrk]
..@0x8047e37: db 0x75, 0x04  ;; jnz 0x8047e3d
..@0x8047e39: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047e3b: db 0xeb, 0x18  ;; jmp short 0x8047e55
..@0x8047e3d: sub esp, strict byte 0xc
..@0x8047e40: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8047e42: db 0x8d, 0x04, 0x30  ;; lea eax,[eax+esi]
..@0x8047e45: push eax
..@0x8047e46: call B.code+brk
..@0x8047e4b: add esp, strict byte 0x10
..@0x8047e4e: db 0x85, 0xc0  ;; test eax,eax
..@0x8047e50: db 0x79, 0x03  ;; jns 0x8047e55
..@0x8047e52: or ebx, strict byte -0x1
..@0x8047e55: pop edx
..@0x8047e56: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8047e58: pop ebx
..@0x8047e59: pop esi
..@0x8047e5a: ret
sigprocmask: equ $-B.code
..@0x8047e5b: push edi
..@0x8047e5c: push esi
..@0x8047e5d: sub esp, strict byte 0x4
..@0x8047e60: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8047e64: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8047e68: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8047e6c: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8047e6e: db 0x74, 0x15  ;; jz 0x8047e85
..@0x8047e70: cmp edi, strict byte 0x2
..@0x8047e73: db 0x76, 0x10  ;; jna 0x8047e85
..@0x8047e75: call B.code+__errno_location
..@0x8047e7a: db 0xc7, 0x00, 0x16, 0x00, 0x00, 0x00  ;; mov dword [eax],0x16
..@0x8047e80: or eax, strict byte -0x1
..@0x8047e83: db 0xeb, 0x27  ;; jmp short 0x8047eac
..@0x8047e85: db 0xbe, 0x08, 0x00, 0x00, 0x00  ;; mov esi,0x8
..@0x8047e8a: push ebx
..@0x8047e8b: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8047e8d: db 0xb8, 0xaf, 0x00, 0x00, 0x00  ;; mov eax,0xaf
..@0x8047e92: int 0x80  ; Linux i386 syscall.
..@0x8047e94: pop ebx
..@0x8047e95: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8047e9a: db 0x89, 0xc6  ;; mov esi,eax
..@0x8047e9c: db 0x76, 0x0c  ;; jna 0x8047eaa
..@0x8047e9e: call B.code+__errno_location
..@0x8047ea3: db 0xf7, 0xde  ;; neg esi
..@0x8047ea5: db 0x89, 0x30  ;; mov [eax],esi
..@0x8047ea7: or esi, strict byte -0x1
..@0x8047eaa: db 0x89, 0xf0  ;; mov eax,esi
..@0x8047eac: pop edx
..@0x8047ead: pop esi
..@0x8047eae: pop edi
..@0x8047eaf: ret
unused_wcrs: equ $-B.code
..@0x8047eb0: times 0x8047f98-0x8047eb0 hlt  ; Unused, 0xe8 bytes.
__stdio_READ: equ $-B.code
..@0x8047f98: push ebx
..@0x8047f99: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8047f9b: sub esp, strict byte 0x8
..@0x8047f9e: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8047fa2: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8047fa6: db 0xf6, 0x03, 0x04  ;; test byte [ebx],0x4
..@0x8047fa9: db 0x75, 0x36  ;; jnz 0x8047fe1
..@0x8047fab: db 0x85, 0xd2  ;; test edx,edx
..@0x8047fad: db 0xb8, 0xff, 0xff, 0xff, 0x7f  ;; mov eax,0x7fffffff
..@0x8047fb2: db 0x0f, 0x48, 0xd0  ;; cmovs edx,eax
..@0x8047fb5: push eax
..@0x8047fb6: push edx
..@0x8047fb7: push dword [esp+0x1c]
..@0x8047fbb: push dword [ebx+0x4]
..@0x8047fbe: call B.code+read
..@0x8047fc3: add esp, strict byte 0x10
..@0x8047fc6: cmp eax, strict byte 0x0
..@0x8047fc9: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8047fcb: db 0x7f, 0x14  ;; jg 0x8047fe1
..@0x8047fcd: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8047fcf: db 0x75, 0x08  ;; jnz 0x8047fd9
..@0x8047fd1: or eax, strict byte 0x4
..@0x8047fd4: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8047fd7: db 0xeb, 0x08  ;; jmp short 0x8047fe1
..@0x8047fd9: or eax, strict byte 0x8
..@0x8047fdc: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8047fde: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8047fe1: pop edx
..@0x8047fe2: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8047fe4: pop ecx
..@0x8047fe5: pop ebx
..@0x8047fe6: ret
__stdio_WRITE: equ $-B.code
..@0x8047fe7: push ebp
..@0x8047fe8: push edi
..@0x8047fe9: push esi
..@0x8047fea: push ebx
..@0x8047feb: sub esp, strict byte 0xc
..@0x8047fee: db 0x8b, 0x6c, 0x24, 0x20  ;; mov ebp,[esp+0x20]
..@0x8047ff2: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x8047ff6: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8047ffa: cmp ebx, strict byte 0x0
..@0x8047ffd: db 0x74, 0x5c  ;; jz 0x804805b
..@0x8047fff: db 0xb8, 0xff, 0xff, 0xff, 0x7f  ;; mov eax,0x7fffffff
..@0x8048004: db 0x89, 0xde  ;; mov esi,ebx
..@0x8048006: push edx
..@0x8048007: db 0x0f, 0x4d, 0xc3  ;; cmovnl eax,ebx
..@0x804800a: push eax
..@0x804800b: push edi
..@0x804800c: push dword [ebp+0x4]
..@0x804800f: call B.code+write
..@0x8048014: add esp, strict byte 0x10
..@0x8048017: db 0x85, 0xc0  ;; test eax,eax
..@0x8048019: db 0x78, 0x06  ;; js 0x8048021
..@0x804801b: db 0x29, 0xc3  ;; sub ebx,eax
..@0x804801d: db 0x01, 0xc7  ;; add edi,eax
..@0x804801f: db 0xeb, 0xd9  ;; jmp short 0x8047ffa
..@0x8048021: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x8048024: db 0x8b, 0x55, 0x08  ;; mov edx,[ebp+0x8]
..@0x8048027: or eax, strict byte 0x8
..@0x804802a: db 0x66, 0x89, 0x45, 0x00  ;; mov [ebp+0x0],ax
..@0x804802e: db 0x8b, 0x45, 0x0c  ;; mov eax,[ebp+0xc]
..@0x8048031: db 0x29, 0xd0  ;; sub eax,edx
..@0x8048033: db 0x74, 0x22  ;; jz 0x8048057
..@0x8048035: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8048037: db 0x0f, 0x46, 0xf0  ;; cmovna esi,eax
..@0x804803a: db 0x8a, 0x07  ;; mov al,[edi]
..@0x804803c: db 0x3c, 0x0a  ;; cmp al,0xa
..@0x804803e: db 0x88, 0x02  ;; mov [edx],al
..@0x8048040: db 0x75, 0x06  ;; jnz 0x8048048
..@0x8048042: db 0xf6, 0x45, 0x01, 0x01  ;; test byte [ebp+0x1],0x1
..@0x8048046: db 0x75, 0x07  ;; jnz 0x804804f
..@0x8048048: inc edx
..@0x8048049: dec esi
..@0x804804a: db 0x74, 0x03  ;; jz 0x804804f
..@0x804804c: inc edi
..@0x804804d: db 0xeb, 0xeb  ;; jmp short 0x804803a
..@0x804804f: db 0x89, 0x55, 0x10  ;; mov [ebp+0x10],edx
..@0x8048052: db 0x2b, 0x55, 0x08  ;; sub edx,[ebp+0x8]
..@0x8048055: db 0x29, 0xd3  ;; sub ebx,edx
..@0x8048057: db 0x29, 0x5c, 0x24, 0x28  ;; sub [esp+0x28],ebx
..@0x804805b: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x804805f: add esp, strict byte 0xc
..@0x8048062: pop ebx
..@0x8048063: pop esi
..@0x8048064: pop edi
..@0x8048065: pop ebp
..@0x8048066: ret
__stdio_fwrite: equ $-B.code
..@0x8048067: push ebp
..@0x8048068: push edi
..@0x8048069: push esi
..@0x804806a: push ebx
..@0x804806b: sub esp, strict byte 0xc
..@0x804806e: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x8048072: db 0x8b, 0x6c, 0x24, 0x20  ;; mov ebp,[esp+0x20]
..@0x8048076: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x804807a: db 0xf6, 0x46, 0x01, 0x02  ;; test byte [esi+0x1],0x2
..@0x804807e: db 0x0f, 0x85, 0xab, 0x00, 0x00, 0x00  ;; jnz near 0x804812f
..@0x8048084: db 0x83, 0x7e, 0x04, 0xfe  ;; cmp dword [esi+0x4],byte -0x2
..@0x8048088: db 0x8b, 0x56, 0x10  ;; mov edx,[esi+0x10]
..@0x804808b: db 0x8b, 0x46, 0x0c  ;; mov eax,[esi+0xc]
..@0x804808e: db 0x75, 0x1d  ;; jnz 0x80480ad
..@0x8048090: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8048092: db 0x29, 0xd3  ;; sub ebx,edx
..@0x8048094: db 0x39, 0xdf  ;; cmp edi,ebx
..@0x8048096: push eax
..@0x8048097: db 0x0f, 0x46, 0xdf  ;; cmovna ebx,edi
..@0x804809a: push ebx
..@0x804809b: push ebp
..@0x804809c: push edx
..@0x804809d: call B.code+memcpy
..@0x80480a2: add esp, strict byte 0x10
..@0x80480a5: db 0x01, 0x5e, 0x10  ;; add [esi+0x10],ebx
..@0x80480a8: jmp strict near R.code+0x8048147
..@0x80480ad: db 0x29, 0xd0  ;; sub eax,edx
..@0x80480af: db 0x39, 0xc7  ;; cmp edi,eax
..@0x80480b1: db 0x77, 0x63  ;; ja 0x8048116
..@0x80480b3: push ecx
..@0x80480b4: push edi
..@0x80480b5: push ebp
..@0x80480b6: push edx
..@0x80480b7: call B.code+memcpy
..@0x80480bc: add esp, strict byte 0x10
..@0x80480bf: db 0x01, 0x7e, 0x10  ;; add [esi+0x10],edi
..@0x80480c2: db 0xf6, 0x46, 0x01, 0x01  ;; test byte [esi+0x1],0x1
..@0x80480c6: db 0x74, 0x7f  ;; jz 0x8048147
..@0x80480c8: push edx
..@0x80480c9: push edi
..@0x80480ca: push strict byte 0xa
..@0x80480cc: push ebp
..@0x80480cd: call B.code+memrchr
..@0x80480d2: add esp, strict byte 0x10
..@0x80480d5: db 0x85, 0xc0  ;; test eax,eax
..@0x80480d7: db 0x74, 0x6e  ;; jz 0x8048147
..@0x80480d9: sub esp, strict byte 0xc
..@0x80480dc: push esi
..@0x80480dd: call B.code+__stdio_wcommit
..@0x80480e2: add esp, strict byte 0x10
..@0x80480e5: db 0x85, 0xc0  ;; test eax,eax
..@0x80480e7: db 0x74, 0x5e  ;; jz 0x8048147
..@0x80480e9: db 0x39, 0xc7  ;; cmp edi,eax
..@0x80480eb: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80480ed: db 0x0f, 0x46, 0xdf  ;; cmovna ebx,edi
..@0x80480f0: db 0x89, 0xf8  ;; mov eax,edi
..@0x80480f2: db 0x29, 0xd8  ;; sub eax,ebx
..@0x80480f4: db 0x01, 0xc5  ;; add ebp,eax
..@0x80480f6: push eax
..@0x80480f7: push ebx
..@0x80480f8: push strict byte 0xa
..@0x80480fa: push ebp
..@0x80480fb: call B.code+memchr
..@0x8048100: add esp, strict byte 0x10
..@0x8048103: db 0x85, 0xc0  ;; test eax,eax
..@0x8048105: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048107: db 0x74, 0x3e  ;; jz 0x8048147
..@0x8048109: db 0x8d, 0x44, 0x1d, 0x00  ;; lea eax,[ebp+ebx+0x0]
..@0x804810d: db 0x29, 0xd0  ;; sub eax,edx
..@0x804810f: db 0x29, 0x46, 0x10  ;; sub [esi+0x10],eax
..@0x8048112: db 0x29, 0xc7  ;; sub edi,eax
..@0x8048114: db 0xeb, 0x31  ;; jmp short 0x8048147
..@0x8048116: db 0x3b, 0x56, 0x08  ;; cmp edx,[esi+0x8]
..@0x8048119: db 0x74, 0x14  ;; jz 0x804812f
..@0x804811b: sub esp, strict byte 0xc
..@0x804811e: push esi
..@0x804811f: call B.code+__stdio_wcommit
..@0x8048124: add esp, strict byte 0x10
..@0x8048127: db 0x85, 0xc0  ;; test eax,eax
..@0x8048129: db 0x74, 0x04  ;; jz 0x804812f
..@0x804812b: db 0x31, 0xff  ;; xor edi,edi
..@0x804812d: db 0xeb, 0x18  ;; jmp short 0x8048147
..@0x804812f: db 0x89, 0x7c, 0x24, 0x28  ;; mov [esp+0x28],edi
..@0x8048133: db 0x89, 0x6c, 0x24, 0x24  ;; mov [esp+0x24],ebp
..@0x8048137: db 0x89, 0x74, 0x24, 0x20  ;; mov [esp+0x20],esi
..@0x804813b: add esp, strict byte 0xc
..@0x804813e: pop ebx
..@0x804813f: pop esi
..@0x8048140: pop edi
..@0x8048141: pop ebp
..@0x8048142: jmp strict near B.code+__stdio_WRITE
..@0x8048147: add esp, strict byte 0xc
..@0x804814a: db 0x89, 0xf8  ;; mov eax,edi
..@0x804814c: pop ebx
..@0x804814d: pop esi
..@0x804814e: pop edi
..@0x804814f: pop ebp
..@0x8048150: ret
__stdio_rfill: equ $-B.code
..@0x8048151: push ebx
..@0x8048152: sub esp, strict byte 0xc
..@0x8048155: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x8048159: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x804815c: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x804815f: db 0x29, 0xd0  ;; sub eax,edx
..@0x8048161: push eax
..@0x8048162: push edx
..@0x8048163: push ebx
..@0x8048164: call B.code+__stdio_READ
..@0x8048169: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x804816c: db 0x89, 0x53, 0x10  ;; mov [ebx+0x10],edx
..@0x804816f: db 0x01, 0xc2  ;; add edx,eax
..@0x8048171: db 0x89, 0x53, 0x14  ;; mov [ebx+0x14],edx
..@0x8048174: add esp, strict byte 0x18
..@0x8048177: pop ebx
..@0x8048178: ret
__stdio_trans2r_o: equ $-B.code
..@0x8048179: push ebx
..@0x804817a: sub esp, strict byte 0x8
..@0x804817d: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8048181: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8048185: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x8048188: db 0x85, 0xc2  ;; test edx,eax
..@0x804818a: db 0x75, 0x0c  ;; jnz 0x8048198
..@0x804818c: db 0xa9, 0x80, 0x08, 0x00, 0x00  ;; test eax,0x880
..@0x8048191: db 0x75, 0x0c  ;; jnz 0x804819f
..@0x8048193: db 0x09, 0xd0  ;; or eax,edx
..@0x8048195: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8048198: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x804819b: db 0xa8, 0x10  ;; test al,0x10
..@0x804819d: db 0x74, 0x18  ;; jz 0x80481b7
..@0x804819f: call B.code+__errno_location
..@0x80481a4: db 0xc7, 0x00, 0x09, 0x00, 0x00, 0x00  ;; mov dword [eax],0x9
..@0x80481aa: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x80481ac: or eax, strict byte 0x8
..@0x80481af: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x80481b2: or eax, strict byte -0x1
..@0x80481b5: db 0xeb, 0x2c  ;; jmp short 0x80481e3
..@0x80481b7: db 0xa8, 0x40  ;; test al,0x40
..@0x80481b9: db 0x74, 0x1e  ;; jz 0x80481d9
..@0x80481bb: sub esp, strict byte 0xc
..@0x80481be: push ebx
..@0x80481bf: call B.code+__stdio_wcommit
..@0x80481c4: add esp, strict byte 0x10
..@0x80481c7: db 0x85, 0xc0  ;; test eax,eax
..@0x80481c9: db 0x75, 0xdf  ;; jnz 0x80481aa
..@0x80481cb: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x80481ce: db 0x89, 0x43, 0x1c  ;; mov [ebx+0x1c],eax
..@0x80481d1: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x80481d3: and eax, strict byte -0x41
..@0x80481d6: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x80481d9: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x80481db: or eax, strict byte 0x1
..@0x80481de: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x80481e1: db 0x31, 0xc0  ;; xor eax,eax
..@0x80481e3: pop edx
..@0x80481e4: pop ecx
..@0x80481e5: pop ebx
..@0x80481e6: ret
__stdio_trans2w_o: equ $-B.code
..@0x80481e7: push ebx
..@0x80481e8: sub esp, strict byte 0x8
..@0x80481eb: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x80481ef: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x80481f3: db 0x0f, 0xb7, 0x03  ;; movzx eax,word [ebx]
..@0x80481f6: db 0x85, 0xc2  ;; test edx,eax
..@0x80481f8: db 0x75, 0x0c  ;; jnz 0x8048206
..@0x80481fa: db 0xa9, 0x80, 0x08, 0x00, 0x00  ;; test eax,0x880
..@0x80481ff: db 0x75, 0x0d  ;; jnz 0x804820e
..@0x8048201: db 0x09, 0xd0  ;; or eax,edx
..@0x8048203: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8048206: db 0x0f, 0xb7, 0x13  ;; movzx edx,word [ebx]
..@0x8048209: db 0xf6, 0xc2, 0x20  ;; test dl,0x20
..@0x804820c: db 0x74, 0x18  ;; jz 0x8048226
..@0x804820e: call B.code+__errno_location
..@0x8048213: db 0xc7, 0x00, 0x09, 0x00, 0x00, 0x00  ;; mov dword [eax],0x9
..@0x8048219: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804821b: or edx, strict byte -0x1
..@0x804821e: or eax, strict byte 0x8
..@0x8048221: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8048224: db 0xeb, 0x62  ;; jmp short 0x8048288
..@0x8048226: db 0xf6, 0xc2, 0x03  ;; test dl,0x3
..@0x8048229: db 0x74, 0x45  ;; jz 0x8048270
..@0x804822b: db 0xf6, 0xc2, 0x04  ;; test dl,0x4
..@0x804822e: db 0x75, 0x2c  ;; jnz 0x804825c
..@0x8048230: db 0x8b, 0x43, 0x14  ;; mov eax,[ebx+0x14]
..@0x8048233: db 0x3b, 0x43, 0x10  ;; cmp eax,[ebx+0x10]
..@0x8048236: db 0x75, 0x05  ;; jnz 0x804823d
..@0x8048238: db 0xf6, 0xc2, 0x02  ;; test dl,0x2
..@0x804823b: db 0x74, 0x1f  ;; jz 0x804825c
..@0x804823d: db 0x81, 0xe2, 0x00, 0x04, 0x00, 0x00  ;; and edx,0x400
..@0x8048243: cmp edx, strict byte 0x1
..@0x8048246: db 0x19, 0xc0  ;; sbb eax,eax
..@0x8048248: push edx
..@0x8048249: add eax, strict byte 0x2
..@0x804824c: push eax
..@0x804824d: push strict byte 0x0
..@0x804824f: push ebx
..@0x8048250: call B.code+fseeko
..@0x8048255: add esp, strict byte 0x10
..@0x8048258: db 0x85, 0xc0  ;; test eax,eax
..@0x804825a: db 0x75, 0xbd  ;; jnz 0x8048219
..@0x804825c: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804825e: and eax, strict byte -0x4
..@0x8048261: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x8048264: db 0x8b, 0x43, 0x08  ;; mov eax,[ebx+0x8]
..@0x8048267: db 0x89, 0x43, 0x18  ;; mov [ebx+0x18],eax
..@0x804826a: db 0x89, 0x43, 0x10  ;; mov [ebx+0x10],eax
..@0x804826d: db 0x89, 0x43, 0x14  ;; mov [ebx+0x14],eax
..@0x8048270: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8048272: db 0x31, 0xd2  ;; xor edx,edx
..@0x8048274: or eax, strict byte 0x40
..@0x8048277: db 0x66, 0x89, 0x03  ;; mov [ebx],ax
..@0x804827a: db 0x0f, 0xb7, 0xc0  ;; movzx eax,ax
..@0x804827d: db 0xf6, 0xc4, 0x0b  ;; test ah,0xb
..@0x8048280: db 0x75, 0x06  ;; jnz 0x8048288
..@0x8048282: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x8048285: db 0x89, 0x43, 0x1c  ;; mov [ebx+0x1c],eax
..@0x8048288: db 0x89, 0xd0  ;; mov eax,edx
..@0x804828a: pop edx
..@0x804828b: pop ecx
..@0x804828c: pop ebx
..@0x804828d: ret
unused_fptostrs: equ $-B.code
..@0x804828e: times 0x8048999-0x804828e hlt  ; Unused, 0x70b bytes.
memchr: equ $-B.code
..@0x8048999: push edi
..@0x804899a: db 0x31, 0xd2  ;; xor edx,edx
..@0x804899c: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x80489a0: db 0x8b, 0x7c, 0x24, 0x08  ;; mov edi,[esp+0x8]
..@0x80489a4: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80489a8: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80489aa: db 0x74, 0x0c  ;; jz 0x80489b8
..@0x80489ac: db 0xf2, 0xae  ;; repne scasb
..@0x80489ae: db 0x74, 0x05  ;; jz 0x80489b5
..@0x80489b0: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x80489b5: dec edi
..@0x80489b6: db 0x89, 0xfa  ;; mov edx,edi
..@0x80489b8: pop edi
..@0x80489b9: db 0x89, 0xd0  ;; mov eax,edx
..@0x80489bb: ret
mempcpy: equ $-B.code
..@0x80489bc: push esi
..@0x80489bd: push ebx
..@0x80489be: sub esp, strict byte 0x8
..@0x80489c1: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x80489c5: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x80489c9: push ebx
..@0x80489ca: push dword [esp+0x1c]
..@0x80489ce: push esi
..@0x80489cf: call B.code+memcpy
..@0x80489d4: add esp, strict byte 0x14
..@0x80489d7: db 0x8d, 0x04, 0x1e  ;; lea eax,[esi+ebx]
..@0x80489da: pop ebx
..@0x80489db: pop esi
..@0x80489dc: ret
memrchr: equ $-B.code
..@0x80489dd: push esi
..@0x80489de: push ebx
..@0x80489df: sub esp, strict byte 0x4
..@0x80489e2: db 0x8a, 0x44, 0x24, 0x14  ;; mov al,[esp+0x14]
..@0x80489e6: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x80489ea: db 0x88, 0x44, 0x24, 0x03  ;; mov [esp+0x3],al
..@0x80489ee: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x80489f2: db 0x01, 0xd8  ;; add eax,ebx
..@0x80489f4: db 0xeb, 0x0e  ;; jmp short 0x8048a04
..@0x80489f6: dec eax
..@0x80489f7: db 0x8a, 0x54, 0x24, 0x03  ;; mov dl,[esp+0x3]
..@0x80489fb: db 0x38, 0x10  ;; cmp [eax],dl
..@0x80489fd: db 0x0f, 0x84, 0x86, 0x00, 0x00, 0x00  ;; jz near 0x8048a89
..@0x8048a03: dec ebx
..@0x8048a04: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8048a06: db 0x74, 0x04  ;; jz 0x8048a0c
..@0x8048a08: db 0xa8, 0x03  ;; test al,0x3
..@0x8048a0a: db 0x75, 0xea  ;; jnz 0x80489f6
..@0x8048a0c: db 0x0f, 0xb6, 0x54, 0x24, 0x03  ;; movzx edx,byte [esp+0x3]
..@0x8048a11: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048a13: db 0x89, 0xd0  ;; mov eax,edx
..@0x8048a15: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048a18: db 0x09, 0xd0  ;; or eax,edx
..@0x8048a1a: db 0x89, 0xc6  ;; mov esi,eax
..@0x8048a1c: db 0xc1, 0xe6, 0x10  ;; shl esi,byte 0x10
..@0x8048a1f: db 0x09, 0xc6  ;; or esi,eax
..@0x8048a21: db 0xeb, 0x4c  ;; jmp short 0x8048a6f
..@0x8048a23: sub ecx, strict byte 0x4
..@0x8048a26: db 0x89, 0xf0  ;; mov eax,esi
..@0x8048a28: db 0x33, 0x01  ;; xor eax,[ecx]
..@0x8048a2a: db 0x8d, 0x90, 0xff, 0xfe, 0xfe, 0x7e  ;; lea edx,[eax+0x7efefeff]
..@0x8048a30: db 0xf7, 0xd0  ;; not eax
..@0x8048a32: db 0x31, 0xc2  ;; xor edx,eax
..@0x8048a34: db 0x81, 0xe2, 0x00, 0x01, 0x01, 0x81  ;; and edx,0x81010100
..@0x8048a3a: db 0x74, 0x30  ;; jz 0x8048a6c
..@0x8048a3c: db 0x8a, 0x54, 0x24, 0x03  ;; mov dl,[esp+0x3]
..@0x8048a40: db 0x8d, 0x41, 0x03  ;; lea eax,[ecx+0x3]
..@0x8048a43: db 0x38, 0x51, 0x03  ;; cmp [ecx+0x3],dl
..@0x8048a46: db 0x74, 0x41  ;; jz 0x8048a89
..@0x8048a48: db 0x8a, 0x54, 0x24, 0x03  ;; mov dl,[esp+0x3]
..@0x8048a4c: db 0x8d, 0x41, 0x02  ;; lea eax,[ecx+0x2]
..@0x8048a4f: db 0x38, 0x51, 0x02  ;; cmp [ecx+0x2],dl
..@0x8048a52: db 0x74, 0x35  ;; jz 0x8048a89
..@0x8048a54: db 0x8a, 0x54, 0x24, 0x03  ;; mov dl,[esp+0x3]
..@0x8048a58: db 0x8d, 0x41, 0x01  ;; lea eax,[ecx+0x1]
..@0x8048a5b: db 0x38, 0x51, 0x01  ;; cmp [ecx+0x1],dl
..@0x8048a5e: db 0x74, 0x29  ;; jz 0x8048a89
..@0x8048a60: db 0x8a, 0x44, 0x24, 0x03  ;; mov al,[esp+0x3]
..@0x8048a64: db 0x38, 0x01  ;; cmp [ecx],al
..@0x8048a66: db 0x75, 0x04  ;; jnz 0x8048a6c
..@0x8048a68: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8048a6a: db 0xeb, 0x1d  ;; jmp short 0x8048a89
..@0x8048a6c: sub ebx, strict byte 0x4
..@0x8048a6f: cmp ebx, strict byte 0x3
..@0x8048a72: db 0x77, 0xaf  ;; ja 0x8048a23
..@0x8048a74: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8048a76: db 0xeb, 0x09  ;; jmp short 0x8048a81
..@0x8048a78: dec eax
..@0x8048a79: db 0x8a, 0x54, 0x24, 0x03  ;; mov dl,[esp+0x3]
..@0x8048a7d: db 0x38, 0x10  ;; cmp [eax],dl
..@0x8048a7f: db 0x74, 0x08  ;; jz 0x8048a89
..@0x8048a81: dec ebx
..@0x8048a82: cmp ebx, strict byte -0x1
..@0x8048a85: db 0x75, 0xf1  ;; jnz 0x8048a78
..@0x8048a87: db 0x31, 0xc0  ;; xor eax,eax
..@0x8048a89: pop edx
..@0x8048a8a: pop ebx
..@0x8048a8b: pop esi
..@0x8048a8c: ret
strtok_r: equ $-B.code
..@0x8048a8d: push edi
..@0x8048a8e: push esi
..@0x8048a8f: push ebx
..@0x8048a90: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8048a94: db 0x8b, 0x7c, 0x24, 0x14  ;; mov edi,[esp+0x14]
..@0x8048a98: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x8048a9c: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8048a9e: db 0x75, 0x02  ;; jnz 0x8048aa2
..@0x8048aa0: db 0x8b, 0x1e  ;; mov ebx,[esi]
..@0x8048aa2: push ecx
..@0x8048aa3: push ecx
..@0x8048aa4: push edi
..@0x8048aa5: push ebx
..@0x8048aa6: call B.code+strspn_used_by_strtok
..@0x8048aab: add esp, strict byte 0x10
..@0x8048aae: db 0x01, 0xc3  ;; add ebx,eax
..@0x8048ab0: db 0x80, 0x3b, 0x00  ;; cmp byte [ebx],0x0
..@0x8048ab3: db 0x75, 0x06  ;; jnz 0x8048abb
..@0x8048ab5: db 0x31, 0xc0  ;; xor eax,eax
..@0x8048ab7: db 0x89, 0x1e  ;; mov [esi],ebx
..@0x8048ab9: db 0xeb, 0x27  ;; jmp short 0x8048ae2
..@0x8048abb: push edx
..@0x8048abc: push edx
..@0x8048abd: push edi
..@0x8048abe: push ebx
..@0x8048abf: call B.code+strpbrk
..@0x8048ac4: add esp, strict byte 0x10
..@0x8048ac7: db 0x85, 0xc0  ;; test eax,eax
..@0x8048ac9: db 0x75, 0x0f  ;; jnz 0x8048ada
..@0x8048acb: push eax
..@0x8048acc: push eax
..@0x8048acd: push strict byte 0x0
..@0x8048acf: push ebx
..@0x8048ad0: call B.code+rawmemchr_used_by_strtok
..@0x8048ad5: add esp, strict byte 0x10
..@0x8048ad8: db 0xeb, 0x04  ;; jmp short 0x8048ade
..@0x8048ada: db 0xc6, 0x00, 0x00  ;; mov byte [eax],0x0
..@0x8048add: inc eax
..@0x8048ade: db 0x89, 0x06  ;; mov [esi],eax
..@0x8048ae0: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8048ae2: pop ebx
..@0x8048ae3: pop esi
..@0x8048ae4: pop edi
..@0x8048ae5: ret
strpbrk: equ $-B.code
..@0x8048ae6: push esi
..@0x8048ae7: push ebx
..@0x8048ae8: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x8048aec: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8048af0: db 0xeb, 0x0c  ;; jmp short 0x8048afe
..@0x8048af2: db 0x38, 0xd9  ;; cmp cl,bl
..@0x8048af4: db 0x74, 0x14  ;; jz 0x8048b0a
..@0x8048af6: inc edx
..@0x8048af7: db 0x8a, 0x0a  ;; mov cl,[edx]
..@0x8048af9: db 0x84, 0xc9  ;; test cl,cl
..@0x8048afb: db 0x75, 0xf5  ;; jnz 0x8048af2
..@0x8048afd: inc eax
..@0x8048afe: db 0x8a, 0x18  ;; mov bl,[eax]
..@0x8048b00: db 0x84, 0xdb  ;; test bl,bl
..@0x8048b02: db 0x74, 0x04  ;; jz 0x8048b08
..@0x8048b04: db 0x89, 0xf2  ;; mov edx,esi
..@0x8048b06: db 0xeb, 0xef  ;; jmp short 0x8048af7
..@0x8048b08: db 0x31, 0xc0  ;; xor eax,eax
..@0x8048b0a: pop ebx
..@0x8048b0b: pop esi
..@0x8048b0c: ret
raise: equ $-B.code
..@0x8048b0d: sub esp, strict byte 0xc
..@0x8048b10: call B.code+getpid
..@0x8048b15: push edx
..@0x8048b16: push edx
..@0x8048b17: push dword [esp+0x18]
..@0x8048b1b: push eax
..@0x8048b1c: call B.code+kill
..@0x8048b21: add esp, strict byte 0x1c
..@0x8048b24: ret
__sigismember: equ $-B.code
..@0x8048b25: push ebx
..@0x8048b26: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8048b2b: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8048b2f: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x8048b33: dec ecx
..@0x8048b34: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8048b36: and ecx, strict byte 0x1f
..@0x8048b39: db 0xc1, 0xeb, 0x05  ;; shr ebx,byte 0x5
..@0x8048b3c: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8048b3e: db 0x85, 0x04, 0x9a  ;; test [edx+ebx*4],eax
..@0x8048b41: pop ebx
..@0x8048b42: db 0x0f, 0x95, 0xc0  ;; setnz al
..@0x8048b45: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x8048b48: ret
__sigaddset: equ $-B.code
..@0x8048b49: push ebx
..@0x8048b4a: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8048b4f: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8048b53: db 0x8b, 0x5c, 0x24, 0x08  ;; mov ebx,[esp+0x8]
..@0x8048b57: dec ecx
..@0x8048b58: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048b5a: and ecx, strict byte 0x1f
..@0x8048b5d: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8048b5f: db 0xc1, 0xea, 0x05  ;; shr edx,byte 0x5
..@0x8048b62: db 0x09, 0x04, 0x93  ;; or [ebx+edx*4],eax
..@0x8048b65: db 0x31, 0xc0  ;; xor eax,eax
..@0x8048b67: pop ebx
..@0x8048b68: ret
__sigdelset: equ $-B.code
..@0x8048b69: push ebx
..@0x8048b6a: db 0xb8, 0xfe, 0xff, 0xff, 0xff  ;; mov eax,0xfffffffe
..@0x8048b6f: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8048b73: db 0x8b, 0x5c, 0x24, 0x08  ;; mov ebx,[esp+0x8]
..@0x8048b77: dec ecx
..@0x8048b78: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048b7a: and ecx, strict byte 0x1f
..@0x8048b7d: db 0xd3, 0xc0  ;; rol eax,cl
..@0x8048b7f: db 0xc1, 0xea, 0x05  ;; shr edx,byte 0x5
..@0x8048b82: db 0x21, 0x04, 0x93  ;; and [ebx+edx*4],eax
..@0x8048b85: db 0x31, 0xc0  ;; xor eax,eax
..@0x8048b87: pop ebx
..@0x8048b88: ret
_dl_aux_init: equ $-B.code
..@0x8048b89: db 0x8b, 0x50, 0x1c  ;; mov edx,[eax+0x1c]
..@0x8048b8c: db 0x89, 0x15, 0x18, 0xee, 0x87, 0x09  ;; mov [_dl_phdr],edx
..@0x8048b92: db 0x8b, 0x40, 0x2c  ;; mov eax,[eax+0x2c]
..@0x8048b95: db 0xa3, 0x1c, 0xee, 0x87, 0x09  ;; mov [_dl_phnum],eax
..@0x8048b9a: ret
brk: equ $-B.code
..@0x8048b9b: push ebx
..@0x8048b9c: db 0xba, 0x2d, 0x00, 0x00, 0x00  ;; mov edx,0x2d
..@0x8048ba1: sub esp, strict byte 0x8
..@0x8048ba4: db 0x89, 0xd0  ;; mov eax,edx
..@0x8048ba6: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8048baa: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8048bac: db 0x89, 0xdb  ;; mov ebx,ebx
..@0x8048bae: int 0x80  ; Linux i386 syscall.
..@0x8048bb0: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8048bb2: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8048bb4: db 0xa3, 0x8c, 0xea, 0x87, 0x09  ;; mov [__curbrk],eax
..@0x8048bb9: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8048bbb: db 0x73, 0x0e  ;; jnc 0x8048bcb
..@0x8048bbd: call B.code+__errno_location
..@0x8048bc2: or ecx, strict byte -0x1
..@0x8048bc5: db 0xc7, 0x00, 0x0c, 0x00, 0x00, 0x00  ;; mov dword [eax],0xc
..@0x8048bcb: pop edx
..@0x8048bcc: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8048bce: pop ecx
..@0x8048bcf: pop ebx
..@0x8048bd0: ret
__syscall_error: equ $-B.code
..@0x8048bd1: sub esp, strict byte 0xc
..@0x8048bd4: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048bd6: db 0xf7, 0xda  ;; neg edx
..@0x8048bd8: call B.code+__errno_location
..@0x8048bdd: db 0x89, 0x10  ;; mov [eax],edx
..@0x8048bdf: or eax, strict byte -0x1
..@0x8048be2: add esp, strict byte 0xc
..@0x8048be5: ret
getpid: equ $-B.code
..@0x8048be6: push ebx
..@0x8048be7: sub esp, strict byte 0x8
..@0x8048bea: db 0xb8, 0x14, 0x00, 0x00, 0x00  ;; mov eax,0x14
..@0x8048bef: int 0x80  ; Linux i386 syscall.
..@0x8048bf1: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8048bf6: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8048bf8: db 0x76, 0x0c  ;; jna 0x8048c06
..@0x8048bfa: call B.code+__errno_location
..@0x8048bff: db 0xf7, 0xdb  ;; neg ebx
..@0x8048c01: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8048c03: or ebx, strict byte -0x1
..@0x8048c06: pop edx
..@0x8048c07: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8048c09: pop ecx
..@0x8048c0a: pop ebx
..@0x8048c0b: ret
kill: equ $-B.code
..@0x8048c0c: push ebx
..@0x8048c0d: sub esp, strict byte 0x8
..@0x8048c10: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x8048c14: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8048c18: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8048c1a: db 0xb8, 0x25, 0x00, 0x00, 0x00  ;; mov eax,0x25
..@0x8048c1f: int 0x80  ; Linux i386 syscall.
..@0x8048c21: db 0x87, 0xd3  ;; xchg edx,ebx
..@0x8048c23: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8048c28: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8048c2a: db 0x76, 0x0c  ;; jna 0x8048c38
..@0x8048c2c: call B.code+__errno_location
..@0x8048c31: db 0xf7, 0xdb  ;; neg ebx
..@0x8048c33: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8048c35: or ebx, strict byte -0x1
..@0x8048c38: pop edx
..@0x8048c39: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8048c3b: pop ecx
..@0x8048c3c: pop ebx
..@0x8048c3d: ret
write: equ $-B.code
..@0x8048c3e: push edi
..@0x8048c3f: sub esp, strict byte 0x8
..@0x8048c42: db 0x8b, 0x7c, 0x24, 0x10  ;; mov edi,[esp+0x10]
..@0x8048c46: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8048c4a: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8048c4e: push ebx
..@0x8048c4f: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8048c51: db 0xb8, 0x04, 0x00, 0x00, 0x00  ;; mov eax,0x4
..@0x8048c56: int 0x80  ; Linux i386 syscall.
..@0x8048c58: pop ebx
..@0x8048c59: db 0x3d, 0x00, 0xf0, 0xff, 0xff  ;; cmp eax,0xfffff000
..@0x8048c5e: db 0x89, 0xc7  ;; mov edi,eax
..@0x8048c60: db 0x76, 0x0c  ;; jna 0x8048c6e
..@0x8048c62: call B.code+__errno_location
..@0x8048c67: db 0xf7, 0xdf  ;; neg edi
..@0x8048c69: db 0x89, 0x38  ;; mov [eax],edi
..@0x8048c6b: or edi, strict byte -0x1
..@0x8048c6e: pop edx
..@0x8048c6f: db 0x89, 0xf8  ;; mov eax,edi
..@0x8048c71: pop ecx
..@0x8048c72: pop edi
..@0x8048c73: ret
rawmemchr_used_by_strtok: equ $-B.code
..@0x8048c74: push esi
..@0x8048c75: push ebx
..@0x8048c76: db 0x8a, 0x5c, 0x24, 0x10  ;; mov bl,[esp+0x10]
..@0x8048c7a: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8048c7e: db 0xeb, 0x05  ;; jmp short 0x8048c85
..@0x8048c80: db 0x38, 0x18  ;; cmp [eax],bl
..@0x8048c82: db 0x74, 0x50  ;; jz 0x8048cd4
..@0x8048c84: inc eax
..@0x8048c85: db 0xa8, 0x03  ;; test al,0x3
..@0x8048c87: db 0x75, 0xf7  ;; jnz 0x8048c80
..@0x8048c89: db 0x0f, 0xb6, 0xd3  ;; movzx edx,bl
..@0x8048c8c: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048c8e: db 0x89, 0xd0  ;; mov eax,edx
..@0x8048c90: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048c93: db 0x09, 0xd0  ;; or eax,edx
..@0x8048c95: db 0x89, 0xc6  ;; mov esi,eax
..@0x8048c97: db 0xc1, 0xe6, 0x10  ;; shl esi,byte 0x10
..@0x8048c9a: db 0x09, 0xc6  ;; or esi,eax
..@0x8048c9c: db 0x89, 0xf2  ;; mov edx,esi
..@0x8048c9e: db 0x33, 0x11  ;; xor edx,[ecx]
..@0x8048ca0: add ecx, strict byte 0x4
..@0x8048ca3: db 0x8d, 0x82, 0xff, 0xfe, 0xfe, 0x7e  ;; lea eax,[edx+0x7efefeff]
..@0x8048ca9: db 0xf7, 0xd2  ;; not edx
..@0x8048cab: db 0x31, 0xd0  ;; xor eax,edx
..@0x8048cad: db 0xa9, 0x00, 0x01, 0x01, 0x81  ;; test eax,0x81010100
..@0x8048cb2: db 0x74, 0xe8  ;; jz 0x8048c9c
..@0x8048cb4: db 0x38, 0x59, 0xfc  ;; cmp [ecx-0x4],bl
..@0x8048cb7: db 0x8d, 0x41, 0xfc  ;; lea eax,[ecx-0x4]
..@0x8048cba: db 0x74, 0x18  ;; jz 0x8048cd4
..@0x8048cbc: db 0x38, 0x59, 0xfd  ;; cmp [ecx-0x3],bl
..@0x8048cbf: db 0x8d, 0x41, 0xfd  ;; lea eax,[ecx-0x3]
..@0x8048cc2: db 0x74, 0x10  ;; jz 0x8048cd4
..@0x8048cc4: db 0x38, 0x59, 0xfe  ;; cmp [ecx-0x2],bl
..@0x8048cc7: db 0x8d, 0x41, 0xfe  ;; lea eax,[ecx-0x2]
..@0x8048cca: db 0x74, 0x08  ;; jz 0x8048cd4
..@0x8048ccc: db 0x38, 0x59, 0xff  ;; cmp [ecx-0x1],bl
..@0x8048ccf: db 0x8d, 0x41, 0xff  ;; lea eax,[ecx-0x1]
..@0x8048cd2: db 0x75, 0xc8  ;; jnz 0x8048c9c
..@0x8048cd4: pop ebx
..@0x8048cd5: pop esi
..@0x8048cd6: ret
strspn_used_by_strtok: equ $-B.code
..@0x8048cd7: push edi
..@0x8048cd8: push esi
..@0x8048cd9: db 0x31, 0xf6  ;; xor esi,esi
..@0x8048cdb: push ebx
..@0x8048cdc: db 0x8b, 0x7c, 0x24, 0x14  ;; mov edi,[esp+0x14]
..@0x8048ce0: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8048ce4: db 0xeb, 0x13  ;; jmp short 0x8048cf9
..@0x8048ce6: db 0x38, 0xc8  ;; cmp al,cl
..@0x8048ce8: db 0x74, 0x09  ;; jz 0x8048cf3
..@0x8048cea: inc edx
..@0x8048ceb: db 0x8a, 0x0a  ;; mov cl,[edx]
..@0x8048ced: db 0x84, 0xc9  ;; test cl,cl
..@0x8048cef: db 0x75, 0xf5  ;; jnz 0x8048ce6
..@0x8048cf1: db 0xeb, 0x10  ;; jmp short 0x8048d03
..@0x8048cf3: db 0x84, 0xc0  ;; test al,al
..@0x8048cf5: db 0x74, 0x0c  ;; jz 0x8048d03
..@0x8048cf7: inc esi
..@0x8048cf8: inc ebx
..@0x8048cf9: db 0x8a, 0x03  ;; mov al,[ebx]
..@0x8048cfb: db 0x84, 0xc0  ;; test al,al
..@0x8048cfd: db 0x74, 0x04  ;; jz 0x8048d03
..@0x8048cff: db 0x89, 0xfa  ;; mov edx,edi
..@0x8048d01: db 0xeb, 0xe8  ;; jmp short 0x8048ceb
..@0x8048d03: pop ebx
..@0x8048d04: db 0x89, 0xf0  ;; mov eax,esi
..@0x8048d06: pop esi
..@0x8048d07: pop edi
..@0x8048d08: ret

X.gap3:      ;0x06d09..0x06d10  +0x00007    @0x8048d09...0x8048d10
times +0x00007 nop
%endif  ; TARGET, x

; http://www.linker-aliens.org/blogs/ali/entry/gnu_hash_elf_sections/
; unsigned long gnu_hash(const char *s) {
;   unsigned long h = 5381;
;   unsigned char c;
;   for (c = *s; c != '\0'; c = *++s) {
;     h = h * 33 + c;
;   }
;   return h & 0xffffffff;
; }
GNU.HASH:  ; Symbolic constants.
.stdin: equ 0x10615567
.stdout: equ 0x1c8c1d28
.stderr: equ 0x1c8bf239
._IO_stdin_used: equ 0xc0e34bad
; Assumes maskwords==1.
%define GNU_HASH_BLOOM_MASK(hash, shift2) (1 << ((hash) & 0x1f) | 1 << ((hash) >> (shift2) & 0x1f))

VNA.HASH:  ; Symbolic constants.
.GLIBC_2.0: equ 0x0d696910
.GLIBC_2.1: equ 0x0d696911

%ifidn TARGET, l
L.ELF_ehdr:  ; addr=0x8048000 off=0x0
ehdr:					; Elf32_Ehdr
		db 0x7f, 'ELF'		;   e_ident[EI_MAG...]
		db 1			;   e_ident[EI_CLASS]: 32-bit
		db 1			;   e_ident[EI_DATA]: little endian
		db 1			;   e_ident[EI_VERSION]
		db 3			;   e_ident[EI_OSABI]: Linux
		db 0			;   e_ident[EI_ABIVERSION]
		db 0, 0, 0, 0, 0, 0, 0	;   e_ident[EI_PAD]
		dw 2			;   e_type == ET_EXEC.
		dw 3			;   e_machine == x86.
		dd 1			;   e_version
code_ptr_e_entry: equ $+0x8048000
		dd _start		;   e_entry
		dd phdr0-L.ELF_ehdr	;   e_phoff
		dd 0			;   e_shoff
		dd 0			;   e_flags
		dw .size		;   e_ehsize
		dw phdr0.size		;   e_phentsize
		dw (L.ELF_phdr.end-L.ELF_phdr)/phdr0.size  ;   e_phnum
		dw 0x28			;   e_shentsize
		dw 0			;   e_shnum
		dw 0			;   e_shstrndx
ehdr.size	equ $-ehdr

L.ELF_phdr:  ; addr=0x8048034 off=0x34
_elf_phdr: equ $-B.code
phdr0:					; Elf32_Phdr
		dd PT.INTERP		;   p_type == PT_LOAD.
		dd _elf_interp+B.code	;   p_offset
		dd _elf_interp		;   p_vaddr
		dd _elf_interp		;   p_paddr
		dd _elf_interp.end-_elf_interp  ;   p_filesz
		dd _elf_interp.end-_elf_interp  ;   p_memsz
		dd 4			;   p_flags: r--: read, no write, no execute
		dd 1			;   p_align
.size		equ $-phdr0
phdr1:					; Elf32_Phdr
		dd PT.LOAD		;   p_type == PT_GNU_STACK.
		dd 0			;   p_offset
		dd 0x8048000		;   p_vaddr
		dd 0x8048000		;   p_paddr
		dd +0x13ad4		;   p_filesz
		dd +0x13ad4		;   p_memsz
		dd 5			;   p_flags: r-x: read and execute, no write
		dd 0x1000		;   p_align
phdr2:					; Elf32_Phdr
		dd PT.LOAD		;   p_type
		dd 0x14000		;   p_offset
		dd 0x805d000		;   p_vaddr
		dd 0x805d000		;   p_paddr
		dd +0x1f0		;   p_filesz
		dd +0x181fa50		;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 0x1000		;   p_align
phdr3:					; Elf32_Phdr
		dd PT.DYNAMIC		;   p_type
		dd _elf_dynamic+B.data	;   p_offset
		dd _elf_dynamic		;   p_vaddr
		dd _elf_dynamic		;   p_paddr
		dd _elf_dynamic.end-_elf_dynamic  ;   p_filesz
		dd _elf_dynamic.end-_elf_dynamic  ;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 4			;   p_align
phdr4:					; Elf32_Phdr
		dd PT.GNU_STACK		;   p_type. It's optional but useful for security.
		dd 0			;   p_offset
		dd 0			;   p_vaddr
		dd 0			;   p_paddr
		dd +0			;   p_filesz
		dd +0			;   p_memsz
		dd 5			;   p_flags: rw-: read and write, no execute
		dd 0x10			;   p_align
_elf_phdr.end: equ $-B.code
L.ELF_phdr.end:

L.interp:  ; addr=0x8048134 off=0x134
_elf_interp: equ $-B.code
..@0x80480d4: db '/lib/ld-linux.so.2', 0
_elf_interp.end: equ $-B.code
..@0x80480e7: times 1 db 0  ; Alignment padding.
;..@0x80480e8:

L.gnu.hash:
; Without a $DT.GNU_HASH containing stdout, glibc (2.19 and 2.27) wouldn't
; autoflush stdout before reading from stdin (e.g. with fgetc(3)). So we add
; a minimal .gnu.hash, consisting of just `stdout' (and a single bucket).
_dynamic_gnu_hash: equ $-B.code
; https://blogs.oracle.com/solaris/post/gnu-hash-elf-sections
              dd (_hash_buckets.end-_hash_buckets)>>2  ; nbuckets.
              dd ((_hashed_dynsyms-_dynamic_symtab)>>4)  ; symndx.
              dd (_bloom_filter.end-_bloom_filter)>>2  ; maskwords.
%define GNU_HASH_SHIFT2 5
              dd GNU_HASH_SHIFT2  ; shift2: Bloom filter hash shift.
_bloom_filter: equ $-B.code
              dd GNU_HASH_BLOOM_MASK(GNU.HASH.stdout, GNU_HASH_SHIFT2)
_bloom_filter.end: equ $-B.code
_hash_buckets: equ $-B.code
              dd (dynsym_stdout-_dynamic_symtab)>>4
_hash_buckets.end: equ $-B.code
_hash_chain: equ $-B.code  ; Same number of dwords as number of hashed symbols.
              dd (GNU.HASH.stdout&~1)|1
_hash_chain.end: equ $-B.code

L.dynsym:
_dynamic_symtab: equ $-B.code
; Each Elf32_Sym entry is 16 bytes: dd st_name; dd st_value; dd st_size; db st_info; db st_other; dw st_shndx.
              times 4 dd 0  ; First element is zero-filled.
dynsym_log: equ $-B.code  ; 1
              dd dynstr_log-_dynamic_strtab, 0, 0, 0x12  ; TODO(pts): Make the remaining st_name values symbolic.
dynsym_read: equ $-B.code  ; 2
              dd dynstr_read-_dynamic_strtab, 0, 0, 0x12
dynsym_fflush: equ $-B.code
              dd dynstr_fflush-_dynamic_strtab, 0, 0, 0x12
dynsym_memmove: equ $-B.code
              dd dynstr_memmove-_dynamic_strtab, 0, 0, 0x12
dynsym_free: equ $-B.code
              dd dynstr_free-_dynamic_strtab, 0, 0, 0x12
dynsym_memcpy: equ $-B.code
              dd dynstr_memcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_fgets: equ $-B.code
              dd dynstr_fgets-_dynamic_strtab, 0, 0, 0x12
dynsym_fclose: equ $-B.code
              dd dynstr_fclose-_dynamic_strtab, 0, 0, 0x12
dynsym_time: equ $-B.code
              dd dynstr_time-_dynamic_strtab, 0, 0, 0x12
dynsym_gettimeofday: equ $-B.code
              dd dynstr_gettimeofday-_dynamic_strtab, 0, 0, 0x12
dynsym_stpcpy: equ $-B.code
              dd dynstr_stpcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_fseek: equ $-B.code
              dd dynstr_fseek-_dynamic_strtab, 0, 0, 0x12
dynsym_fwrite: equ $-B.code
              dd dynstr_fwrite-_dynamic_strtab, 0, 0, 0x12
dynsym_strcat: equ $-B.code
              dd dynstr_strcat-_dynamic_strtab, 0, 0, 0x12
dynsym_fread: equ $-B.code
              dd dynstr_fread-_dynamic_strtab, 0, 0, 0x12
dynsym_strcpy: equ $-B.code
              dd dynstr_strcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_realloc: equ $-B.code
              dd dynstr_realloc-_dynamic_strtab, 0, 0, 0x12
dynsym_malloc: equ $-B.code
              dd dynstr_malloc-_dynamic_strtab, 0, 0, 0x12
dynsym_exit: equ $-B.code
              dd dynstr_exit-_dynamic_strtab, 0, 0, 0x12
dynsym_srand: equ $-B.code
              dd dynstr_srand-_dynamic_strtab, 0, 0, 0x12
dynsym_strchr: equ $-B.code
              dd dynstr_strchr-_dynamic_strtab, 0, 0, 0x12
dynsym_strlen: equ $-B.code
              dd dynstr_strlen-_dynamic_strtab, 0, 0, 0x12
dynsym___libc_start_main: equ $-B.code
              dd dynstr___libc_start_main-_dynamic_strtab, 0, 0, 0x12
dynsym_strcasecmp: equ $-B.code
              dd dynstr_strcasecmp-_dynamic_strtab, 0, 0, 0x12
dynsym_ftell: equ $-B.code
              dd dynstr_ftell-_dynamic_strtab, 0, 0, 0x12
dynsym_fopen: equ $-B.code
              dd dynstr_fopen-_dynamic_strtab, 0, 0, 0x12
dynsym_memset: equ $-B.code
              dd dynstr_memset-_dynamic_strtab, 0, 0, 0x12
dynsym_fileno: equ $-B.code
              dd dynstr_fileno-_dynamic_strtab, 0, 0, 0x12
dynsym_strtod: equ $-B.code
              dd dynstr_strtod-_dynamic_strtab, 0, 0, 0x12
dynsym_fgetc: equ $-B.code
              dd dynstr_fgetc-_dynamic_strtab, 0, 0, 0x12
dynsym_strncasecmp: equ $-B.code
              dd dynstr_strncasecmp-_dynamic_strtab, 0, 0, 0x12
dynsym_rand: equ $-B.code
              dd dynstr_rand-_dynamic_strtab, 0, 0, 0x12
dynsym_strtok: equ $-B.code
              dd dynstr_strtok-_dynamic_strtab, 0, 0, 0x12
dynsym_vfprintf: equ $-B.code
              dd dynstr_vfprintf-_dynamic_strtab, 0, 0, 0x12
dynsym_strtol: equ $-B.code
              dd dynstr_strtol-_dynamic_strtab, 0, 0, 0x12
dynsym_stderr: equ $-B.code
              dd dynstr_stderr-_dynamic_strtab, stderr, 4, 0x00180011
dynsym_stdin: equ $-B.code
              dd dynstr_stdin-_dynamic_strtab, stdin, 4, 0x00180011
_hashed_dynsyms: equ $-B.code
dynsym_stdout: equ $-B.code
              dd dynstr_stdout-_dynamic_strtab, stdout, 4, 0x00180011
_dynamic_symtab.end: equ $-B.code
times -((_hash_chain.end-_hash_chain)<<2)+(_dynamic_symtab.end-_hashed_dynsyms) times 0 nop  ; Assert.
times +((_hash_chain.end-_hash_chain)<<2)-(_dynamic_symtab.end-_hashed_dynsyms) times 0 nop  ; Assert.

L.dynstr:
_dynamic_strtab: equ $-B.code
              db 0  ; It always starts with an empty string.
dynstr_libm_so_6: equ $-B.code
              db 'libm.so.6', 0
dynstr_log: equ $-B.code
              db 'log', 0
dynstr_libc_so_6: equ $-B.code
              db 'libc.so.6', 0
dynstr_fflush: equ $-B.code
              db 'fflush', 0
dynstr_strcpy: equ $-B.code
              db 'strcpy', 0
dynstr_exit: equ $-B.code
              db 'exit', 0
dynstr_rand: equ $-B.code+1  ; 'rand' and 'srand' overlap.
dynstr_srand: equ $-B.code
              db 'srand', 0
dynstr_fopen: equ $-B.code
              db 'fopen', 0
dynstr_ftell: equ $-B.code
              db 'ftell', 0
dynstr_time: equ $-B.code
              db 'time', 0
dynstr_realloc: equ $-B.code
              db 'realloc', 0
dynstr_stdin: equ $-B.code
              db 'stdin', 0
dynstr_strtod: equ $-B.code
              db 'strtod', 0
dynstr_strtok: equ $-B.code
              db 'strtok', 0
dynstr_strtol: equ $-B.code
              db 'strtol', 0
dynstr_fgetc: equ $-B.code
              db 'fgetc', 0
dynstr_fgets: equ $-B.code
              db 'fgets', 0
dynstr_strlen: equ $-B.code
              db 'strlen', 0
dynstr_memset: equ $-B.code
              db 'memset', 0
dynstr_fseek: equ $-B.code
              db 'fseek', 0
dynstr_stdout: equ $-B.code
              db 'stdout', 0
dynstr_memcpy: equ $-B.code
              db 'memcpy', 0
dynstr_fclose: equ $-B.code
              db 'fclose', 0
dynstr_malloc: equ $-B.code
              db 'malloc', 0
dynstr_strcat: equ $-B.code
              db 'strcat', 0
dynstr_strcasecmp: equ $-B.code
              db 'strcasecmp', 0
dynstr_stderr: equ $-B.code
              db 'stderr', 0
dynstr_strncasecmp: equ $-B.code
              db 'strncasecmp', 0
dynstr_fileno: equ $-B.code
              db 'fileno', 0
dynstr_fwrite: equ $-B.code
              db 'fwrite', 0
dynstr_read: equ $-B.code+1  ; 'read' and 'fread' overlap.
dynstr_fread: equ $-B.code
              db 'fread', 0
dynstr_gettimeofday: equ $-B.code
              db 'gettimeofday', 0
dynstr_strchr: equ $-B.code
              db 'strchr', 0
dynstr_memmove: equ $-B.code
              db 'memmove', 0
dynstr___libc_start_main: equ $-B.code
              db '__libc_start_main', 0
dynstr_stpcpy: equ $-B.code
              db 'stpcpy', 0
dynstr_vfprintf: equ $-B.code
              db 'vfprintf', 0
dynstr_free: equ $-B.code
              db 'free', 0
dynstr_GLIBC_2.1: equ $-B.code
              db 'GLIBC_2.1', 0
dynstr_GLIBC_2.0: equ $-B.code
              db 'GLIBC_2.0', 0
_dynamic_strtab.end: equ $-B.code
              times (ehdr-$)&3 db 0  ; Alignment to 4.

L.gnu.version:
_dynamic_versym: equ $-B.code
; it has the same number of (16-byte) elements as _dynamic_symtab, in the same order.
; Value 0 means local, value 1 means global.
              dw 0, 2, 3
              dw 3, 3, 3, 3, 3, 4, 3
              dw 3, 3, 3, 3, 3, 3, 3, 3
              dw 3, 3, 3, 3, 3, 3
              dw 3, 3, 4, 3, 3, 3, 3, 3
              dw 3, 3, 3, 3, 3, 3, 3
_dynamic_versym.end: equ $-B.code
times -((_dynamic_versym.end-_dynamic_versym)<<3)+(_dynamic_symtab.end-_dynamic_symtab) times 0 nop  ; Assert.
times +((_dynamic_versym.end-_dynamic_versym)<<3)-(_dynamic_symtab.end-_dynamic_symtab) times 0 nop  ; Assert.
              times (ehdr-$)&3 db 0  ; Alignment to 4.

L.gnu.version_r:
_dynamic_verneed: equ $-B.code
; Also update $DT.VERNEEDNUM if this is updated.
_verneed0: equ $-B.code
              dw 1  ; File group version.
              dw 2  ; Entry count in this file.
              dd dynstr_libc_so_6-_dynamic_strtab
              dd _vernaux4-_verneed0
              dd _verneed1-_dynamic_verneed  ; Pointer to next _verneed*.
_vernaux4: equ $-B.code
              dd VNA.HASH.GLIBC_2.1  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 4  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
              dd dynstr_GLIBC_2.1-_dynamic_strtab  ; vna_name.
              dd _vernaux3-_vernaux4  ; vna_next.
_vernaux3: equ $-B.code
              dd VNA.HASH.GLIBC_2.0  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 3  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
              dd dynstr_GLIBC_2.0-_dynamic_strtab
              dd 0  ; vna_next. Non next _vernaux*.
_verneed1: equ $-B.code
              dw 1  ; File group version.
              dw 1  ; Entry count in this file.
              dd dynstr_libm_so_6-_dynamic_strtab
              dd _vernaux2-_verneed1
              dd 0  ; No next _verneed*.
_vernaux2: equ $-B.code
              dd VNA.HASH.GLIBC_2.0  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 2  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
              dd dynstr_GLIBC_2.0-_dynamic_strtab ; vna_name.
              dd 0  ; vna_next. No next _vernaux*.

L.rel.dyn:
_dynamic_rel: equ $-B.code  ; Relocations.
              dd stderr, 5 | (dynsym_stderr-_dynamic_symtab)>>4<<8
              dd stdin,  5 | (dynsym_stdin -_dynamic_symtab)>>4<<8
              dd stdout, 5 | (dynsym_stdout-_dynamic_symtab)>>4<<8
_dynamic_rel.end: equ $-B.code

L.rel.plt:
_dynamic_jmprel: equ $-B.code  ; Relocations in plt.
; The order of these entries must match L.plt, otherwise it would segfault
; at startup. Maybe that's because to -0x16 offset calculation in L.pt.
; TODO(pts): Make the -0x16 offset calculation reference L.rel.plt.
              dd log@GLIBC_2.0@got,               7 | (dynsym_log-_dynamic_symtab)>>4<<8
              dd read@GLIBC_2.0@got,              7 | (dynsym_read-_dynamic_symtab)>>4<<8
              dd fflush@GLIBC_2.0@got,            7 | (dynsym_fflush-_dynamic_symtab)>>4<<8
              dd memmove@GLIBC_2.0@got,           7 | (dynsym_memmove-_dynamic_symtab)>>4<<8
              dd free@GLIBC_2.0@got,              7 | (dynsym_free-_dynamic_symtab)>>4<<8
              dd memcpy@GLIBC_2.0@got,            7 | (dynsym_memcpy-_dynamic_symtab)>>4<<8
              dd fgets@GLIBC_2.0@got,             7 | (dynsym_fgets-_dynamic_symtab)>>4<<8
              dd fclose@GLIBC_2.1@got,            7 | (dynsym_fclose-_dynamic_symtab)>>4<<8
              dd time@GLIBC_2.0@got,              7 | (dynsym_time-_dynamic_symtab)>>4<<8
              dd gettimeofday@GLIBC_2.0@got,      7 | (dynsym_gettimeofday-_dynamic_symtab)>>4<<8
              dd stpcpy@GLIBC_2.0@got,            7 | (dynsym_stpcpy-_dynamic_symtab)>>4<<8
              dd fseek@GLIBC_2.0@got,             7 | (dynsym_fseek-_dynamic_symtab)>>4<<8
              dd fwrite@GLIBC_2.0@got,            7 | (dynsym_fwrite-_dynamic_symtab)>>4<<8
              dd strcat@GLIBC_2.0@got,            7 | (dynsym_strcat-_dynamic_symtab)>>4<<8
              dd fread@GLIBC_2.0@got,             7 | (dynsym_fread-_dynamic_symtab)>>4<<8
              dd strcpy@GLIBC_2.0@got,            7 | (dynsym_strcpy-_dynamic_symtab)>>4<<8
              dd realloc@GLIBC_2.0@got,           7 | (dynsym_realloc-_dynamic_symtab)>>4<<8
              dd malloc@GLIBC_2.0@got,            7 | (dynsym_malloc-_dynamic_symtab)>>4<<8
              dd exit@GLIBC_2.0@got,              7 | (dynsym_exit-_dynamic_symtab)>>4<<8
              dd srand@GLIBC_2.0@got,             7 | (dynsym_srand-_dynamic_symtab)>>4<<8
              dd strchr@GLIBC_2.0@got,            7 | (dynsym_strchr-_dynamic_symtab)>>4<<8
              dd strlen@GLIBC_2.0@got,            7 | (dynsym_strlen-_dynamic_symtab)>>4<<8
              dd __libc_start_main@GLIBC_2.0@got, 7 | (dynsym___libc_start_main-_dynamic_symtab)>>4<<8
              dd strcasecmp@GLIBC_2.0@got,        7 | (dynsym_strcasecmp-_dynamic_symtab)>>4<<8
              dd ftell@GLIBC_2.0@got,             7 | (dynsym_ftell-_dynamic_symtab)>>4<<8
              dd fopen@GLIBC_2.1@got,             7 | (dynsym_fopen-_dynamic_symtab)>>4<<8
              dd memset@GLIBC_2.0@got,            7 | (dynsym_memset-_dynamic_symtab)>>4<<8
              dd fileno@GLIBC_2.0@got,            7 | (dynsym_fileno-_dynamic_symtab)>>4<<8
              dd strtod@GLIBC_2.0@got,            7 | (dynsym_strtod-_dynamic_symtab)>>4<<8
              dd fgetc@GLIBC_2.0@got,             7 | (dynsym_fgetc-_dynamic_symtab)>>4<<8
              dd strncasecmp@GLIBC_2.0@got,       7 | (dynsym_strncasecmp-_dynamic_symtab)>>4<<8
              dd rand@GLIBC_2.0@got,              7 | (dynsym_rand-_dynamic_symtab)>>4<<8
              dd strtok@GLIBC_2.0@got,            7 | (dynsym_strtok-_dynamic_symtab)>>4<<8
              dd vfprintf@GLIBC_2.0@got,          7 | (dynsym_vfprintf-_dynamic_symtab)>>4<<8
              dd strtol@GLIBC_2.0@got,            7 | (dynsym_strtol-_dynamic_symtab)>>4<<8
_dynamic_jmprel.end: equ $-B.code

L.plt:
_plt_code0: equ $-B.code
..@0x8048840: push dword [_GLOBAL_OFFSET_TABLE_special1]
..@0x8048846: jmp [_GLOBAL_OFFSET_TABLE_special2@got]
..@0x804884c: times 4 db 0  ; Alignment padding.
log: equ $-B.code
              jmp [log@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0.
              jmp strict near B.code+_plt_code0
read: equ $-B.code
              jmp [read@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 8.
              jmp strict near B.code+_plt_code0
fflush: equ $-B.code
              jmp [fflush@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
memmove: equ $-B.code
              jmp [memmove@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
free: equ $-B.code
              jmp [free@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
memcpy: equ $-B.code
              jmp [memcpy@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fgets: equ $-B.code
              jmp [fgets@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fclose: equ $-B.code
              jmp [fclose@GLIBC_2.1@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
time: equ $-B.code
              jmp [time@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
gettimeofday: equ $-B.code
              jmp [gettimeofday@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
stpcpy: equ $-B.code
              jmp [stpcpy@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fseek: equ $-B.code
              jmp [fseek@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fwrite: equ $-B.code
              jmp [fwrite@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strcat: equ $-B.code
              jmp [strcat@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fread: equ $-B.code
              jmp [fread@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strcpy: equ $-B.code
              jmp [strcpy@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
realloc: equ $-B.code
              jmp [realloc@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
malloc: equ $-B.code
              jmp [malloc@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
exit: equ $-B.code
              jmp [exit@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
srand: equ $-B.code
              jmp [srand@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strchr: equ $-B.code
              jmp [strchr@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strlen: equ $-B.code
              jmp [strlen@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
__libc_start_main: equ $-B.code
              jmp [__libc_start_main@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strcasecmp: equ $-B.code
              jmp [strcasecmp@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
ftell: equ $-B.code
              jmp [ftell@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fopen: equ $-B.code
              jmp [fopen@GLIBC_2.1@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
memset: equ $-B.code
              jmp [memset@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fileno: equ $-B.code
              jmp [fileno@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strtod: equ $-B.code
              jmp [strtod@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
fgetc: equ $-B.code
              jmp [fgetc@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strncasecmp: equ $-B.code
              jmp [strncasecmp@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
rand: equ $-B.code
              jmp [rand@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strtok: equ $-B.code
              jmp [strtok@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
vfprintf: equ $-B.code
              jmp [vfprintf@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1
              jmp strict near B.code+_plt_code0
strtol: equ $-B.code
              jmp [strtol@GLIBC_2.0@got]
              push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0x128.
              jmp strict near B.code+_plt_code0

L.start.text:
dummy_init_and_fini: equ $-B.code
              ret
_start: equ $-B.code
              mov ebp, dummy_init_and_fini
              pop esi
              db 0x89, 0xe1  ; mov ecx, esp
              and esp, strict byte -0x10
              push eax
              push esp
              push edx
              push ebp  ; No-op __libc_csu_fini, pointing to dummy_init_and_fini.
              push ebp  ; No-op __libc_csu_init, pointing to dummy_init_and_fini.
              push ecx
              push esi
              push strict dword main
              db 0x31, 0xed  ; xor ebp, ebp
              call B.code+__libc_start_main
              hlt

L.gap13:
              times $$+0x8048d10-$+B.code db 0   ; Padding (about 0x438 bytes).
%endif  ; TARGET, l

%ifidn TARGET, d
D.MachO_hdr:  ; addr=0x8048000 off=0x0
..@0x8048000: db 0xce, 0xfa, 0xed, 0xfe, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x8048010: db 0x0d, 0x00, 0x00, 0x00, 0x94, 0x04, 0x00, 0x00, 0x85, 0x00, 0x00, 0x01, 0x01, 0x00, 0x00, 0x00
..@0x8048020: db 0x38, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x50, 0x41, 0x47, 0x45, 0x5a, 0x45, 0x52, 0x4f, 0x00, 0x00
..@0x8048030: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048040: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048050: db 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x48, 0x01, 0x00, 0x00, 0x5f, 0x5f, 0x54, 0x45
..@0x8048060: db 0x58, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x80, 0x04, 0x08
..@0x8048070: db 0x00, 0x40, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00, 0x07, 0x00, 0x00, 0x00
..@0x8048080: db 0x05, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x74, 0x65
..@0x8048090: db 0x78, 0x74, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x54, 0x45
..@0x80480a0: db 0x58, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x74, 0x8c, 0x04, 0x08
..@0x80480b0: db 0xa9, 0x30, 0x01, 0x00, 0x74, 0x0c, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80480c0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80480d0: db 0x5f, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x5f, 0x73, 0x74, 0x75, 0x62, 0x00, 0x00, 0x00
..@0x80480e0: db 0x5f, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80480f0: db 0x1e, 0xbd, 0x05, 0x08, 0xde, 0x00, 0x00, 0x00, 0x1e, 0x3d, 0x01, 0x00, 0x01, 0x00, 0x00, 0x00
..@0x8048100: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x08, 0x04, 0x00, 0x80, 0x00, 0x00, 0x00, 0x00
..@0x8048110: db 0x06, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65
..@0x8048120: db 0x72, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048130: db 0x00, 0x00, 0x00, 0x00, 0xfc, 0xbd, 0x05, 0x08, 0xba, 0x01, 0x00, 0x00, 0xfc, 0x3d, 0x01, 0x00
..@0x8048140: db 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x80
..@0x8048150: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x75, 0x6e, 0x77, 0x69, 0x6e, 0x64
..@0x8048160: db 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x54, 0x45, 0x58, 0x54, 0x00, 0x00
..@0x8048170: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb8, 0xbf, 0x05, 0x08, 0x48, 0x00, 0x00, 0x00
..@0x8048180: db 0xb8, 0x3f, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048190: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0x80481a0: db 0x8c, 0x01, 0x00, 0x00, 0x5f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80481b0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x08, 0x00, 0x20, 0x82, 0x01, 0x00, 0x40, 0x01, 0x00
..@0x80481c0: db 0x00, 0x20, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
..@0x80481d0: db 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x64, 0x79, 0x6c, 0x64, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80481e0: db 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80481f0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x05, 0x08, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x40, 0x01, 0x00
..@0x8048200: db 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048210: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x6c, 0x61, 0x5f, 0x73, 0x79, 0x6d
..@0x8048220: db 0x62, 0x6f, 0x6c, 0x5f, 0x70, 0x74, 0x72, 0x00, 0x5f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00
..@0x8048230: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0xc0, 0x05, 0x08, 0x94, 0x00, 0x00, 0x00
..@0x8048240: db 0x1c, 0x40, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048250: db 0x07, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x64, 0x61
..@0x8048260: db 0x74, 0x61, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x44, 0x41
..@0x8048270: db 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xb0, 0xc0, 0x05, 0x08
..@0x8048280: db 0x40, 0x11, 0x00, 0x00, 0xb0, 0x40, 0x01, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048290: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482a0: db 0x5f, 0x5f, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482b0: db 0x5f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482c0: db 0xf0, 0xd1, 0x05, 0x08, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x80482d0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482e0: db 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x62, 0x73, 0x73, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482f0: db 0x00, 0x00, 0x00, 0x00, 0x5f, 0x5f, 0x44, 0x41, 0x54, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048300: db 0x00, 0x00, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x08, 0x50, 0x00, 0x82, 0x01, 0x00, 0x00, 0x00, 0x00
..@0x8048310: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0x8048320: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00
..@0x8048330: db 0x5f, 0x5f, 0x4c, 0x49, 0x4e, 0x4b, 0x45, 0x44, 0x49, 0x54, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048340: db 0x00, 0xe0, 0x87, 0x09, 0x00, 0x10, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0xe8, 0x06, 0x00, 0x00
..@0x8048350: db 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048360: db 0x02, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x60, 0x01, 0x00, 0x44, 0x00, 0x00, 0x00
..@0x8048370: db 0x70, 0x64, 0x01, 0x00, 0x78, 0x02, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00
..@0x8048380: db 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
..@0x8048390: db 0x1f, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80483a0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80483b0: db 0x48, 0x63, 0x01, 0x00, 0x4a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80483c0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00
..@0x80483d0: db 0x0c, 0x00, 0x00, 0x00, 0x2f, 0x75, 0x73, 0x72, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x64, 0x79, 0x6c
..@0x80483e0: db 0x64, 0x00, 0x00, 0x00, 0x1b, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xb3, 0x04, 0x5a, 0x50
..@0x80483f0: db 0x34, 0x34, 0x38, 0xe1, 0x91, 0xb6, 0x61, 0xdb, 0x3d, 0x8e, 0xa9, 0xb5, 0x24, 0x00, 0x00, 0x00
..@0x8048400: db 0x10, 0x00, 0x00, 0x00, 0x00, 0x05, 0x0a, 0x00, 0x00, 0x0a, 0x0a, 0x00, 0x05, 0x00, 0x00, 0x00
..@0x8048410: db 0x50, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048420: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048430: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048440: db 0x00, 0x00, 0x00, 0x00, 0x74, 0x8c, 0x04, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048450: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00
..@0x8048460: db 0x34, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0xbd, 0x04
..@0x8048470: db 0x00, 0x00, 0x01, 0x00, 0x2f, 0x75, 0x73, 0x72, 0x2f, 0x6c, 0x69, 0x62, 0x2f, 0x6c, 0x69, 0x62
..@0x8048480: db 0x53, 0x79, 0x73, 0x74, 0x65, 0x6d, 0x2e, 0x42, 0x2e, 0x64, 0x79, 0x6c, 0x69, 0x62, 0x00, 0x00
..@0x8048490: db 0x26, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x18, 0x00, 0x00, 0x00
..@0x80484a0: db 0x29, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x18, 0x60, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80484b0: times 0x8048c70-0x80484b0 db 0
..@0x8048c70: db 0x00, 0x00, 0x00, 0x00, 0x6a, 0x00, 0x89, 0xe5, 0x83, 0xe4, 0xf0, 0x83, 0xec, 0x10, 0x8b, 0x5d
..@0x8048c80: db 0x04, 0x89, 0x1c, 0x24, 0x8d, 0x4d, 0x08, 0x89, 0x4c, 0x24, 0x04, 0x83, 0xc3, 0x01, 0xc1, 0xe3
..@0x8048c90: db 0x02, 0x01, 0xcb, 0x89, 0x5c, 0x24, 0x08, 0x8b, 0x03, 0x83, 0xc3, 0x04, 0x85, 0xc0, 0x75, 0xf7
..@0x8048ca0: db 0x89, 0x5c, 0x24, 0x0c
..@0x8048ca4: call B.code+darwin_main  ; Entry point.
..@0x8048ca9: db 0x89, 0x04, 0x24, 0xe8, 0x6d, 0x30, 0x01
..@0x8048cb0: db 0x00, 0xf4, 0x90, 0x90, 0x83, 0xec, 0x08, 0x50, 0x51, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x8b
..@0x8048cc0: db 0x88, 0xf2, 0x33, 0x01, 0x00, 0x89, 0x4c, 0x24, 0x0c, 0x8b, 0x88, 0x42, 0x33, 0x01, 0x00, 0x89
..@0x8048cd0: db 0x4c, 0x24, 0x08, 0x59, 0x58, 0xc3, 0x66, 0x90, 0xe8, 0x00, 0x00, 0x00, 0x00, 0x58, 0x8b, 0x80
..@0x8048ce0: db 0x27, 0x33, 0x01, 0x00, 0xff, 0xe0, 0xb8, 0x10, 0x8d, 0x04, 0x08, 0xb8, 0x98, 0xa6, 0x05, 0x08
..@0x8048cf0: db 0xb8, 0x6c, 0xa7, 0x05, 0x08, 0xb8, 0x20, 0xba, 0x05, 0x08, 0xb8, 0xc4, 0xd1, 0x05, 0x08, 0xb8
..@0x8048d00: db 0xf0, 0xd1, 0x05, 0x08, 0xb8, 0x25, 0xd2, 0x05, 0x08, 0xb8, 0x50, 0xca, 0x87, 0x09, 0x90, 0x90

; Darwin (macOS) libc function addresses within Mach-O .plt.
exit          equ $$+0x805bd1e
fclose        equ $$+0x805bd24
fdopen        equ $$+0x805bd2a
fflush        equ $$+0x805bd30
fgetc         equ $$+0x805bd36
fgets         equ $$+0x805bd3c
fileno        equ $$+0x805bd42
fopen         equ $$+0x805bd48
fread         equ $$+0x805bd4e
free          equ $$+0x805bd54
fseek         equ $$+0x805bd5a
ftell         equ $$+0x805bd60
fwrite        equ $$+0x805bd66
gettimeofday  equ $$+0x805bd6c
isatty        equ $$+0x805bd72
log           equ $$+0x805bd78
malloc        equ $$+0x805bd7e
memcpy        equ $$+0x805bd84
memmove       equ $$+0x805bd8a
memset        equ $$+0x805bd90
rand          equ $$+0x805bd96
read          equ $$+0x805bd9c
realloc       equ $$+0x805bda2
setvbuf       equ $$+0x805bda8
srand         equ $$+0x805bdae
stpcpy        equ $$+0x805bdb4
strcasecmp    equ $$+0x805bdba
strcat        equ $$+0x805bdc0
strchr        equ $$+0x805bdc6
strcpy        equ $$+0x805bdcc
strlen        equ $$+0x805bdd2
strncasecmp   equ $$+0x805bdd8
strtod        equ $$+0x805bdde
strtok        equ $$+0x805bde4
strtol        equ $$+0x805bdea
time          equ $$+0x805bdf0
vfprintf      equ $$+0x805bdf6
%endif  ; TARGET, d

%ifidn TARGET, ls
LS.ELF_ehdr:  ; addr=0x8048000 off=0x0
ehdr:					; Elf32_Ehdr
		db 0x7f, 'ELF'		;   e_ident[EI_MAG...]
		db 1			;   e_ident[EI_CLASS]: 32-bit
		db 1			;   e_ident[EI_DATA]: little endian
		db 1			;   e_ident[EI_VERSION]
%if TARGET_LS_WITH_ELF_SECTIONS
		db 0			;   e_ident[EI_OSABI]: SYSV. Make it bitwise identical to the original pngout executable.
%else
		db 3			;   e_ident[EI_OSABI]: Linux
%endif
		db 0			;   e_ident[EI_ABIVERSION]
		db 0, 0, 0, 0, 0, 0, 0	;   e_ident[EI_PAD]
		dw 2			;   e_type == ET_EXEC.
		dw 3			;   e_machine == x86.
		dd 1			;   e_version
code_ptr_e_entry: equ $+0x8048000
		dd _start		;   e_entry
		dd phdr0-LS.ELF_ehdr	;   e_phoff
%if TARGET_LS_WITH_ELF_SECTIONS
		dd LS.ELF_sections-LS.ELF_ehdr	;   e_shoff
%else
		dd 0			;   e_shoff
%endif
		dd 0			;   e_flags
		dw .size		;   e_ehsize
		dw phdr0.size		;   e_phentsize
		dw (LS.ELF_phdr.end-LS.ELF_phdr)/phdr0.size  ;   e_phnum
		dw 0x28			;   e_shentsize
%if TARGET_LS_WITH_ELF_SECTIONS
		dw 0x1d			;   e_shnum
		dw 0x1c			;   e_shstrndx
%else
		dw 0			;   e_shnum
		dw 0			;   e_shstrndx
%endif
ehdr.size	equ $-ehdr

LS.ELF_phdr:  ; addr=0x8048034 off=0x34
_elf_phdr: equ $-B.code
phdr0:					; Elf32_Phdr
		dd PT.PHDR		;   p_type.  ; TODO(pts): Get rid of this, it's optional.
		dd _elf_phdr+B.code	;   p_offset
		dd _elf_phdr		;   p_vaddr
		dd _elf_phdr		;   p_paddr
		dd _elf_phdr.end-_elf_phdr  ;   p_filesz
		dd _elf_phdr.end-_elf_phdr  ;   p_memsz
		dd 5			;   p_flags: r-x: read and execute, no write
		dd 4			;   p_align
.size		equ $-phdr0
phdr1:					; Elf32_Phdr
		dd PT.INTERP		;   p_type == PT_LOAD.
		dd _elf_interp+B.code	;   p_offset
		dd _elf_interp		;   p_vaddr
		dd _elf_interp		;   p_paddr
		dd _elf_interp.end-_elf_interp  ;   p_filesz
		dd _elf_interp.end-_elf_interp  ;   p_memsz
		dd 4			;   p_flags: r--: read, no write, no execute
		dd 1			;   p_align
phdr2:					; Elf32_Phdr
		dd PT.LOAD		;   p_type == PT_GNU_STACK.
		dd 0			;   p_offset
		dd 0x8048000		;   p_vaddr
		dd 0x8048000		;   p_paddr
		dd +0x14930		;   p_filesz
		dd +0x14930		;   p_memsz
		dd 5			;   p_flags: r-x: read and execute, no write
		dd 0x1000		;   p_align
phdr3:					; Elf32_Phdr
		dd PT.LOAD		;   p_type
		dd 0x15000		;   p_offset
		dd 0x805d000		;   p_vaddr
		dd 0x805d000		;   p_paddr
		dd +0x1f0		;   p_filesz
		dd +0x181fa50		;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 0x1000		;   p_align
phdr4:					; Elf32_Phdr
		dd PT.DYNAMIC		;   p_type
		dd _elf_dynamic+B.data	;   p_offset
		dd _elf_dynamic		;   p_vaddr
		dd _elf_dynamic		;   p_paddr
		dd _elf_dynamic.end-_elf_dynamic  ;   p_filesz
		dd _elf_dynamic.end-_elf_dynamic  ;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 4			;   p_align
phdr5:					; Elf32_Phdr
		dd PT.NOTE		;   p_type
		dd _elf_note+B.code	;   p_offset
		dd _elf_note		;   p_vaddr
		dd _elf_note		;   p_paddr
		dd _elf_note.end-_elf_note  ;   p_filesz
		dd _elf_note.end-_elf_note  ;   p_memsz
		dd 4			;   p_flags: r--: read, no write, no execute
		dd 4			;   p_align
phdr6:					; Elf32_Phdr
		dd PT.GNU_EH_FRAME	;   p_type
		dd _elf_eh_frame_hdr+B.code  ;   p_offset
		dd _elf_eh_frame_hdr	;   p_vaddr
		dd _elf_eh_frame_hdr	;   p_paddr
		dd _elf_eh_frame_hdr.end-_elf_eh_frame_hdr  ;   p_filesz
		dd _elf_eh_frame_hdr.end-_elf_eh_frame_hdr  ;   p_memsz
		dd 4			;   p_flags: r--: read, no write, no execute
		dd 4			;   p_align
phdr7:					; Elf32_Phdr
		dd PT.GNU_STACK		;   p_type. It's optional but useful for security.
		dd 0			;   p_offset
		dd 0			;   p_vaddr
		dd 0			;   p_paddr
		dd +0			;   p_filesz
		dd +0			;   p_memsz
		dd 6			;   p_flags: rw-: read and write, no execute
		dd 4			;   p_align
_elf_phdr.end: equ $-B.code
LS.ELF_phdr.end:

LS.interp:  ; addr=0x8048134 off=0x134
_elf_interp: equ $-B.code
..@0x8048134: db '/lib/ld-linux.so.2', 0
_elf_interp.end: equ $-B.code
..@0x8048147: times 1 db 0  ; Alignment padding.
;..@0x8048148:

LS.note.ABI_tag:  ; addr=0x8048148 off=0x148
_elf_note: equ $-B.code
..@0x8048148: db 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
..@0x8048150: db 0x01, 0x00, 0x00, 0x00, 'GNU', 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x8048160: db 0x06, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00

LS.note.gnu.build_id:  ; addr=0x8048168 off=0x168
..@0x8048168: db 0x04, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00
..@0x8048170: db 0x03, 0x00, 0x00, 0x00, 'GNU', 0x00
_elf_build_id: equ $-B.code
..@0x8048176: db 0x02, 0xb3, 0xa3, 0x1c, 0x47, 0x25, 0xf5, 0xed
..@0x8048180: db 0x02, 0x35, 0x67, 0x7f, 0x0e, 0x46, 0x30, 0x66, 0xe5, 0xb6, 0x54, 0x51
_elf_note.end: equ $-B.code

LS.hash:  ; addr=0x804818c off=0x18c
_dynamic_hash: equ $-B.code
..@0x804818c: db 0x25, 0x00, 0x00, 0x00
..@0x8048190: db 0x32, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
..@0x80481a0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00
..@0x80481b0: db 0x21, 0x00, 0x00, 0x00, 0x16, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00
..@0x80481c0: db 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00
..@0x80481d0: db 0x2c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00
..@0x80481e0: db 0x24, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80481f0: db 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00
..@0x8048200: db 0x12, 0x00, 0x00, 0x00, 0x1d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048210: db 0x22, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x19, 0x00, 0x00, 0x00
..@0x8048220: db 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048230: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048240: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
..@0x8048250: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048260: db 0x09, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x8048270: db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
..@0x8048280: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x8048290: db 0x17, 0x00, 0x00, 0x00, 0x15, 0x00, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00
..@0x80482a0: db 0x1b, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00, 0x1a, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x80482b0: db 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1e, 0x00, 0x00, 0x00
..@0x80482c0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0x80482d0: db 0x23, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00
..@0x80482e0: db 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00

LS.gnu.hash:  ; addr=0x80482f0 off=0x2f0
_dynamic_gnu_hash: equ $-B.code
; https://blogs.oracle.com/solaris/post/gnu-hash-elf-sections
..@0x80482f0: dd (_hash_buckets.end-_hash_buckets)>>2  ; nbuckets.
..@0x80482f4: dd ((_hashed_dynsyms-_dynamic_symtab)>>4)  ; symndx.
..@0x80482f8: dd (_bloom_filter.end-_bloom_filter)>>2  ; maskwords.
%define GNU_HASH_SHIFT2 5
..@0x80482fc: dd GNU_HASH_SHIFT2  ; shift2: Bloom filter hash shift.
_bloom_filter: equ $-B.code
..@0x8048300: dd GNU_HASH_BLOOM_MASK(GNU.HASH.stdin, GNU_HASH_SHIFT2) | GNU_HASH_BLOOM_MASK(GNU.HASH.stdout, GNU_HASH_SHIFT2) | GNU_HASH_BLOOM_MASK(GNU.HASH.stderr, GNU_HASH_SHIFT2) | GNU_HASH_BLOOM_MASK(GNU.HASH._IO_stdin_used, GNU_HASH_SHIFT2)
_bloom_filter.end: equ $-B.code
_hash_buckets: equ $-B.code
.@0x8048304: dd (dynsym_stdout-_dynamic_symtab)>>4, (dynsym_stderr-_dynamic_symtab)>>4, 0
_hash_buckets.end: equ $-B.code
_hash_chain: equ $-B.code  ; Same number of dwords as number of hashed symbols.
..@0x8048310: dd (GNU.HASH.stdout&~1)|1, (GNU.HASH.stderr&~1), (GNU.HASH._IO_stdin_used&~1), (GNU.HASH.stdin&~1)|1
_hash_chain.end: equ $-B.code
;..@0x8048320:

LS.dynsym:  ; addr=0x8048320 off=0x320
_dynamic_symtab: equ $-B.code
; Each Elf32_Sym entry is 16 bytes: dd st_name; dd st_value; dd st_size; db st_info; db st_other; dw st_shndx.
..@0x8048320: times 4 dd 0  ; First element is zero-filled.
dynsym_log: equ $-B.code  ; 1
..@0x8048330: dd dynstr_log-_dynamic_strtab, 0, 0, 0x12
dynsym_read: equ $-B.code  ; 2
..@0x8048340: dd dynstr_read-_dynamic_strtab, 0, 0, 0x12
dynsym_printf: equ $-B.code
..@0x8048350: dd dynstr_printf-_dynamic_strtab, 0, 0, 0x12
dynsym_fflush: equ $-B.code
..@0x8048360: dd dynstr_fflush-_dynamic_strtab, 0, 0, 0x12
dynsym_memmove: equ $-B.code
..@0x8048370: dd dynstr_memmove-_dynamic_strtab, 0, 0, 0x12
dynsym_free: equ $-B.code
..@0x8048380: dd dynstr_free-_dynamic_strtab, 0, 0, 0x12
dynsym_memcpy: equ $-B.code
..@0x8048390: dd dynstr_memcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_fgets: equ $-B.code
..@0x80483a0: dd dynstr_fgets-_dynamic_strtab, 0, 0, 0x12
dynsym_fclose: equ $-B.code
..@0x80483b0: dd dynstr_fclose-_dynamic_strtab, 0, 0, 0x12
dynsym_time: equ $-B.code
..@0x80483c0: dd dynstr_time-_dynamic_strtab, 0, 0, 0x12
dynsym_gettimeofday: equ $-B.code
..@0x80483d0: dd dynstr_gettimeofday-_dynamic_strtab, 0, 0, 0x12
dynsym_stpcpy: equ $-B.code
..@0x80483e0: dd dynstr_stpcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_fseek: equ $-B.code
..@0x80483f0: dd dynstr_fseek-_dynamic_strtab, 0, 0, 0x12
dynsym_fwrite: equ $-B.code
..@0x8048400: dd dynstr_fwrite-_dynamic_strtab, 0, 0, 0x12
dynsym_strcat: equ $-B.code
..@0x8048410: dd dynstr_strcat-_dynamic_strtab, 0, 0, 0x12
dynsym_fread: equ $-B.code
..@0x8048420: dd dynstr_fread-_dynamic_strtab, 0, 0, 0x12
dynsym_strcpy: equ $-B.code
..@0x8048430: dd dynstr_strcpy-_dynamic_strtab, 0, 0, 0x12
dynsym_realloc: equ $-B.code
..@0x8048440: dd dynstr_realloc-_dynamic_strtab, 0, 0, 0x12
dynsym_malloc: equ $-B.code
..@0x8048450: dd dynstr_malloc-_dynamic_strtab, 0, 0, 0x12
dynsym_puts: equ $-B.code
..@0x8048460: dd dynstr_puts-_dynamic_strtab, 0, 0, 0x12
dynsym___fxstat: equ $-B.code
..@0x8048470: dd dynstr___fxstat-_dynamic_strtab, 0, 0, 0x12
dynsym___gmon_start__: equ $-B.code  ; 0x16
..@0x8048480: dd dynstr___gmon_start__-_dynamic_strtab, 0, 0, 0x20
dynsym_exit: equ $-B.code
..@0x8048490: dd dynstr_exit-_dynamic_strtab, 0, 0, 0x12
dynsym_srand: equ $-B.code
..@0x80484a0: dd dynstr_srand-_dynamic_strtab, 0, 0, 0x12
dynsym_strchr: equ $-B.code
..@0x80484b0: dd dynstr_strchr-_dynamic_strtab, 0, 0, 0x12
dynsym_strlen: equ $-B.code
..@0x80484c0: dd dynstr_strlen-_dynamic_strtab, 0, 0, 0x12
dynsym___libc_start_main: equ $-B.code
..@0x80484d0: dd dynstr___libc_start_main-_dynamic_strtab, 0, 0, 0x12
dynsym_strcasecmp: equ $-B.code
..@0x80484e0: dd dynstr_strcasecmp-_dynamic_strtab, 0, 0, 0x12
dynsym_ftell: equ $-B.code
..@0x80484f0: dd dynstr_ftell-_dynamic_strtab, 0, 0, 0x12
dynsym_fopen: equ $-B.code
..@0x8048500: dd dynstr_fopen-_dynamic_strtab, 0, 0, 0x12
dynsym_memset: equ $-B.code
..@0x8048510: dd dynstr_memset-_dynamic_strtab, 0, 0, 0x12
dynsym_fileno: equ $-B.code
..@0x8048520: dd dynstr_fileno-_dynamic_strtab, 0, 0, 0x12
dynsym_strtod: equ $-B.code
..@0x8048530: dd dynstr_strtod-_dynamic_strtab, 0, 0, 0x12
dynsym_fgetc: equ $-B.code
..@0x8048540: dd dynstr_fgetc-_dynamic_strtab, 0, 0, 0x12
dynsym_strncasecmp: equ $-B.code
..@0x8048550: dd dynstr_strncasecmp-_dynamic_strtab, 0, 0, 0x12
dynsym_rand: equ $-B.code
..@0x8048560: dd dynstr_rand-_dynamic_strtab, 0, 0, 0x12
dynsym_strtok: equ $-B.code
..@0x8048570: dd dynstr_strtok-_dynamic_strtab, 0, 0, 0x12
dynsym_sigemptyset: equ $-B.code
..@0x8048580: dd dynstr_sigemptyset-_dynamic_strtab, 0, 0, 0x12
dynsym_vfprintf: equ $-B.code
..@0x8048590: dd dynstr_vfprintf-_dynamic_strtab, 0, 0, 0x12
dynsym_readdir: equ $-B.code
..@0x80485a0: dd dynstr_readdir-_dynamic_strtab, 0, 0, 0x12
dynsym__Jv_RegisterClasses: equ $-B.code
..@0x80485b0: dd dynstr__Jv_RegisterClasses-_dynamic_strtab, 0, 0, 0x20
dynsym_sigaction: equ $-B.code
..@0x80485c0: dd dynstr_sigaction-_dynamic_strtab, 0, 0, 0x12
dynsym_strtol: equ $-B.code
..@0x80485d0: dd dynstr_strtol-_dynamic_strtab, 0, 0, 0x12
dynsym_closedir: equ $-B.code
..@0x80485e0: dd dynstr_closedir-_dynamic_strtab, 0, 0, 0x12
dynsym_opendir: equ $-B.code
..@0x80485f0: dd dynstr_opendir-_dynamic_strtab, 0, 0, 0x12
_hashed_dynsyms: equ $-B.code
dynsym_stdout: equ $-B.code
..@0x8048600: dd dynstr_stdout-_dynamic_strtab, stdout, 4, 0x001a0011
dynsym_stderr: equ $-B.code
..@0x8048610: dd dynstr_stderr-_dynamic_strtab, stderr, 4, 0x001a0011
dynsym__IO_stdin_used: equ $-B.code
..@0x8048620: dd dynstr__IO_stdin_used-_dynamic_strtab, _IO_stdin_used, 4, 0x00100011
dynsym_stdin: equ $-B.code
..@0x8048630: dd dynstr_stdin-_dynamic_strtab, stdin, 4, 0x001a0011
_dynamic_symtab.end: equ $-B.code
times -((_hash_chain.end-_hash_chain)<<2)+(_dynamic_symtab.end-_hashed_dynsyms) times 0 nop  ; Assert.
times +((_hash_chain.end-_hash_chain)<<2)-(_dynamic_symtab.end-_hashed_dynsyms) times 0 nop  ; Assert.

LS.dynstr:  ; addr=0x8048640 off=0x640
_dynamic_strtab: equ $-B.code
..@0x8048640: db 0  ; It always starts with an empty string.
dynstr_libm_so_6: equ $-B.code
..@0x8048641: db 'libm.so.6', 0
dynstr___gmon_start__: equ $-B.code
..@0x804864b: db '__gmon_start__', 0
dynstr__Jv_RegisterClasses: equ $-B.code
..@0x804865a: db '_Jv_RegisterClasses', 0
dynstr_log: equ $-B.code
..@0x804866e: db 'log', 0
dynstr_libc_so_6: equ $-B.code
..@0x8048672: db 'libc.so.6', 0
dynstr__IO_stdin_used: equ $-B.code
..@0x804867c: db '_IO_stdin_used', 0
dynstr_fflush: equ $-B.code
..@0x804868b: db 'fflush', 0
dynstr_strcpy: equ $-B.code
..@0x8048692: db 'strcpy', 0
dynstr_exit: equ $-B.code
..@0x8048699: db 'exit', 0
dynstr_readdir: equ $-B.code
..@0x804869e: db 'readdir', 0
dynstr_rand: equ $-B.code+1  ; 'rand' and 'srand' overlap.
dynstr_srand: equ $-B.code
..@0x80486a6: db 'srand', 0
dynstr_fopen: equ $-B.code
..@0x80486ac: db 'fopen', 0
dynstr_closedir: equ $-B.code
..@0x80486b2: db 'closedir', 0
dynstr_ftell: equ $-B.code
..@0x80486bb: db 'ftell', 0
dynstr_puts: equ $-B.code
..@0x80486c1: db 'puts', 0
dynstr_time: equ $-B.code
..@0x80486c6: db 'time', 0
dynstr_realloc: equ $-B.code
..@0x80486cb: db 'realloc', 0
dynstr_stdin: equ $-B.code
..@0x80486d3: db 'stdin', 0
dynstr_strtod: equ $-B.code
..@0x80486d9: db 'strtod', 0
dynstr_strtok: equ $-B.code
..@0x80486e0: db 'strtok', 0
dynstr_strtol: equ $-B.code
..@0x80486e7: db 'strtol', 0
dynstr_fgetc: equ $-B.code
..@0x80486ee: db 'fgetc', 0
dynstr_fgets: equ $-B.code
..@0x80486f4: db 'fgets', 0
dynstr_strlen: equ $-B.code
..@0x80486fa: db 'strlen', 0
dynstr_sigemptyset: equ $-B.code
..@0x8048701: db 'sigemptyset', 0
dynstr_memset: equ $-B.code
..@0x804870d: db 'memset', 0
dynstr_fseek: equ $-B.code
..@0x8048714: db 'fseek', 0
dynstr_stdout: equ $-B.code
..@0x804871a: db 'stdout', 0
dynstr_memcpy: equ $-B.code
..@0x8048721: db 'memcpy', 0
dynstr_fclose: equ $-B.code
..@0x8048728: db 'fclose', 0
dynstr_malloc: equ $-B.code
..@0x804872f: db 'malloc', 0
dynstr_strcat: equ $-B.code
..@0x8048736: db 'strcat', 0
dynstr_strcasecmp: equ $-B.code
..@0x804873d: db 'strcasecmp', 0
dynstr_opendir: equ $-B.code
..@0x8048748: db 'opendir', 0
dynstr_stderr: equ $-B.code
..@0x8048750: db 'stderr', 0
dynstr_strncasecmp: equ $-B.code
..@0x8048757: db 'strncasecmp', 0
dynstr___fxstat: equ $-B.code
..@0x8048763: db '__fxstat', 0
dynstr_fileno: equ $-B.code
..@0x804876c: db 'fileno', 0
dynstr_fwrite: equ $-B.code
..@0x8048773: db 'fwrite', 0
dynstr_read: equ $-B.code+1  ; 'read' and 'fread' overlap.
dynstr_fread: equ $-B.code
..@0x804877a: db 'fread', 0
dynstr_gettimeofday: equ $-B.code
..@0x8048780: db 'gettimeofday', 0
dynstr_sigaction: equ $-B.code
..@0x804878d: db 'sigaction', 0
dynstr_strchr: equ $-B.code
..@0x8048797: db 'strchr', 0
dynstr_memmove: equ $-B.code
..@0x804879e: db 'memmove', 0
dynstr___libc_start_main: equ $-B.code
..@0x80487a6: db '__libc_start_main', 0
dynstr_stpcpy: equ $-B.code
..@0x80487b8: db 'stpcpy', 0
dynstr_printf: equ $-B.code+2  ; 'printf' and 'vfprintf' overlap.
dynstr_vfprintf: equ $-B.code
..@0x80487bf: db 'vfprintf', 0
dynstr_free: equ $-B.code
..@0x80487c8: db 'free', 0
dynstr_GLIBC_2.1: equ $-B.code
..@0x80487cd: db 'GLIBC_2.1', 0
dynstr_GLIBC_2.0: equ $-B.code
..@0x80487d7: db 'GLIBC_2.0', 0
_dynamic_strtab.end: equ $-B.code
..@0x80487e1: times 1 db 0  ; Alignment padding.

LS.gnu.version:  ; addr=0x80487e2 off=0x7e2
_dynamic_versym: equ $-B.code
; it has the same number of (16-byte) elements as _dynamic_symtab, in the same order.
; Value 0 means local, value 1 means global.
..@0x80487e2: dw 0, 2, 3, 3, 3, 3, 3
..@0x80487f0: dw 3, 3, 4, 3, 3, 3, 3, 3
..@0x8048800: dw 3, 3, 3, 3, 3, 3, 3, 0
..@0x8048810: dw 3, 3, 3, 3, 3, 3, 3, 4
..@0x8048820: dw 3, 3, 3, 3, 3, 3, 3, 3
..@0x8048830: dw 3, 3, 0, 3, 3, 3, 3, 3
..@0x8048840: dw 3, 1, 3
_dynamic_versym.end: equ $-B.code
times -((_dynamic_versym.end-_dynamic_versym)<<3)+(_dynamic_symtab.end-_dynamic_symtab) times 0 nop  ; Assert.
times +((_dynamic_versym.end-_dynamic_versym)<<3)-(_dynamic_symtab.end-_dynamic_symtab) times 0 nop  ; Assert.
..@0x8048846: times 2 db 0  ; Padding.

LS.gnu.version_r:  ; addr=0x8048848 off=0x848
_dynamic_verneed: equ $-B.code
; Also update $DT.VERNEEDNUM if this is updated.
_verneed0: equ $-B.code
..@0x8048848: dw 1  ; File group version.
              dw 2  ; Entry count in this file.
              dd dynstr_libc_so_6-_dynamic_strtab
..@0x8048850: dd _vernaux4-_verneed0
              dd _verneed1-_dynamic_verneed  ; Pointer to next _verneed*.
_vernaux4: equ $-B.code
              dd VNA.HASH.GLIBC_2.1  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 4  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
..@0x8048860: dd dynstr_GLIBC_2.1-_dynamic_strtab  ; vna_name.
              dd _vernaux3-_vernaux4  ; vna_next.
_vernaux3: equ $-B.code
              dd VNA.HASH.GLIBC_2.0  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 3  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
..@0x8048870: dd dynstr_GLIBC_2.0-_dynamic_strtab
              dd 0  ; vna_next. Non next _vernaux*.
_verneed1: equ $-B.code
              dw 1  ; File group version.
              dw 1  ; Entry count in this file.
              dd dynstr_libm_so_6-_dynamic_strtab
..@0x8048880: dd _vernaux2-_verneed1
              dd 0  ; No next _verneed*.
_vernaux2: equ $-B.code
              dd VNA.HASH.GLIBC_2.0  ; vna_hash (of vna_name).
              dw 0  ; vna_flags.
              dw 2  ; vna_other (version number). Corresponds to this value in _dynamic_versym.
..@0x8048890: dd dynstr_GLIBC_2.0-_dynamic_strtab ; vna_name.
              dd 0  ; vna_next. No next _vernaux*.

LS.rel.dyn:  ; addr=0x8048898 off=0x898
_dynamic_rel: equ $-B.code  ; Relocations.
..@0x8048898: dd __gmon_start__@weak, 6 | (dynsym___gmon_start__-_dynamic_symtab)>>4<<8
..@0x80488a0: dd stderr, 5 | (dynsym_stderr-_dynamic_symtab)>>4<<8
..@0x80488a8: dd stdin,  5 | (dynsym_stdin -_dynamic_symtab)>>4<<8
..@0x80488b0: dd stdout, 5 | (dynsym_stdout-_dynamic_symtab)>>4<<8
_dynamic_rel.end: equ $-B.code

LS.rel.plt:  ; addr=0x80488b8 off=0x8b8
_dynamic_jmprel: equ $-B.code  ; Relocations in plt.
; The order of these entries must match L.plt, otherwise it would segfault at startup.
..@0x80488b8: dd log@GLIBC_2.0@got,               7 | (dynsym_log-_dynamic_symtab)>>4<<8
..@0x80488c0: dd read@GLIBC_2.0@got,              7 | (dynsym_read-_dynamic_symtab)>>4<<8
..@0x80488c8: dd printf@GLIBC_2.0@got,            7 | (dynsym_printf-_dynamic_symtab)>>4<<8
..@0x80488d0: dd fflush@GLIBC_2.0@got,            7 | (dynsym_fflush-_dynamic_symtab)>>4<<8
..@0x80488d8: dd memmove@GLIBC_2.0@got,           7 | (dynsym_memmove-_dynamic_symtab)>>4<<8
..@0x80488e0: dd free@GLIBC_2.0@got,              7 | (dynsym_free-_dynamic_symtab)>>4<<8
..@0x80488e8: dd memcpy@GLIBC_2.0@got,            7 | (dynsym_memcpy-_dynamic_symtab)>>4<<8
..@0x80488f0: dd fgets@GLIBC_2.0@got,             7 | (dynsym_fgets-_dynamic_symtab)>>4<<8
..@0x80488f8: dd fclose@GLIBC_2.1@got,            7 | (dynsym_fclose-_dynamic_symtab)>>4<<8
..@0x8048900: dd time@GLIBC_2.0@got,              7 | (dynsym_time-_dynamic_symtab)>>4<<8
..@0x8048908: dd gettimeofday@GLIBC_2.0@got,      7 | (dynsym_gettimeofday-_dynamic_symtab)>>4<<8
..@0x8048910: dd stpcpy@GLIBC_2.0@got,            7 | (dynsym_stpcpy-_dynamic_symtab)>>4<<8
..@0x8048918: dd fseek@GLIBC_2.0@got,             7 | (dynsym_fseek-_dynamic_symtab)>>4<<8
..@0x8048920: dd fwrite@GLIBC_2.0@got,            7 | (dynsym_fwrite-_dynamic_symtab)>>4<<8
..@0x8048928: dd strcat@GLIBC_2.0@got,            7 | (dynsym_strcat-_dynamic_symtab)>>4<<8
..@0x8048930: dd fread@GLIBC_2.0@got,             7 | (dynsym_fread-_dynamic_symtab)>>4<<8
..@0x8048938: dd strcpy@GLIBC_2.0@got,            7 | (dynsym_strcpy-_dynamic_symtab)>>4<<8
..@0x8048940: dd realloc@GLIBC_2.0@got,           7 | (dynsym_realloc-_dynamic_symtab)>>4<<8
..@0x8048948: dd malloc@GLIBC_2.0@got,            7 | (dynsym_malloc-_dynamic_symtab)>>4<<8
..@0x8048950: dd puts@GLIBC_2.0@got,              7 | (dynsym_puts-_dynamic_symtab)>>4<<8
..@0x8048958: dd __fxstat@GLIBC_2.0@got,          7 | (dynsym___fxstat-_dynamic_symtab)>>4<<8
..@0x8048960: dd __gmon_start__@got,              7 | (dynsym___gmon_start__-_dynamic_symtab)>>4<<8
..@0x8048968: dd exit@GLIBC_2.0@got,              7 | (dynsym_exit-_dynamic_symtab)>>4<<8
..@0x8048970: dd srand@GLIBC_2.0@got,             7 | (dynsym_srand-_dynamic_symtab)>>4<<8
..@0x8048978: dd strchr@GLIBC_2.0@got,            7 | (dynsym_strchr-_dynamic_symtab)>>4<<8
..@0x8048980: dd strlen@GLIBC_2.0@got,            7 | (dynsym_strlen-_dynamic_symtab)>>4<<8
..@0x8048988: dd __libc_start_main@GLIBC_2.0@got, 7 | (dynsym___libc_start_main-_dynamic_symtab)>>4<<8
..@0x8048990: dd strcasecmp@GLIBC_2.0@got,        7 | (dynsym_strcasecmp-_dynamic_symtab)>>4<<8
..@0x8048998: dd ftell@GLIBC_2.0@got,             7 | (dynsym_ftell-_dynamic_symtab)>>4<<8
..@0x80489a0: dd fopen@GLIBC_2.1@got,             7 | (dynsym_fopen-_dynamic_symtab)>>4<<8
..@0x80489a8: dd memset@GLIBC_2.0@got,            7 | (dynsym_memset-_dynamic_symtab)>>4<<8
..@0x80489b0: dd fileno@GLIBC_2.0@got,            7 | (dynsym_fileno-_dynamic_symtab)>>4<<8
..@0x80489b8: dd strtod@GLIBC_2.0@got,            7 | (dynsym_strtod-_dynamic_symtab)>>4<<8
..@0x80489c0: dd fgetc@GLIBC_2.0@got,             7 | (dynsym_fgetc-_dynamic_symtab)>>4<<8
..@0x80489c8: dd strncasecmp@GLIBC_2.0@got,       7 | (dynsym_strncasecmp-_dynamic_symtab)>>4<<8
..@0x80489d0: dd rand@GLIBC_2.0@got,              7 | (dynsym_rand-_dynamic_symtab)>>4<<8
..@0x80489d8: dd strtok@GLIBC_2.0@got,            7 | (dynsym_strtok-_dynamic_symtab)>>4<<8
..@0x80489e0: dd sigemptyset@GLIBC_2.0@got,       7 | (dynsym_sigemptyset-_dynamic_symtab)>>4<<8
..@0x80489e8: dd vfprintf@GLIBC_2.0@got,          7 | (dynsym_vfprintf-_dynamic_symtab)>>4<<8
..@0x80489f0: dd readdir@GLIBC_2.0@got,           7 | (dynsym_readdir-_dynamic_symtab)>>4<<8
..@0x80489f8: dd sigaction@GLIBC_2.0@got,         7 | (dynsym_sigaction-_dynamic_symtab)>>4<<8
..@0x8048a00: dd strtol@GLIBC_2.0@got,            7 | (dynsym_strtol-_dynamic_symtab)>>4<<8
..@0x8048a08: dd closedir@GLIBC_2.0@got,          7 | (dynsym_closedir-_dynamic_symtab)>>4<<8
..@0x8048a10: dd opendir@GLIBC_2.0@got,           7 | (dynsym_opendir-_dynamic_symtab)>>4<<8
_dynamic_jmprel.end: equ $-B.code

LS.init:  ; addr=0x8048a18 off=0xa18
_dynamic_init: equ $-B.code
; From crti.o, section .init:
_init: equ $-B.code
..@0x8048a18: push ebp
..@0x8048a19: db 0x89, 0xe5  ;; mov ebp,esp
..@0x8048a1b: push ebx
..@0x8048a1c: sub esp, strict byte 4
..@0x8048a1f: call B.code+_dynamic_init_pop_ebx
_dynamic_init_pop_ebx: equ $-B.code
..@0x8048a24: pop ebx
..@0x8048a25: add ebx, strict dword B.code+_GLOBAL_OFFSET_TABLE_-$+1  ; EBX := _GLOBAL_OFFSET_TABLE_ (in a position-independent way).
..@0x8048a2b: db 0x8b, 0x93
                dd __gmon_start__@weak-_GLOBAL_OFFSET_TABLE_  ;; mov edx, [ebx+__gmon_start__@weak-_GLOBAL_OFFSET_TABLE_]  ; EDX := [__gmon_start__@weak]
..@0x8048a31: db 0x85, 0xd2  ;; test edx,edx
..@0x8048a33: db 0x74, 0x05  ;; jz A.code+0x8048a3a
..@0x8048a35: call B.code+__gmon_start__
; End from crti.o.
; From crtn.o, section .init:
..@0x8048a3a: pop eax
..@0x8048a3b: pop ebx
..@0x8048a3c: leave
..@0x8048a3d: ret
; End from crtn.o.
..@0x8048a3e: times 2 db 0  ; Alignment padding.

LS.plt:  ; addr=0x8048a40 off=0xa40
_plt_code0: equ $-B.code
..@0x8048a40: push dword [_GLOBAL_OFFSET_TABLE_special1]
..@0x8048a46: jmp [_GLOBAL_OFFSET_TABLE_special2@got]
..@0x8048a4c: times 4 db 0  ; Alignment padding.
log: equ $-B.code
..@0x8048a50: jmp [log@GLIBC_2.0@got]
..@0x8048a56: push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0.
..@0x8048a5b: jmp strict near B.code+_plt_code0
read: equ $-B.code
..@0x8048a60: jmp [read@GLIBC_2.0@got]
..@0x8048a66: push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 8.
..@0x8048a6b: jmp strict near B.code+_plt_code0
printf: equ $-B.code
..@0x8048a70: jmp [printf@GLIBC_2.0@got]
..@0x8048a76: push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0x10.
..@0x8048a7b: jmp strict near B.code+_plt_code0
fflush: equ $-B.code
..@0x8048a80: jmp [fflush@GLIBC_2.0@got]
..@0x8048a86: push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0x18.
..@0x8048a8b: jmp strict near B.code+_plt_code0
memmove: equ $-B.code
..@0x8048a90: jmp [memmove@GLIBC_2.0@got]
..@0x8048a96: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048a9b: jmp strict near B.code+_plt_code0
free: equ $-B.code
..@0x8048aa0: jmp [free@GLIBC_2.0@got]
..@0x8048aa6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048aab: jmp strict near B.code+_plt_code0
memcpy: equ $-B.code
..@0x8048ab0: jmp [memcpy@GLIBC_2.0@got]
..@0x8048ab6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048abb: jmp strict near B.code+_plt_code0
fgets: equ $-B.code
..@0x8048ac0: jmp [fgets@GLIBC_2.0@got]
..@0x8048ac6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048acb: jmp strict near B.code+_plt_code0
fclose: equ $-B.code
..@0x8048ad0: jmp [fclose@GLIBC_2.1@got]
..@0x8048ad6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048adb: jmp strict near B.code+_plt_code0
time: equ $-B.code
..@0x8048ae0: jmp [time@GLIBC_2.0@got]
..@0x8048ae6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048aeb: jmp strict near B.code+_plt_code0
gettimeofday: equ $-B.code
..@0x8048af0: jmp [gettimeofday@GLIBC_2.0@got]
..@0x8048af6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048afb: jmp strict near B.code+_plt_code0
stpcpy: equ $-B.code
..@0x8048b00: jmp [stpcpy@GLIBC_2.0@got]
..@0x8048b06: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b0b: jmp strict near B.code+_plt_code0
fseek: equ $-B.code
..@0x8048b10: jmp [fseek@GLIBC_2.0@got]
..@0x8048b16: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b1b: jmp strict near B.code+_plt_code0
fwrite: equ $-B.code
..@0x8048b20: jmp [fwrite@GLIBC_2.0@got]
..@0x8048b26: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b2b: jmp strict near B.code+_plt_code0
strcat: equ $-B.code
..@0x8048b30: jmp [strcat@GLIBC_2.0@got]
..@0x8048b36: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b3b: jmp strict near B.code+_plt_code0
fread: equ $-B.code
..@0x8048b40: jmp [fread@GLIBC_2.0@got]
..@0x8048b46: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b4b: jmp strict near B.code+_plt_code0
strcpy: equ $-B.code
..@0x8048b50: jmp [strcpy@GLIBC_2.0@got]
..@0x8048b56: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b5b: jmp strict near B.code+_plt_code0
realloc: equ $-B.code
..@0x8048b60: jmp [realloc@GLIBC_2.0@got]
..@0x8048b66: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b6b: jmp strict near B.code+_plt_code0
malloc: equ $-B.code
..@0x8048b70: jmp [malloc@GLIBC_2.0@got]
..@0x8048b76: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b7b: jmp strict near B.code+_plt_code0
puts: equ $-B.code
..@0x8048b80: jmp [puts@GLIBC_2.0@got]
..@0x8048b86: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b8b: jmp strict near B.code+_plt_code0
__fxstat: equ $-B.code
..@0x8048b90: jmp [__fxstat@GLIBC_2.0@got]
..@0x8048b96: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048b9b: jmp strict near B.code+_plt_code0
__gmon_start__: equ $-B.code
..@0x8048ba0: jmp [__gmon_start__@got]
..@0x8048ba6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048bab: jmp strict near B.code+_plt_code0
exit: equ $-B.code
..@0x8048bb0: jmp [exit@GLIBC_2.0@got]
..@0x8048bb6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048bbb: jmp strict near B.code+_plt_code0
srand: equ $-B.code
..@0x8048bc0: jmp [srand@GLIBC_2.0@got]
..@0x8048bc6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048bcb: jmp strict near B.code+_plt_code0
strchr: equ $-B.code
..@0x8048bd0: jmp [strchr@GLIBC_2.0@got]
..@0x8048bd6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048bdb: jmp strict near B.code+_plt_code0
strlen: equ $-B.code
..@0x8048be0: jmp [strlen@GLIBC_2.0@got]
..@0x8048be6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048beb: jmp strict near B.code+_plt_code0
__libc_start_main: equ $-B.code
..@0x8048bf0: jmp [__libc_start_main@GLIBC_2.0@got]
..@0x8048bf6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048bfb: jmp strict near B.code+_plt_code0
strcasecmp: equ $-B.code
..@0x8048c00: jmp [strcasecmp@GLIBC_2.0@got]
..@0x8048c06: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c0b: jmp strict near B.code+_plt_code0
ftell: equ $-B.code
..@0x8048c10: jmp [ftell@GLIBC_2.0@got]
..@0x8048c16: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c1b: jmp strict near B.code+_plt_code0
fopen: equ $-B.code
..@0x8048c20: jmp [fopen@GLIBC_2.1@got]
..@0x8048c26: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c2b: jmp strict near B.code+_plt_code0
memset: equ $-B.code
..@0x8048c30: jmp [memset@GLIBC_2.0@got]
..@0x8048c36: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c3b: jmp strict near B.code+_plt_code0
fileno: equ $-B.code
..@0x8048c40: jmp [fileno@GLIBC_2.0@got]
..@0x8048c46: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c4b: jmp strict near B.code+_plt_code0
strtod: equ $-B.code
..@0x8048c50: jmp [strtod@GLIBC_2.0@got]
..@0x8048c56: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c5b: jmp strict near B.code+_plt_code0
fgetc: equ $-B.code
..@0x8048c60: jmp [fgetc@GLIBC_2.0@got]
..@0x8048c66: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c6b: jmp strict near B.code+_plt_code0
strncasecmp: equ $-B.code
..@0x8048c70: jmp [strncasecmp@GLIBC_2.0@got]
..@0x8048c76: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c7b: jmp strict near B.code+_plt_code0
rand: equ $-B.code
..@0x8048c80: jmp [rand@GLIBC_2.0@got]
..@0x8048c86: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c8b: jmp strict near B.code+_plt_code0
strtok: equ $-B.code
..@0x8048c90: jmp [strtok@GLIBC_2.0@got]
..@0x8048c96: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048c9b: jmp strict near B.code+_plt_code0
sigemptyset: equ $-B.code
..@0x8048ca0: jmp [sigemptyset@GLIBC_2.0@got]
..@0x8048ca6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048cab: jmp strict near B.code+_plt_code0
vfprintf: equ $-B.code
..@0x8048cb0: jmp [vfprintf@GLIBC_2.0@got]
..@0x8048cb6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048cbb: jmp strict near B.code+_plt_code0
readdir: equ $-B.code
..@0x8048cc0: jmp [readdir@GLIBC_2.0@got]
..@0x8048cc6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048ccb: jmp strict near B.code+_plt_code0
sigaction: equ $-B.code
..@0x8048cd0: jmp [sigaction@GLIBC_2.0@got]
..@0x8048cd6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048cdb: jmp strict near B.code+_plt_code0
strtol: equ $-B.code
..@0x8048ce0: jmp [strtol@GLIBC_2.0@got]
..@0x8048ce6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048ceb: jmp strict near B.code+_plt_code0
closedir: equ $-B.code
..@0x8048cf0: jmp [closedir@GLIBC_2.0@got]
..@0x8048cf6: push strict dword ($-B.code-_plt_code0-0x16)>>1
..@0x8048cfb: jmp strict near B.code+_plt_code0
opendir: equ $-B.code
..@0x8048d00: jmp [opendir@GLIBC_2.0@got]
..@0x8048d06: push strict dword ($-B.code-_plt_code0-0x16)>>1  ; 0x158.
..@0x8048d0b: jmp strict near B.code+_plt_code0
%endif  ; TARGET, ls

P.text:      ;0x06d10..0x18698  +0x11988    @0x8048d10...0x805a698
times -(P.text-B.code-$$)+0x8048d10 times 0 nop  ; Assert.
times +(P.text-B.code-$$)-0x8048d10 times 0 nop  ; Assert.
_text: equ $-B.code
%ifidn TARGET, ls
%define maybe_prog_printf printf  ; Use glibc.
%else
%define maybe_prog_printf prog_printf  ; Use the one in this executable.
%endif
unknown_func2: equ $-B.code
..@0x8048d10: push ebp
..@0x8048d11: push edi
..@0x8048d12: push esi
..@0x8048d13: push ebx
..@0x8048d14: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8048d16: sub esp, strict byte 0x5c
..@0x8048d19: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8048d1c: db 0xc6, 0x05, 0xbc, 0xe0, 0x83, 0x09, 0x00  ;; mov byte [0x983e0bc],0x0
..@0x8048d23: db 0x89, 0x4c, 0x24, 0x28  ;; mov [esp+0x28],ecx
..@0x8048d27: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048d29: db 0xc7, 0x05, 0xe8, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae8],0x0
..@0x8048d31: db 0x00, 0x00
..@0x8048d33: db 0xc1, 0xe1, 0x18  ;; shl ecx,byte 0x18
..@0x8048d36: db 0xc7, 0x05, 0xa0, 0xe0, 0x83, 0x09, 0x89, 0x50  ;; mov dword [0x983e0a0],0x474e5089
..@0x8048d3e: db 0x4e, 0x47
..@0x8048d40: db 0x01, 0xcb  ;; add ebx,ecx
..@0x8048d42: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048d44: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x8048d47: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8048d4c: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x0d, 0x0a  ;; mov dword [0x983e0a4],0xa1a0a0d
..@0x8048d54: db 0x1a, 0x0a
..@0x8048d56: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8048d5c: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048d5f: db 0xc7, 0x05, 0xa8, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e0a8],0xd000000
..@0x8048d67: db 0x00, 0x0d
..@0x8048d69: db 0xc7, 0x05, 0xac, 0xe0, 0x83, 0x09, 0x49, 0x48  ;; mov dword [0x983e0ac],0x52444849
..@0x8048d71: db 0x44, 0x52
..@0x8048d73: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8048d75: db 0x01, 0xc8  ;; add eax,ecx
..@0x8048d77: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8048d79: db 0xa3, 0xb0, 0xe0, 0x83, 0x09  ;; mov [0x983e0b0],eax
..@0x8048d7e: db 0x89, 0xd0  ;; mov eax,edx
..@0x8048d80: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8048d83: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8048d86: db 0x01, 0xc1  ;; add ecx,eax
..@0x8048d88: db 0x89, 0xd0  ;; mov eax,edx
..@0x8048d8a: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8048d90: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8048d93: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8048d96: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8048d9b: db 0x01, 0xc8  ;; add eax,ecx
..@0x8048d9d: db 0x01, 0xc2  ;; add edx,eax
..@0x8048d9f: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8048da3: db 0x89, 0x15, 0xb4, 0xe0, 0x83, 0x09  ;; mov [0x983e0b4],edx
..@0x8048da9: db 0xba, 0x0c, 0x00, 0x00, 0x00  ;; mov edx,0xc
..@0x8048dae: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048db1: db 0x03, 0x44, 0x24, 0x70  ;; add eax,[esp+0x70]
..@0x8048db5: db 0xa3, 0xb8, 0xe0, 0x83, 0x09  ;; mov [0x983e0b8],eax
..@0x8048dba: or eax, strict byte -0x1
..@0x8048dbd: db 0x8a, 0x8a, 0xa0, 0xe0, 0x83, 0x09  ;; mov cl,[edx+0x983e0a0]
..@0x8048dc3: inc edx
..@0x8048dc4: db 0x31, 0xc1  ;; xor ecx,eax
..@0x8048dc6: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8048dc9: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x8048dcc: db 0x33, 0x04, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ecx*4+0x80602a0]
..@0x8048dd3: cmp edx, strict byte 0x1d
..@0x8048dd6: db 0x75, 0xe5  ;; jnz A.code+0x8048dbd
..@0x8048dd8: db 0xf7, 0xd0  ;; not eax
..@0x8048dda: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048ddc: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048dde: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8048de1: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8048de4: db 0x01, 0xd1  ;; add ecx,edx
..@0x8048de6: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048de8: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8048ded: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8048df0: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048df3: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8048df9: db 0x01, 0xca  ;; add edx,ecx
..@0x8048dfb: db 0x01, 0xd0  ;; add eax,edx
..@0x8048dfd: db 0xba, 0x21, 0x00, 0x00, 0x00  ;; mov edx,0x21
..@0x8048e02: db 0xa3, 0xbd, 0xe0, 0x83, 0x09  ;; mov [0x983e0bd],eax
..@0x8048e07: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x8048e0c: call R.code+0x804b8f0
..@0x8048e11: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x8048e15: db 0xc7, 0x44, 0x24, 0x24, 0x01, 0x33, 0x02, 0x04  ;; mov dword [esp+0x24],0x4023301
..@0x8048e1d: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8048e21: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x8048e27: db 0xc1, 0xe1, 0x02  ;; shl ecx,byte 0x2
..@0x8048e2a: db 0xd3, 0x7c, 0x24, 0x24  ;; sar dword [esp+0x24],cl
..@0x8048e2e: and ebx, strict byte 0x3
..@0x8048e31: db 0x89, 0x4c, 0x24, 0x3c  ;; mov [esp+0x3c],ecx
..@0x8048e35: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x8048e39: db 0x8b, 0x75, 0x60  ;; mov esi,[ebp+0x60]
..@0x8048e3c: db 0x83, 0x64, 0x24, 0x24, 0x0f  ;; and dword [esp+0x24],byte +0xf
..@0x8048e41: db 0xc1, 0x64, 0x24, 0x24, 0x18  ;; shl dword [esp+0x24],byte 0x18
..@0x8048e46: cmp ebx, strict byte 0x1
..@0x8048e49: db 0x19, 0xff  ;; sbb edi,edi
..@0x8048e4b: and edi, strict byte -0x2
..@0x8048e4e: add edi, strict byte 0xb
..@0x8048e51: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8048e53: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x8048e57: inc ebx
..@0x8048e58: db 0x83, 0x7c, 0x24, 0x28, 0x04  ;; cmp dword [esp+0x28],byte +0x4
..@0x8048e5d: db 0x0f, 0x4c, 0xdf  ;; cmovl ebx,edi
..@0x8048e60: db 0x8d, 0x7b, 0x04  ;; lea edi,[ebx+0x4]
..@0x8048e63: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x8048e67: db 0x8d, 0x8b, 0xa0, 0xe0, 0x83, 0x09  ;; lea ecx,[ebx+0x983e0a0]
..@0x8048e6d: db 0x89, 0x7c, 0x24, 0x38  ;; mov [esp+0x38],edi
..@0x8048e71: db 0x89, 0x4c, 0x24, 0x34  ;; mov [esp+0x34],ecx
..@0x8048e75: db 0x8d, 0x3c, 0xb5, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[esi*4+0x0]
..@0x8048e7c: jmp strict near R.code+0x8048fe1
..@0x8048e81: db 0x8b, 0x45, 0x70  ;; mov eax,[ebp+0x70]
..@0x8048e84: db 0x8b, 0x04, 0x38  ;; mov eax,[eax+edi]
..@0x8048e87: db 0x8b, 0x50, 0x04  ;; mov edx,[eax+0x4]
..@0x8048e8a: db 0x81, 0xfa, 0x62, 0x4b, 0x47, 0x44  ;; cmp edx,0x44474b62
..@0x8048e90: db 0x0f, 0x84, 0x47, 0x01, 0x00, 0x00  ;; jz near A.code+0x8048fdd
..@0x8048e96: db 0x81, 0xfa, 0x73, 0x42, 0x49, 0x54  ;; cmp edx,0x54494273
..@0x8048e9c: db 0x8b, 0x08  ;; mov ecx,[eax]
..@0x8048e9e: db 0x0f, 0x85, 0x08, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8048fac
..@0x8048ea4: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8048ea6: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048ea8: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8048eab: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8048eae: db 0x01, 0xd3  ;; add ebx,edx
..@0x8048eb0: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048eb2: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8048eb8: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8048ebb: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x8048ebe: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8048ec4: db 0x01, 0xda  ;; add edx,ebx
..@0x8048ec6: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x8048eca: db 0x01, 0xd1  ;; add ecx,edx
..@0x8048ecc: db 0x31, 0xd2  ;; xor edx,edx
..@0x8048ece: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8048ed2: db 0xeb, 0x09  ;; jmp short A.code+0x8048edd
..@0x8048ed4: db 0x8a, 0x5c, 0x10, 0x08  ;; mov bl,[eax+edx+0x8]
..@0x8048ed8: db 0x88, 0x5c, 0x14, 0x4c  ;; mov [esp+edx+0x4c],bl
..@0x8048edc: inc edx
..@0x8048edd: db 0x39, 0xca  ;; cmp edx,ecx
..@0x8048edf: db 0x7c, 0xf3  ;; jl A.code+0x8048ed4
..@0x8048ee1: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8048ee5: cmp ecx, strict byte 0x3
..@0x8048ee8: db 0x89, 0x44, 0x24, 0x18  ;; mov [esp+0x18],eax
..@0x8048eec: db 0x8a, 0x44, 0x24, 0x4c  ;; mov al,[esp+0x4c]
..@0x8048ef0: db 0x7f, 0x0e  ;; jg A.code+0x8048f00
..@0x8048ef2: db 0x88, 0x44, 0x24, 0x4f  ;; mov [esp+0x4f],al
..@0x8048ef6: db 0x74, 0x08  ;; jz A.code+0x8048f00
..@0x8048ef8: db 0x88, 0x44, 0x24, 0x4e  ;; mov [esp+0x4e],al
..@0x8048efc: db 0x88, 0x44, 0x24, 0x4d  ;; mov [esp+0x4d],al
..@0x8048f00: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x8048f04: db 0xa2, 0xa8, 0xe0, 0x83, 0x09  ;; mov [0x983e0a8],al
..@0x8048f09: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x73, 0x42  ;; mov dword [0x983e0a4],0x54494273
..@0x8048f11: db 0x49, 0x54
..@0x8048f13: db 0x83, 0x7c, 0x24, 0x30, 0x00  ;; cmp dword [esp+0x30],byte +0x0
..@0x8048f18: db 0x89, 0x1d, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],ebx
..@0x8048f1e: db 0x74, 0x12  ;; jz A.code+0x8048f32
..@0x8048f20: db 0x8a, 0x44, 0x24, 0x4d  ;; mov al,[esp+0x4d]
..@0x8048f24: db 0xa2, 0xa9, 0xe0, 0x83, 0x09  ;; mov [0x983e0a9],al
..@0x8048f29: db 0x8a, 0x44, 0x24, 0x4e  ;; mov al,[esp+0x4e]
..@0x8048f2d: db 0xa2, 0xaa, 0xe0, 0x83, 0x09  ;; mov [0x983e0aa],al
..@0x8048f32: db 0x83, 0x7c, 0x24, 0x28, 0x03  ;; cmp dword [esp+0x28],byte +0x3
..@0x8048f37: db 0x7e, 0x0e  ;; jng A.code+0x8048f47
..@0x8048f39: db 0x8a, 0x44, 0x24, 0x4f  ;; mov al,[esp+0x4f]
..@0x8048f3d: db 0x8b, 0x4c, 0x24, 0x2c  ;; mov ecx,[esp+0x2c]
..@0x8048f41: db 0x88, 0x81, 0xa0, 0xe0, 0x83, 0x09  ;; mov [ecx+0x983e0a0],al
..@0x8048f47: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x8048f4b: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8048f50: or eax, strict byte -0x1
..@0x8048f53: db 0x8a, 0x8a, 0xa0, 0xe0, 0x83, 0x09  ;; mov cl,[edx+0x983e0a0]
..@0x8048f59: inc edx
..@0x8048f5a: db 0x31, 0xc1  ;; xor ecx,eax
..@0x8048f5c: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8048f5f: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x8048f62: db 0x33, 0x04, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ecx*4+0x80602a0]
..@0x8048f69: db 0x39, 0xda  ;; cmp edx,ebx
..@0x8048f6b: db 0x7c, 0xe6  ;; jl A.code+0x8048f53
..@0x8048f6d: db 0xf7, 0xd0  ;; not eax
..@0x8048f6f: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x8048f73: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8048f77: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8048f79: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048f7b: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8048f7e: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8048f81: db 0x01, 0xd1  ;; add ecx,edx
..@0x8048f83: db 0x89, 0xc2  ;; mov edx,eax
..@0x8048f85: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8048f8a: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8048f8d: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8048f90: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8048f96: db 0x01, 0xca  ;; add edx,ecx
..@0x8048f98: db 0x01, 0xd0  ;; add eax,edx
..@0x8048f9a: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8048f9e: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8048fa0: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x8048fa5: call R.code+0x804b8f0
..@0x8048faa: db 0xeb, 0x31  ;; jmp short A.code+0x8048fdd
..@0x8048fac: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048fae: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8048fb0: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8048fb3: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8048fb6: db 0x8d, 0x54, 0x1a, 0x0c  ;; lea edx,[edx+ebx+0xc]
..@0x8048fba: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8048fbe: db 0x89, 0xca  ;; mov edx,ecx
..@0x8048fc0: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8048fc6: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8048fc9: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x8048fcc: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8048fd2: db 0x03, 0x54, 0x24, 0x20  ;; add edx,[esp+0x20]
..@0x8048fd6: db 0x01, 0xca  ;; add edx,ecx
..@0x8048fd8: call R.code+0x804b8f0
..@0x8048fdd: inc esi
..@0x8048fde: add edi, strict byte 0x4
..@0x8048fe1: db 0x39, 0x75, 0x64  ;; cmp [ebp+0x64],esi
..@0x8048fe4: db 0x0f, 0x8f, 0x97, 0xfe, 0xff, 0xff  ;; jg near A.code+0x8048e81
..@0x8048fea: db 0x83, 0x7c, 0x24, 0x28, 0x03  ;; cmp dword [esp+0x28],byte +0x3
..@0x8048fef: db 0x0f, 0x85, 0x6c, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8049261
..@0x8048ff5: db 0x8b, 0x55, 0x30  ;; mov edx,[ebp+0x30]
..@0x8048ff8: db 0x85, 0xd2  ;; test edx,edx
..@0x8048ffa: db 0x74, 0x4c  ;; jz A.code+0x8049048
..@0x8048ffc: db 0x8b, 0x44, 0x24, 0x78  ;; mov eax,[esp+0x78]
..@0x8049000: db 0x8b, 0x5c, 0x24, 0x74  ;; mov ebx,[esp+0x74]
..@0x8049004: dec eax
..@0x8049005: db 0xeb, 0x0e  ;; jmp short A.code+0x8049015
..@0x8049007: db 0x8b, 0x0c, 0x83  ;; mov ecx,[ebx+eax*4]
..@0x804900a: db 0x31, 0xd1  ;; xor ecx,edx
..@0x804900c: db 0x81, 0xe1, 0xff, 0xff, 0xff, 0x00  ;; and ecx,0xffffff
..@0x8049012: db 0x74, 0x34  ;; jz A.code+0x8049048
..@0x8049014: dec eax
..@0x8049015: db 0x85, 0xc0  ;; test eax,eax
..@0x8049017: db 0x79, 0xee  ;; jns A.code+0x8049007
..@0x8049019: jmp strict near R.code+0x8049603
..@0x804901e: db 0xc7, 0x04, 0x24, 0x44, 0xb2, 0x05, 0x08  ;; mov dword [esp],0x805b244
..@0x8049025: call [funcptr_printf]
..@0x804902b: db 0x31, 0xc0  ;; xor eax,eax
..@0x804902d: jmp strict near R.code+0x804966f
..@0x8049032: db 0x8b, 0x5c, 0x24, 0x78  ;; mov ebx,[esp+0x78]
..@0x8049036: db 0x81, 0xca, 0x00, 0x00, 0x00, 0xff  ;; or edx,0xff000000
..@0x804903c: db 0x8b, 0x7c, 0x24, 0x74  ;; mov edi,[esp+0x74]
..@0x8049040: db 0x89, 0x14, 0x9f  ;; mov [edi+ebx*4],edx
..@0x8049043: inc ebx
..@0x8049044: db 0x89, 0x5c, 0x24, 0x78  ;; mov [esp+0x78],ebx
..@0x8049048: db 0x6b, 0x44, 0x24, 0x78, 0x03  ;; imul eax,[esp+0x78],byte +0x3
..@0x804904d: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x50, 0x4c  ;; mov dword [0x983e0a4],0x45544c50
..@0x8049055: db 0x54, 0x45
..@0x8049057: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8049059: db 0x89, 0xc2  ;; mov edx,eax
..@0x804905b: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x804905e: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8049061: db 0x01, 0xd1  ;; add ecx,edx
..@0x8049063: db 0x89, 0xc2  ;; mov edx,eax
..@0x8049065: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804906a: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804906d: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8049070: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8049076: db 0x01, 0xca  ;; add edx,ecx
..@0x8049078: db 0x01, 0xd0  ;; add eax,edx
..@0x804907a: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x804907f: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x8049084: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x8049089: call R.code+0x804b8f0
..@0x804908e: or edx, strict byte -0x1
..@0x8049091: db 0xb8, 0x04, 0x00, 0x00, 0x00  ;; mov eax,0x4
..@0x8049096: db 0x8a, 0x88, 0xa0, 0xe0, 0x83, 0x09  ;; mov cl,[eax+0x983e0a0]
..@0x804909c: inc eax
..@0x804909d: db 0x31, 0xd1  ;; xor ecx,edx
..@0x804909f: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80490a2: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x80490a5: db 0x33, 0x14, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[ecx*4+0x80602a0]
..@0x80490ac: cmp eax, strict byte 0x8
..@0x80490af: db 0x75, 0xe5  ;; jnz A.code+0x8049096
..@0x80490b1: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x80490b6: db 0x31, 0xf6  ;; xor esi,esi
..@0x80490b8: db 0x8b, 0x7c, 0x24, 0x74  ;; mov edi,[esp+0x74]
..@0x80490bc: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x80490c0: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x80490c4: db 0xeb, 0x4e  ;; jmp short A.code+0x8049114
..@0x80490c6: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x80490ca: db 0x8b, 0x2c, 0xb7  ;; mov ebp,[edi+esi*4]
..@0x80490cd: db 0x39, 0x58, 0x14  ;; cmp [eax+0x14],ebx
..@0x80490d0: db 0x7e, 0x19  ;; jng A.code+0x80490eb
..@0x80490d2: db 0x8b, 0x40, 0x10  ;; mov eax,[eax+0x10]
..@0x80490d5: db 0xd3, 0xfd  ;; sar ebp,cl
..@0x80490d7: db 0x89, 0x6c, 0x24, 0x24  ;; mov [esp+0x24],ebp
..@0x80490db: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x80490df: db 0x8a, 0x44, 0x24, 0x24  ;; mov al,[esp+0x24]
..@0x80490e3: db 0x8b, 0x6c, 0x24, 0x14  ;; mov ebp,[esp+0x14]
..@0x80490e7: db 0x88, 0x44, 0x1d, 0x00  ;; mov [ebp+ebx+0x0],al
..@0x80490eb: db 0x8b, 0x04, 0xb7  ;; mov eax,[edi+esi*4]
..@0x80490ee: inc ebx
..@0x80490ef: db 0xd3, 0xf8  ;; sar eax,cl
..@0x80490f1: sub ecx, strict byte 0x8
..@0x80490f4: db 0x31, 0xd0  ;; xor eax,edx
..@0x80490f6: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80490f9: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x80490fe: db 0x33, 0x14, 0x85, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[eax*4+0x80602a0]
..@0x8049105: cmp ecx, strict byte -0x8
..@0x8049108: db 0x75, 0xbc  ;; jnz A.code+0x80490c6
..@0x804910a: db 0x8b, 0x6c, 0x24, 0x34  ;; mov ebp,[esp+0x34]
..@0x804910e: inc esi
..@0x804910f: db 0x83, 0x44, 0x24, 0x20, 0x03  ;; add dword [esp+0x20],byte +0x3
..@0x8049114: db 0x3b, 0x74, 0x24, 0x78  ;; cmp esi,[esp+0x78]
..@0x8049118: db 0x7d, 0x0f  ;; jnl A.code+0x8049129
..@0x804911a: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x804911e: db 0xb9, 0x10, 0x00, 0x00, 0x00  ;; mov ecx,0x10
..@0x8049123: db 0x89, 0x6c, 0x24, 0x34  ;; mov [esp+0x34],ebp
..@0x8049127: db 0xeb, 0x9d  ;; jmp short A.code+0x80490c6
..@0x8049129: db 0x31, 0xc0  ;; xor eax,eax
..@0x804912b: db 0x83, 0x7c, 0x24, 0x78, 0x00  ;; cmp dword [esp+0x78],byte +0x0
..@0x8049130: db 0xf7, 0xd2  ;; not edx
..@0x8049132: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8049134: db 0x0f, 0x49, 0x44, 0x24, 0x78  ;; cmovns eax,[esp+0x78]
..@0x8049139: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x804913c: db 0x8d, 0x04, 0x40  ;; lea eax,[eax+eax*2]
..@0x804913f: db 0x03, 0x44, 0x24, 0x2c  ;; add eax,[esp+0x2c]
..@0x8049143: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x8049148: db 0x89, 0xd0  ;; mov eax,edx
..@0x804914a: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x804914d: db 0x01, 0xc1  ;; add ecx,eax
..@0x804914f: db 0x89, 0xd0  ;; mov eax,edx
..@0x8049151: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8049157: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x804915a: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x804915d: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8049162: db 0x01, 0xc8  ;; add eax,ecx
..@0x8049164: db 0x01, 0xc2  ;; add edx,eax
..@0x8049166: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804916b: db 0x89, 0x15, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],edx
..@0x8049171: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8049176: call R.code+0x804b8f0
..@0x804917b: db 0x8b, 0x5c, 0x24, 0x78  ;; mov ebx,[esp+0x78]
..@0x804917f: db 0x8b, 0x44, 0x24, 0x74  ;; mov eax,[esp+0x74]
..@0x8049183: dec ebx
..@0x8049184: db 0xeb, 0x0e  ;; jmp short A.code+0x8049194
..@0x8049186: db 0x81, 0x3c, 0x98, 0xff, 0xff, 0xff, 0xfe  ;; cmp dword [eax+ebx*4],0xfeffffff
..@0x804918d: db 0x0f, 0x86, 0x8a, 0x04, 0x00, 0x00  ;; jna near A.code+0x804961d
..@0x8049193: dec ebx
..@0x8049194: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8049196: db 0x79, 0xee  ;; jns A.code+0x8049186
..@0x8049198: jmp strict near R.code+0x8049261
..@0x804919d: db 0x8a, 0x8a, 0xa0, 0xe0, 0x83, 0x09  ;; mov cl,[edx+0x983e0a0]
..@0x80491a3: inc edx
..@0x80491a4: db 0x31, 0xc1  ;; xor ecx,eax
..@0x80491a6: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x80491a9: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x80491ac: db 0x33, 0x04, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ecx*4+0x80602a0]
..@0x80491b3: cmp edx, strict byte 0x8
..@0x80491b6: db 0x75, 0xe5  ;; jnz A.code+0x804919d
..@0x80491b8: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x80491be: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x80491c2: db 0x8b, 0x5c, 0x24, 0x74  ;; mov ebx,[esp+0x74]
..@0x80491c6: db 0x89, 0x7c, 0x24, 0x24  ;; mov [esp+0x24],edi
..@0x80491ca: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x80491ce: db 0x31, 0xd2  ;; xor edx,edx
..@0x80491d0: db 0x89, 0x5c, 0x24, 0x34  ;; mov [esp+0x34],ebx
..@0x80491d4: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x80491d8: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x80491dc: db 0x01, 0xd1  ;; add ecx,edx
..@0x80491de: db 0x39, 0x4d, 0x14  ;; cmp [ebp+0x14],ecx
..@0x80491e1: db 0x8b, 0x34, 0x97  ;; mov esi,[edi+edx*4]
..@0x80491e4: db 0x7e, 0x0b  ;; jng A.code+0x80491f1
..@0x80491e6: db 0x8b, 0x7d, 0x10  ;; mov edi,[ebp+0x10]
..@0x80491e9: db 0xc1, 0xee, 0x18  ;; shr esi,byte 0x18
..@0x80491ec: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80491ee: db 0x88, 0x1c, 0x0f  ;; mov [edi+ecx],bl
..@0x80491f1: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x80491f5: db 0x8a, 0x4c, 0x93, 0x03  ;; mov cl,[ebx+edx*4+0x3]
..@0x80491f9: inc edx
..@0x80491fa: db 0x31, 0xc1  ;; xor ecx,eax
..@0x80491fc: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x80491ff: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x8049202: db 0x33, 0x04, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ecx*4+0x80602a0]
..@0x8049209: db 0x3b, 0x54, 0x24, 0x24  ;; cmp edx,[esp+0x24]
..@0x804920d: db 0x7c, 0xc5  ;; jl A.code+0x80491d4
..@0x804920f: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x8049213: db 0x31, 0xd2  ;; xor edx,edx
..@0x8049215: db 0xf7, 0xd0  ;; not eax
..@0x8049217: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x804921b: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804921d: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804921f: db 0x0f, 0x49, 0xd3  ;; cmovns edx,ebx
..@0x8049222: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8049225: db 0x8d, 0x54, 0x17, 0x01  ;; lea edx,[edi+edx+0x1]
..@0x8049229: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x804922f: db 0x89, 0xc2  ;; mov edx,eax
..@0x8049231: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8049234: db 0x01, 0xd1  ;; add ecx,edx
..@0x8049236: db 0x89, 0xc2  ;; mov edx,eax
..@0x8049238: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804923d: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8049240: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8049243: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8049249: db 0x01, 0xca  ;; add edx,ecx
..@0x804924b: db 0x01, 0xd0  ;; add eax,edx
..@0x804924d: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8049252: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x8049257: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804925c: call R.code+0x804b8f0
..@0x8049261: db 0xf7, 0x44, 0x24, 0x28, 0xfd, 0xff, 0xff, 0xff  ;; test dword [esp+0x28],0xfffffffd
..@0x8049269: db 0x0f, 0x85, 0x87, 0x01, 0x00, 0x00  ;; jnz near A.code+0x80493f6
..@0x804926f: db 0x8b, 0x1d, 0x7c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d67c]
..@0x8049275: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8049279: inc ebx
..@0x804927a: db 0x0f, 0x84, 0x76, 0x01, 0x00, 0x00  ;; jz near A.code+0x80493f6
..@0x8049280: db 0x83, 0x7c, 0x24, 0x28, 0x01  ;; cmp dword [esp+0x28],byte +0x1
..@0x8049285: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x804928a: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x74, 0x52  ;; mov dword [0x983e0a4],0x534e5274
..@0x8049292: db 0x4e, 0x53
..@0x8049294: db 0x19, 0xc0  ;; sbb eax,eax
..@0x8049296: and eax, strict byte -0x4
..@0x8049299: add eax, strict byte 0x6
..@0x804929c: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x804929f: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x80492a4: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x80492a9: call R.code+0x804b8f0
..@0x80492ae: or edx, strict byte -0x1
..@0x80492b1: db 0xb9, 0x04, 0x00, 0x00, 0x00  ;; mov ecx,0x4
..@0x80492b6: db 0x8a, 0x99, 0xa0, 0xe0, 0x83, 0x09  ;; mov bl,[ecx+0x983e0a0]
..@0x80492bc: db 0x89, 0xd0  ;; mov eax,edx
..@0x80492be: inc ecx
..@0x80492bf: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x80492c2: db 0x31, 0xd3  ;; xor ebx,edx
..@0x80492c4: db 0x0f, 0xb6, 0xdb  ;; movzx ebx,bl
..@0x80492c7: db 0x33, 0x04, 0x9d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ebx*4+0x80602a0]
..@0x80492ce: cmp ecx, strict byte 0x8
..@0x80492d1: db 0x89, 0xc2  ;; mov edx,eax
..@0x80492d3: db 0x75, 0xe1  ;; jnz A.code+0x80492b6
..@0x80492d5: db 0x83, 0x7c, 0x24, 0x28, 0x00  ;; cmp dword [esp+0x28],byte +0x0
..@0x80492da: db 0x8b, 0x3d, 0xe8, 0xca, 0x60, 0x08  ;; mov edi,[0x860cae8]
..@0x80492e0: db 0x74, 0x72  ;; jz A.code+0x8049354
..@0x80492e2: db 0xbb, 0x10, 0x00, 0x00, 0x00  ;; mov ebx,0x10
..@0x80492e7: db 0x89, 0xfe  ;; mov esi,edi
..@0x80492e9: db 0x89, 0x7c, 0x24, 0x24  ;; mov [esp+0x24],edi
..@0x80492ed: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x80492ef: db 0x39, 0x75, 0x14  ;; cmp [ebp+0x14],esi
..@0x80492f2: db 0x7e, 0x07  ;; jng A.code+0x80492fb
..@0x80492f4: db 0x8b, 0x45, 0x10  ;; mov eax,[ebp+0x10]
..@0x80492f7: db 0xc6, 0x04, 0x30, 0x00  ;; mov byte [eax+esi],0x0
..@0x80492fb: db 0x8d, 0x5e, 0x01  ;; lea ebx,[esi+0x1]
..@0x80492fe: db 0x89, 0xd0  ;; mov eax,edx
..@0x8049300: db 0x0f, 0xb6, 0xfa  ;; movzx edi,dl
..@0x8049303: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8049306: db 0x33, 0x04, 0xbd, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[edi*4+0x80602a0]
..@0x804930d: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x8049311: db 0xd3, 0xff  ;; sar edi,cl
..@0x8049313: db 0x81, 0xe7, 0xff, 0x00, 0x00, 0x00  ;; and edi,0xff
..@0x8049319: db 0x3b, 0x5d, 0x14  ;; cmp ebx,[ebp+0x14]
..@0x804931c: db 0x7d, 0x09  ;; jnl A.code+0x8049327
..@0x804931e: db 0x8b, 0x55, 0x10  ;; mov edx,[ebp+0x10]
..@0x8049321: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8049323: db 0x88, 0x5c, 0x32, 0x01  ;; mov [edx+esi+0x1],bl
..@0x8049327: db 0x89, 0xc2  ;; mov edx,eax
..@0x8049329: db 0x31, 0xf8  ;; xor eax,edi
..@0x804932b: sub ecx, strict byte 0x8
..@0x804932e: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8049331: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8049336: add esi, strict byte 0x2
..@0x8049339: db 0x33, 0x14, 0x85, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[eax*4+0x80602a0]
..@0x8049340: cmp ecx, strict byte -0x8
..@0x8049343: db 0x75, 0xaa  ;; jnz A.code+0x80492ef
..@0x8049345: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x8049349: db 0x8d, 0x6f, 0x06  ;; lea ebp,[edi+0x6]
..@0x804934c: db 0x89, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebp
..@0x8049352: db 0xeb, 0x68  ;; jmp short A.code+0x80493bc
..@0x8049354: db 0x39, 0x7d, 0x14  ;; cmp [ebp+0x14],edi
..@0x8049357: db 0x7e, 0x07  ;; jng A.code+0x8049360
..@0x8049359: db 0x8b, 0x55, 0x10  ;; mov edx,[ebp+0x10]
..@0x804935c: db 0xc6, 0x04, 0x3a, 0x00  ;; mov byte [edx+edi],0x0
..@0x8049360: db 0x8a, 0x4c, 0x24, 0x70  ;; mov cl,[esp+0x70]
..@0x8049364: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8049366: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8049369: db 0x0f, 0xb6, 0x44, 0x24, 0x20  ;; movzx eax,byte [esp+0x20]
..@0x804936e: db 0x8d, 0x77, 0x01  ;; lea esi,[edi+0x1]
..@0x8049371: db 0xc1, 0xeb, 0x08  ;; shr ebx,byte 0x8
..@0x8049374: db 0x33, 0x1c, 0x95, 0xa0, 0x02, 0x06, 0x08  ;; xor ebx,[edx*4+0x80602a0]
..@0x804937b: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8049380: db 0x89, 0x35, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],esi
..@0x8049386: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8049388: db 0xb9, 0xff, 0x00, 0x00, 0x00  ;; mov ecx,0xff
..@0x804938d: dec edx
..@0x804938e: db 0x0f, 0xaf, 0xc2  ;; imul eax,edx
..@0x8049391: cdq
..@0x8049392: db 0xf7, 0xf9  ;; idiv ecx
..@0x8049394: db 0x3b, 0x75, 0x14  ;; cmp esi,[ebp+0x14]
..@0x8049397: db 0x7d, 0x07  ;; jnl A.code+0x80493a0
..@0x8049399: db 0x8b, 0x55, 0x10  ;; mov edx,[ebp+0x10]
..@0x804939c: db 0x88, 0x44, 0x3a, 0x01  ;; mov [edx+edi+0x1],al
..@0x80493a0: db 0x8d, 0x6f, 0x02  ;; lea ebp,[edi+0x2]
..@0x80493a3: db 0x89, 0xda  ;; mov edx,ebx
..@0x80493a5: db 0x31, 0xd8  ;; xor eax,ebx
..@0x80493a7: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80493aa: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x80493af: db 0x89, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebp
..@0x80493b5: db 0x33, 0x14, 0x85, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[eax*4+0x80602a0]
..@0x80493bc: db 0xf7, 0xd2  ;; not edx
..@0x80493be: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80493c0: db 0x89, 0xd0  ;; mov eax,edx
..@0x80493c2: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x80493c5: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x80493c8: db 0x01, 0xc1  ;; add ecx,eax
..@0x80493ca: db 0x89, 0xd0  ;; mov eax,edx
..@0x80493cc: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x80493d2: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x80493d5: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x80493d8: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x80493dd: db 0x01, 0xc8  ;; add eax,ecx
..@0x80493df: db 0x01, 0xc2  ;; add edx,eax
..@0x80493e1: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x80493e6: db 0x89, 0x15, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],edx
..@0x80493ec: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x80493f1: call R.code+0x804b8f0
..@0x80493f6: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80493fc: db 0x83, 0x7b, 0x30, 0x00  ;; cmp dword [ebx+0x30],byte +0x0
..@0x8049400: db 0x0f, 0x84, 0x8e, 0x01, 0x00, 0x00  ;; jz near A.code+0x8049594
..@0x8049406: db 0x8a, 0x4c, 0x24, 0x3c  ;; mov cl,[esp+0x3c]
..@0x804940a: db 0xb8, 0x02, 0x16, 0x02, 0x06  ;; mov eax,0x6021602
..@0x804940f: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x8049414: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x62, 0x4b  ;; mov dword [0x983e0a4],0x44474b62
..@0x804941c: db 0x47, 0x44
..@0x804941e: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8049420: and eax, strict byte 0xf
..@0x8049423: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8049426: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x804942b: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x8049430: call R.code+0x804b8f0
..@0x8049435: or edx, strict byte -0x1
..@0x8049438: db 0xb9, 0x04, 0x00, 0x00, 0x00  ;; mov ecx,0x4
..@0x804943d: db 0x8a, 0x81, 0xa0, 0xe0, 0x83, 0x09  ;; mov al,[ecx+0x983e0a0]
..@0x8049443: inc ecx
..@0x8049444: db 0x31, 0xd0  ;; xor eax,edx
..@0x8049446: db 0x0f, 0xb6, 0xf0  ;; movzx esi,al
..@0x8049449: db 0x89, 0xd0  ;; mov eax,edx
..@0x804944b: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x804944e: db 0x33, 0x04, 0xb5, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[esi*4+0x80602a0]
..@0x8049455: cmp ecx, strict byte 0x8
..@0x8049458: db 0x89, 0xc2  ;; mov edx,eax
..@0x804945a: db 0x75, 0xe1  ;; jnz A.code+0x804943d
..@0x804945c: db 0x83, 0x7c, 0x24, 0x28, 0x03  ;; cmp dword [esp+0x28],byte +0x3
..@0x8049461: db 0x75, 0x50  ;; jnz A.code+0x80494b3
..@0x8049463: db 0x8b, 0x54, 0x24, 0x78  ;; mov edx,[esp+0x78]
..@0x8049467: db 0x8b, 0x74, 0x24, 0x74  ;; mov esi,[esp+0x74]
..@0x804946b: dec edx
..@0x804946c: db 0xeb, 0x1c  ;; jmp short A.code+0x804948a
..@0x804946e: db 0x8b, 0x0c, 0x96  ;; mov ecx,[esi+edx*4]
..@0x8049471: db 0x33, 0x4b, 0x30  ;; xor ecx,[ebx+0x30]
..@0x8049474: db 0x81, 0xe1, 0xff, 0xff, 0xff, 0x00  ;; and ecx,0xffffff
..@0x804947a: db 0x75, 0x0d  ;; jnz A.code+0x8049489
..@0x804947c: db 0x8b, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov ecx,[0x860cae8]
..@0x8049482: db 0x39, 0x4b, 0x14  ;; cmp [ebx+0x14],ecx
..@0x8049485: db 0x7f, 0x09  ;; jg A.code+0x8049490
..@0x8049487: db 0xeb, 0x0d  ;; jmp short A.code+0x8049496
..@0x8049489: dec edx
..@0x804948a: db 0x85, 0xd2  ;; test edx,edx
..@0x804948c: db 0x7f, 0xe0  ;; jg A.code+0x804946e
..@0x804948e: db 0xeb, 0xec  ;; jmp short A.code+0x804947c
..@0x8049490: db 0x8b, 0x5b, 0x10  ;; mov ebx,[ebx+0x10]
..@0x8049493: db 0x88, 0x14, 0x0b  ;; mov [ebx+ecx],dl
..@0x8049496: inc ecx
..@0x8049497: db 0x31, 0xc2  ;; xor edx,eax
..@0x8049499: db 0x89, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ecx
..@0x804949f: db 0x0f, 0xb6, 0xca  ;; movzx ecx,dl
..@0x80494a2: db 0x89, 0xc2  ;; mov edx,eax
..@0x80494a4: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80494a7: db 0x33, 0x14, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[ecx*4+0x80602a0]
..@0x80494ae: jmp strict near R.code+0x804955a
..@0x80494b3: db 0x8a, 0x4c, 0x24, 0x70  ;; mov cl,[esp+0x70]
..@0x80494b7: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80494bc: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x80494c0: db 0x8b, 0x3d, 0xe8, 0xca, 0x60, 0x08  ;; mov edi,[0x860cae8]
..@0x80494c6: db 0xd3, 0xe0  ;; shl eax,cl
..@0x80494c8: db 0xc1, 0xe5, 0x03  ;; shl ebp,byte 0x3
..@0x80494cb: dec eax
..@0x80494cc: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x80494d0: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x80494d2: db 0xeb, 0x7c  ;; jmp short A.code+0x8049550
..@0x80494d4: db 0x39, 0x7b, 0x14  ;; cmp [ebx+0x14],edi
..@0x80494d7: db 0x7e, 0x07  ;; jng A.code+0x80494e0
..@0x80494d9: db 0x8b, 0x43, 0x10  ;; mov eax,[ebx+0x10]
..@0x80494dc: db 0xc6, 0x04, 0x38, 0x00  ;; mov byte [eax+edi],0x0
..@0x80494e0: db 0x8d, 0x6f, 0x01  ;; lea ebp,[edi+0x1]
..@0x80494e3: db 0x89, 0xd6  ;; mov esi,edx
..@0x80494e5: db 0x0f, 0xb6, 0xc2  ;; movzx eax,dl
..@0x80494e8: db 0xc1, 0xee, 0x08  ;; shr esi,byte 0x8
..@0x80494eb: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x80494ef: db 0x33, 0x34, 0x85, 0xa0, 0x02, 0x06, 0x08  ;; xor esi,[eax*4+0x80602a0]
..@0x80494f6: db 0x8b, 0x43, 0x30  ;; mov eax,[ebx+0x30]
..@0x80494f9: db 0xd3, 0xf8  ;; sar eax,cl
..@0x80494fb: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8049500: db 0x83, 0x7c, 0x24, 0x70, 0x08  ;; cmp dword [esp+0x70],byte +0x8
..@0x8049505: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8049509: db 0x74, 0x15  ;; jz A.code+0x8049520
..@0x804950b: db 0x0f, 0xaf, 0x44, 0x24, 0x20  ;; imul eax,[esp+0x20]
..@0x8049510: db 0xbd, 0xff, 0x00, 0x00, 0x00  ;; mov ebp,0xff
..@0x8049515: cdq
..@0x8049516: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x804951a: db 0xf7, 0xfd  ;; idiv ebp
..@0x804951c: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8049520: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x8049524: db 0x3b, 0x6b, 0x14  ;; cmp ebp,[ebx+0x14]
..@0x8049527: db 0x7d, 0x0a  ;; jnl A.code+0x8049533
..@0x8049529: db 0x8b, 0x53, 0x10  ;; mov edx,[ebx+0x10]
..@0x804952c: db 0x8a, 0x44, 0x24, 0x2c  ;; mov al,[esp+0x2c]
..@0x8049530: db 0x88, 0x04, 0x2a  ;; mov [edx+ebp],al
..@0x8049533: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8049537: db 0x89, 0xf2  ;; mov edx,esi
..@0x8049539: sub ecx, strict byte 0x8
..@0x804953c: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804953f: add edi, strict byte 0x2
..@0x8049542: db 0x31, 0xf0  ;; xor eax,esi
..@0x8049544: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8049549: db 0x33, 0x14, 0x85, 0xa0, 0x02, 0x06, 0x08  ;; xor edx,[eax*4+0x80602a0]
..@0x8049550: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8049552: db 0x79, 0x80  ;; jns A.code+0x80494d4
..@0x8049554: db 0x89, 0x3d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edi
..@0x804955a: db 0xf7, 0xd2  ;; not edx
..@0x804955c: db 0x89, 0xd1  ;; mov ecx,edx
..@0x804955e: db 0x89, 0xd0  ;; mov eax,edx
..@0x8049560: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8049563: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8049566: db 0x01, 0xc1  ;; add ecx,eax
..@0x8049568: db 0x89, 0xd0  ;; mov eax,edx
..@0x804956a: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8049570: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8049573: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8049576: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804957b: db 0x01, 0xc8  ;; add eax,ecx
..@0x804957d: db 0x01, 0xc2  ;; add edx,eax
..@0x804957f: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x8049584: db 0x89, 0x15, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],edx
..@0x804958a: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x804958f: call R.code+0x804b8f0
..@0x8049594: db 0x8b, 0x3d, 0x60, 0xd6, 0x05, 0x08  ;; mov edi,[0x805d660]
..@0x804959a: db 0x8b, 0x5f, 0x64  ;; mov ebx,[edi+0x64]
..@0x804959d: db 0x8d, 0x34, 0x9d, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[ebx*4+0x0]
..@0x80495a4: db 0xeb, 0x51  ;; jmp short A.code+0x80495f7
..@0x80495a6: db 0x8b, 0x47, 0x70  ;; mov eax,[edi+0x70]
..@0x80495a9: db 0x8b, 0x04, 0x30  ;; mov eax,[eax+esi]
..@0x80495ac: db 0x8b, 0x50, 0x04  ;; mov edx,[eax+0x4]
..@0x80495af: db 0x81, 0xfa, 0x62, 0x4b, 0x47, 0x44  ;; cmp edx,0x44474b62
..@0x80495b5: db 0x74, 0x3c  ;; jz A.code+0x80495f3
..@0x80495b7: db 0x81, 0xfa, 0x68, 0x49, 0x53, 0x54  ;; cmp edx,0x54534968
..@0x80495bd: db 0x75, 0x07  ;; jnz A.code+0x80495c6
..@0x80495bf: db 0x83, 0x7c, 0x24, 0x28, 0x03  ;; cmp dword [esp+0x28],byte +0x3
..@0x80495c4: db 0x75, 0x2d  ;; jnz A.code+0x80495f3
..@0x80495c6: db 0x8b, 0x08  ;; mov ecx,[eax]
..@0x80495c8: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x80495ca: db 0x89, 0xca  ;; mov edx,ecx
..@0x80495cc: db 0xc1, 0xea, 0x18  ;; shr edx,byte 0x18
..@0x80495cf: db 0xc1, 0xe5, 0x18  ;; shl ebp,byte 0x18
..@0x80495d2: db 0x8d, 0x6c, 0x15, 0x0c  ;; lea ebp,[ebp+edx+0xc]
..@0x80495d6: db 0x89, 0xca  ;; mov edx,ecx
..@0x80495d8: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x80495de: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80495e1: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x80495e4: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x80495ea: db 0x01, 0xea  ;; add edx,ebp
..@0x80495ec: db 0x01, 0xca  ;; add edx,ecx
..@0x80495ee: call R.code+0x804b8f0
..@0x80495f3: inc ebx
..@0x80495f4: add esi, strict byte 0x4
..@0x80495f7: db 0x39, 0x5f, 0x68  ;; cmp [edi+0x68],ebx
..@0x80495fa: db 0x7f, 0xaa  ;; jg A.code+0x80495a6
..@0x80495fc: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8049601: db 0xeb, 0x6c  ;; jmp short A.code+0x804966f
..@0x8049603: db 0x8a, 0x4c, 0x24, 0x70  ;; mov cl,[esp+0x70]
..@0x8049607: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804960c: db 0xd3, 0xe0  ;; shl eax,cl
..@0x804960e: db 0x3b, 0x44, 0x24, 0x78  ;; cmp eax,[esp+0x78]
..@0x8049612: db 0x0f, 0x8f, 0x1a, 0xfa, 0xff, 0xff  ;; jg near A.code+0x8049032
..@0x8049618: jmp strict near R.code+0x804901e
..@0x804961d: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x74, 0x52  ;; mov dword [0x983e0a4],0x534e5274
..@0x8049625: db 0x4e, 0x53
..@0x8049627: db 0x8d, 0x7b, 0x01  ;; lea edi,[ebx+0x1]
..@0x804962a: db 0x89, 0xfa  ;; mov edx,edi
..@0x804962c: db 0x89, 0xf8  ;; mov eax,edi
..@0x804962e: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8049631: db 0xc1, 0xea, 0x18  ;; shr edx,byte 0x18
..@0x8049634: db 0x01, 0xc2  ;; add edx,eax
..@0x8049636: db 0x89, 0xf8  ;; mov eax,edi
..@0x8049638: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x804963b: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8049640: db 0x01, 0xc2  ;; add edx,eax
..@0x8049642: db 0x89, 0xf8  ;; mov eax,edi
..@0x8049644: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8049649: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804964c: db 0x01, 0xd0  ;; add eax,edx
..@0x804964e: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x8049653: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x8049658: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804965d: call R.code+0x804b8f0
..@0x8049662: or eax, strict byte -0x1
..@0x8049665: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x804966a: jmp strict near R.code+0x804919d
..@0x804966f: add esp, strict byte 0x5c
..@0x8049672: pop ebx
..@0x8049673: pop esi
..@0x8049674: pop edi
..@0x8049675: pop ebp
..@0x8049676: ret
unknown_func3: equ $-B.code
..@0x8049677: push ebp
..@0x8049678: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804967a: push edi
..@0x804967b: push esi
..@0x804967c: db 0x89, 0xc6  ;; mov esi,eax
..@0x804967e: push ebx
..@0x804967f: sub esp, strict byte 0x2c
..@0x8049682: db 0x89, 0x15, 0x98, 0xe0, 0x83, 0x09  ;; mov [0x983e098],edx
..@0x8049688: db 0x8b, 0x7c, 0x24, 0x40  ;; mov edi,[esp+0x40]
..@0x804968c: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x8049690: db 0xc7, 0x05, 0x84, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e084],0x0
..@0x8049698: db 0x00, 0x00
..@0x804969a: db 0xc7, 0x05, 0x80, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e080],0x0
..@0x80496a2: db 0x00, 0x00
..@0x80496a4: db 0x0f, 0xaf, 0xf8  ;; imul edi,eax
..@0x80496a7: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x80496ac: add edi, strict byte 0x7
..@0x80496af: db 0xc1, 0xff, 0x03  ;; sar edi,byte 0x3
..@0x80496b2: db 0x85, 0xc0  ;; test eax,eax
..@0x80496b4: db 0x89, 0x3d, 0x94, 0xe0, 0x83, 0x09  ;; mov [0x983e094],edi
..@0x80496ba: db 0x74, 0x08  ;; jz A.code+0x80496c4
..@0x80496bc: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80496bf: call B.code+prog_free
..@0x80496c4: db 0x8d, 0x04, 0xfd, 0x08, 0x00, 0x00, 0x00  ;; lea eax,[edi*8+0x8]
..@0x80496cb: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80496ce: call B.code+prog_malloc
..@0x80496d3: db 0x85, 0xc0  ;; test eax,eax
..@0x80496d5: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80496d7: db 0xa3, 0x90, 0xe0, 0x83, 0x09  ;; mov [0x983e090],eax
..@0x80496dc: db 0x75, 0x14  ;; jnz A.code+0x80496f2
..@0x80496de: db 0xc7, 0x04, 0x24, 0x1f, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b41f
..@0x80496e5: call [funcptr_printf]
..@0x80496eb: db 0x31, 0xd2  ;; xor edx,edx
..@0x80496ed: jmp strict near R.code+0x80499a8
..@0x80496f2: db 0x8d, 0x0c, 0xbd, 0x08, 0x00, 0x00, 0x00  ;; lea ecx,[edi*4+0x8]
..@0x80496f9: db 0x31, 0xc0  ;; xor eax,eax
..@0x80496fb: db 0x89, 0xdf  ;; mov edi,ebx
..@0x80496fd: db 0xf3, 0xaa  ;; rep stosb
..@0x80496ff: db 0x89, 0xea  ;; mov edx,ebp
..@0x8049701: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8049705: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x8049709: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804970d: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x8049711: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8049715: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x8049719: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804971c: db 0x89, 0xf0  ;; mov eax,esi
..@0x804971e: call B.code+unknown_func2
..@0x8049723: db 0x31, 0xd2  ;; xor edx,edx
..@0x8049725: db 0x85, 0xc0  ;; test eax,eax
..@0x8049727: db 0x0f, 0x84, 0x7b, 0x02, 0x00, 0x00  ;; jz near A.code+0x80499a8
..@0x804972d: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x8049732: db 0xb2, 0x04  ;; mov dl,0x4
..@0x8049734: db 0xa3, 0xe0, 0xe0, 0x83, 0x09  ;; mov [0x983e0e0],eax
..@0x8049739: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804973e: call R.code+0x804b8f0
..@0x8049743: db 0xba, 0x20, 0x00, 0x00, 0x00  ;; mov edx,0x20
..@0x8049748: db 0xb8, 0x49, 0x44, 0x41, 0x54  ;; mov eax,0x54414449
..@0x804974d: db 0xc7, 0x05, 0xc8, 0xa4, 0x83, 0x09, 0xff, 0xff  ;; mov dword [0x983a4c8],0xffffffff
..@0x8049755: db 0xff, 0xff
..@0x8049757: db 0xc7, 0x05, 0xc0, 0xa4, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983a4c0],0x0
..@0x804975f: db 0x00, 0x00
..@0x8049761: db 0xc7, 0x05, 0xc4, 0xa4, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983a4c4],0x0
..@0x8049769: db 0x00, 0x00
..@0x804976b: call R.code+0x804b950
..@0x8049770: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x8049775: db 0xb8, 0x78, 0x00, 0x00, 0x00  ;; mov eax,0x78
..@0x804977a: call R.code+0x804b950
..@0x804977f: db 0xba, 0x08, 0x00, 0x00, 0x00  ;; mov edx,0x8
..@0x8049784: db 0xb8, 0x5e, 0x00, 0x00, 0x00  ;; mov eax,0x5e
..@0x8049789: call R.code+0x804b950
..@0x804978e: db 0x83, 0x3d, 0xe8, 0xe0, 0x83, 0x09, 0x00  ;; cmp dword [0x983e0e8],byte +0x0
..@0x8049795: db 0xc7, 0x05, 0x04, 0xef, 0x6a, 0x08, 0x01, 0x00  ;; mov dword [0x86aef04],0x1
..@0x804979d: db 0x00, 0x00
..@0x804979f: db 0x74, 0x14  ;; jz A.code+0x80497b5
..@0x80497a1: db 0xc7, 0x05, 0x40, 0xef, 0x6b, 0x08, 0x00, 0x00  ;; mov dword [0x86bef40],0x80000000
..@0x80497a9: db 0x00, 0x80
..@0x80497ab: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80497b0: jmp strict near R.code+0x8049891
..@0x80497b5: db 0xc7, 0x05, 0xe8, 0xe0, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e0e8],0x1
..@0x80497bd: db 0x00, 0x00
..@0x80497bf: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80497c1: db 0x31, 0xc0  ;; xor eax,eax
..@0x80497c3: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x80497c8: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x80497cd: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80497cf: db 0x89, 0x14, 0xc5, 0xc4, 0x9d, 0x83, 0x09  ;; mov [eax*8+0x9839dc4],edx
..@0x80497d6: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x80497d8: db 0x89, 0x0c, 0xc5, 0xc0, 0x9d, 0x83, 0x09  ;; mov [eax*8+0x9839dc0],ecx
..@0x80497df: db 0x01, 0xda  ;; add edx,ebx
..@0x80497e1: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80497e3: db 0xa8, 0x01  ;; test al,0x1
..@0x80497e5: db 0x74, 0x08  ;; jz A.code+0x80497ef
..@0x80497e7: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80497e9: cmp eax, strict byte 0x1
..@0x80497ec: db 0x0f, 0x95, 0xc3  ;; setnz bl
..@0x80497ef: inc eax
..@0x80497f0: db 0x01, 0xd9  ;; add ecx,ebx
..@0x80497f2: cmp eax, strict byte 0x1e
..@0x80497f5: db 0x75, 0xd6  ;; jnz A.code+0x80497cd
..@0x80497f7: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80497f9: db 0xba, 0x03, 0x00, 0x00, 0x00  ;; mov edx,0x3
..@0x80497fe: db 0x66, 0xb8, 0x01, 0x01  ;; mov ax,0x101
..@0x8049802: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x8049807: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8049809: db 0x89, 0x14, 0xc5, 0xac, 0x96, 0x83, 0x09  ;; mov [eax*8+0x98396ac],edx
..@0x8049810: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x8049812: db 0x89, 0x0c, 0xc5, 0xa8, 0x96, 0x83, 0x09  ;; mov [eax*8+0x98396a8],ecx
..@0x8049819: db 0x01, 0xda  ;; add edx,ebx
..@0x804981b: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804981d: db 0xa8, 0x03  ;; test al,0x3
..@0x804981f: db 0x75, 0x0a  ;; jnz A.code+0x804982b
..@0x8049821: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8049823: db 0x3d, 0x07, 0x01, 0x00, 0x00  ;; cmp eax,0x107
..@0x8049828: db 0x0f, 0x9f, 0xc3  ;; setg bl
..@0x804982b: inc eax
..@0x804982c: db 0x01, 0xd9  ;; add ecx,ebx
..@0x804982e: db 0x3d, 0x1d, 0x01, 0x00, 0x00  ;; cmp eax,0x11d
..@0x8049833: db 0x75, 0xd2  ;; jnz A.code+0x8049807
..@0x8049835: db 0xc7, 0x05, 0x94, 0x9f, 0x83, 0x09, 0x02, 0x01  ;; mov dword [0x9839f94],0x102
..@0x804983d: db 0x00, 0x00
..@0x804983f: db 0xba, 0x3a, 0x00, 0x00, 0x00  ;; mov edx,0x3a
..@0x8049844: db 0xb0, 0x02  ;; mov al,0x2
..@0x8049846: db 0xc7, 0x05, 0x90, 0x9f, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x9839f90],0x0
..@0x804984e: db 0x00, 0x00
..@0x8049850: db 0x88, 0x90, 0x7d, 0x17, 0x71, 0x09  ;; mov [eax+0x971177d],dl
..@0x8049856: dec eax
..@0x8049857: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8049859: db 0x39, 0x04, 0xd5, 0xc4, 0x9d, 0x83, 0x09  ;; cmp [edx*8+0x9839dc4],eax
..@0x8049860: db 0x0f, 0x9f, 0xc1  ;; setg cl
..@0x8049863: db 0x29, 0xca  ;; sub edx,ecx
..@0x8049865: cmp eax, strict byte 0x2
..@0x8049868: db 0x75, 0xe6  ;; jnz A.code+0x8049850
..@0x804986a: db 0xba, 0x1d, 0x00, 0x00, 0x00  ;; mov edx,0x1d
..@0x804986f: db 0x66, 0xb8, 0x00, 0x80  ;; mov ax,0x8000
..@0x8049873: dec eax
..@0x8049874: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8049876: db 0x39, 0x04, 0xd5, 0xc4, 0x9d, 0x83, 0x09  ;; cmp [edx*8+0x9839dc4],eax
..@0x804987d: db 0x88, 0x90, 0x80, 0x19, 0x71, 0x09  ;; mov [eax+0x9711980],dl
..@0x8049883: db 0x0f, 0x9f, 0xc1  ;; setg cl
..@0x8049886: db 0x29, 0xca  ;; sub edx,ecx
..@0x8049888: db 0x85, 0xc0  ;; test eax,eax
..@0x804988a: db 0x75, 0xe7  ;; jnz A.code+0x8049873
..@0x804988c: jmp strict near R.code+0x80497a1
..@0x8049891: db 0xc7, 0x04, 0x85, 0x40, 0xef, 0x6b, 0x08, 0xff  ;; mov dword [eax*4+0x86bef40],0x7fffffff
..@0x8049899: db 0xff, 0xff, 0x7f
..@0x804989c: inc eax
..@0x804989d: db 0x3d, 0x00, 0x02, 0x00, 0x00  ;; cmp eax,0x200
..@0x80498a2: db 0x75, 0xed  ;; jnz A.code+0x8049891
..@0x80498a4: db 0xba, 0x80, 0xf7, 0x6f, 0x08  ;; mov edx,0x86ff780
..@0x80498a9: db 0x66, 0x31, 0xc0  ;; xor ax,ax
..@0x80498ac: db 0xb9, 0x00, 0x08, 0x00, 0x00  ;; mov ecx,0x800
..@0x80498b1: db 0x89, 0xd7  ;; mov edi,edx
..@0x80498b3: db 0xba, 0x80, 0x17, 0x70, 0x08  ;; mov edx,0x8701780
..@0x80498b8: db 0xf3, 0xab  ;; rep stosd
..@0x80498ba: db 0x89, 0xd7  ;; mov edi,edx
..@0x80498bc: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x80498c2: db 0x66, 0xb9, 0x00, 0x40  ;; mov cx,0x4000
..@0x80498c6: db 0xf3, 0xab  ;; rep stosd
..@0x80498c8: db 0x83, 0x7a, 0x4c, 0x02  ;; cmp dword [edx+0x4c],byte +0x2
..@0x80498cc: db 0x7f, 0x46  ;; jg A.code+0x8049914
..@0x80498ce: db 0xba, 0xa0, 0x99, 0x81, 0x09  ;; mov edx,0x98199a0
..@0x80498d3: db 0x66, 0xb9, 0x00, 0x80  ;; mov cx,0x8000
..@0x80498d7: db 0xc6, 0x05, 0x44, 0xf7, 0x6b, 0x08, 0x00  ;; mov byte [0x86bf744],0x0
..@0x80498de: db 0xc7, 0x05, 0x98, 0x9f, 0x83, 0x09, 0xff, 0xff  ;; mov dword [0x9839f98],0xffffffff
..@0x80498e6: db 0xff, 0xff
..@0x80498e8: db 0x89, 0xd7  ;; mov edi,edx
..@0x80498ea: db 0xf3, 0xab  ;; rep stosd
..@0x80498ec: db 0xc7, 0x05, 0x64, 0xf7, 0x6d, 0x08, 0x00, 0x00  ;; mov dword [0x86df764],0x0
..@0x80498f4: db 0x00, 0x00
..@0x80498f6: db 0xc7, 0x05, 0x9c, 0x9f, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x9839f9c],0x0
..@0x80498fe: db 0x00, 0x00
..@0x8049900: db 0xc7, 0x05, 0x48, 0xf7, 0x6b, 0x08, 0xff, 0xff  ;; mov dword [0x86bf748],0xffffffff
..@0x8049908: db 0xff, 0xff
..@0x804990a: db 0xc7, 0x05, 0x60, 0xf7, 0x6d, 0x08, 0x00, 0x00  ;; mov dword [0x86df760],0x0
..@0x8049912: db 0x00, 0x00
..@0x8049914: db 0xc7, 0x05, 0x08, 0xef, 0x6a, 0x08, 0x00, 0x00  ;; mov dword [0x86aef08],0x0
..@0x804991c: db 0x00, 0x00
..@0x804991e: db 0x8b, 0x1d, 0xac, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606ac]
..@0x8049924: db 0xc7, 0x05, 0x40, 0xf7, 0x6b, 0x08, 0x00, 0x00  ;; mov dword [0x86bf740],0x0
..@0x804992c: db 0x00, 0x00
..@0x804992e: db 0xc7, 0x05, 0x80, 0x99, 0x71, 0x09, 0x00, 0x00  ;; mov dword [0x9719980],0x0
..@0x8049936: db 0x00, 0x00
..@0x8049938: db 0xc7, 0x05, 0xa0, 0x9f, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x9839fa0],0x0
..@0x8049940: db 0x00, 0x00
..@0x8049942: db 0xc7, 0x05, 0xe4, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae4],0x0
..@0x804994a: db 0x00, 0x00
..@0x804994c: dec ebx
..@0x804994d: db 0xc7, 0x05, 0x24, 0xef, 0x6b, 0x08, 0x00, 0x00  ;; mov dword [0x86bef24],0x0
..@0x8049955: db 0x00, 0x00
..@0x8049957: db 0x69, 0xc3, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,ebx,dword 0xa18
..@0x804995d: db 0xc7, 0x80, 0xc8, 0x10, 0x06, 0x08, 0xff, 0xff  ;; mov dword [eax+0x80610c8],0x7fffffff
..@0x8049965: db 0xff, 0x7f
..@0x8049967: db 0x31, 0xc0  ;; xor eax,eax
..@0x8049969: call R.code+0x804bb80
..@0x804996e: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8049970: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8049975: db 0x7e, 0x09  ;; jng A.code+0x8049980
..@0x8049977: db 0x31, 0xc0  ;; xor eax,eax
..@0x8049979: call R.code+0x804b950
..@0x804997e: db 0xeb, 0x0a  ;; jmp short A.code+0x804998a
..@0x8049980: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8049985: call R.code+0x804b950
..@0x804998a: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804998f: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x8049994: call R.code+0x804b950
..@0x8049999: db 0xb8, 0xc0, 0x0b, 0x06, 0x08  ;; mov eax,0x8060bc0
..@0x804999e: call R.code+0x804c1a0
..@0x80499a3: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x80499a8: add esp, strict byte 0x2c
..@0x80499ab: db 0x89, 0xd0  ;; mov eax,edx
..@0x80499ad: pop ebx
..@0x80499ae: pop esi
..@0x80499af: pop edi
..@0x80499b0: pop ebp
..@0x80499b1: ret
..@0x80499b2: times 14 nop
main: equ $-B.code
..@0x80499c0: push ebp
..@0x80499c1: db 0xb9, 0x22, 0x00, 0x00, 0x00  ;; mov ecx,0x22
..@0x80499c6: db 0x89, 0xe5  ;; mov ebp,esp
..@0x80499c8: push edi
..@0x80499c9: push esi
..@0x80499ca: push ebx
..@0x80499cb: and esp, strict byte -0x10
..@0x80499ce: db 0x81, 0xec, 0xa0, 0x03, 0x00, 0x00  ;; sub esp,0x3a0
..@0x80499d4: mov eax, [stderr]
..@0x80499d9: db 0xd9, 0x05, 0x3c, 0xb2, 0x05, 0x08  ;; fld dword [0x805b23c]
..@0x80499df: db 0xa3, 0x44, 0xd2, 0x05, 0x08  ;; mov [message_filep],eax
..@0x80499e4: db 0x8d, 0x84, 0x24, 0x10, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x110]
..@0x80499eb: db 0x89, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],eax
..@0x80499f2: db 0x31, 0xc0  ;; xor eax,eax
..@0x80499f4: db 0x8b, 0xbc, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov edi,[esp+0x84]
..@0x80499fb: db 0xf3, 0xab  ;; rep stosd
..@0x80499fd: db 0xc7, 0x84, 0x24, 0x8c, 0x01, 0x00, 0x00, 0x80  ;; mov dword [esp+0x18c],A.code+message_printf
..@0x8049a05: db 0xb6, 0x04, 0x08
..@0x8049a08: db 0xc7, 0x84, 0x24, 0x90, 0x01, 0x00, 0x00, 0x60  ;; mov dword [esp+0x190],A.code+unknown_func4
..@0x8049a10: db 0xb6, 0x04, 0x08
..@0x8049a13: db 0xdd, 0x9c, 0x24, 0x68, 0x01, 0x00, 0x00  ;; fstp qword [esp+0x168]
..@0x8049a1a: db 0x83, 0x7d, 0x08, 0x01  ;; cmp dword [ebp+0x8],byte +0x1  ; argc <= 1 ?
..@0x8049a1e: jng strict near B.code+jmp_print_help_and_exit  ; db 0x0f, 0x8e, 0xdb, 0x18, 0x00, 0x00
..@0x8049a24: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x8049a27: db 0xbe, 0xff, 0xff, 0xff, 0xff  ;; mov esi,0xffffffff
..@0x8049a2c: db 0xc7, 0x44, 0x24, 0x78, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x78],0xffffffff
..@0x8049a34: db 0xc7, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0xff  ;; mov dword [esp+0x130],0xffffffff
..@0x8049a3c: db 0xff, 0xff, 0xff
..@0x8049a3f: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x8049a44: db 0xc7, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00, 0xff  ;; mov dword [esp+0x134],0xffffffff
..@0x8049a4c: db 0xff, 0xff, 0xff
..@0x8049a4f: db 0xc6, 0x44, 0x24, 0x72, 0x00  ;; mov byte [esp+0x72],0x0
..@0x8049a54: add edx, strict byte 0x4
..@0x8049a57: db 0xc6, 0x44, 0x24, 0x71, 0x00  ;; mov byte [esp+0x71],0x0
..@0x8049a5c: db 0xc6, 0x44, 0x24, 0x74, 0x00  ;; mov byte [esp+0x74],0x0
..@0x8049a61: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8049a63: db 0xc6, 0x44, 0x24, 0x6c, 0x00  ;; mov byte [esp+0x6c],0x0
..@0x8049a68: db 0xc6, 0x44, 0x24, 0x73, 0x00  ;; mov byte [esp+0x73],0x0  ; Default value for condition 2: false.
..@0x8049a6d: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x8049a75: db 0xc7, 0x44, 0x24, 0x54, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x54],0x0  ; Default value for condition 1: false.
..@0x8049a7d: db 0xc7, 0x44, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x0
..@0x8049a85: db 0xc7, 0x44, 0x24, 0x60, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x60],0xffffffff
..@0x8049a8d: db 0xc7, 0x44, 0x24, 0x58, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x58],0xffffffff
..@0x8049a95: db 0x89, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],esi
..@0x8049a9c: db 0xeb, 0x26  ;; jmp short A.code+0x8049ac4
..@0x8049a9e: dw 0x9066  ;; o16 nop
..@0x8049aa0: db 0x83, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00, 0xff  ;; cmp dword [esp+0x80],byte -0x1
..@0x8049aa8: db 0x0f, 0x84, 0x62, 0x01, 0x00, 0x00  ;; jz near A.code+0x8049c10
..@0x8049aae: cmp esi, strict byte -0x1
..@0x8049ab1: db 0x0f, 0x85, 0x3c, 0x18, 0x00, 0x00  ;; jnz near A.code+0x804b2f3
..@0x8049ab7: db 0x89, 0xfe  ;; mov esi,edi
..@0x8049ab9: add edi, strict byte 0x1
..@0x8049abc: add ebx, strict byte 0x4
..@0x8049abf: db 0x3b, 0x7d, 0x08  ;; cmp edi,[ebp+0x8]
..@0x8049ac2: db 0x74, 0x3c  ;; jz A.code+0x8049b00
..@0x8049ac4: db 0x8b, 0x13  ;; mov edx,[ebx]
..@0x8049ac6: db 0x80, 0x3a, 0x2d  ;; cmp byte [edx],0x2d
..@0x8049ac9: db 0x75, 0xd5  ;; jnz A.code+0x8049aa0
..@0x8049acb: db 0x0f, 0xb6, 0x4a, 0x01  ;; movzx ecx,byte [edx+0x1]
..@0x8049acf: db 0x84, 0xc9  ;; test cl,cl
..@0x8049ad1: db 0x0f, 0x85, 0x49, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8049c20
..@0x8049ad7: db 0x83, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00, 0xff  ;; cmp dword [esp+0x80],byte -0x1
..@0x8049adf: db 0x0f, 0x84, 0xe3, 0x01, 0x00, 0x00  ;; jz near A.code+0x8049cc8
..@0x8049ae5: cmp esi, strict byte -0x1
..@0x8049ae8: db 0x0f, 0x85, 0x05, 0x18, 0x00, 0x00  ;; jnz near A.code+0x804b2f3
..@0x8049aee: db 0x89, 0xfe  ;; mov esi,edi
..@0x8049af0: add edi, strict byte 0x1
..@0x8049af3: add ebx, strict byte 0x4
..@0x8049af6: db 0x3b, 0x7d, 0x08  ;; cmp edi,[ebp+0x8]
..@0x8049af9: db 0xc6, 0x44, 0x24, 0x73, 0x01  ;; mov byte [esp+0x73],0x1  ; Set flag for condition 2 to true.
..@0x8049afe: db 0x75, 0xc4  ;; jnz A.code+0x8049ac4
..@0x8049b00: db 0x80, 0x7c, 0x24, 0x73, 0x00  ;; cmp byte [esp+0x73],0x0
..@0x8049b05: db 0x89, 0x74, 0x24, 0x78  ;; mov [esp+0x78],esi
..@0x8049b09: db 0x8b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x80]
..@0x8049b10: db 0x75, 0x0a  ;; jnz A.code+0x8049b1c
..@0x8049b12: mov eax, [stdout]
..@0x8049b17: db 0xa3, 0x44, 0xd2, 0x05, 0x08  ;; mov [message_filep],eax
..@0x8049b1c: db 0x80, 0x7c, 0x24, 0x74, 0x00  ;; cmp byte [esp+0x74],0x0
..@0x8049b21: db 0x0f, 0x85, 0x95, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8049dbc
..@0x8049b27: cmp esi, strict byte -0x1
..@0x8049b2a: db 0x0f, 0x84, 0xac, 0x19, 0x00, 0x00  ;; jz near A.code+0x804b4dc
..@0x8049b30: db 0x80, 0x7c, 0x24, 0x6c, 0x00  ;; cmp byte [esp+0x6c],0x0
..@0x8049b35: db 0x0f, 0x85, 0x39, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8049d74
..@0x8049b3b: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x8049b3e: db 0x8d, 0x8c, 0x24, 0x98, 0x01, 0x00, 0x00  ;; lea ecx,[esp+0x198]
..@0x8049b45: db 0x89, 0x4c, 0x24, 0x74  ;; mov [esp+0x74],ecx
..@0x8049b49: db 0x8b, 0x04, 0xb2  ;; mov eax,[edx+esi*4]
..@0x8049b4c: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x8049b4f: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8049b53: call B.code+strcpy
..@0x8049b58: db 0x83, 0x7c, 0x24, 0x78, 0xff  ;; cmp dword [esp+0x78],byte -0x1
..@0x8049b5d: db 0x0f, 0x84, 0x14, 0x04, 0x00, 0x00  ;; jz near A.code+0x8049f77
..@0x8049b63: db 0x80, 0x7c, 0x24, 0x73, 0x00  ;; cmp byte [esp+0x73],0x0
..@0x8049b68: db 0x0f, 0x84, 0x65, 0x03, 0x00, 0x00  ;; jz near A.code+0x8049ed3
..@0x8049b6e: db 0x8d, 0x94, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; lea edx,[esp+0x29c]
..@0x8049b75: db 0xbe, 0xa4, 0xb0, 0x05, 0x08  ;; mov esi,0x805b0a4
..@0x8049b7a: db 0xb9, 0x09, 0x00, 0x00, 0x00  ;; mov ecx,0x9
..@0x8049b7f: db 0x89, 0xd7  ;; mov edi,edx
..@0x8049b81: db 0x89, 0x54, 0x24, 0x7c  ;; mov [esp+0x7c],edx
..@0x8049b85: db 0xf3, 0xa4  ;; rep movsb
..@0x8049b87: db 0x80, 0x7c, 0x24, 0x6c, 0x00  ;; cmp byte [esp+0x6c],0x0
..@0x8049b8c: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x8049b93: db 0x0f, 0x84, 0xff, 0x07, 0x00, 0x00  ;; jz near A.code+0x804a398
..@0x8049b99: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8049b9b: db 0x31, 0xf6  ;; xor esi,esi
..@0x8049b9d: db 0x31, 0xff  ;; xor edi,edi
..@0x8049b9f: db 0xc7, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x80],0x0
..@0x8049ba7: db 0x00, 0x00, 0x00
..@0x8049baa: db 0x89, 0xda  ;; mov edx,ebx
..@0x8049bac: db 0x29, 0xf2  ;; sub edx,esi
..@0x8049bae: db 0x81, 0xfa, 0xff, 0xff, 0x07, 0x00  ;; cmp edx,0x7ffff
..@0x8049bb4: db 0x7f, 0x2b  ;; jg A.code+0x8049be1
..@0x8049bb6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8049bb9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8049bc0: db 0x8d, 0x9e, 0x00, 0x00, 0x10, 0x00  ;; lea ebx,[esi+0x100000]
..@0x8049bc6: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x8049bc9: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x8049bcd: call B.code+prog_realloc
..@0x8049bd2: db 0x85, 0xc0  ;; test eax,eax
..@0x8049bd4: db 0x89, 0xc7  ;; mov edi,eax
..@0x8049bd6: db 0x0f, 0x84, 0x60, 0x19, 0x00, 0x00  ;; jz near A.code+0x804b53c
..@0x8049bdc: db 0xba, 0x00, 0x00, 0x10, 0x00  ;; mov edx,0x100000
..@0x8049be1: db 0x8d, 0x04, 0x37  ;; lea eax,[edi+esi]
..@0x8049be4: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x8049be8: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8049bec: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x8049bf3: call B.code+read
..@0x8049bf8: db 0x85, 0xc0  ;; test eax,eax
..@0x8049bfa: db 0x0f, 0x8e, 0xd0, 0x01, 0x00, 0x00  ;; jng near A.code+0x8049dd0
..@0x8049c00: db 0x01, 0xc6  ;; add esi,eax
..@0x8049c02: db 0x89, 0xda  ;; mov edx,ebx
..@0x8049c04: db 0x29, 0xf2  ;; sub edx,esi
..@0x8049c06: db 0x81, 0xfa, 0xff, 0xff, 0x07, 0x00  ;; cmp edx,0x7ffff
..@0x8049c0c: db 0x7f, 0xd3  ;; jg A.code+0x8049be1
..@0x8049c0e: db 0xeb, 0xb0  ;; jmp short A.code+0x8049bc0
..@0x8049c10: db 0x89, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],edi
..@0x8049c17: jmp strict near R.code+0x8049ab9
..@0x8049c1c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x8049c20: db 0x80, 0xf9, 0x3f  ;; cmp cl,0x3f
..@0x8049c23: db 0x0f, 0x84, 0xd6, 0x16, 0x00, 0x00  ;; jz near A.code+print_help_and_exit
..@0x8049c29: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x8049c2c: db 0xc7, 0x44, 0x24, 0x04, 0x3b, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b03b
..@0x8049c34: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049c37: db 0x89, 0x44, 0x24, 0x78  ;; mov [esp+0x78],eax
..@0x8049c3b: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x8049c3f: db 0x88, 0x4c, 0x24, 0x30  ;; mov [esp+0x30],cl
..@0x8049c43: call B.code+strcasecmp
..@0x8049c48: db 0x85, 0xc0  ;; test eax,eax
..@0x8049c4a: db 0x74, 0x6c  ;; jz A.code+0x8049cb8
..@0x8049c4c: db 0x8b, 0x44, 0x24, 0x78  ;; mov eax,[esp+0x78]
..@0x8049c50: db 0xc7, 0x44, 0x24, 0x08, 0x08, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x8
..@0x8049c58: db 0xc7, 0x44, 0x24, 0x04, 0x41, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b041
..@0x8049c60: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049c63: call B.code+strncasecmp
..@0x8049c68: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8049c6c: db 0x85, 0xc0  ;; test eax,eax
..@0x8049c6e: db 0x0f, 0xb6, 0x4c, 0x24, 0x30  ;; movzx ecx,byte [esp+0x30]
..@0x8049c73: db 0x0f, 0x84, 0x97, 0x00, 0x00, 0x00  ;; jz near A.code+0x8049d10
..@0x8049c79: db 0x8b, 0x44, 0x24, 0x78  ;; mov eax,[esp+0x78]
..@0x8049c7d: db 0xc7, 0x44, 0x24, 0x04, 0x4a, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b04a
..@0x8049c85: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x8049c89: db 0x88, 0x4c, 0x24, 0x30  ;; mov [esp+0x30],cl
..@0x8049c8d: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049c90: call B.code+strcasecmp
..@0x8049c95: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8049c99: db 0x85, 0xc0  ;; test eax,eax
..@0x8049c9b: db 0x0f, 0xb6, 0x4c, 0x24, 0x30  ;; movzx ecx,byte [esp+0x30]
..@0x8049ca0: db 0x75, 0x3e  ;; jnz A.code+0x8049ce0
..@0x8049ca2: db 0xc7, 0x84, 0x24, 0x44, 0x01, 0x00, 0x00, 0x01  ;; mov dword [esp+0x144],0x1
..@0x8049caa: db 0x00, 0x00, 0x00
..@0x8049cad: jmp strict near R.code+0x8049ab9
..@0x8049cb2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x8049cb8: db 0xc7, 0x44, 0x24, 0x5c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x1
..@0x8049cc0: jmp strict near R.code+0x8049ab9
..@0x8049cc5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x8049cc8: db 0x89, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],edi
..@0x8049ccf: db 0xc6, 0x44, 0x24, 0x6c, 0x01  ;; mov byte [esp+0x6c],0x1
..@0x8049cd4: jmp strict near R.code+0x8049ab9
..@0x8049cd9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x8049ce0: db 0x8d, 0x41, 0x9f  ;; lea eax,[ecx-0x61]
..@0x8049ce3: db 0x88, 0x44, 0x24, 0x78  ;; mov [esp+0x78],al
..@0x8049ce7: db 0x8d, 0x41, 0xe0  ;; lea eax,[ecx-0x20]
..@0x8049cea: db 0x80, 0x7c, 0x24, 0x78, 0x19  ;; cmp byte [esp+0x78],0x19
..@0x8049cef: db 0x0f, 0x46, 0xc8  ;; cmovna ecx,eax
..@0x8049cf2: sub ecx, strict byte 0x42
..@0x8049cf5: db 0x80, 0xf9, 0x17  ;; cmp cl,0x17
..@0x8049cf8: db 0x76, 0x70  ;; jna A.code+0x8049d6a
..@0x8049cfa: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x8049cfe: db 0xc7, 0x04, 0x24, 0x60, 0xae, 0x05, 0x08  ;; mov dword [esp],0x805ae60
..@0x8049d05: call B.code+message_printf
..@0x8049d0a: jmp strict near R.code+0x8049ab9
..@0x8049d0f: nop
..@0x8049d10: add edx, strict byte 0x9
..@0x8049d13: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x8049d1b: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x8049d23: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8049d26: call B.code+strtol
..@0x8049d2b: db 0x85, 0xc0  ;; test eax,eax
..@0x8049d2d: db 0x0f, 0x8e, 0x74, 0x01, 0x00, 0x00  ;; jng near A.code+0x8049ea7
..@0x8049d33: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x8049d3b: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x8049d43: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8049d45: add eax, strict byte 0x9
..@0x8049d48: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049d4b: call B.code+strtol
..@0x8049d50: cmp eax, strict byte 0x1
..@0x8049d53: db 0x0f, 0x8e, 0x4e, 0x01, 0x00, 0x00  ;; jng near A.code+0x8049ea7
..@0x8049d59: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x8049d5e: db 0x89, 0x84, 0x24, 0x44, 0x01, 0x00, 0x00  ;; mov [esp+0x144],eax
..@0x8049d65: jmp strict near R.code+0x8049ab9
..@0x8049d6a: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x8049d6d: db 0xff, 0x24, 0x8d, 0xdc, 0xb1, 0x05, 0x08  ;; jmp [ecx*4+code_ptr_0x805b1dc]
..@0x8049d74: db 0xc7, 0x84, 0x24, 0x98, 0x01, 0x00, 0x00, 0x28  ;; mov dword [esp+0x198],0x64747328
..@0x8049d7c: db 0x73, 0x74, 0x64
..@0x8049d7f: db 0x83, 0x7c, 0x24, 0x78, 0xff  ;; cmp dword [esp+0x78],byte -0x1
..@0x8049d84: db 0xc7, 0x84, 0x24, 0x9c, 0x01, 0x00, 0x00, 0x69  ;; mov dword [esp+0x19c],0x296e69
..@0x8049d8c: db 0x6e, 0x29, 0x00
..@0x8049d8f: db 0x0f, 0x85, 0xce, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8049b63
..@0x8049d95: db 0x8d, 0xb4, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; lea esi,[esp+0x29c]
..@0x8049d9c: db 0xb9, 0x0a, 0x00, 0x00, 0x00  ;; mov ecx,0xa
..@0x8049da1: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x8049da8: db 0x89, 0x74, 0x24, 0x7c  ;; mov [esp+0x7c],esi
..@0x8049dac: db 0xbe, 0x71, 0xb0, 0x05, 0x08  ;; mov esi,0x805b071
..@0x8049db1: db 0x8b, 0x7c, 0x24, 0x7c  ;; mov edi,[esp+0x7c]
..@0x8049db5: db 0xf3, 0xa4  ;; rep movsb
..@0x8049db7: jmp strict near R.code+0x8049b99
..@0x8049dbc: db 0xc7, 0x05, 0x44, 0xd2, 0x05, 0x08, 0x00, 0x00  ;; mov dword [message_filep],0x0
..@0x8049dc4: db 0x00, 0x00
..@0x8049dc6: jmp strict near R.code+0x8049b27
..@0x8049dcb: nop
..@0x8049dcc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x8049dd0: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8049dd4: db 0xc7, 0x04, 0x24, 0xbf, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b1bf
..@0x8049ddb: db 0x89, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],edi
..@0x8049de2: call B.code+message_printf
..@0x8049de7: db 0x8d, 0x84, 0x24, 0x1c, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x11c]
..@0x8049dee: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8049df2: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8049df6: db 0x8d, 0x84, 0x24, 0x18, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x118]
..@0x8049dfd: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8049e01: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x8049e08: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049e0b: call R.code+0x8055c80
..@0x8049e10: db 0x8b, 0x94, 0x24, 0x1c, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x11c]
..@0x8049e17: db 0x8b, 0x9c, 0x24, 0x18, 0x01, 0x00, 0x00  ;; mov ebx,[esp+0x118]
..@0x8049e1e: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x8049e22: db 0x89, 0xd0  ;; mov eax,edx
..@0x8049e24: db 0x89, 0x54, 0x24, 0x74  ;; mov [esp+0x74],edx
..@0x8049e28: db 0x8d, 0x3c, 0x9d, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[ebx*4+0x0]
..@0x8049e2f: db 0x0f, 0xaf, 0xc7  ;; imul eax,edi
..@0x8049e32: db 0x89, 0xbc, 0x24, 0x14, 0x01, 0x00, 0x00  ;; mov [esp+0x114],edi
..@0x8049e39: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049e3c: call B.code+prog_malloc
..@0x8049e41: db 0x85, 0xc0  ;; test eax,eax
..@0x8049e43: db 0x89, 0x84, 0x24, 0x10, 0x01, 0x00, 0x00  ;; mov [esp+0x110],eax
..@0x8049e4a: db 0x0f, 0x84, 0xdd, 0x16, 0x00, 0x00  ;; jz near A.code+0x804b52d
..@0x8049e50: db 0x83, 0x7c, 0x24, 0x68, 0x01  ;; cmp dword [esp+0x68],byte +0x1
..@0x8049e55: db 0x0f, 0x84, 0x05, 0x06, 0x00, 0x00  ;; jz near A.code+0x804a460
..@0x8049e5b: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x8049e5f: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8049e63: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x8049e6a: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8049e72: db 0xc7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x18],0x0
..@0x8049e7a: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x8049e7e: db 0x89, 0x4c, 0x24, 0x14  ;; mov [esp+0x14],ecx
..@0x8049e82: db 0x89, 0x7c, 0x24, 0x0c  ;; mov [esp+0xc],edi
..@0x8049e86: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8049e8a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049e8d: call R.code+0x8056020
..@0x8049e92: db 0x85, 0xc0  ;; test eax,eax
..@0x8049e94: db 0x0f, 0x88, 0xe0, 0x14, 0x00, 0x00  ;; js near A.code+0x804b37a
..@0x8049e9a: db 0xc7, 0x44, 0x24, 0x68, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x68],0xffffffff
..@0x8049ea2: jmp strict near R.code+0x804a53c
..@0x8049ea7: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x8049eaf: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x8049eb7: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x8049eb9: add eax, strict byte 0x9
..@0x8049ebc: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8049ebf: call B.code+strtol
..@0x8049ec4: db 0x85, 0xc0  ;; test eax,eax
..@0x8049ec6: db 0x0f, 0x8f, 0x5e, 0x01, 0x00, 0x00  ;; jg near A.code+0x804a02a
..@0x8049ecc: db 0x31, 0xc0  ;; xor eax,eax
..@0x8049ece: jmp strict near R.code+0x8049d5e
..@0x8049ed3: db 0x8b, 0x4c, 0x24, 0x78  ;; mov ecx,[esp+0x78]
..@0x8049ed7: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x8049eda: db 0x8b, 0x04, 0x8a  ;; mov eax,[edx+ecx*4]
..@0x8049edd: db 0x8d, 0x8c, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; lea ecx,[esp+0x29c]
..@0x8049ee4: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x8049ee7: db 0x89, 0x4c, 0x24, 0x7c  ;; mov [esp+0x7c],ecx
..@0x8049eeb: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8049eef: call B.code+stpcpy
..@0x8049ef4: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8049ef6: db 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],eax
..@0x8049efd: db 0x2b, 0x5c, 0x24, 0x7c  ;; sub ebx,[esp+0x7c]
..@0x8049f01: cmp ebx, strict byte 0x3
..@0x8049f04: db 0x0f, 0x8f, 0x42, 0x01, 0x00, 0x00  ;; jg near A.code+0x804a04c
..@0x8049f0a: db 0x0f, 0xb6, 0x8c, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; movzx ecx,byte [esp+0x29c]
..@0x8049f12: db 0x84, 0xc9  ;; test cl,cl
..@0x8049f14: db 0x74, 0x4b  ;; jz A.code+0x8049f61
..@0x8049f16: db 0x8d, 0x94, 0x24, 0x9d, 0x02, 0x00, 0x00  ;; lea edx,[esp+0x29d]
..@0x8049f1d: db 0x31, 0xc0  ;; xor eax,eax
..@0x8049f1f: db 0x31, 0xff  ;; xor edi,edi
..@0x8049f21: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x8049f26: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8049f29: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8049f30: db 0x8d, 0x59, 0xbf  ;; lea ebx,[ecx-0x41]
..@0x8049f33: db 0x81, 0xe3, 0xff, 0x00, 0x00, 0x00  ;; and ebx,0xff
..@0x8049f39: cmp ebx, strict byte 0x19
..@0x8049f3c: db 0x0f, 0x4e, 0xc7  ;; cmovng eax,edi
..@0x8049f3f: sub ecx, strict byte 0x61
..@0x8049f42: db 0x81, 0xe1, 0xff, 0x00, 0x00, 0x00  ;; and ecx,0xff
..@0x8049f48: cmp ecx, strict byte 0x19
..@0x8049f4b: db 0x0f, 0x4e, 0xc6  ;; cmovng eax,esi
..@0x8049f4e: add edx, strict byte 0x1
..@0x8049f51: db 0x0f, 0xb6, 0x4a, 0xff  ;; movzx ecx,byte [edx-0x1]
..@0x8049f55: db 0x84, 0xc9  ;; test cl,cl
..@0x8049f57: db 0x75, 0xd7  ;; jnz A.code+0x8049f30
..@0x8049f59: db 0x85, 0xc0  ;; test eax,eax
..@0x8049f5b: db 0x0f, 0x85, 0x1c, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804a07d
..@0x8049f61: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x8049f68: db 0xc7, 0x00, 0x2e, 0x50, 0x4e, 0x47  ;; mov dword [eax],0x474e502e
..@0x8049f6e: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x8049f72: jmp strict near R.code+0x8049b87
..@0x8049f77: db 0x8b, 0x44, 0x24, 0x74  ;; mov eax,[esp+0x74]
..@0x8049f7b: db 0x8d, 0x94, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; lea edx,[esp+0x29c]
..@0x8049f82: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8049f85: db 0x89, 0x54, 0x24, 0x7c  ;; mov [esp+0x7c],edx
..@0x8049f89: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8049f8d: call B.code+stpcpy
..@0x8049f92: db 0x8b, 0x4c, 0x24, 0x78  ;; mov ecx,[esp+0x78]
..@0x8049f96: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x8049f9a: db 0x8b, 0x7c, 0x24, 0x74  ;; mov edi,[esp+0x74]
..@0x8049f9e: db 0x0f, 0xb6, 0x44, 0x24, 0x6c  ;; movzx eax,byte [esp+0x6c]
..@0x8049fa3: db 0x0f, 0xb6, 0x94, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; movzx edx,byte [esp+0x29c]
..@0x8049fab: db 0xf2, 0xae  ;; repne scasb
..@0x8049fad: db 0xf7, 0xd1  ;; not ecx
..@0x8049faf: sub ecx, strict byte 0x1
..@0x8049fb2: db 0x84, 0xd2  ;; test dl,dl
..@0x8049fb4: db 0x89, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],ecx
..@0x8049fbb: db 0x0f, 0x84, 0xb2, 0x13, 0x00, 0x00  ;; jz near A.code+0x804b373
..@0x8049fc1: db 0x8d, 0x84, 0x24, 0x9d, 0x02, 0x00, 0x00  ;; lea eax,[esp+0x29d]
..@0x8049fc8: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8049fca: db 0x31, 0xff  ;; xor edi,edi
..@0x8049fcc: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x8049fd1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8049fd8: db 0x8d, 0x4a, 0xbf  ;; lea ecx,[edx-0x41]
..@0x8049fdb: db 0x81, 0xe1, 0xff, 0x00, 0x00, 0x00  ;; and ecx,0xff
..@0x8049fe1: cmp ecx, strict byte 0x19
..@0x8049fe4: db 0x0f, 0x4e, 0xdf  ;; cmovng ebx,edi
..@0x8049fe7: sub edx, strict byte 0x61
..@0x8049fea: db 0x81, 0xe2, 0xff, 0x00, 0x00, 0x00  ;; and edx,0xff
..@0x8049ff0: cmp edx, strict byte 0x19
..@0x8049ff3: db 0x0f, 0x4e, 0xde  ;; cmovng ebx,esi
..@0x8049ff6: add eax, strict byte 0x1
..@0x8049ff9: db 0x0f, 0xb6, 0x50, 0xff  ;; movzx edx,byte [eax-0x1]
..@0x8049ffd: db 0x84, 0xd2  ;; test dl,dl
..@0x8049fff: db 0x75, 0xd7  ;; jnz A.code+0x8049fd8
..@0x804a001: db 0x83, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00, 0x03  ;; cmp dword [esp+0x80],byte +0x3
..@0x804a009: db 0x0f, 0x8f, 0xf2, 0x0d, 0x00, 0x00  ;; jg near A.code+0x804ae01
..@0x804a00f: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804a011: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a015: db 0x0f, 0x85, 0xaa, 0x0f, 0x00, 0x00  ;; jnz near A.code+0x804afc5
..@0x804a01b: db 0xc7, 0x00, 0x2e, 0x50, 0x4e, 0x47  ;; mov dword [eax],0x474e502e
..@0x804a021: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804a025: jmp strict near R.code+0x804af54
..@0x804a02a: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a032: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a03a: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804a03c: add eax, strict byte 0x9
..@0x804a03f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a042: call B.code+strtol
..@0x804a047: jmp strict near R.code+0x8049d5e
..@0x804a04c: db 0x8b, 0x74, 0x24, 0x7c  ;; mov esi,[esp+0x7c]
..@0x804a050: db 0xc7, 0x44, 0x24, 0x04, 0x7b, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b07b
..@0x804a058: db 0x8d, 0x44, 0x1e, 0xfc  ;; lea eax,[esi+ebx-0x4]
..@0x804a05c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a05f: call B.code+strcasecmp
..@0x804a064: db 0x85, 0xc0  ;; test eax,eax
..@0x804a066: db 0x0f, 0x84, 0x1b, 0xfb, 0xff, 0xff  ;; jz near A.code+0x8049b87
..@0x804a06c: db 0x81, 0xfb, 0xff, 0x00, 0x00, 0x00  ;; cmp ebx,0xff
..@0x804a072: db 0x0f, 0x8f, 0x0f, 0xfb, 0xff, 0xff  ;; jg near A.code+0x8049b87
..@0x804a078: jmp strict near R.code+0x8049f0a
..@0x804a07d: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a084: db 0xc7, 0x00, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [eax],0x676e702e
..@0x804a08a: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804a08e: jmp strict near R.code+0x8049b87
..@0x804a093: add edx, strict byte 0x2
..@0x804a096: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a09e: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804a0a1: db 0xc7, 0x84, 0x24, 0x64, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x164],0x0
..@0x804a0a9: db 0x00, 0x00, 0x00
..@0x804a0ac: call B.code+strtod
..@0x804a0b1: db 0xd9, 0xee  ;; fldz
..@0x804a0b3: db 0xdf, 0xe9  ;; fucomip st1
..@0x804a0b5: db 0x0f, 0x87, 0xc1, 0x10, 0x00, 0x00  ;; ja near A.code+0x804b17c
..@0x804a0bb: db 0xdd, 0x9c, 0x24, 0x68, 0x01, 0x00, 0x00  ;; fstp qword [esp+0x168]
..@0x804a0c2: db 0xc7, 0x44, 0x24, 0x50, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x1
..@0x804a0ca: jmp strict near R.code+0x8049ab9
..@0x804a0cf: db 0xc7, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x134],0x0
..@0x804a0d7: db 0x00, 0x00, 0x00
..@0x804a0da: db 0x0f, 0xb6, 0x4a, 0x02  ;; movzx ecx,byte [edx+0x2]
..@0x804a0de: db 0x84, 0xc9  ;; test cl,cl
..@0x804a0e0: db 0x0f, 0x84, 0xd3, 0xf9, 0xff, 0xff  ;; jz near A.code+0x8049ab9
..@0x804a0e6: db 0x8d, 0x41, 0xd0  ;; lea eax,[ecx-0x30]
..@0x804a0e9: db 0x3c, 0x09  ;; cmp al,0x9
..@0x804a0eb: db 0x0f, 0x87, 0xf0, 0x0e, 0x00, 0x00  ;; ja near A.code+0x804afe1
..@0x804a0f1: add edx, strict byte 0x3
..@0x804a0f4: db 0x31, 0xc0  ;; xor eax,eax
..@0x804a0f6: db 0x89, 0x5c, 0x24, 0x78  ;; mov [esp+0x78],ebx
..@0x804a0fa: db 0xeb, 0x13  ;; jmp short A.code+0x804a10f
..@0x804a0fc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804a100: db 0x8d, 0x59, 0xd0  ;; lea ebx,[ecx-0x30]
..@0x804a103: add edx, strict byte 0x1
..@0x804a106: db 0x80, 0xfb, 0x09  ;; cmp bl,0x9
..@0x804a109: db 0x0f, 0x87, 0xd2, 0x0e, 0x00, 0x00  ;; ja near A.code+0x804afe1
..@0x804a10f: db 0x8d, 0x04, 0x80  ;; lea eax,[eax+eax*4]
..@0x804a112: db 0x8d, 0x44, 0x41, 0xd0  ;; lea eax,[ecx+eax*2-0x30]
..@0x804a116: db 0x89, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00  ;; mov [esp+0x134],eax
..@0x804a11d: db 0x0f, 0xb6, 0x0a  ;; movzx ecx,byte [edx]
..@0x804a120: db 0x84, 0xc9  ;; test cl,cl
..@0x804a122: db 0x75, 0xdc  ;; jnz A.code+0x804a100
..@0x804a124: cmp eax, strict byte 0x6
..@0x804a127: db 0x8b, 0x5c, 0x24, 0x78  ;; mov ebx,[esp+0x78]
..@0x804a12b: db 0x77, 0x0c  ;; ja A.code+0x804a139
..@0x804a12d: and eax, strict byte 0x3
..@0x804a130: sub eax, strict byte 0x1
..@0x804a133: db 0x0f, 0x85, 0x80, 0xf9, 0xff, 0xff  ;; jnz near A.code+0x8049ab9
..@0x804a139: db 0xc7, 0x04, 0x24, 0x50, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b050
..@0x804a140: call B.code+message_printf
..@0x804a145: call B.code+print_help
..@0x804a14a: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804a151: call B.code+exit
..@0x804a156: add edx, strict byte 0x2
..@0x804a159: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a161: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a169: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804a16c: call B.code+strtol
..@0x804a171: cmp eax, strict byte 0x8
..@0x804a174: db 0x89, 0x44, 0x24, 0x58  ;; mov [esp+0x58],eax
..@0x804a178: db 0x77, 0x17  ;; ja A.code+0x804a191
..@0x804a17a: db 0x0f, 0xb6, 0x4c, 0x24, 0x58  ;; movzx ecx,byte [esp+0x58]
..@0x804a17f: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804a184: db 0xd3, 0xe0  ;; shl eax,cl
..@0x804a186: db 0xa9, 0x17, 0x01, 0x00, 0x00  ;; test eax,0x117
..@0x804a18b: db 0x0f, 0x85, 0x28, 0xf9, 0xff, 0xff  ;; jnz near A.code+0x8049ab9
..@0x804a191: db 0xc7, 0x44, 0x24, 0x58, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x58],0xffffffff
..@0x804a199: jmp strict near R.code+0x8049ab9
..@0x804a19e: db 0xc7, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x130],0x0
..@0x804a1a6: db 0x00, 0x00, 0x00
..@0x804a1a9: db 0x0f, 0xb6, 0x42, 0x02  ;; movzx eax,byte [edx+0x2]
..@0x804a1ad: db 0x84, 0xc0  ;; test al,al
..@0x804a1af: db 0x0f, 0x84, 0x04, 0xf9, 0xff, 0xff  ;; jz near A.code+0x8049ab9
..@0x804a1b5: sub eax, strict byte 0x30
..@0x804a1b8: db 0x3c, 0x09  ;; cmp al,0x9
..@0x804a1ba: db 0x0f, 0x87, 0x11, 0x0e, 0x00, 0x00  ;; ja near A.code+0x804afd1
..@0x804a1c0: db 0x8b, 0x0b  ;; mov ecx,[ebx]
..@0x804a1c2: db 0x89, 0x7c, 0x24, 0x48  ;; mov [esp+0x48],edi
..@0x804a1c6: db 0x31, 0xc0  ;; xor eax,eax
..@0x804a1c8: db 0xc7, 0x44, 0x24, 0x78, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x78],0x2
..@0x804a1d0: db 0x89, 0x5c, 0x24, 0x4c  ;; mov [esp+0x4c],ebx
..@0x804a1d4: db 0x89, 0x4c, 0x24, 0x68  ;; mov [esp+0x68],ecx
..@0x804a1d8: db 0xb9, 0x02, 0x00, 0x00, 0x00  ;; mov ecx,0x2
..@0x804a1dd: db 0x8b, 0x7c, 0x24, 0x68  ;; mov edi,[esp+0x68]
..@0x804a1e1: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x804a1e5: db 0xbe, 0x02, 0x00, 0x00, 0x00  ;; mov esi,0x2
..@0x804a1ea: db 0xeb, 0x10  ;; jmp short A.code+0x804a1fc
..@0x804a1ec: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804a1f0: sub ebx, strict byte 0x30
..@0x804a1f3: db 0x80, 0xfb, 0x09  ;; cmp bl,0x9
..@0x804a1f6: db 0x0f, 0x87, 0xd5, 0x0d, 0x00, 0x00  ;; ja near A.code+0x804afd1
..@0x804a1fc: db 0x0f, 0xb6, 0x1c, 0x37  ;; movzx ebx,byte [edi+esi]
..@0x804a200: db 0x8d, 0x04, 0x80  ;; lea eax,[eax+eax*4]
..@0x804a203: add ecx, strict byte 0x1
..@0x804a206: db 0x89, 0xce  ;; mov esi,ecx
..@0x804a208: db 0x8d, 0x44, 0x43, 0xd0  ;; lea eax,[ebx+eax*2-0x30]
..@0x804a20c: db 0x89, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00  ;; mov [esp+0x130],eax
..@0x804a213: db 0x0f, 0xb6, 0x1c, 0x0a  ;; movzx ebx,byte [edx+ecx]
..@0x804a217: db 0x84, 0xdb  ;; test bl,bl
..@0x804a219: db 0x75, 0xd5  ;; jnz A.code+0x804a1f0
..@0x804a21b: cmp eax, strict byte 0x6
..@0x804a21e: db 0x8b, 0x5c, 0x24, 0x4c  ;; mov ebx,[esp+0x4c]
..@0x804a222: db 0x8b, 0x7c, 0x24, 0x48  ;; mov edi,[esp+0x48]
..@0x804a226: db 0x8b, 0x74, 0x24, 0x68  ;; mov esi,[esp+0x68]
..@0x804a22a: db 0x0f, 0x86, 0x89, 0xf8, 0xff, 0xff  ;; jna near A.code+0x8049ab9
..@0x804a230: db 0xc7, 0x04, 0x24, 0x61, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b061
..@0x804a237: call B.code+message_printf
..@0x804a23c: call B.code+print_help
..@0x804a241: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804a248: call B.code+exit
..@0x804a24d: db 0xc7, 0x84, 0x24, 0x94, 0x01, 0x00, 0x00, 0x01  ;; mov dword [esp+0x194],0x1
..@0x804a255: db 0x00, 0x00, 0x00
..@0x804a258: jmp strict near R.code+0x8049ab9
..@0x804a25d: db 0x80, 0x7a, 0x02, 0x00  ;; cmp byte [edx+0x2],0x0
..@0x804a261: db 0x0f, 0x85, 0x93, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x8049cfa
..@0x804a267: db 0xc7, 0x44, 0x24, 0x54, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x54],0x1  ; Set flag for condition 1 to true.
..@0x804a26f: jmp strict near R.code+0x8049ab9
..@0x804a274: add edx, strict byte 0x2
..@0x804a277: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a27f: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a287: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804a28a: call B.code+strtol
..@0x804a28f: db 0xc7, 0x44, 0x24, 0x50, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x1
..@0x804a297: db 0x89, 0x84, 0x24, 0x64, 0x01, 0x00, 0x00  ;; mov [esp+0x164],eax
..@0x804a29e: jmp strict near R.code+0x8049ab9
..@0x804a2a3: db 0xc6, 0x44, 0x24, 0x74, 0x01  ;; mov byte [esp+0x74],0x1
..@0x804a2a8: jmp strict near R.code+0x8049ab9
..@0x804a2ad: db 0xc7, 0x84, 0x24, 0x60, 0x01, 0x00, 0x00, 0x01  ;; mov dword [esp+0x160],0x1
..@0x804a2b5: db 0x00, 0x00, 0x00
..@0x804a2b8: jmp strict near R.code+0x8049ab9
..@0x804a2bd: add edx, strict byte 0x2
..@0x804a2c0: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a2c8: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a2d0: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804a2d3: call B.code+strtol
..@0x804a2d8: db 0x85, 0xc0  ;; test eax,eax
..@0x804a2da: db 0x7e, 0x75  ;; jng A.code+0x804a351
..@0x804a2dc: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a2e4: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a2ec: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804a2ee: add eax, strict byte 0x2
..@0x804a2f1: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a2f4: call B.code+strtol
..@0x804a2f9: cmp eax, strict byte 0x3
..@0x804a2fc: db 0x7e, 0x53  ;; jng A.code+0x804a351
..@0x804a2fe: db 0xb8, 0x04, 0x00, 0x00, 0x00  ;; mov eax,0x4
..@0x804a303: db 0x89, 0x84, 0x24, 0x5c, 0x01, 0x00, 0x00  ;; mov [esp+0x15c],eax
..@0x804a30a: jmp strict near R.code+0x8049ab9
..@0x804a30f: db 0x0f, 0xb6, 0x42, 0x02  ;; movzx eax,byte [edx+0x2]
..@0x804a313: db 0x8d, 0x48, 0x9f  ;; lea ecx,[eax-0x61]
..@0x804a316: db 0x88, 0x4c, 0x24, 0x78  ;; mov [esp+0x78],cl
..@0x804a31a: db 0x8d, 0x48, 0xe0  ;; lea ecx,[eax-0x20]
..@0x804a31d: db 0x80, 0x7c, 0x24, 0x78, 0x19  ;; cmp byte [esp+0x78],0x19
..@0x804a322: db 0x0f, 0x46, 0xc1  ;; cmovna eax,ecx
..@0x804a325: db 0x3c, 0x50  ;; cmp al,0x50
..@0x804a327: db 0x0f, 0x84, 0x70, 0x0e, 0x00, 0x00  ;; jz near A.code+0x804b19d
..@0x804a32d: db 0x3c, 0x53  ;; cmp al,0x53
..@0x804a32f: db 0x0f, 0x84, 0x49, 0x0c, 0x00, 0x00  ;; jz near A.code+0x804af7e
..@0x804a335: db 0x8b, 0x54, 0x24, 0x60  ;; mov edx,[esp+0x60]
..@0x804a339: db 0x84, 0xc0  ;; test al,al
..@0x804a33b: db 0x0f, 0x45, 0xd7  ;; cmovnz edx,edi
..@0x804a33e: db 0x89, 0x54, 0x24, 0x60  ;; mov [esp+0x60],edx
..@0x804a342: jmp strict near R.code+0x8049ab9
..@0x804a347: db 0xc6, 0x44, 0x24, 0x72, 0x01  ;; mov byte [esp+0x72],0x1
..@0x804a34c: jmp strict near R.code+0x8049ab9
..@0x804a351: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a359: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a361: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804a363: add eax, strict byte 0x2
..@0x804a366: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a369: call B.code+strtol
..@0x804a36e: db 0x85, 0xc0  ;; test eax,eax
..@0x804a370: db 0x0f, 0x8e, 0xea, 0x0b, 0x00, 0x00  ;; jng near A.code+0x804af60
..@0x804a376: db 0xc7, 0x44, 0x24, 0x08, 0x0a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0xa
..@0x804a37e: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a386: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x804a388: add eax, strict byte 0x2
..@0x804a38b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a38e: call B.code+strtol
..@0x804a393: jmp strict near R.code+0x804a303
..@0x804a398: db 0x8d, 0x94, 0x24, 0x98, 0x01, 0x00, 0x00  ;; lea edx,[esp+0x198]
..@0x804a39f: db 0x89, 0x54, 0x24, 0x74  ;; mov [esp+0x74],edx
..@0x804a3a3: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804a3a7: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x804a3af: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804a3b2: call B.code+fopen
..@0x804a3b7: db 0x85, 0xc0  ;; test eax,eax
..@0x804a3b9: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x804a3bd: db 0x0f, 0x84, 0x02, 0x0a, 0x00, 0x00  ;; jz near A.code+0x804adc5
..@0x804a3c3: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a3c7: db 0xc7, 0x44, 0x24, 0x08, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x2  ; SEEK_END
..@0x804a3cf: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a3d7: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a3da: call B.code+fseek
..@0x804a3df: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a3e3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a3e6: call B.code+ftell
..@0x804a3eb: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x804a3f3: db 0x89, 0xc6  ;; mov esi,eax
..@0x804a3f5: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a3f9: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804a401: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a404: call B.code+fseek
..@0x804a409: db 0x85, 0xf6  ;; test esi,esi
..@0x804a40b: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a40f: db 0x0f, 0x8e, 0xa6, 0x0f, 0x00, 0x00  ;; jng near A.code+0x804b3bb
..@0x804a415: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804a418: call B.code+prog_malloc
..@0x804a41d: db 0x85, 0xc0  ;; test eax,eax
..@0x804a41f: db 0x89, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],eax
..@0x804a426: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a42a: db 0x0f, 0x84, 0x8b, 0x0f, 0x00, 0x00  ;; jz near A.code+0x804b3bb
..@0x804a430: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804a434: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a43b: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x804a443: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x804a447: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a44a: call B.code+fread
..@0x804a44f: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804a453: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a456: call B.code+fclose
..@0x804a45b: jmp strict near R.code+0x8049de7
..@0x804a460: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804a464: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x804a468: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804a46b: db 0x89, 0x0d, 0x00, 0xe1, 0x83, 0x09  ;; mov [0x983e100],ecx
..@0x804a471: call B.code+prog_malloc
..@0x804a476: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804a47a: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x804a47e: db 0xa3, 0x04, 0xe1, 0x83, 0x09  ;; mov [0x983e104],eax
..@0x804a483: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x804a487: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a48e: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x804a496: db 0xc7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x18],0x0
..@0x804a49e: db 0x89, 0x4c, 0x24, 0x14  ;; mov [esp+0x14],ecx
..@0x804a4a2: db 0x89, 0x7c, 0x24, 0x0c  ;; mov [esp+0xc],edi
..@0x804a4a6: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x804a4aa: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x804a4ae: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a4b1: call R.code+0x8056020
..@0x804a4b6: db 0x85, 0xc0  ;; test eax,eax
..@0x804a4b8: db 0x0f, 0x88, 0xbc, 0x0e, 0x00, 0x00  ;; js near A.code+0x804b37a
..@0x804a4be: db 0x8b, 0x1d, 0x04, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e104]
..@0x804a4c4: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804a4c6: db 0x0f, 0x84, 0xce, 0xf9, 0xff, 0xff  ;; jz near A.code+0x8049e9a
..@0x804a4cc: db 0x0f, 0xb6, 0x0b  ;; movzx ecx,byte [ebx]
..@0x804a4cf: db 0x0f, 0xb6, 0xc1  ;; movzx eax,cl
..@0x804a4d2: db 0x88, 0x4c, 0x24, 0x74  ;; mov [esp+0x74],cl
..@0x804a4d6: db 0x89, 0x44, 0x24, 0x4c  ;; mov [esp+0x4c],eax
..@0x804a4da: db 0x8b, 0x84, 0x24, 0x1c, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x11c]
..@0x804a4e1: sub eax, strict byte 0x1
..@0x804a4e4: db 0x85, 0xc0  ;; test eax,eax
..@0x804a4e6: db 0x0f, 0x8e, 0x8e, 0x08, 0x00, 0x00  ;; jng near A.code+0x804ad7a
..@0x804a4ec: db 0x31, 0xd2  ;; xor edx,edx
..@0x804a4ee: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x804a4f3: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x804a4f7: db 0x89, 0xf6  ;; mov esi,esi
..@0x804a4f9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804a500: db 0x0f, 0xb6, 0x0c, 0x03  ;; movzx ecx,byte [ebx+eax]
..@0x804a504: db 0x89, 0xfe  ;; mov esi,edi
..@0x804a506: db 0xd3, 0xe6  ;; shl esi,cl
..@0x804a508: db 0x09, 0xf2  ;; or edx,esi
..@0x804a50a: sub eax, strict byte 0x1
..@0x804a50d: db 0x75, 0xf1  ;; jnz A.code+0x804a500
..@0x804a50f: db 0x0f, 0xb6, 0x4c, 0x24, 0x74  ;; movzx ecx,byte [esp+0x74]
..@0x804a514: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804a519: db 0x8b, 0x74, 0x24, 0x68  ;; mov esi,[esp+0x68]
..@0x804a51d: db 0xd3, 0xe0  ;; shl eax,cl
..@0x804a51f: db 0xf7, 0xd0  ;; not eax
..@0x804a521: db 0x85, 0xc2  ;; test edx,eax
..@0x804a523: db 0x0f, 0x84, 0x51, 0x08, 0x00, 0x00  ;; jz near A.code+0x804ad7a
..@0x804a529: db 0x83, 0x7c, 0x24, 0x4c, 0x01  ;; cmp dword [esp+0x4c],byte +0x1
..@0x804a52e: db 0xc7, 0x44, 0x24, 0x68, 0x05, 0x00, 0x00, 0x00  ;; mov dword [esp+0x68],0x5
..@0x804a536: db 0x0f, 0x84, 0x5b, 0x0b, 0x00, 0x00  ;; jz near A.code+0x804b097
..@0x804a53c: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a543: db 0x81, 0x38, 0x89, 0x50, 0x4e, 0x47  ;; cmp dword [eax],0x474e5089
..@0x804a549: db 0x0f, 0x84, 0x60, 0x05, 0x00, 0x00  ;; jz near A.code+0x804aaaf
..@0x804a54f: db 0x83, 0x7c, 0x24, 0x60, 0xff  ;; cmp dword [esp+0x60],byte -0x1
..@0x804a554: db 0xc7, 0x44, 0x24, 0x74, 0x4a, 0xb5, 0x05, 0x08  ;; mov dword [esp+0x74],0x805b54a
..@0x804a55c: db 0x74, 0x11  ;; jz A.code+0x804a56f
..@0x804a55e: db 0x8b, 0x54, 0x24, 0x60  ;; mov edx,[esp+0x60]
..@0x804a562: db 0x8b, 0x4d, 0x0c  ;; mov ecx,[ebp+0xc]
..@0x804a565: db 0x8b, 0x04, 0x91  ;; mov eax,[ecx+edx*4]
..@0x804a568: add eax, strict byte 0x2
..@0x804a56b: db 0x89, 0x44, 0x24, 0x74  ;; mov [esp+0x74],eax
..@0x804a56f: db 0x8b, 0x94, 0x24, 0x94, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x194]
..@0x804a576: db 0xc7, 0x05, 0x48, 0xd2, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d248],0x0
..@0x804a57e: db 0x00, 0x00
..@0x804a580: db 0xc7, 0x05, 0x4c, 0xd2, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d24c],0x0
..@0x804a588: db 0x00, 0x00
..@0x804a58a: db 0xc7, 0x05, 0x50, 0xd2, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d250],0x0
..@0x804a592: db 0x00, 0x00
..@0x804a594: db 0xc7, 0x05, 0x54, 0xd2, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d254],0x0
..@0x804a59c: db 0x00, 0x00
..@0x804a59e: db 0x89, 0x54, 0x24, 0x60  ;; mov [esp+0x60],edx
..@0x804a5a2: db 0x8b, 0x94, 0x24, 0x34, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x134]
..@0x804a5a9: db 0x89, 0x54, 0x24, 0x4c  ;; mov [esp+0x4c],edx
..@0x804a5ad: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804a5b1: db 0x80, 0x3a, 0x00  ;; cmp byte [edx],0x0
..@0x804a5b4: db 0x75, 0x07  ;; jnz A.code+0x804a5bd
..@0x804a5b6: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804a5bb: db 0x74, 0x13  ;; jz A.code+0x804a5d0
..@0x804a5bd: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a5c4: db 0x81, 0x38, 0x89, 0x50, 0x4e, 0x47  ;; cmp dword [eax],0x474e5089
..@0x804a5ca: db 0x0f, 0x84, 0x96, 0x05, 0x00, 0x00  ;; jz near A.code+0x804ab66
..@0x804a5d0: db 0xc7, 0x05, 0x48, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca48],0x0
..@0x804a5d8: db 0x00, 0x00
..@0x804a5da: db 0xa1, 0x48, 0xca, 0x87, 0x09  ;; mov eax,[0x987ca48]
..@0x804a5df: db 0x83, 0xbc, 0x24, 0x30, 0x01, 0x00, 0x00, 0x06  ;; cmp dword [esp+0x130],byte +0x6
..@0x804a5e7: db 0x89, 0x84, 0x24, 0x40, 0x01, 0x00, 0x00  ;; mov [esp+0x140],eax
..@0x804a5ee: db 0x0f, 0x84, 0x9e, 0x04, 0x00, 0x00  ;; jz near A.code+0x804aa92
..@0x804a5f4: db 0x80, 0x7c, 0x24, 0x72, 0x00  ;; cmp byte [esp+0x72],0x0
..@0x804a5f9: db 0x0f, 0x85, 0x73, 0x0e, 0x00, 0x00  ;; jnz near A.code+0x804b472
..@0x804a5ff: db 0x8b, 0x7c, 0x24, 0x54  ;; mov edi,[esp+0x54]
..@0x804a603: db 0x85, 0xff  ;; test edi,edi
..@0x804a605: jnz strict near B.code+jmp_do_convert  ; Check condition 1: "-y" command-line flag is specified. If true, convert without check whether the output file exists.
..@0x804a60b: db 0x80, 0x7c, 0x24, 0x73, 0x00  ;; cmp byte [esp+0x73],0x0
..@0x804a610: jnz strict near B.code+jmp_do_convert  ; Check condition 2: if true, convert without check whether the output file exists.
              ; Check whether the output file exists.
..@0x804a616: db 0x8b, 0x44, 0x24, 0x7c  ;; mov eax,[esp+0x7c]  ; Output filename.
..@0x804a61a: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x804a622: db 0x89, 0x04, 0x24  ;; mov [esp],eax  ; Output filename.
..@0x804a625: call B.code+fopen
..@0x804a62a: db 0x85, 0xc0  ;; test eax,eax
..@0x804a62c: db 0x74, 0x7e  ;; jz A.code+B.code+jmp_do_convert
..@0x804a62e: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a631: call B.code+fclose
..@0x804a636: db 0x80, 0x7c, 0x24, 0x6c, 0x00  ;; cmp byte [esp+0x6c],0x0
..@0x804a63b: db 0x0f, 0x85, 0x11, 0x0e, 0x00, 0x00  ;; jnz near A.code+0x804b452
..@0x804a641: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804a645: db 0xc7, 0x04, 0x24, 0x08, 0xaf, 0x05, 0x08  ;; mov dword [esp],str_message_already_ask_overwrite
..@0x804a64c: db 0x8d, 0x9c, 0x24, 0x90, 0x00, 0x00, 0x00  ;; lea ebx,[esp+0x90] ; Filename.
..@0x804a653: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x804a657: call B.code+maybe_prog_printf
..@0x804a65c: db 0xeb, 0x0e  ;; jmp short A.code+0x804a66c
..@0x804a65e: dw 0x9066  ;; o16 nop
..@0x804a660: db 0xc7, 0x04, 0x24, 0x30, 0xaf, 0x05, 0x08  ;; mov dword [esp],str_message_unrecognised_response
..@0x804a667: call B.code+maybe_prog_printf
..@0x804a66c: mov eax, [stdin]
..@0x804a671: db 0xc7, 0x44, 0x24, 0x04, 0x80, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x80
..@0x804a679: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804a67c: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804a680: call B.code+fgets
..@0x804a685: db 0x85, 0xc0  ;; test eax,eax
..@0x804a687: jz strict near B.code+jmp_operation_cancelled
..@0x804a68d: db 0x0f, 0xb6, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00  ;; movzx eax,byte [esp+0x90]
..@0x804a695: cmp al, 'N'  ; 'N' reply from the user.
..@0x804a697: jz strict near B.code+jmp_operation_cancelled
..@0x804a69d: cmp al, 'n'  ; 'n' reply from the user.
..@0x804a69f: jz strict near B.code+jmp_operation_cancelled
..@0x804a6a5: and eax, strict byte ~0x20  ; Convert to ASCII uppercase.
..@0x804a6a8: cmp al, 'Y'  ; 'Y' or 'y' reply from the user.
..@0x804a6aa: db 0x75, 0xb4  ;; jnz A.code+0x804a660
jmp_do_convert: equ $-B.code
..@0x804a6ac: db 0xa1, 0x48, 0xd2, 0x05, 0x08  ;; mov eax,[0x805d248]
..@0x804a6b1: db 0xc7, 0x04, 0x24, 0x5c, 0xaf, 0x05, 0x08  ;; mov dword [esp],str_fmt_in_first
..@0x804a6b8: db 0xc7, 0x84, 0x24, 0x80, 0x01, 0x00, 0x00, 0x60  ;; mov dword [esp+0x180],0x805d260
..@0x804a6c0: db 0xd2, 0x05, 0x08
..@0x804a6c3: db 0x89, 0x84, 0x24, 0x70, 0x01, 0x00, 0x00  ;; mov [esp+0x170],eax
..@0x804a6ca: db 0xa1, 0x4c, 0xd2, 0x05, 0x08  ;; mov eax,[0x805d24c]
..@0x804a6cf: db 0x89, 0x84, 0x24, 0x74, 0x01, 0x00, 0x00  ;; mov [esp+0x174],eax
..@0x804a6d6: db 0xa1, 0x50, 0xd2, 0x05, 0x08  ;; mov eax,[0x805d250]
..@0x804a6db: db 0x89, 0x84, 0x24, 0x78, 0x01, 0x00, 0x00  ;; mov [esp+0x178],eax
..@0x804a6e2: db 0xa1, 0x54, 0xd2, 0x05, 0x08  ;; mov eax,[0x805d254]
..@0x804a6e7: db 0x89, 0x84, 0x24, 0x7c, 0x01, 0x00, 0x00  ;; mov [esp+0x17c],eax
..@0x804a6ee: db 0x0f, 0xbe, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movsx eax,byte [0x987ca4c]
..@0x804a6f5: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804a6f9: db 0x8d, 0x84, 0x24, 0x98, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x198]
..@0x804a700: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804a704: db 0x89, 0x44, 0x24, 0x74  ;; mov [esp+0x74],eax
..@0x804a708: call B.code+message_printf
..@0x804a70d: db 0x8b, 0x5c, 0x24, 0x68  ;; mov ebx,[esp+0x68]
..@0x804a711: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804a713: db 0x0f, 0x88, 0xd8, 0x03, 0x00, 0x00  ;; js near A.code+0x804aaf1
..@0x804a719: db 0x8b, 0x54, 0x24, 0x68  ;; mov edx,[esp+0x68]
..@0x804a71d: db 0xc7, 0x04, 0x24, 0xdb, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4db
..@0x804a724: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804a728: call B.code+message_printf
..@0x804a72d: db 0x0f, 0xb6, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movzx eax,byte [0x987ca4c]
..@0x804a734: db 0x3c, 0x03  ;; cmp al,0x3
..@0x804a736: db 0x0f, 0x84, 0x3a, 0x03, 0x00, 0x00  ;; jz near A.code+0x804aa76
..@0x804a73c: db 0x84, 0xc0  ;; test al,al
..@0x804a73e: db 0x0f, 0x84, 0x32, 0x03, 0x00, 0x00  ;; jz near A.code+0x804aa76
..@0x804a744: db 0x85, 0xf6  ;; test esi,esi
..@0x804a746: db 0x0f, 0x84, 0xa2, 0x02, 0x00, 0x00  ;; jz near A.code+0x804a9ee
%ifndef FLAG_EXPERIMENT_FFLUSH
..@0x804a74c: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x804a750: db 0xc7, 0x04, 0x24, 0x5d, 0xb1, 0x05, 0x08  ;; mov dword [esp],str_fmt_in_bytes
..@0x804a757: call B.code+message_printf
%else
..@0x804a74c: mov eax, [stdout]
..@0x804a751: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a754: call B.code+fflush  ; fflush(stdout);
..@0x804a759: times 3 nop
;..@0x804a74c: times 0x10 nop
%endif
..@0x804a75c: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804a760: db 0xc7, 0x04, 0x24, 0x88, 0xaf, 0x05, 0x08  ;; mov dword [esp],str_fmt_out
..@0x804a767: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x804a76b: call B.code+message_printf  ; No autoflush in uClibc even at here.
..@0x804a770: db 0xa1, 0x40, 0xca, 0x87, 0x09  ;; mov eax,[0x987ca40]
..@0x804a775: db 0xc7, 0x84, 0x24, 0x28, 0x01, 0x00, 0x00, 0x40  ;; mov dword [esp+0x128],0x987c640
..@0x804a77d: db 0xc6, 0x87, 0x09
..@0x804a780: db 0x89, 0x84, 0x24, 0x2c, 0x01, 0x00, 0x00  ;; mov [esp+0x12c],eax
..@0x804a787: db 0x8b, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x134]
..@0x804a78e: cmp eax, strict byte 0x3
..@0x804a791: db 0x0f, 0x84, 0x3c, 0x03, 0x00, 0x00  ;; jz near A.code+0x804aad3
..@0x804a797: db 0x8b, 0x15, 0x44, 0xca, 0x87, 0x09  ;; mov edx,[0x987ca44]
..@0x804a79d: db 0x85, 0xd2  ;; test edx,edx
..@0x804a79f: db 0x7e, 0x10  ;; jng A.code+0x804a7b1
..@0x804a7a1: db 0x81, 0x3d, 0x24, 0xc6, 0x87, 0x09, 0x78, 0x5e  ;; cmp dword [0x987c624],0x5e78
..@0x804a7a9: db 0x00, 0x00
..@0x804a7ab: db 0x0f, 0x84, 0x3f, 0x05, 0x00, 0x00  ;; jz near A.code+0x804acf0
..@0x804a7b1: db 0x80, 0x7c, 0x24, 0x71, 0x00  ;; cmp byte [esp+0x71],0x0
..@0x804a7b6: db 0x74, 0x50  ;; jz A.code+0x804a808
..@0x804a7b8: db 0x83, 0x7c, 0x24, 0x50, 0x00  ;; cmp dword [esp+0x50],byte +0x0
..@0x804a7bd: db 0x75, 0x07  ;; jnz A.code+0x804a7c6
..@0x804a7bf: db 0x89, 0x94, 0x24, 0x64, 0x01, 0x00, 0x00  ;; mov [esp+0x164],edx
..@0x804a7c6: db 0x85, 0xc0  ;; test eax,eax
..@0x804a7c8: db 0x0f, 0x88, 0x99, 0x05, 0x00, 0x00  ;; js near A.code+0x804ad67
..@0x804a7ce: db 0xba, 0x54, 0x00, 0x00, 0x00  ;; mov edx,0x54
..@0x804a7d3: db 0x0f, 0xa3, 0xc2  ;; bt edx,eax
..@0x804a7d6: db 0x73, 0x07  ;; jnc A.code+0x804a7df
..@0x804a7d8: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x804a7df: db 0x83, 0xbc, 0x24, 0x30, 0x01, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x130],byte +0x0
..@0x804a7e7: db 0x0f, 0x88, 0x43, 0x05, 0x00, 0x00  ;; js near A.code+0x804ad30
..@0x804a7ed: db 0x0f, 0xbe, 0x05, 0x20, 0xc6, 0x87, 0x09  ;; movsx eax,byte [0x987c620]
..@0x804a7f4: db 0x80, 0x3d, 0x4c, 0xca, 0x87, 0x09, 0x03  ;; cmp byte [0x987ca4c],0x3
..@0x804a7fb: db 0x89, 0x84, 0x24, 0x38, 0x01, 0x00, 0x00  ;; mov [esp+0x138],eax
..@0x804a802: db 0x0f, 0x84, 0x0a, 0x05, 0x00, 0x00  ;; jz near A.code+0x804ad12
..@0x804a808: db 0x83, 0x7c, 0x24, 0x58, 0xff  ;; cmp dword [esp+0x58],byte -0x1
..@0x804a80d: db 0x74, 0x0b  ;; jz A.code+0x804a81a
..@0x804a80f: db 0x8b, 0x4c, 0x24, 0x58  ;; mov ecx,[esp+0x58]
..@0x804a813: db 0x89, 0x8c, 0x24, 0x38, 0x01, 0x00, 0x00  ;; mov [esp+0x138],ecx
%ifidn TARGET, ls
  ..@0x804a81a: call B.code+setup_sigint_handler
%else  ; TARGET, ls
  ..@0x804a81a: times 5 nop  ; Use the default SIGINT handler (terminate process).
%endif  ; TARGET, ls
..@0x804a81f: db 0x8d, 0x84, 0x24, 0x10, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x110]
..@0x804a826: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a829: call R.code+0x804ed60
..@0x804a82e: db 0xc7, 0x04, 0x24, 0x49, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_nl
..@0x804a835: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804a837: call B.code+message_printf
..@0x804a83c: db 0x8b, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x80]
..@0x804a843: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x804a845: db 0x3d, 0x89, 0x50, 0x4e, 0x47  ;; cmp eax,0x474e5089
..@0x804a84a: db 0x0f, 0x84, 0xb2, 0x02, 0x00, 0x00  ;; jz near A.code+0x804ab02
..@0x804a850: db 0x3b, 0x9c, 0x24, 0x24, 0x01, 0x00, 0x00  ;; cmp ebx,[esp+0x124]
..@0x804a857: db 0x0f, 0x8e, 0xb3, 0x00, 0x00, 0x00  ;; jng near A.code+0x804a910
..@0x804a85d: db 0x81, 0xfb, 0xff, 0xff, 0xff, 0x7f  ;; cmp ebx,0x7fffffff
..@0x804a863: db 0xc7, 0x44, 0x24, 0x6c, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x3
..@0x804a86b: db 0x74, 0x33  ;; jz A.code+0x804a8a0
..@0x804a86d: db 0x83, 0x7c, 0x24, 0x5c, 0x00  ;; cmp dword [esp+0x5c],byte +0x0
..@0x804a872: db 0x0f, 0x85, 0x98, 0x00, 0x00, 0x00  ;; jnz near A.code+0x804a910
..@0x804a878: db 0x3d, 0x89, 0x50, 0x4e, 0x47  ;; cmp eax,0x474e5089
..@0x804a87d: db 0x0f, 0x84, 0x2b, 0x08, 0x00, 0x00  ;; jz near A.code+0x804b0ae
..@0x804a883: db 0xc7, 0x04, 0x24, 0xa3, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b1a3
..@0x804a88a: call B.code+message_printf
..@0x804a88f: db 0xc7, 0x44, 0x24, 0x6c, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x2
..@0x804a897: db 0x89, 0xf6  ;; mov esi,esi
..@0x804a899: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804a8a0: db 0x8b, 0x84, 0x24, 0x20, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x120]
..@0x804a8a7: db 0x85, 0xc0  ;; test eax,eax
..@0x804a8a9: db 0x74, 0x13  ;; jz A.code+0x804a8be
..@0x804a8ab: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a8ae: call B.code+prog_free
..@0x804a8b3: db 0xc7, 0x84, 0x24, 0x20, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x120],0x0
..@0x804a8bb: db 0x00, 0x00, 0x00
..@0x804a8be: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x804a8c3: db 0x85, 0xc0  ;; test eax,eax
..@0x804a8c5: db 0x74, 0x1c  ;; jz A.code+0x804a8e3
..@0x804a8c7: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a8ca: call B.code+prog_free
..@0x804a8cf: db 0xc7, 0x05, 0x04, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e104],0x0
..@0x804a8d7: db 0x00, 0x00
..@0x804a8d9: db 0xc7, 0x05, 0x00, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e100],0x0
..@0x804a8e1: db 0x00, 0x00
..@0x804a8e3: db 0x8b, 0x84, 0x24, 0x10, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x110]
..@0x804a8ea: db 0x85, 0xc0  ;; test eax,eax
..@0x804a8ec: db 0x0f, 0x85, 0x77, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804aa69
..@0x804a8f2: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804a8f9: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a8fc: call B.code+prog_free
..@0x804a901: db 0x8b, 0x44, 0x24, 0x6c  ;; mov eax,[esp+0x6c]
..@0x804a905: db 0x8d, 0x65, 0xf4  ;; lea esp,[ebp-0xc]
..@0x804a908: pop ebx
..@0x804a909: pop esi
..@0x804a90a: pop edi
..@0x804a90b: pop ebp
..@0x804a90c: ret
..@0x804a90d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804a910: db 0x3d, 0x89, 0x50, 0x4e, 0x47  ;; cmp eax,0x474e5089
..@0x804a915: db 0x0f, 0x84, 0x01, 0x02, 0x00, 0x00  ;; jz near A.code+0x804ab1c
..@0x804a91b: db 0x80, 0x7c, 0x24, 0x73, 0x00  ;; cmp byte [esp+0x73],0x0
..@0x804a920: db 0x0f, 0x84, 0xd9, 0x00, 0x00, 0x00  ;; jz near A.code+0x804a9ff
..@0x804a926: mov eax, [stdout]
..@0x804a92b: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x804a92f: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x804a937: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804a93b: db 0x8b, 0x84, 0x24, 0x20, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x120]
..@0x804a942: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a945: call B.code+fwrite
..@0x804a94a: mov eax, [stdout]
..@0x804a94f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804a952: call B.code+fflush  ; fflush(stdout);
..@0x804a957: db 0xc7, 0x44, 0x24, 0x6c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x0
..@0x804a95f: db 0x85, 0xf6  ;; test esi,esi
..@0x804a961: db 0x0f, 0x84, 0x39, 0xff, 0xff, 0xff  ;; jz near A.code+0x804a8a0
..@0x804a967: db 0xd9, 0xbc, 0x24, 0x8a, 0x00, 0x00, 0x00  ;; fnstcw [esp+0x8a]
..@0x804a96e: db 0x89, 0x9c, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov [esp+0x8c],ebx
..@0x804a975: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804a977: db 0xdb, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; fild dword [esp+0x8c]
..@0x804a97e: db 0x89, 0xb4, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov [esp+0x8c],esi
..@0x804a985: db 0x29, 0xf0  ;; sub eax,esi
..@0x804a987: db 0xd8, 0x0d, 0x40, 0xb2, 0x05, 0x08  ;; fmul dword [0x805b240]
..@0x804a98d: db 0x89, 0xc2  ;; mov edx,eax
..@0x804a98f: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804a993: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x804a996: db 0xc7, 0x04, 0x24, 0xd4, 0xaf, 0x05, 0x08  ;; mov dword [esp],0x805afd4
..@0x804a99d: db 0x89, 0xd1  ;; mov ecx,edx
..@0x804a99f: db 0x31, 0xc1  ;; xor ecx,eax
..@0x804a9a1: db 0x29, 0xd1  ;; sub ecx,edx
..@0x804a9a3: db 0xba, 0x20, 0x00, 0x00, 0x00  ;; mov edx,0x20
..@0x804a9a8: sub ecx, strict byte 0x1
..@0x804a9ab: db 0xb9, 0x73, 0x00, 0x00, 0x00  ;; mov ecx,0x73
..@0x804a9b0: db 0x0f, 0x45, 0xd1  ;; cmovnz edx,ecx
..@0x804a9b3: db 0xdb, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; fild dword [esp+0x8c]
..@0x804a9ba: db 0x0f, 0xb7, 0x8c, 0x24, 0x8a, 0x00, 0x00, 0x00  ;; movzx ecx,word [esp+0x8a]
..@0x804a9c2: db 0xde, 0xf9  ;; fdivp st1
..@0x804a9c4: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x804a9c8: db 0xb5, 0x0c  ;; mov ch,0xc
..@0x804a9ca: db 0x66, 0x89, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov [esp+0x88],cx
..@0x804a9d2: db 0xd9, 0xac, 0x24, 0x88, 0x00, 0x00, 0x00  ;; fldcw [esp+0x88]
..@0x804a9d9: db 0xdb, 0x5c, 0x24, 0x0c  ;; fistp dword [esp+0xc]
..@0x804a9dd: db 0xd9, 0xac, 0x24, 0x8a, 0x00, 0x00, 0x00  ;; fldcw [esp+0x8a]
..@0x804a9e4: call B.code+message_printf
..@0x804a9e9: jmp strict near R.code+0x804a8a0
..@0x804a9ee: db 0xc7, 0x04, 0x24, 0x6d, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b16d
..@0x804a9f5: call B.code+message_printf
..@0x804a9fa: jmp strict near R.code+0x804a75c
..@0x804a9ff: db 0x8b, 0x44, 0x24, 0x7c  ;; mov eax,[esp+0x7c]
..@0x804aa03: db 0xc7, 0x44, 0x24, 0x04, 0x88, 0xb1, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_wb
..@0x804aa0b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804aa0e: call B.code+fopen
..@0x804aa13: db 0x85, 0xc0  ;; test eax,eax
..@0x804aa15: db 0x89, 0xc7  ;; mov edi,eax
..@0x804aa17: db 0x0f, 0x84, 0x67, 0x04, 0x00, 0x00  ;; jz near A.code+0x804ae84
..@0x804aa1d: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804aa21: db 0x8b, 0x84, 0x24, 0x20, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x120]
..@0x804aa28: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x804aa2c: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x804aa34: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804aa37: call B.code+fwrite
..@0x804aa3c: db 0xc7, 0x44, 0x24, 0x6c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x0
..@0x804aa44: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x804aa46: db 0x74, 0x14  ;; jz A.code+0x804aa5c
..@0x804aa48: db 0xc7, 0x04, 0x24, 0x8b, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b18b
..@0x804aa4f: call B.code+message_printf
..@0x804aa54: db 0xc7, 0x44, 0x24, 0x6c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x1
..@0x804aa5c: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x804aa5f: call B.code+fclose
..@0x804aa64: jmp strict near R.code+0x804a95f
..@0x804aa69: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804aa6c: call B.code+prog_free
..@0x804aa71: jmp strict near R.code+0x804a8f2
..@0x804aa76: db 0x0f, 0xbe, 0x05, 0x20, 0xc6, 0x87, 0x09  ;; movsx eax,byte [0x987c620]
..@0x804aa7d: db 0xc7, 0x04, 0x24, 0x3b, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b13b
..@0x804aa84: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804aa88: call B.code+message_printf
..@0x804aa8d: jmp strict near R.code+0x804a744
..@0x804aa92: db 0x83, 0x3d, 0x04, 0xe1, 0x83, 0x09, 0x00  ;; cmp dword [0x983e104],byte +0x0
..@0x804aa99: db 0x0f, 0x85, 0x55, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x804a5f4
..@0x804aa9f: db 0xc7, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0x05  ;; mov dword [esp+0x130],0x5
..@0x804aaa7: db 0x00, 0x00, 0x00
..@0x804aaaa: jmp strict near R.code+0x804a5f4
..@0x804aaaf: db 0x81, 0x78, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [eax+0x4],0xa1a0a0d
..@0x804aab6: db 0x0f, 0x85, 0x93, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x804a54f
..@0x804aabc: db 0x83, 0x7c, 0x24, 0x5c, 0x00  ;; cmp dword [esp+0x5c],byte +0x0
..@0x804aac1: db 0x0f, 0x85, 0x88, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x804a54f
..@0x804aac7: db 0x89, 0xb4, 0x24, 0x24, 0x01, 0x00, 0x00  ;; mov [esp+0x124],esi
..@0x804aace: jmp strict near R.code+0x804a54f
..@0x804aad3: db 0x83, 0xbc, 0x24, 0x3c, 0x01, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x13c],byte +0x0
..@0x804aadb: db 0x0f, 0x85, 0xb6, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x804a797
..@0x804aae1: db 0xc7, 0x84, 0x24, 0x2c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x12c],0x0
..@0x804aae9: db 0x00, 0x00, 0x00
..@0x804aaec: jmp strict near R.code+0x804a797
..@0x804aaf1: db 0xc7, 0x04, 0x24, 0x1a, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b41a
..@0x804aaf8: call B.code+message_printf
..@0x804aafd: jmp strict near R.code+0x804a72d
..@0x804ab02: db 0x81, 0x7a, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [edx+0x4],0xa1a0a0d
..@0x804ab09: db 0x0f, 0x85, 0x41, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x804a850
..@0x804ab0f: db 0x39, 0xde  ;; cmp esi,ebx
..@0x804ab11: db 0x0f, 0x8f, 0x04, 0xfe, 0xff, 0xff  ;; jg near A.code+0x804a91b
..@0x804ab17: jmp strict near R.code+0x804a85d
..@0x804ab1c: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804ab23: db 0x81, 0x78, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [eax+0x4],0xa1a0a0d
..@0x804ab2a: db 0x0f, 0x85, 0xeb, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x804a91b
..@0x804ab30: db 0x39, 0xde  ;; cmp esi,ebx
..@0x804ab32: db 0x0f, 0x8f, 0xe3, 0xfd, 0xff, 0xff  ;; jg near A.code+0x804a91b
..@0x804ab38: db 0x83, 0x7c, 0x24, 0x78, 0xff  ;; cmp dword [esp+0x78],byte -0x1
..@0x804ab3d: db 0x0f, 0x85, 0xd8, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x804a91b
..@0x804ab43: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804ab47: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804ab4b: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804ab4f: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804ab52: call B.code+strcasecmp
..@0x804ab57: db 0x0b, 0x44, 0x24, 0x5c  ;; or eax,[esp+0x5c]
..@0x804ab5b: db 0x0f, 0x85, 0xba, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x804a91b
..@0x804ab61: jmp strict near R.code+0x804a883
..@0x804ab66: db 0x81, 0x78, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [eax+0x4],0xa1a0a0d
..@0x804ab6d: db 0x0f, 0x85, 0x5d, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x804a5d0
..@0x804ab73: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804ab78: db 0x0f, 0x85, 0x36, 0x04, 0x00, 0x00  ;; jnz near A.code+0x804afb4
..@0x804ab7e: db 0x8b, 0x54, 0x24, 0x4c  ;; mov edx,[esp+0x4c]
..@0x804ab82: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x804ab86: db 0x8b, 0x9c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x80]
..@0x804ab8d: db 0xc7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x40],0x0
..@0x804ab95: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804ab9c: db 0xc7, 0x44, 0x24, 0x44, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x0
..@0x804aba4: db 0xf7, 0xd2  ;; not edx
..@0x804aba6: add ebx, strict byte 0x8
..@0x804aba9: db 0xc1, 0xea, 0x1f  ;; shr edx,byte 0x1f
..@0x804abac: db 0x01, 0xf0  ;; add eax,esi
..@0x804abae: db 0x89, 0x54, 0x24, 0x3c  ;; mov [esp+0x3c],edx
..@0x804abb2: db 0x89, 0xde  ;; mov esi,ebx
..@0x804abb4: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x804abb8: db 0x3b, 0x74, 0x24, 0x48  ;; cmp esi,[esp+0x48]
..@0x804abbc: db 0x0f, 0x83, 0x5d, 0x03, 0x00, 0x00  ;; jnc near A.code+0x804af1f
..@0x804abc2: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x804abc4: db 0x8b, 0x5e, 0x04  ;; mov ebx,[esi+0x4]
..@0x804abc7: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804abc9: db 0x89, 0xc2  ;; mov edx,eax
..@0x804abcb: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x804abce: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x804abd1: db 0x01, 0xd1  ;; add ecx,edx
..@0x804abd3: db 0x89, 0xc2  ;; mov edx,eax
..@0x804abd5: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804abda: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804abdd: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804abe0: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804abe6: db 0x01, 0xca  ;; add edx,ecx
..@0x804abe8: db 0x01, 0xd0  ;; add eax,edx
..@0x804abea: db 0x81, 0xfb, 0x49, 0x48, 0x44, 0x52  ;; cmp ebx,0x52444849
..@0x804abf0: db 0x89, 0x44, 0x24, 0x64  ;; mov [esp+0x64],eax
..@0x804abf4: db 0x0f, 0x84, 0x08, 0x01, 0x00, 0x00  ;; jz near A.code+0x804ad02
..@0x804abfa: db 0x81, 0xfb, 0x50, 0x4c, 0x54, 0x45  ;; cmp ebx,0x45544c50
..@0x804ac00: db 0x0f, 0x84, 0xf3, 0x08, 0x00, 0x00  ;; jz near A.code+0x804b4f9
..@0x804ac06: db 0x81, 0xfb, 0x74, 0x52, 0x4e, 0x53  ;; cmp ebx,0x534e5274
..@0x804ac0c: db 0x0f, 0x84, 0x87, 0x01, 0x00, 0x00  ;; jz near A.code+0x804ad99
..@0x804ac12: db 0x81, 0xfb, 0x49, 0x44, 0x41, 0x54  ;; cmp ebx,0x54414449
..@0x804ac18: db 0x0f, 0x84, 0x56, 0x02, 0x00, 0x00  ;; jz near A.code+0x804ae74
..@0x804ac1e: db 0x81, 0xfb, 0x49, 0x45, 0x4e, 0x44  ;; cmp ebx,0x444e4549
..@0x804ac24: db 0x0f, 0x84, 0x1a, 0x03, 0x00, 0x00  ;; jz near A.code+0x804af44
..@0x804ac2a: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804ac2e: db 0x0f, 0xb6, 0x02  ;; movzx eax,byte [edx]
..@0x804ac31: db 0x31, 0xd2  ;; xor edx,edx
..@0x804ac33: db 0x84, 0xc0  ;; test al,al
..@0x804ac35: db 0x0f, 0x85, 0x6a, 0x02, 0x00, 0x00  ;; jnz near A.code+0x804aea5
..@0x804ac3b: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804ac40: db 0x0f, 0x84, 0x91, 0x00, 0x00, 0x00  ;; jz near A.code+0x804acd7
..@0x804ac46: cmp edx, strict byte -0x1
..@0x804ac49: db 0x0f, 0x84, 0x65, 0x01, 0x00, 0x00  ;; jz near A.code+0x804adb4
..@0x804ac4f: db 0x85, 0xd2  ;; test edx,edx
..@0x804ac51: db 0x0f, 0x85, 0x31, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804ad88
..@0x804ac57: db 0xc7, 0x04, 0x24, 0xfb, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0fb
..@0x804ac5e: call B.code+message_printf
..@0x804ac63: db 0x8b, 0x54, 0x24, 0x64  ;; mov edx,[esp+0x64]
..@0x804ac67: db 0x8b, 0x44, 0x16, 0x08  ;; mov eax,[esi+edx+0x8]
..@0x804ac6b: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x804ac6f: db 0xc7, 0x04, 0x24, 0x1d, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b11d
..@0x804ac76: db 0x89, 0xc7  ;; mov edi,eax
..@0x804ac78: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804ac7a: db 0xc1, 0xe1, 0x18  ;; shl ecx,byte 0x18
..@0x804ac7d: db 0xc1, 0xef, 0x18  ;; shr edi,byte 0x18
..@0x804ac80: db 0x01, 0xcf  ;; add edi,ecx
..@0x804ac82: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804ac84: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804ac89: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x804ac8c: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804ac8f: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x804ac95: db 0x01, 0xf9  ;; add ecx,edi
..@0x804ac97: db 0x01, 0xc8  ;; add eax,ecx
..@0x804ac99: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804ac9d: db 0x89, 0xf0  ;; mov eax,esi
..@0x804ac9f: db 0x2b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; sub eax,[esp+0x80]
..@0x804aca6: add eax, strict byte 0x8
..@0x804aca9: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x804acad: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804acaf: db 0xc1, 0xe8, 0x18  ;; shr eax,byte 0x18
..@0x804acb2: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x804acb6: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804acb8: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804acbb: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804acc0: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804acc4: db 0x0f, 0xb6, 0xc7  ;; movzx eax,bh
..@0x804acc7: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804accb: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x804acce: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804acd2: call B.code+message_printf
..@0x804acd7: db 0x81, 0xfb, 0x49, 0x45, 0x4e, 0x44  ;; cmp ebx,0x444e4549
..@0x804acdd: db 0x0f, 0x84, 0x3c, 0x02, 0x00, 0x00  ;; jz near A.code+0x804af1f
..@0x804ace3: db 0x8b, 0x54, 0x24, 0x64  ;; mov edx,[esp+0x64]
..@0x804ace7: db 0x8d, 0x74, 0x16, 0x0c  ;; lea esi,[esi+edx+0xc]
..@0x804aceb: jmp strict near R.code+0x804abb8
..@0x804acf0: db 0x83, 0x3d, 0x54, 0xd2, 0x05, 0x08, 0x00  ;; cmp dword [0x805d254],byte +0x0
..@0x804acf7: db 0x0f, 0x84, 0xbb, 0xfa, 0xff, 0xff  ;; jz near A.code+0x804a7b8
..@0x804acfd: jmp strict near R.code+0x804a7b1
..@0x804ad02: db 0xc7, 0x44, 0x24, 0x44, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x1
..@0x804ad0a: or edx, strict byte -0x1
..@0x804ad0d: jmp strict near R.code+0x804ac3b
..@0x804ad12: db 0x83, 0xbc, 0x24, 0x34, 0x01, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x134],byte +0x0
..@0x804ad1a: db 0x0f, 0x85, 0xe8, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x804a808
..@0x804ad20: db 0xc7, 0x84, 0x24, 0x38, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x138],0x0
..@0x804ad28: db 0x00, 0x00, 0x00
..@0x804ad2b: jmp strict near R.code+0x804a808
..@0x804ad30: db 0x83, 0x7c, 0x24, 0x68, 0x00  ;; cmp dword [esp+0x68],byte +0x0
..@0x804ad35: db 0x78, 0x14  ;; js A.code+0x804ad4b
..@0x804ad37: db 0x0f, 0xbe, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movsx eax,byte [0x987ca4c]
..@0x804ad3e: db 0x3b, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00  ;; cmp eax,[esp+0x134]
..@0x804ad45: db 0x0f, 0x84, 0x0e, 0x04, 0x00, 0x00  ;; jz near A.code+0x804b159
..@0x804ad4b: db 0x31, 0xc0  ;; xor eax,eax
..@0x804ad4d: db 0x83, 0xbc, 0x24, 0x34, 0x01, 0x00, 0x00, 0x03  ;; cmp dword [esp+0x134],byte +0x3
..@0x804ad55: db 0x0f, 0x95, 0xc0  ;; setnz al
..@0x804ad58: db 0x8d, 0x04, 0x80  ;; lea eax,[eax+eax*4]
..@0x804ad5b: db 0x89, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00  ;; mov [esp+0x130],eax
..@0x804ad62: jmp strict near R.code+0x804a7ed
..@0x804ad67: db 0x0f, 0xbe, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movsx eax,byte [0x987ca4c]
..@0x804ad6e: db 0x89, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00  ;; mov [esp+0x134],eax
..@0x804ad75: jmp strict near R.code+0x804a7df
..@0x804ad7a: db 0x0f, 0xbe, 0x54, 0x24, 0x74  ;; movsx edx,byte [esp+0x74]
..@0x804ad7f: db 0x89, 0x54, 0x24, 0x68  ;; mov [esp+0x68],edx
..@0x804ad83: jmp strict near R.code+0x804a53c
..@0x804ad88: db 0xc7, 0x04, 0x24, 0x0c, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b10c
..@0x804ad8f: call B.code+message_printf
..@0x804ad94: jmp strict near R.code+0x804ac63
..@0x804ad99: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804ad9e: db 0x0f, 0x84, 0x3f, 0xff, 0xff, 0xff  ;; jz near A.code+0x804ace3
..@0x804ada4: db 0x8b, 0x44, 0x24, 0x4c  ;; mov eax,[esp+0x4c]
..@0x804ada8: and eax, strict byte -0x3
..@0x804adab: cmp eax, strict byte 0x4
..@0x804adae: db 0x0f, 0x84, 0xa3, 0xfe, 0xff, 0xff  ;; jz near A.code+0x804ac57
..@0x804adb4: db 0xc7, 0x04, 0x24, 0xea, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0ea
..@0x804adbb: call B.code+message_printf
..@0x804adc0: jmp strict near R.code+0x804ac63
..@0x804adc5: db 0x8b, 0x74, 0x24, 0x74  ;; mov esi,[esp+0x74]
..@0x804adc9: db 0xc7, 0x44, 0x24, 0x04, 0x2e, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x2e
..@0x804add1: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804add4: call B.code+strchr
..@0x804add9: db 0x85, 0xc0  ;; test eax,eax
..@0x804addb: db 0x0f, 0x84, 0x0c, 0x04, 0x00, 0x00  ;; jz near A.code+0x804b1ed
..@0x804ade1: db 0x8b, 0x44, 0x24, 0x74  ;; mov eax,[esp+0x74]
..@0x804ade5: db 0xc7, 0x04, 0x24, 0xbf, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0bf
..@0x804adec: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804adf0: call B.code+message_printf
..@0x804adf5: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804adfc: call B.code+exit
..@0x804ae01: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804ae05: db 0xc7, 0x44, 0x24, 0x04, 0x7b, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b07b
..@0x804ae0d: db 0x8b, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x80]
..@0x804ae14: db 0x8d, 0x74, 0x11, 0xfc  ;; lea esi,[ecx+edx-0x4]
..@0x804ae18: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804ae1b: call B.code+strcasecmp
..@0x804ae20: db 0x85, 0xc0  ;; test eax,eax
..@0x804ae22: db 0x0f, 0x84, 0x24, 0x01, 0x00, 0x00  ;; jz near A.code+0x804af4c
..@0x804ae28: db 0x83, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00, 0x04  ;; cmp dword [esp+0x80],byte +0x4
..@0x804ae30: db 0x0f, 0x84, 0xbb, 0x01, 0x00, 0x00  ;; jz near A.code+0x804aff1
..@0x804ae36: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804ae3a: db 0xc7, 0x44, 0x24, 0x04, 0x80, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b080
..@0x804ae42: db 0x8b, 0x94, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x80]
..@0x804ae49: db 0x8d, 0x7c, 0x11, 0xfb  ;; lea edi,[ecx+edx-0x5]
..@0x804ae4d: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x804ae50: call B.code+strcasecmp
..@0x804ae55: db 0x85, 0xc0  ;; test eax,eax
..@0x804ae57: db 0x0f, 0x85, 0x94, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804aff1
..@0x804ae5d: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804ae5f: db 0x0f, 0x85, 0x79, 0x03, 0x00, 0x00  ;; jnz near A.code+0x804b1de
..@0x804ae65: db 0xc7, 0x07, 0x2e, 0x50, 0x4e, 0x47  ;; mov dword [edi],0x474e502e
..@0x804ae6b: db 0xc6, 0x47, 0x04, 0x00  ;; mov byte [edi+0x4],0x0
..@0x804ae6f: jmp strict near R.code+0x804af54
..@0x804ae74: db 0xc7, 0x44, 0x24, 0x44, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x3
..@0x804ae7c: or edx, strict byte -0x1
..@0x804ae7f: jmp strict near R.code+0x804ac3b
..@0x804ae84: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804ae88: db 0xc7, 0x04, 0x24, 0xac, 0xaf, 0x05, 0x08  ;; mov dword [esp],0x805afac
..@0x804ae8f: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804ae93: call B.code+message_printf
..@0x804ae98: db 0xc7, 0x44, 0x24, 0x6c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x1
..@0x804aea0: jmp strict near R.code+0x804a95f
..@0x804aea5: db 0x3c, 0x31  ;; cmp al,0x31
..@0x804aea7: db 0x0f, 0x84, 0xba, 0x00, 0x00, 0x00  ;; jz near A.code+0x804af67
..@0x804aead: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804aeb1: db 0xc7, 0x44, 0x24, 0x04, 0xe4, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b0e4
..@0x804aeb9: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804aebc: call B.code+strcasecmp
..@0x804aec1: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x804aec5: db 0x85, 0xc0  ;; test eax,eax
..@0x804aec7: db 0x0f, 0x85, 0x43, 0x04, 0x00, 0x00  ;; jnz near A.code+0x804b310
..@0x804aecd: db 0x85, 0xd2  ;; test edx,edx
..@0x804aecf: db 0x0f, 0x84, 0x66, 0xfd, 0xff, 0xff  ;; jz near A.code+0x804ac3b
..@0x804aed5: db 0xa1, 0x54, 0xd2, 0x05, 0x08  ;; mov eax,[0x805d254]
..@0x804aeda: db 0x3d, 0xff, 0x00, 0x00, 0x00  ;; cmp eax,0xff
..@0x804aedf: db 0x0f, 0x8f, 0x56, 0xfd, 0xff, 0xff  ;; jg near A.code+0x804ac3b
..@0x804aee5: db 0x81, 0xfb, 0x62, 0x4b, 0x47, 0x44  ;; cmp ebx,0x44474b62
..@0x804aeeb: db 0xb9, 0x01, 0x00, 0x00, 0x00  ;; mov ecx,0x1
..@0x804aef0: db 0x89, 0x34, 0x85, 0x60, 0xd2, 0x05, 0x08  ;; mov [eax*4+0x805d260],esi
..@0x804aef7: db 0x0f, 0x45, 0x4c, 0x24, 0x40  ;; cmovnz ecx,[esp+0x40]
..@0x804aefc: cmp edx, strict byte 0x1
..@0x804aeff: db 0x89, 0x4c, 0x24, 0x40  ;; mov [esp+0x40],ecx
..@0x804af03: db 0x0f, 0x84, 0x60, 0x02, 0x00, 0x00  ;; jz near A.code+0x804b169
..@0x804af09: cmp edx, strict byte 0x2
..@0x804af0c: db 0x0f, 0x84, 0x5e, 0x02, 0x00, 0x00  ;; jz near A.code+0x804b170
..@0x804af12: add eax, strict byte 0x1
..@0x804af15: db 0xa3, 0x54, 0xd2, 0x05, 0x08  ;; mov [0x805d254],eax
..@0x804af1a: jmp strict near R.code+0x804ac3b
..@0x804af1f: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804af24: db 0x8b, 0x74, 0x24, 0x38  ;; mov esi,[esp+0x38]
..@0x804af28: db 0x75, 0x79  ;; jnz A.code+0x804afa3
..@0x804af2a: db 0x83, 0x7c, 0x24, 0x40, 0x00  ;; cmp dword [esp+0x40],byte +0x0
..@0x804af2f: db 0x0f, 0x84, 0x9b, 0xf6, 0xff, 0xff  ;; jz near A.code+0x804a5d0
..@0x804af35: db 0x81, 0x0d, 0x48, 0xca, 0x87, 0x09, 0x00, 0x00  ;; or dword [0x987ca48],0xff000000
..@0x804af3d: db 0x00, 0xff
..@0x804af3f: jmp strict near R.code+0x804a5da
..@0x804af44: or edx, strict byte -0x1
..@0x804af47: jmp strict near R.code+0x804ac3b
..@0x804af4c: db 0xc7, 0x44, 0x24, 0x54, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x54],0x1
..@0x804af54: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x804af5b: jmp strict near R.code+0x804a3a3
..@0x804af60: db 0x31, 0xc0  ;; xor eax,eax
..@0x804af62: jmp strict near R.code+0x804a303
..@0x804af67: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804af6b: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x804af6f: db 0x80, 0x79, 0x01, 0x00  ;; cmp byte [ecx+0x1],0x0
..@0x804af73: db 0x0f, 0x84, 0x54, 0xff, 0xff, 0xff  ;; jz near A.code+0x804aecd
..@0x804af79: jmp strict near R.code+0x804aead
..@0x804af7e: db 0x80, 0x7a, 0x03, 0x00  ;; cmp byte [edx+0x3],0x0
..@0x804af82: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804af87: db 0x0f, 0xb6, 0x4c, 0x24, 0x71  ;; movzx ecx,byte [esp+0x71]
..@0x804af8c: db 0x8b, 0x54, 0x24, 0x60  ;; mov edx,[esp+0x60]
..@0x804af90: db 0x0f, 0x44, 0xc8  ;; cmovz ecx,eax
..@0x804af93: db 0x0f, 0x45, 0xd7  ;; cmovnz edx,edi
..@0x804af96: db 0x88, 0x4c, 0x24, 0x71  ;; mov [esp+0x71],cl
..@0x804af9a: db 0x89, 0x54, 0x24, 0x60  ;; mov [esp+0x60],edx
..@0x804af9e: jmp strict near R.code+0x8049ab9
..@0x804afa3: db 0xc7, 0x04, 0x24, 0x49, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_nl
..@0x804afaa: call B.code+message_printf
..@0x804afaf: jmp strict near R.code+0x804af2a
..@0x804afb4: db 0xc7, 0x04, 0x24, 0xac, 0xae, 0x05, 0x08  ;; mov dword [esp],0x805aeac
..@0x804afbb: call B.code+message_printf
..@0x804afc0: jmp strict near R.code+0x804ab7e
..@0x804afc5: db 0xc7, 0x00, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [eax],0x676e702e
..@0x804afcb: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804afcf: db 0xeb, 0x83  ;; jmp short A.code+0x804af54
..@0x804afd1: db 0xc7, 0x84, 0x24, 0x30, 0x01, 0x00, 0x00, 0xff  ;; mov dword [esp+0x130],0xffffffff
..@0x804afd9: db 0xff, 0xff, 0xff
..@0x804afdc: jmp strict near R.code+0x804a230
..@0x804afe1: db 0xc7, 0x84, 0x24, 0x34, 0x01, 0x00, 0x00, 0xff  ;; mov dword [esp+0x134],0xffffffff
..@0x804afe9: db 0xff, 0xff, 0xff
..@0x804afec: jmp strict near R.code+0x804a139
..@0x804aff1: db 0xc7, 0x44, 0x24, 0x04, 0x86, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b086
..@0x804aff9: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804affc: call B.code+strcasecmp
..@0x804b001: db 0x85, 0xc0  ;; test eax,eax
..@0x804b003: db 0x0f, 0x84, 0x3d, 0x01, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b009: db 0xc7, 0x44, 0x24, 0x04, 0x8b, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b08b
..@0x804b011: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b014: call B.code+strcasecmp
..@0x804b019: db 0x85, 0xc0  ;; test eax,eax
..@0x804b01b: db 0x0f, 0x84, 0x25, 0x01, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b021: db 0xc7, 0x44, 0x24, 0x04, 0x90, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b090
..@0x804b029: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b02c: call B.code+strcasecmp
..@0x804b031: db 0x85, 0xc0  ;; test eax,eax
..@0x804b033: db 0x0f, 0x84, 0x0d, 0x01, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b039: db 0xc7, 0x44, 0x24, 0x04, 0x95, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b095
..@0x804b041: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b044: call B.code+strcasecmp
..@0x804b049: db 0x85, 0xc0  ;; test eax,eax
..@0x804b04b: db 0x0f, 0x84, 0xf5, 0x00, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b051: db 0xc7, 0x44, 0x24, 0x04, 0x9a, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b09a
..@0x804b059: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b05c: call B.code+strcasecmp
..@0x804b061: db 0x85, 0xc0  ;; test eax,eax
..@0x804b063: db 0x0f, 0x84, 0xdd, 0x00, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b069: db 0xc7, 0x44, 0x24, 0x04, 0x9f, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],0x805b09f
..@0x804b071: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b074: call B.code+strcasecmp
..@0x804b079: db 0x85, 0xc0  ;; test eax,eax
..@0x804b07b: db 0x0f, 0x84, 0xc5, 0x00, 0x00, 0x00  ;; jz near A.code+0x804b146
..@0x804b081: db 0x81, 0xbc, 0x24, 0x80, 0x00, 0x00, 0x00, 0xff  ;; cmp dword [esp+0x80],0xff
..@0x804b089: db 0x00, 0x00, 0x00
..@0x804b08c: db 0x0f, 0x8f, 0xc2, 0xfe, 0xff, 0xff  ;; jg near A.code+0x804af54
..@0x804b092: jmp strict near R.code+0x804a00f
..@0x804b097: and edx, strict byte -0x9
..@0x804b09a: cmp edx, strict byte 0x1
..@0x804b09d: db 0x19, 0xd2  ;; sbb edx,edx
..@0x804b09f: and edx, strict byte -0x2
..@0x804b0a2: add edx, strict byte 0x5
..@0x804b0a5: db 0x89, 0x54, 0x24, 0x68  ;; mov [esp+0x68],edx
..@0x804b0a9: jmp strict near R.code+0x804a53c
..@0x804b0ae: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804b0b5: db 0x81, 0x78, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [eax+0x4],0xa1a0a0d
..@0x804b0bc: db 0x0f, 0x85, 0xc1, 0xf7, 0xff, 0xff  ;; jnz near A.code+0x804a883
..@0x804b0c2: db 0x83, 0x7c, 0x24, 0x78, 0xff  ;; cmp dword [esp+0x78],byte -0x1
..@0x804b0c7: db 0x0f, 0x84, 0xb6, 0xf7, 0xff, 0xff  ;; jz near A.code+0x804a883
..@0x804b0cd: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804b0d1: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x804b0d5: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804b0d9: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804b0dc: call B.code+strcasecmp
..@0x804b0e1: db 0x85, 0xc0  ;; test eax,eax
..@0x804b0e3: db 0x0f, 0x84, 0x9a, 0xf7, 0xff, 0xff  ;; jz near A.code+0x804a883
..@0x804b0e9: db 0x85, 0xf6  ;; test esi,esi
..@0x804b0eb: db 0x0f, 0x84, 0x92, 0xf7, 0xff, 0xff  ;; jz near A.code+0x804a883
..@0x804b0f1: db 0x80, 0x7c, 0x24, 0x73, 0x00  ;; cmp byte [esp+0x73],0x0
..@0x804b0f6: db 0x0f, 0x84, 0xe7, 0x02, 0x00, 0x00  ;; jz near A.code+0x804b3e3
..@0x804b0fc: mov eax, [stdout]
..@0x804b101: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x804b105: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x804b10d: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804b111: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804b118: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b11b: call B.code+fwrite
..@0x804b120: mov eax, [stdout]
..@0x804b125: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b128: call B.code+fflush  ; fflush(stdout);
..@0x804b12d: db 0xc7, 0x04, 0x24, 0xfc, 0xaf, 0x05, 0x08  ;; mov dword [esp],0x805affc
..@0x804b134: call B.code+message_printf
..@0x804b139: db 0xc7, 0x44, 0x24, 0x6c, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x2
..@0x804b141: jmp strict near R.code+0x804a8a0
..@0x804b146: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804b148: db 0x75, 0x6d  ;; jnz A.code+0x804b1b7
..@0x804b14a: db 0xc7, 0x06, 0x2e, 0x50, 0x4e, 0x47  ;; mov dword [esi],0x474e502e
..@0x804b150: db 0xc6, 0x46, 0x04, 0x00  ;; mov byte [esi+0x4],0x0
..@0x804b154: jmp strict near R.code+0x804af54
..@0x804b159: db 0x8b, 0x54, 0x24, 0x68  ;; mov edx,[esp+0x68]
..@0x804b15d: db 0x89, 0x94, 0x24, 0x30, 0x01, 0x00, 0x00  ;; mov [esp+0x130],edx
..@0x804b164: jmp strict near R.code+0x804a7ed
..@0x804b169: db 0x83, 0x05, 0x4c, 0xd2, 0x05, 0x08, 0x01  ;; add dword [0x805d24c],byte +0x1
..@0x804b170: db 0x83, 0x05, 0x50, 0xd2, 0x05, 0x08, 0x01  ;; add dword [0x805d250],byte +0x1
..@0x804b177: jmp strict near R.code+0x804af12
..@0x804b17c: db 0xd9, 0xe0  ;; fchs
..@0x804b17e: db 0xc7, 0x44, 0x24, 0x50, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x1
..@0x804b186: db 0xdd, 0x9c, 0x24, 0x68, 0x01, 0x00, 0x00  ;; fstp qword [esp+0x168]
..@0x804b18d: db 0xc7, 0x84, 0x24, 0x5c, 0x01, 0x00, 0x00, 0x03  ;; mov dword [esp+0x15c],0x3
..@0x804b195: db 0x00, 0x00, 0x00
..@0x804b198: jmp strict near R.code+0x8049ab9
..@0x804b19d: db 0x80, 0x7a, 0x03, 0x00  ;; cmp byte [edx+0x3],0x0
..@0x804b1a1: db 0x0f, 0x85, 0x43, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804b2ea
..@0x804b1a7: db 0xc7, 0x84, 0x24, 0x3c, 0x01, 0x00, 0x00, 0x01  ;; mov dword [esp+0x13c],0x1
..@0x804b1af: db 0x00, 0x00, 0x00
..@0x804b1b2: jmp strict near R.code+0x8049ab9
..@0x804b1b7: db 0xc7, 0x06, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [esi],0x676e702e
..@0x804b1bd: db 0xc6, 0x46, 0x04, 0x00  ;; mov byte [esi+0x4],0x0
..@0x804b1c1: jmp strict near R.code+0x804af54
jmp_operation_cancelled: equ $-B.code:  ; This happens when the user replies no to the `Overwrite?' prompt: printf(str_message_operation_cancelled_nl);  exit(1).
%ifidn TARGET, ls
..@0x804b1c6: db 0xc7, 0x04, 0x24
              dd str_message_operation_cancelled  ;; mov dword [esp],str_message_operation_cancelled
..@0x804b1cd: call B.code+puts
%else  ; TARGET, ls
..@0x804b1c6: db 0xc7, 0x04, 0x24
              dd str_message_operation_cancelled_nl  ;; mov dword [esp],str_message_operation_cancelled_nl
..@0x804b1cd: call B.code+maybe_prog_printf
%endif  ; TARGGET, ls
..@0x804b1d2: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b1d9: call B.code+exit  ; It doesn't return.
..@0x804b1de: db 0xc7, 0x07, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [edi],0x676e702e
..@0x804b1e4: db 0xc6, 0x47, 0x04, 0x00  ;; mov byte [edi+0x4],0x0
..@0x804b1e8: jmp strict near R.code+0x804af54
..@0x804b1ed: db 0x8b, 0x7c, 0x24, 0x74  ;; mov edi,[esp+0x74]
..@0x804b1f1: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b1f3: or ecx, strict byte -0x1
..@0x804b1f6: db 0xf2, 0xae  ;; repne scasb
..@0x804b1f8: db 0xf7, 0xd1  ;; not ecx
..@0x804b1fa: db 0x8d, 0x41, 0xff  ;; lea eax,[ecx-0x1]
..@0x804b1fd: add ecx, strict byte 0x3
..@0x804b200: db 0x81, 0xf9, 0x03, 0x01, 0x00, 0x00  ;; cmp ecx,0x103
..@0x804b206: db 0x0f, 0x87, 0xd5, 0xfb, 0xff, 0xff  ;; ja near A.code+0x804ade1
..@0x804b20c: db 0x03, 0x44, 0x24, 0x74  ;; add eax,[esp+0x74]
..@0x804b210: db 0xc7, 0x00, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [eax],0x676e702e
..@0x804b216: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804b21a: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804b21e: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x804b226: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804b229: call B.code+fopen
..@0x804b22e: db 0x85, 0xc0  ;; test eax,eax
..@0x804b230: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x804b234: db 0x0f, 0x84, 0xa7, 0xfb, 0xff, 0xff  ;; jz near A.code+0x804ade1
..@0x804b23a: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804b23e: db 0x8b, 0x74, 0x24, 0x74  ;; mov esi,[esp+0x74]
..@0x804b242: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x804b246: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x804b249: call B.code+strcasecmp
..@0x804b24e: db 0x85, 0xc0  ;; test eax,eax
..@0x804b250: db 0x0f, 0x85, 0x6d, 0xf1, 0xff, 0xff  ;; jnz near A.code+0x804a3c3
..@0x804b256: db 0x0f, 0xb6, 0x84, 0x24, 0x9c, 0x02, 0x00, 0x00  ;; movzx eax,byte [esp+0x29c]
..@0x804b25e: db 0x84, 0xc0  ;; test al,al
..@0x804b260: db 0x74, 0x42  ;; jz A.code+0x804b2a4
..@0x804b262: db 0x8d, 0x8c, 0x24, 0x9d, 0x02, 0x00, 0x00  ;; lea ecx,[esp+0x29d]
..@0x804b269: db 0x31, 0xd2  ;; xor edx,edx
..@0x804b26b: db 0x31, 0xf6  ;; xor esi,esi
..@0x804b26d: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x804b272: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804b278: db 0x8d, 0x78, 0xbf  ;; lea edi,[eax-0x41]
..@0x804b27b: db 0x81, 0xe7, 0xff, 0x00, 0x00, 0x00  ;; and edi,0xff
..@0x804b281: cmp edi, strict byte 0x19
..@0x804b284: db 0x0f, 0x4e, 0xd6  ;; cmovng edx,esi
..@0x804b287: sub eax, strict byte 0x61
..@0x804b28a: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804b28f: cmp eax, strict byte 0x19
..@0x804b292: db 0x0f, 0x4e, 0xd3  ;; cmovng edx,ebx
..@0x804b295: add ecx, strict byte 0x1
..@0x804b298: db 0x0f, 0xb6, 0x41, 0xff  ;; movzx eax,byte [ecx-0x1]
..@0x804b29c: db 0x84, 0xc0  ;; test al,al
..@0x804b29e: db 0x75, 0xd8  ;; jnz A.code+0x804b278
..@0x804b2a0: db 0x85, 0xd2  ;; test edx,edx
..@0x804b2a2: db 0x75, 0x24  ;; jnz A.code+0x804b2c8
..@0x804b2a4: db 0x8b, 0x7c, 0x24, 0x7c  ;; mov edi,[esp+0x7c]
..@0x804b2a8: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b2aa: or ecx, strict byte -0x1
..@0x804b2ad: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804b2b1: db 0xf2, 0xae  ;; repne scasb
..@0x804b2b3: db 0xf7, 0xd1  ;; not ecx
..@0x804b2b5: db 0x8d, 0x44, 0x0a, 0xfb  ;; lea eax,[edx+ecx-0x5]
..@0x804b2b9: db 0xc7, 0x00, 0x2e, 0x50, 0x4e, 0x47  ;; mov dword [eax],0x474e502e
..@0x804b2bf: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804b2c3: jmp strict near R.code+0x804a3c3
..@0x804b2c8: db 0x8b, 0x7c, 0x24, 0x7c  ;; mov edi,[esp+0x7c]
..@0x804b2cc: or ecx, strict byte -0x1
..@0x804b2cf: db 0x8b, 0x74, 0x24, 0x7c  ;; mov esi,[esp+0x7c]
..@0x804b2d3: db 0xf2, 0xae  ;; repne scasb
..@0x804b2d5: db 0xf7, 0xd1  ;; not ecx
..@0x804b2d7: db 0x8d, 0x44, 0x0e, 0xfb  ;; lea eax,[esi+ecx-0x5]
..@0x804b2db: db 0xc7, 0x00, 0x2e, 0x70, 0x6e, 0x67  ;; mov dword [eax],0x676e702e
..@0x804b2e1: db 0xc6, 0x40, 0x04, 0x00  ;; mov byte [eax+0x4],0x0
..@0x804b2e5: jmp strict near R.code+0x804a3c3
..@0x804b2ea: db 0x89, 0x7c, 0x24, 0x60  ;; mov [esp+0x60],edi
..@0x804b2ee: jmp strict near R.code+0x8049ab9
..@0x804b2f3: db 0xc7, 0x04, 0x24, 0x34, 0xae, 0x05, 0x08  ;; mov dword [esp],0x805ae34
..@0x804b2fa: call B.code+message_printf
jmp_print_help_and_exit: equ $-B.code  ; This is done with argc==1.
..@0x804b2ff: call B.code+print_help  ; This is called without argument.
jmp_exit1_after_printing_help: equ $-B.code
..@0x804b304: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b30b: call B.code+exit
..@0x804b310: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804b314: db 0xc7, 0x44, 0x24, 0x04, 0xe8, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_comma  ; Delimiters for strtok: just a ','.
..@0x804b31c: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804b31f: call B.code+strtok
..@0x804b324: db 0x31, 0xd2  ;; xor edx,edx
..@0x804b326: db 0x89, 0x74, 0x24, 0x34  ;; mov [esp+0x34],esi
..@0x804b32a: db 0x89, 0xd6  ;; mov esi,edx
..@0x804b32c: db 0x89, 0xc2  ;; mov edx,eax
..@0x804b32e: db 0xeb, 0x1b  ;; jmp short A.code+0x804b34b
..@0x804b330: db 0xc6, 0x44, 0x0a, 0xff, 0x2c  ;; mov byte [edx+ecx-0x1],0x2c
..@0x804b335: db 0xc7, 0x44, 0x24, 0x04, 0xe8, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_comma  ; Delimiters for strtok: just a ','.
..@0x804b33d: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x804b344: call B.code+strtok
..@0x804b349: db 0x89, 0xc2  ;; mov edx,eax
..@0x804b34b: db 0x85, 0xd2  ;; test edx,edx
..@0x804b34d: db 0x74, 0x19  ;; jz A.code+0x804b368
..@0x804b34f: or ecx, strict byte -0x1
..@0x804b352: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b354: db 0x89, 0xd7  ;; mov edi,edx
..@0x804b356: db 0xf2, 0xae  ;; repne scasb
..@0x804b358: db 0xf7, 0xd1  ;; not ecx
..@0x804b35a: cmp ecx, strict byte 0x5
..@0x804b35d: db 0x75, 0xd1  ;; jnz A.code+0x804b330
..@0x804b35f: db 0x3b, 0x1a  ;; cmp ebx,[edx]
..@0x804b361: db 0x0f, 0x44, 0x74, 0x24, 0x44  ;; cmovz esi,[esp+0x44]
..@0x804b366: db 0xeb, 0xc8  ;; jmp short A.code+0x804b330
..@0x804b368: db 0x89, 0xf2  ;; mov edx,esi
..@0x804b36a: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x804b36e: jmp strict near R.code+0x804aecd
..@0x804b373: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804b375: jmp strict near R.code+0x804a001
..@0x804b37a: db 0x8d, 0x84, 0x24, 0x98, 0x01, 0x00, 0x00  ;; lea eax,[esp+0x198]
..@0x804b381: db 0xc7, 0x04, 0x24, 0xcd, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0cd
..@0x804b388: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b38c: call B.code+message_printf
..@0x804b391: db 0x8b, 0x84, 0x24, 0x10, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x110]
..@0x804b398: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b39b: call B.code+prog_free
..@0x804b3a0: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804b3a7: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b3aa: call B.code+prog_free
..@0x804b3af: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b3b6: call B.code+exit
..@0x804b3bb: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b3be: call B.code+fclose
..@0x804b3c3: db 0x8b, 0x54, 0x24, 0x74  ;; mov edx,[esp+0x74]
..@0x804b3c7: db 0xc7, 0x04, 0x24, 0xbf, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0bf
..@0x804b3ce: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804b3d2: call B.code+message_printf
..@0x804b3d7: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b3de: call B.code+exit
..@0x804b3e3: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804b3e7: db 0xc7, 0x44, 0x24, 0x04, 0x88, 0xb1, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_wb
..@0x804b3ef: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804b3f2: call B.code+fopen
..@0x804b3f7: db 0x85, 0xc0  ;; test eax,eax
..@0x804b3f9: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804b3fb: db 0x74, 0x3c  ;; jz A.code+0x804b439
..@0x804b3fd: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804b401: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804b408: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x804b40c: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x804b414: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b417: call B.code+fwrite
..@0x804b41c: db 0x39, 0xc6  ;; cmp esi,eax
..@0x804b41e: db 0x74, 0x0c  ;; jz A.code+0x804b42c
..@0x804b420: db 0xc7, 0x04, 0x24, 0x8b, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b18b
..@0x804b427: call B.code+message_printf
..@0x804b42c: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804b42f: call B.code+fclose
..@0x804b434: jmp strict near R.code+0x804b12d
..@0x804b439: db 0x8b, 0x4c, 0x24, 0x7c  ;; mov ecx,[esp+0x7c]
..@0x804b43d: db 0xc7, 0x04, 0x24, 0xac, 0xaf, 0x05, 0x08  ;; mov dword [esp],0x805afac
..@0x804b444: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x804b448: call B.code+message_printf
..@0x804b44d: jmp strict near R.code+0x804b12d
..@0x804b452: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x804b456: db 0xc7, 0x04, 0x24, 0xdc, 0xae, 0x05, 0x08  ;; mov dword [esp],str_message_already_cancelled
..@0x804b45d: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804b461: call B.code+maybe_prog_printf
..@0x804b466: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b46d: call B.code+exit
..@0x804b472: db 0x0f, 0xbe, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movsx eax,byte [0x987ca4c]
..@0x804b479: db 0xc7, 0x04, 0x24, 0x36, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b136
..@0x804b480: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b484: call B.code+maybe_prog_printf
..@0x804b489: db 0x83, 0x7c, 0x24, 0x68, 0x00  ;; cmp dword [esp+0x68],byte +0x0
..@0x804b48e: db 0x78, 0x14  ;; js A.code+0x804b4a4
..@0x804b490: db 0x8b, 0x74, 0x24, 0x68  ;; mov esi,[esp+0x68]
..@0x804b494: db 0xc7, 0x04, 0x24, 0xdb, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4db
..@0x804b49b: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x804b49f: call B.code+maybe_prog_printf
..@0x804b4a4: db 0x0f, 0xb6, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movzx eax,byte [0x987ca4c]
..@0x804b4ab: db 0x3c, 0x03  ;; cmp al,0x3
..@0x804b4ad: db 0x0f, 0x84, 0xa1, 0x00, 0x00, 0x00  ;; jz near A.code+0x804b554
..@0x804b4b3: db 0x84, 0xc0  ;; test al,al
..@0x804b4b5: db 0x0f, 0x84, 0x99, 0x00, 0x00, 0x00  ;; jz near A.code+0x804b554
..@0x804b4bb: db 0xa1, 0x44, 0xca, 0x87, 0x09  ;; mov eax,[0x987ca44]
..@0x804b4c0: db 0xc7, 0x04, 0x24, 0x41, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b141
..@0x804b4c7: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b4cb: call B.code+maybe_prog_printf
..@0x804b4d0: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x804b4d7: call B.code+exit
..@0x804b4dc: db 0xc7, 0x04, 0x24, 0x84, 0xae, 0x05, 0x08  ;; mov dword [esp],0x805ae84
..@0x804b4e3: call B.code+message_printf
..@0x804b4e8: call B.code+print_help
..@0x804b4ed: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b4f4: call B.code+exit
..@0x804b4f9: db 0x83, 0x7c, 0x24, 0x60, 0x00  ;; cmp dword [esp+0x60],byte +0x0
..@0x804b4fe: db 0x75, 0x0d  ;; jnz A.code+0x804b50d
..@0x804b500: db 0xc7, 0x44, 0x24, 0x44, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x2
..@0x804b508: jmp strict near R.code+0x804ace3
..@0x804b50d: db 0x83, 0x7c, 0x24, 0x4c, 0x03  ;; cmp dword [esp+0x4c],byte +0x3
..@0x804b512: db 0x74, 0x09  ;; jz A.code+0x804b51d
..@0x804b514: db 0x31, 0xd2  ;; xor edx,edx
..@0x804b516: db 0x83, 0x7c, 0x24, 0x3c, 0x00  ;; cmp dword [esp+0x3c],byte +0x0
..@0x804b51b: db 0x75, 0x03  ;; jnz A.code+0x804b520
..@0x804b51d: or edx, strict byte -0x1
..@0x804b520: db 0xc7, 0x44, 0x24, 0x44, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x2
..@0x804b528: jmp strict near R.code+0x804ac46
..@0x804b52d: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x804b534: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b537: call B.code+prog_free
..@0x804b53c: db 0xc7, 0x04, 0x24, 0xad, 0xb0, 0x05, 0x08  ;; mov dword [esp],0x805b0ad
..@0x804b543: call B.code+message_printf
..@0x804b548: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804b54f: call B.code+exit
..@0x804b554: db 0x0f, 0xbe, 0x05, 0x20, 0xc6, 0x87, 0x09  ;; movsx eax,byte [0x987c620]
..@0x804b55b: db 0xc7, 0x04, 0x24, 0x3b, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b13b
..@0x804b562: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b566: call B.code+maybe_prog_printf
..@0x804b56b: jmp strict near R.code+0x804b4bb

%ifidn TARGET, ls
LS.glibc.text:  ; addr=0x804b570 off=0x3570
; From crt1.o, section .text:
_start: equ $-B.code
..@0x804b570: db 0x31, 0xed  ;; xor ebp,ebp
..@0x804b572: pop esi
..@0x804b573: db 0x89, 0xe1  ;; mov ecx,esp
..@0x804b575: and esp, strict byte -0x10
..@0x804b578: push eax
..@0x804b579: push esp
..@0x804b57a: push edx
..@0x804b57b: push strict dword __libc_csu_fini
..@0x804b580: push strict dword __libc_csu_init
..@0x804b585: push ecx
..@0x804b586: push esi
..@0x804b587: push strict dword main
..@0x804b58c: call B.code+__libc_start_main
..@0x804b591: hlt
; End from crt1.o.
..@0x804b592: times 14 nop  ; Alignment padding.
; From crtbegin.o, section .text:
deregister_tm_clones: equ $-B.code
_ITM_registerTMCloneTable equ 0
_ITM_deregisterTMCloneTable equ 0
..@0x804b5a0: mov eax, __TMC_END__+3
..@0x804b5a55: db 0x2d, 0xf0, 0xd1, 0x05, 0x08  ;; sub eax, __TMC_LIST__
..@0x804b5aa: cmp eax, strict byte 0x6
..@0x804b5ad: db 0x77, 0x02  ;; ja A.code+0x804b5b1
..@0x804b5af: db 0xf3, 0xc3  ;; rep ret
..@0x804b5b1: mov eax, _ITM_deregisterTMCloneTable
..@0x804b5b6: db 0x85, 0xc0  ;; test eax,eax
..@0x804b5b8: db 0x74, 0xf5  ;; jz A.code+0x804b5af
..@0x804b5ba: push ebp
..@0x804b5bb: db 0x89, 0xe5  ;; mov ebp,esp
..@0x804b5bd: sub esp, strict byte 0x18
..@0x804b5c0: db 0xc7, 0x04, 0x24
                dd __TMC_LIST__  ;; mov dword [esp], __TMC_LIST__
..@0x804b5c7: call eax
..@0x804b5c9: leave
..@0x804b5ca: ret
..@0x804b5cb: nop  ; Alignment padding.
..@0x804b5cc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
register_tm_clones: equ $-B.code
..@0x804b5d0: mov eax, __TMC_END__
..@0x804b5d5: db 0x2d, 0xf0, 0xd1, 0x05, 0x08  ;; sub eax, __TMC_LIST__
..@0x804b5da: db 0xc1, 0xf8, 0x02  ;; sar eax,0x2
..@0x804b5dd: db 0x89, 0xc2  ;; mov edx,eax
..@0x804b5df: db 0xc1, 0xea, 0x1f  ;; shr edx,0x1f
..@0x804b5e2: db 0x01, 0xd0  ;; add eax,edx
..@0x804b5e4: db 0xd1, 0xf8  ;; sar eax,1
..@0x804b5e6: db 0x75, 0x02  ;; jnz A.code+0x804b5ea
..@0x804b5e8: db 0xf3, 0xc3  ;; rep ret
..@0x804b5ea: mov edx, _ITM_registerTMCloneTable
..@0x804b5ef: db 0x85, 0xd2  ;; test edx,edx
..@0x804b5f1: db 0x74, 0xf5  ;; jz A.code+0x804b5e8
..@0x804b5f3: push ebp
..@0x804b5f4: db 0x89, 0xe5  ;; mov ebp,esp
..@0x804b5f6: sub esp, strict byte 0x18
..@0x804b5f9: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b5fd: db 0xc7, 0x04, 0x24
                dd __TMC_LIST__  ;; mov dword [esp], __TMC_LIST__
..@0x804b604: call edx
..@0x804b606: leave
..@0x804b607: ret
..@0x804b608: nop  ; Alignment padding.
..@0x804b609: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
__do_global_dtors_aux: equ $-B.code
..@0x804b610: db 0x80, 0x3d, 0x24, 0xd2, 0x05, 0x08, 0x00  ;; cmp byte [completed.6600],0x0
..@0x804b617: db 0x75, 0x13  ;; jnz A.code+0x804b62c
..@0x804b619: push ebp
..@0x804b61a: db 0x89, 0xe5  ;; mov ebp,esp
..@0x804b61c: sub esp, strict byte 0x8
..@0x804b61f: call B.code+deregister_tm_clones
..@0x804b624: db 0xc6, 0x05, 0x24, 0xd2, 0x05, 0x08, 0x01  ;; mov byte [completed.6600],0x1
..@0x804b62b: leave
..@0x804b62c: db 0xf3, 0xc3  ;; rep ret
..@0x804b62e: dw 0x9066  ;; o16 nop  ; Alignment padding.
frame_dummy: equ $-B.code
_Jv_RegisterClasses equ 0
..@0x804b630: mov eax, [__JCR_LIST__]
..@0x804b635: db 0x85, 0xc0  ;; test eax,eax
..@0x804b637: db 0x74, 0x1e  ;; jz A.code+0x804b657
..@0x804b639: mov eax, _Jv_RegisterClasses
..@0x804b63e: db 0x85, 0xc0  ;; test eax,eax
..@0x804b640: db 0x74, 0x15  ;; jz A.code+0x804b657
..@0x804b642: push ebp
..@0x804b643: db 0x89, 0xe5  ;; mov ebp,esp
..@0x804b645: sub esp, strict byte 0x18
..@0x804b648: db 0xc7, 0x04, 0x24
                dd __JCR_LIST__  ;; mov dword [esp], __JCR_LIST__
..@0x804b64f: call eax
..@0x804b651: leave
..@0x804b652: jmp strict near B.code+register_tm_clones
..@0x804b657: jmp strict near B.code+register_tm_clones
; End from crtbegin.o.
..@0x804b65c: times 4 nop  ; Alingment padding.

%elifidn TARGET, d  ; TARGET, ...
darwin_main: equ $-B.code  ; This is fixed, the Mach-O headers point here, and it's impossible to change, see @0xa05e006.
init_my_stdio: equ $-B.code
; This function is equivalent to the following C code:
; #include <stdio.h>  /* setvbuf(...). */
; #include <unistd.h>  /* isatty(...). */
; FILE *stdin, *stdout, *stderr;
; char stdin_buf[0x400], stdout_buf[0x400];  /* Size same as glibc 2.19. */
; void init_stdio(void) {
;   setvbuf(stdin  = fdopen(0, "r"), stdin_buf,  isatty(0) ? _IOLBF : _IOFBF, sizeof stdin_buf);
;   setvbuf(stdout = fdopen(1, "w"), stdout_buf, isatty(1) ? _IOLBF : _IOFBF, sizeof stdout_buf);
;   setvbuf(stderr = fdopen(2, "w"), NULL, _IONBF, 0);
; }
..@0x804b570: push ebp
..@0x804b571: db 0x89, 0xe5  ;; mov ebp,esp
..@0x804b573: push ebx
..@0x804b574: push edi
..@0x804b575: push esi
..@0x804b576: sub esp, strict byte +0xc  ; TODO(pts): Size optimization: Unify this with the next instruction etc.
..@0x804b579: sub esp, strict byte 0x8
..@0x804b57c: db 0x31, 0xff  ;; xor edi,edi
..@0x804b57e: push strict dword _str_r
..@0x804b583: push edi
..@0x804b584: call B.code+fdopen
..@0x804b589: add esp, strict byte 0x10
..@0x804b58c: db 0x89, 0xc6  ;; mov esi,eax
..@0x804b58e: mov [stdin], esi
..@0x804b594: sub esp, strict byte 0xc
..@0x804b597: push edi
..@0x804b598: call B.code+isatty
..@0x804b59d: add esp, strict byte 0x10
..@0x804b5a0: db 0x85, 0xc0  ;; test eax,eax
..@0x804b5a2: db 0x0f, 0x95, 0xc0  ;; setnz al
..@0x804b5a5: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804b5a8: db 0xbb, 0x00, 0x04, 0x00, 0x00  ;; mov ebx,0x400
..@0x804b5ad: push ebx
..@0x804b5ae: push eax
..@0x804b5af: push strict dword _stdin_buf
..@0x804b5b4: push esi
..@0x804b5b5: call B.code+setvbuf
..@0x804b5ba: add esp, strict byte 0x10
..@0x804b5bd: sub esp, strict byte 0x8
..@0x804b5c0: db 0x31, 0xff  ;; xor edi,edi
..@0x804b5c2: inc edi
..@0x804b5c3: push strict dword _str_w
..@0x804b5c8: push edi
..@0x804b5c9: call B.code+fdopen
..@0x804b5ce: add esp, strict byte 0x10
..@0x804b5d1: db 0x89, 0xc6  ;; mov esi,eax
..@0x804b5d3: mov [stdout], esi
..@0x804b5d9: sub esp, strict byte 0xc
..@0x804b5dc: push edi
..@0x804b5dd: call B.code+isatty
..@0x804b5e2: add esp, strict byte 0x10
..@0x804b5e5: db 0x85, 0xc0  ;; test eax,eax
..@0x804b5e7: db 0x0f, 0x95, 0xc0  ;; setnz al
..@0x804b5ea: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804b5ed: push ebx
..@0x804b5ee: push eax
..@0x804b5ef: push strict dword _stdout_buf
..@0x804b5f4: push esi
..@0x804b5f5: call B.code+setvbuf
..@0x804b5fa: add esp, strict byte 0x10
..@0x804b5fd: sub esp, strict byte 0x8
..@0x804b600: db 0xbe, 0x02, 0x00, 0x00, 0x00  ;; mov esi,0x2
..@0x804b605: push strict dword _str_w
..@0x804b60a: push esi
..@0x804b60b: call B.code+fdopen
..@0x804b610: add esp, strict byte 0x10
..@0x804b613: mov [stderr],eax
..@0x804b618: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804b61a: push ecx
..@0x804b61b: push esi
..@0x804b61c: push ecx
..@0x804b61d: push eax
..@0x804b61e: call B.code+setvbuf
..@0x804b623: add esp, strict byte 0x1c
..@0x804b626: pop esi
..@0x804b627: pop edi
..@0x804b628: pop ebx
..@0x804b629: pop ebp
..@0x804b62a: jmp strict near B.code+main
_str_w: equ $-B.code
..@0x804b62f: db 'w', 0
_str_r: equ $-B.code
..@0x804b631: db 'r', 0
..@0x804b633: times 0x804b660-0x804b633 nop
%else  ; TARGET, !ls !d
..@0x804b570: times 0x804b660-0x804b570 nop
%endif  ; TARGET

unknown_func4: equ $-B.code  ; _Bool unknown_func4(int x) { return x == 0 ? && global_cleanup_counter == 2; }
..@0x804b660: db 0x8b, 0x54, 0x24, 0x04  ;; mov edx,[esp+0x4]
..@0x804b664: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b666: db 0x85, 0xd2  ;; test edx,edx
..@0x804b668: db 0x75, 0x0c  ;; jnz A.code+0x804b676
..@0x804b66a: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b66c: db 0x83, 0x3d, 0x40, 0xd2, 0x05, 0x08, 0x02  ;; cmp dword [global_cleanup_counter],byte +0x2
..@0x804b673: db 0x0f, 0x94, 0xc0  ;; setz al
..@0x804b676: db 0xf3, 0xc3  ;; rep ret
..@0x804b678: nop
..@0x804b679: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.

message_printf: equ $-B.code  ; Prints to message_filep with vfprintf, noop if message_filep is NULL. Also used for printing the help text.
; int message_printf(const char *fmt, ...) { va_list ap; if (!message_filep) return 0; va_start(ap, fmt); return vfprintf(message_filep, fmt, ap); }
..@0x804b680: mov edx, [message_filep]
..@0x804b686: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b688: db 0x85, 0xd2  ;; test edx,edx
..@0x804b68a: jz strict short B.code+message_printf.ret
%ifidn TARGET, ls
..@0x804b68c: sub esp, strict byte 0x1c
..@0x804b68f: db 0x8d, 0x44, 0x24, 0x24  ;; lea eax,[esp+0x24]
..@0x804b693: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804b696: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804b69a: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804b69e: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804b6a2: call B.code+vfprintf
..@0x804b6a7: add esp, strict byte 0x1c
message_printf.ret: equ $-B.code
..@0x804b6aa: db 0xf3, 0xc3  ;; rep ret
..@0x804b6ac: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
%else  ; TARGET, ls
..@0x804b68c: jmp strict short B.code+message_printf.filep_in_edx
prog_printf: equ $-B.code  ; Same as printf(3) in the libc, implemented using fprintf(stdout, ...).
; int prog_printf(const char *fmt, ...) { return vfprintf(stdout, fmt, ap); }
..@0x804b68e: mov edx, [stdout]  ; 6 bytes.
              ; Fall through to code shared by prog_printf and message_printf.
message_printf.filep_in_edx: equ $-B.code
;esp:retaddr fmt val
..@0x804b694: push esp  ; 1 byte.
;esp:&retaddr retaddr fmt val
..@0x804b695: add dword [esp], strict byte 2*4  ; 4 bytes.
;esp:ap=&val retaddr fmt val
              push dword [esp+2*4]  ; 4 bytes.
;esp:fmt ap=&val retaddr fmt val
              push edx  ; 1 byte. Pushes the filep (stdout or message_filep).
;esp:filep fmt ap=&val retaddr fmt val
              call B.code+vfprintf  ; 5 bytes.
;esp:filep fmt ap=&val retaddr fmt val
              add esp, strict byte 3*4  ; 3 bytes, same as `times 3 pop edx'.
;esp:retaddr fmt val
message_printf.ret: equ $-B.code
              ret  ; 1 byte.
;esp:fmt val  ; Cleaned up by the caller.
              times 9 nop  ; Padding to keep offsets intact.
%endif  ; TARGET, ls

%ifidn TARGET, ls  ; Contains handle_sigint, setup_sigint_handler.
handle_sigint: equ $-B.code
..@0x804b6b0: sub esp, strict byte 0x1c
..@0x804b6b3: db 0x83, 0x7c, 0x24, 0x20, 0x02  ;; cmp dword [esp+0x20],byte +0x2
..@0x804b6b8: db 0x74, 0x06  ;; jz A.code+0x804b6c0
..@0x804b6ba: add esp, strict byte 0x1c
..@0x804b6bd: ret
..@0x804b6be: dw 0x9066  ;; o16 nop
..@0x804b6c0: db 0x83, 0x3d, 0x40, 0xd2, 0x05, 0x08, 0x01  ;; cmp dword [global_cleanup_counter],byte +0x1
..@0x804b6c7: db 0x75, 0xf1  ;; jnz A.code+0x804b6ba
..@0x804b6c9: mov eax, [stderr]
..@0x804b6ce: db 0xc7, 0x44, 0x24, 0x08, 0x24, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x24
..@0x804b6d6: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x804b6de: db 0xc7, 0x04, 0x24, 0x48, 0xa7, 0x05, 0x08  ;; mov dword [esp],str_message_on_sigint
..@0x804b6e5: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804b6e9: call B.code+fwrite
..@0x804b6ee: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x804b6f6: db 0xc7, 0x44, 0x24, 0x04, 0x80, 0xc5, 0x87, 0x09  ;; mov dword [esp+0x4],global_struct_sigaction
..@0x804b6fe: db 0xc7, 0x04, 0x24, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp],0x2
..@0x804b705: db 0xc7, 0x05, 0x40, 0xd2, 0x05, 0x08, 0x02, 0x00  ;; mov dword [global_cleanup_counter],0x2
..@0x804b70d: db 0x00, 0x00
..@0x804b70f: call B.code+sigaction
..@0x804b714: add esp, strict byte 0x1c
..@0x804b717: ret
..@0x804b718: nop
..@0x804b719: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
setup_sigint_handler: equ $-B.code
..@0x804b720: db 0x8b, 0x0d, 0x40, 0xd2, 0x05, 0x08  ;; mov ecx,[global_cleanup_counter]
..@0x804b726: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804b72b: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804b72d: db 0x7e, 0x09  ;; jng A.code+0x804b738
..@0x804b72f: db 0xf3, 0xc3  ;; rep ret
..@0x804b731: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x804b738: push ebx
..@0x804b739: db 0x81, 0xec, 0xa8, 0x00, 0x00, 0x00  ;; sub esp,0xa8
..@0x804b73f: db 0x8d, 0x44, 0x24, 0x18  ;; lea eax,[esp+0x18]
..@0x804b743: db 0xc7, 0x44, 0x24, 0x14, 0xb0, 0xb6, 0x04, 0x08  ;; mov dword [esp+0x14],handle_sigint
..@0x804b74b: db 0x8d, 0x5c, 0x24, 0x14  ;; lea ebx,[esp+0x14]
..@0x804b74f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804b752: call B.code+sigemptyset
..@0x804b757: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x804b75b: db 0xc7, 0x44, 0x24, 0x08, 0x80, 0xc5, 0x87, 0x09  ;; mov dword [esp+0x8],global_struct_sigaction
..@0x804b763: db 0xc7, 0x04, 0x24, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp],0x2
..@0x804b76a: db 0xc7, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x98],0x0
..@0x804b772: db 0x00, 0x00, 0x00
..@0x804b775: call B.code+sigaction
..@0x804b77a: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b77c: db 0xc7, 0x05, 0x40, 0xd2, 0x05, 0x08, 0x01, 0x00  ;; mov dword [global_cleanup_counter],0x1
..@0x804b784: db 0x00, 0x00
..@0x804b786: db 0x81, 0xc4, 0xa8, 0x00, 0x00, 0x00  ;; add esp,0xa8
..@0x804b78c: pop ebx
..@0x804b78d: ret
%else  ; TARGET, ls
..@0x804b6b0: times 0x804b78e-0x804b6b0 nop
%endif  ; TARGET, ls
..@0x804b78e: dw 0x9066  ;; o16 nop
print_help: equ $-B.code
..@0x804b790: sub esp, strict byte 0x1c
..@0x804b793: db 0xc7, 0x44, 0x24, 0x04, 0x2f, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_release_date
..@0x804b79b: db 0xc7, 0x04, 0x24, 0x70, 0xa7, 0x05, 0x08  ;; mov dword [esp],str_message_help_line1
..@0x804b7a2: call B.code+message_printf
..@0x804b7a7: db 0xc7, 0x04, 0x24, 0xb8, 0xa7, 0x05, 0x08  ;; mov dword [esp],0x805a7b8
..@0x804b7ae: call B.code+message_printf
..@0x804b7b3: db 0xc7, 0x04, 0x24, 0xe4, 0xa7, 0x05, 0x08  ;; mov dword [esp],0x805a7e4
..@0x804b7ba: call B.code+message_printf
..@0x804b7bf: db 0xc7, 0x04, 0x24, 0x24, 0xa8, 0x05, 0x08  ;; mov dword [esp],0x805a824
..@0x804b7c6: call B.code+message_printf
..@0x804b7cb: db 0xc7, 0x04, 0x24, 0x74, 0xa8, 0x05, 0x08  ;; mov dword [esp],0x805a874
..@0x804b7d2: call B.code+message_printf
..@0x804b7d7: db 0xc7, 0x04, 0x24, 0xc4, 0xa8, 0x05, 0x08  ;; mov dword [esp],0x805a8c4
..@0x804b7de: call B.code+message_printf
..@0x804b7e3: db 0xc7, 0x04, 0x24, 0x10, 0xa9, 0x05, 0x08  ;; mov dword [esp],0x805a910
..@0x804b7ea: call B.code+message_printf
..@0x804b7ef: db 0xc7, 0x04, 0x24, 0x64, 0xa9, 0x05, 0x08  ;; mov dword [esp],0x805a964
..@0x804b7f6: call B.code+message_printf
..@0x804b7fb: db 0xc7, 0x04, 0x24, 0xb4, 0xa9, 0x05, 0x08  ;; mov dword [esp],0x805a9b4
..@0x804b802: call B.code+message_printf
..@0x804b807: db 0xc7, 0x04, 0x24, 0xfc, 0xa9, 0x05, 0x08  ;; mov dword [esp],0x805a9fc
..@0x804b80e: call B.code+message_printf
..@0x804b813: db 0xc7, 0x04, 0x24, 0x24, 0xaa, 0x05, 0x08  ;; mov dword [esp],0x805aa24
..@0x804b81a: call B.code+message_printf
..@0x804b81f: db 0xc7, 0x04, 0x24, 0x74, 0xaa, 0x05, 0x08  ;; mov dword [esp],0x805aa74
..@0x804b826: call B.code+message_printf
..@0x804b82b: db 0xc7, 0x04, 0x24, 0xc4, 0xaa, 0x05, 0x08  ;; mov dword [esp],0x805aac4
..@0x804b832: call B.code+message_printf
..@0x804b837: db 0xc7, 0x04, 0x24, 0xfc, 0xaa, 0x05, 0x08  ;; mov dword [esp],0x805aafc
..@0x804b83e: call B.code+message_printf
..@0x804b843: db 0xc7, 0x04, 0x24, 0x48, 0xab, 0x05, 0x08  ;; mov dword [esp],0x805ab48
..@0x804b84a: call B.code+message_printf
..@0x804b84f: db 0xc7, 0x04, 0x24, 0x80, 0xab, 0x05, 0x08  ;; mov dword [esp],0x805ab80
..@0x804b856: call B.code+message_printf
..@0x804b85b: db 0xc7, 0x04, 0x24, 0xc0, 0xab, 0x05, 0x08  ;; mov dword [esp],0x805abc0
..@0x804b862: call B.code+message_printf
..@0x804b867: db 0xc7, 0x04, 0x24, 0x10, 0xac, 0x05, 0x08  ;; mov dword [esp],0x805ac10
..@0x804b86e: call B.code+message_printf
..@0x804b873: db 0xc7, 0x04, 0x24, 0x64, 0xac, 0x05, 0x08  ;; mov dword [esp],0x805ac64
..@0x804b87a: call B.code+message_printf
..@0x804b87f: db 0xc7, 0x04, 0x24, 0x98, 0xac, 0x05, 0x08  ;; mov dword [esp],0x805ac98
..@0x804b886: call B.code+message_printf
..@0x804b88b: db 0xc7, 0x04, 0x24, 0xc0, 0xac, 0x05, 0x08  ;; mov dword [esp],0x805acc0
..@0x804b892: call B.code+message_printf
..@0x804b897: db 0xc7, 0x04, 0x24, 0x14, 0xad, 0x05, 0x08  ;; mov dword [esp],0x805ad14
..@0x804b89e: call B.code+message_printf
..@0x804b8a3: db 0xc7, 0x04, 0x24, 0x4c, 0xad, 0x05, 0x08  ;; mov dword [esp],0x805ad4c
..@0x804b8aa: call B.code+message_printf
..@0x804b8af: db 0xc7, 0x04, 0x24, 0x9c, 0xad, 0x05, 0x08  ;; mov dword [esp],0x805ad9c
..@0x804b8b6: call B.code+message_printf
..@0x804b8bb: db 0xc7, 0x04, 0x24, 0xe4, 0xad, 0x05, 0x08  ;; mov dword [esp],str_message_help_line_last
..@0x804b8c2: call B.code+message_printf
..@0x804b8c7: add esp, strict byte 0x1c
..@0x804b8ca: ret
;
..@0x804b8cb: times 5 nop
..@0x804b8d0: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b8d2: ret
..@0x804b8d3: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804b8d9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804b8e0: db 0x31, 0xc0  ;; xor eax,eax
..@0x804b8e2: ret
..@0x804b8e3: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804b8e9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804b8f0: db 0x85, 0xd2  ;; test edx,edx
..@0x804b8f2: db 0x7e, 0x4d  ;; jng A.code+0x804b941
..@0x804b8f4: push ebp
..@0x804b8f5: push edi
..@0x804b8f6: push esi
..@0x804b8f7: db 0x89, 0xc6  ;; mov esi,eax
..@0x804b8f9: push ebx
..@0x804b8fa: sub esp, strict byte 0x4
..@0x804b8fd: db 0x8b, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov ebp,[0x860cae8]
..@0x804b903: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804b906: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x804b90c: db 0x8d, 0x3c, 0x2a  ;; lea edi,[edx+ebp]
..@0x804b90f: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804b911: db 0x29, 0xee  ;; sub esi,ebp
..@0x804b913: nop
..@0x804b914: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x804b918: db 0x39, 0x4b, 0x14  ;; cmp [ebx+0x14],ecx
..@0x804b91b: db 0x0f, 0xb6, 0x04, 0x0e  ;; movzx eax,byte [esi+ecx]
..@0x804b91f: db 0x7e, 0x06  ;; jng A.code+0x804b927
..@0x804b921: db 0x8b, 0x53, 0x10  ;; mov edx,[ebx+0x10]
..@0x804b924: db 0x88, 0x04, 0x0a  ;; mov [edx+ecx],al
..@0x804b927: add ecx, strict byte 0x1
..@0x804b92a: db 0x39, 0xf9  ;; cmp ecx,edi
..@0x804b92c: db 0x75, 0xea  ;; jnz A.code+0x804b918
..@0x804b92e: db 0x8b, 0x14, 0x24  ;; mov edx,[esp]
..@0x804b931: db 0x8d, 0x44, 0x15, 0x00  ;; lea eax,[ebp+edx+0x0]
..@0x804b935: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x804b93a: add esp, strict byte 0x4
..@0x804b93d: pop ebx
..@0x804b93e: pop esi
..@0x804b93f: pop edi
..@0x804b940: pop ebp
..@0x804b941: db 0xf3, 0xc3  ;; rep ret
..@0x804b943: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804b949: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804b950: push ebp
..@0x804b951: push edi
..@0x804b952: push esi
..@0x804b953: push ebx
..@0x804b954: sub esp, strict byte 0xc
..@0x804b957: db 0x8b, 0x0d, 0xc0, 0xa4, 0x83, 0x09  ;; mov ecx,[0x983a4c0]
..@0x804b95d: db 0x8d, 0x3c, 0x11  ;; lea edi,[ecx+edx]
..@0x804b960: db 0xd3, 0xe0  ;; shl eax,cl
..@0x804b962: db 0x0b, 0x05, 0xc4, 0xa4, 0x83, 0x09  ;; or eax,[0x983a4c4]
..@0x804b968: cmp edi, strict byte 0x7
..@0x804b96b: db 0x89, 0x3d, 0xc0, 0xa4, 0x83, 0x09  ;; mov [0x983a4c0],edi
..@0x804b971: db 0xa3, 0xc4, 0xa4, 0x83, 0x09  ;; mov [0x983a4c4],eax
..@0x804b976: db 0x0f, 0x8e, 0x88, 0x00, 0x00, 0x00  ;; jng near A.code+0x804ba04
..@0x804b97c: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x804b982: sub edi, strict byte 0x8
..@0x804b985: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804b987: db 0x89, 0xfd  ;; mov ebp,edi
..@0x804b989: db 0x89, 0x7c, 0x24, 0x08  ;; mov [esp+0x8],edi
..@0x804b98d: db 0x8b, 0x35, 0x60, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d660]
..@0x804b993: db 0xc1, 0xed, 0x03  ;; shr ebp,byte 0x3
..@0x804b996: db 0x8b, 0x0d, 0xc8, 0xa4, 0x83, 0x09  ;; mov ecx,[0x983a4c8]
..@0x804b99c: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x804b99f: db 0x8d, 0x7a, 0x01  ;; lea edi,[edx+0x1]
..@0x804b9a2: db 0x89, 0x7c, 0x24, 0x04  ;; mov [esp+0x4],edi
..@0x804b9a6: db 0x01, 0xef  ;; add edi,ebp
..@0x804b9a8: db 0xeb, 0x08  ;; jmp short A.code+0x804b9b2
..@0x804b9aa: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804b9b0: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804b9b2: db 0x39, 0x56, 0x14  ;; cmp [esi+0x14],edx
..@0x804b9b5: db 0x7e, 0x07  ;; jng A.code+0x804b9be
..@0x804b9b7: db 0x8b, 0x6e, 0x10  ;; mov ebp,[esi+0x10]
..@0x804b9ba: db 0x88, 0x44, 0x15, 0x00  ;; mov [ebp+edx+0x0],al
..@0x804b9be: db 0x31, 0xcb  ;; xor ebx,ecx
..@0x804b9c0: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x804b9c3: add edx, strict byte 0x1
..@0x804b9c6: db 0x81, 0xe3, 0xff, 0x00, 0x00, 0x00  ;; and ebx,0xff
..@0x804b9cc: db 0x33, 0x0c, 0x9d, 0xa0, 0x02, 0x06, 0x08  ;; xor ecx,[ebx*4+0x80602a0]
..@0x804b9d3: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804b9d5: db 0xc1, 0xeb, 0x08  ;; shr ebx,byte 0x8
..@0x804b9d8: db 0x39, 0xfa  ;; cmp edx,edi
..@0x804b9da: db 0x75, 0xd4  ;; jnz A.code+0x804b9b0
..@0x804b9dc: db 0x8b, 0x2c, 0x24  ;; mov ebp,[esp]
..@0x804b9df: db 0x89, 0x1d, 0xc4, 0xa4, 0x83, 0x09  ;; mov [0x983a4c4],ebx
..@0x804b9e5: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x804b9e9: db 0x89, 0x0d, 0xc8, 0xa4, 0x83, 0x09  ;; mov [0x983a4c8],ecx
..@0x804b9ef: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x804b9f3: db 0x01, 0xe8  ;; add eax,ebp
..@0x804b9f5: db 0xf7, 0xdd  ;; neg ebp
..@0x804b9f7: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x804b9fc: db 0x8d, 0x04, 0xea  ;; lea eax,[edx+ebp*8]
..@0x804b9ff: db 0xa3, 0xc0, 0xa4, 0x83, 0x09  ;; mov [0x983a4c0],eax
..@0x804ba04: add esp, strict byte 0xc
..@0x804ba07: pop ebx
..@0x804ba08: pop esi
..@0x804ba09: pop edi
..@0x804ba0a: pop ebp
..@0x804ba0b: ret
..@0x804ba0c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804ba10: push ebp
..@0x804ba11: push edi
..@0x804ba12: push esi
..@0x804ba13: push ebx
..@0x804ba14: sub esp, strict byte 0x4
..@0x804ba17: db 0x8b, 0x1d, 0x68, 0xd7, 0x83, 0x09  ;; mov ebx,[0x983d768]
..@0x804ba1d: db 0xa1, 0xe4, 0xd2, 0x83, 0x09  ;; mov eax,[0x983d2e4]
..@0x804ba22: db 0x8b, 0x3c, 0x9d, 0xe0, 0xd2, 0x83, 0x09  ;; mov edi,[ebx*4+0x983d2e0]
..@0x804ba29: sub ebx, strict byte 0x1
..@0x804ba2c: cmp ebx, strict byte 0x1
..@0x804ba2f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804ba32: db 0x89, 0x1d, 0x68, 0xd7, 0x83, 0x09  ;; mov [0x983d768],ebx
..@0x804ba38: db 0x0f, 0x8e, 0x9a, 0x00, 0x00, 0x00  ;; jng near A.code+0x804bad8
..@0x804ba3e: db 0xa1, 0xe8, 0xd2, 0x83, 0x09  ;; mov eax,[0x983d2e8]
..@0x804ba43: db 0x8b, 0x15, 0xec, 0xd2, 0x83, 0x09  ;; mov edx,[0x983d2ec]
..@0x804ba49: db 0x8b, 0x34, 0xbd, 0xe0, 0xc9, 0x83, 0x09  ;; mov esi,[edi*4+0x983c9e0]
..@0x804ba50: db 0x8b, 0x0c, 0x85, 0xe0, 0xc9, 0x83, 0x09  ;; mov ecx,[eax*4+0x983c9e0]
..@0x804ba57: db 0x39, 0x0c, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; cmp [edx*4+0x983c9e0],ecx
..@0x804ba5e: db 0x0f, 0x9c, 0xc2  ;; setl dl
..@0x804ba61: db 0x0f, 0xb6, 0xd2  ;; movzx edx,dl
..@0x804ba64: add edx, strict byte 0x2
..@0x804ba67: db 0x8b, 0x0c, 0x95, 0xe0, 0xd2, 0x83, 0x09  ;; mov ecx,[edx*4+0x983d2e0]
..@0x804ba6e: db 0x39, 0x34, 0x8d, 0xe0, 0xc9, 0x83, 0x09  ;; cmp [ecx*4+0x983c9e0],esi
..@0x804ba75: db 0x7d, 0x61  ;; jnl A.code+0x804bad8
..@0x804ba77: db 0xbd, 0x01, 0x00, 0x00, 0x00  ;; mov ebp,0x1
..@0x804ba7c: db 0xeb, 0x3a  ;; jmp short A.code+0x804bab8
..@0x804ba7e: dw 0x9066  ;; o16 nop
..@0x804ba80: db 0x8b, 0x0c, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov ecx,[eax*4+0x983d2e0]
..@0x804ba87: db 0x8b, 0x2c, 0x85, 0xe4, 0xd2, 0x83, 0x09  ;; mov ebp,[eax*4+0x983d2e4]
..@0x804ba8e: db 0x8b, 0x0c, 0x8d, 0xe0, 0xc9, 0x83, 0x09  ;; mov ecx,[ecx*4+0x983c9e0]
..@0x804ba95: db 0x39, 0x0c, 0xad, 0xe0, 0xc9, 0x83, 0x09  ;; cmp [ebp*4+0x983c9e0],ecx
..@0x804ba9c: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804ba9e: db 0x0f, 0x9c, 0xc1  ;; setl cl
..@0x804baa1: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x804baa4: db 0x01, 0xc8  ;; add eax,ecx
..@0x804baa6: db 0x8b, 0x0c, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov ecx,[eax*4+0x983d2e0]
..@0x804baad: db 0x39, 0x34, 0x8d, 0xe0, 0xc9, 0x83, 0x09  ;; cmp [ecx*4+0x983c9e0],esi
..@0x804bab4: db 0x7d, 0x10  ;; jnl A.code+0x804bac6
..@0x804bab6: db 0x89, 0xc2  ;; mov edx,eax
..@0x804bab8: db 0x8d, 0x04, 0x12  ;; lea eax,[edx+edx]
..@0x804babb: db 0x89, 0x0c, 0xad, 0xe0, 0xd2, 0x83, 0x09  ;; mov [ebp*4+0x983d2e0],ecx
..@0x804bac2: db 0x39, 0xc3  ;; cmp ebx,eax
..@0x804bac4: db 0x7d, 0xba  ;; jnl A.code+0x804ba80
..@0x804bac6: db 0x89, 0x3c, 0x95, 0xe0, 0xd2, 0x83, 0x09  ;; mov [edx*4+0x983d2e0],edi
..@0x804bacd: db 0x8b, 0x04, 0x24  ;; mov eax,[esp]
..@0x804bad0: add esp, strict byte 0x4
..@0x804bad3: pop ebx
..@0x804bad4: pop esi
..@0x804bad5: pop edi
..@0x804bad6: pop ebp
..@0x804bad7: ret
..@0x804bad8: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x804badd: db 0xeb, 0xe7  ;; jmp short A.code+0x804bac6
..@0x804badf: nop
..@0x804bae0: push ebp
..@0x804bae1: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804bae3: push edi
..@0x804bae4: db 0x89, 0xd7  ;; mov edi,edx
..@0x804bae6: push esi
..@0x804bae7: db 0x89, 0xc6  ;; mov esi,eax
..@0x804bae9: push ebx
..@0x804baea: add esp, strict byte -0x80
..@0x804baed: db 0x8d, 0x44, 0x24, 0x7c  ;; lea eax,[esp+0x7c]
..@0x804baf1: db 0x89, 0xe2  ;; mov edx,esp
..@0x804baf3: nop
..@0x804baf4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804baf8: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x804bafe: sub eax, strict byte 0x4
..@0x804bb01: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804bb03: db 0x75, 0xf3  ;; jnz A.code+0x804baf8
..@0x804bb05: db 0x89, 0xf8  ;; mov eax,edi
..@0x804bb07: sub eax, strict byte 0x1
..@0x804bb0a: db 0x78, 0x13  ;; js A.code+0x804bb1f
..@0x804bb0c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bb10: db 0x8b, 0x0c, 0x86  ;; mov ecx,[esi+eax*4]
..@0x804bb13: sub eax, strict byte 0x1
..@0x804bb16: db 0x83, 0x2c, 0x8c, 0x01  ;; sub dword [esp+ecx*4],byte +0x1
..@0x804bb1a: cmp eax, strict byte -0x1
..@0x804bb1d: db 0x75, 0xf1  ;; jnz A.code+0x804bb10
..@0x804bb1f: db 0x8d, 0x9a, 0x80, 0x00, 0x00, 0x00  ;; lea ebx,[edx+0x80]
..@0x804bb25: db 0x31, 0xd2  ;; xor edx,edx
..@0x804bb27: db 0x8d, 0x44, 0x24, 0x04  ;; lea eax,[esp+0x4]
..@0x804bb2b: nop
..@0x804bb2c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bb30: db 0x89, 0xd1  ;; mov ecx,edx
..@0x804bb32: db 0x2b, 0x08  ;; sub ecx,[eax]
..@0x804bb34: db 0x89, 0x10  ;; mov [eax],edx
..@0x804bb36: add eax, strict byte 0x4
..@0x804bb39: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x804bb3b: db 0x8d, 0x14, 0x09  ;; lea edx,[ecx+ecx]
..@0x804bb3e: db 0x75, 0xf0  ;; jnz A.code+0x804bb30
..@0x804bb40: db 0x31, 0xd2  ;; xor edx,edx
..@0x804bb42: db 0x85, 0xff  ;; test edi,edi
..@0x804bb44: db 0x7e, 0x2e  ;; jng A.code+0x804bb74
..@0x804bb46: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804bb49: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804bb50: db 0x8b, 0x0c, 0x96  ;; mov ecx,[esi+edx*4]
..@0x804bb53: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804bb55: db 0x74, 0x16  ;; jz A.code+0x804bb6d
..@0x804bb57: db 0x8b, 0x1c, 0x8c  ;; mov ebx,[esp+ecx*4]
..@0x804bb5a: db 0x8d, 0x43, 0x01  ;; lea eax,[ebx+0x1]
..@0x804bb5d: db 0x89, 0x04, 0x8c  ;; mov [esp+ecx*4],eax
..@0x804bb60: db 0x31, 0xc0  ;; xor eax,eax
..@0x804bb62: db 0xd1, 0xeb  ;; shr ebx,1
..@0x804bb64: db 0x11, 0xc0  ;; adc eax,eax
..@0x804bb66: dec ecx
..@0x804bb67: db 0x75, 0xf9  ;; jnz A.code+0x804bb62
..@0x804bb69: db 0x89, 0x44, 0x95, 0x00  ;; mov [ebp+edx*4+0x0],eax
..@0x804bb6d: add edx, strict byte 0x1
..@0x804bb70: db 0x39, 0xfa  ;; cmp edx,edi
..@0x804bb72: db 0x75, 0xdc  ;; jnz A.code+0x804bb50
..@0x804bb74: sub esp, strict byte -0x80
..@0x804bb77: pop ebx
..@0x804bb78: pop esi
..@0x804bb79: pop edi
..@0x804bb7a: pop ebp
..@0x804bb7b: ret
..@0x804bb7c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bb80: db 0x69, 0xc8, 0x18, 0x0a, 0x00, 0x00  ;; imul ecx,eax,dword 0xa18
..@0x804bb86: db 0x31, 0xd2  ;; xor edx,edx
..@0x804bb88: nop
..@0x804bb89: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804bb90: db 0xc7, 0x84, 0x91, 0xc0, 0x06, 0x06, 0x08, 0x00  ;; mov dword [ecx+edx*4+0x80606c0],0x0
..@0x804bb98: db 0x00, 0x00, 0x00
..@0x804bb9b: add edx, strict byte 0x1
..@0x804bb9e: db 0x81, 0xfa, 0x40, 0x01, 0x00, 0x00  ;; cmp edx,0x140
..@0x804bba4: db 0x75, 0xea  ;; jnz A.code+0x804bb90
..@0x804bba6: push ebx
..@0x804bba7: db 0x66, 0x31, 0xd2  ;; xor dx,dx
..@0x804bbaa: db 0xeb, 0x17  ;; jmp short A.code+0x804bbc3
..@0x804bbac: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bbb0: db 0xc7, 0x04, 0x95, 0x80, 0x18, 0x71, 0x09, 0x00  ;; mov dword [edx*4+0x9711880],0x1000
..@0x804bbb8: db 0x10, 0x00, 0x00
..@0x804bbbb: add edx, strict byte 0x1
..@0x804bbbe: cmp edx, strict byte 0x1e
..@0x804bbc1: db 0x74, 0x30  ;; jz A.code+0x804bbf3
..@0x804bbc3: db 0x8b, 0x9c, 0x91, 0x40, 0x10, 0x06, 0x08  ;; mov ebx,[ecx+edx*4+0x8061040]
..@0x804bbca: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804bbcc: db 0x74, 0xe2  ;; jz A.code+0x804bbb0
..@0x804bbce: db 0x03, 0x1c, 0xd5, 0xc0, 0x9d, 0x83, 0x09  ;; add ebx,[edx*8+0x9839dc0]
..@0x804bbd5: db 0x89, 0x1c, 0x95, 0x80, 0x18, 0x71, 0x09  ;; mov [edx*4+0x9711880],ebx
..@0x804bbdc: db 0xeb, 0xdd  ;; jmp short A.code+0x804bbbb
..@0x804bbde: dw 0x9066  ;; o16 nop
..@0x804bbe0: db 0xc7, 0x04, 0x95, 0x80, 0x18, 0x71, 0x09, 0x00  ;; mov dword [edx*4+0x9711880],0x1000
..@0x804bbe8: db 0x10, 0x00, 0x00
..@0x804bbeb: add edx, strict byte 0x1
..@0x804bbee: cmp edx, strict byte 0x3b
..@0x804bbf1: db 0x74, 0x21  ;; jz A.code+0x804bc14
..@0x804bbf3: db 0x8b, 0x9c, 0x91, 0x4c, 0x0f, 0x06, 0x08  ;; mov ebx,[ecx+edx*4+0x8060f4c]
..@0x804bbfa: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804bbfc: db 0x74, 0xe2  ;; jz A.code+0x804bbe0
..@0x804bbfe: db 0x03, 0x1c, 0xd5, 0xc0, 0x9d, 0x83, 0x09  ;; add ebx,[edx*8+0x9839dc0]
..@0x804bc05: db 0x89, 0x1c, 0x95, 0x80, 0x18, 0x71, 0x09  ;; mov [edx*4+0x9711880],ebx
..@0x804bc0c: add edx, strict byte 0x1
..@0x804bc0f: cmp edx, strict byte 0x3b
..@0x804bc12: db 0x75, 0xdf  ;; jnz A.code+0x804bbf3
..@0x804bc14: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x804bc1a: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804bc1c: db 0x8b, 0x52, 0x4c  ;; mov edx,[edx+0x4c]
..@0x804bc1f: db 0x85, 0xd2  ;; test edx,edx
..@0x804bc21: db 0x75, 0x4b  ;; jnz A.code+0x804bc6e
..@0x804bc23: add ebx, strict byte 0x1
..@0x804bc26: cmp ebx, strict byte 0x1e
..@0x804bc29: db 0x74, 0x3c  ;; jz A.code+0x804bc67
..@0x804bc2b: nop
..@0x804bc2c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bc30: db 0x8b, 0x0c, 0x9d, 0x7c, 0x18, 0x71, 0x09  ;; mov ecx,[ebx*4+0x971187c]
..@0x804bc37: db 0x89, 0xda  ;; mov edx,ebx
..@0x804bc39: db 0x3b, 0x0c, 0x9d, 0x80, 0x18, 0x71, 0x09  ;; cmp ecx,[ebx*4+0x9711880]
..@0x804bc40: db 0x7e, 0x0f  ;; jng A.code+0x804bc51
..@0x804bc42: db 0xeb, 0x15  ;; jmp short A.code+0x804bc59
..@0x804bc44: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bc48: db 0x3b, 0x0c, 0x95, 0x80, 0x18, 0x71, 0x09  ;; cmp ecx,[edx*4+0x9711880]
..@0x804bc4f: db 0x7f, 0x08  ;; jg A.code+0x804bc59
..@0x804bc51: add edx, strict byte 0x1
..@0x804bc54: cmp edx, strict byte 0x1e
..@0x804bc57: db 0x75, 0xef  ;; jnz A.code+0x804bc48
..@0x804bc59: db 0x88, 0x93, 0x9f, 0x9d, 0x83, 0x09  ;; mov [ebx+0x9839d9f],dl
..@0x804bc5f: add ebx, strict byte 0x1
..@0x804bc62: cmp ebx, strict byte 0x1e
..@0x804bc65: db 0x75, 0xc9  ;; jnz A.code+0x804bc30
..@0x804bc67: db 0xc6, 0x05, 0xbd, 0x9d, 0x83, 0x09, 0x1e  ;; mov byte [0x9839dbd],0x1e
..@0x804bc6e: db 0x69, 0xd8, 0x18, 0x0a, 0x00, 0x00  ;; imul ebx,eax,dword 0xa18
..@0x804bc74: db 0xb9, 0xc0, 0x9f, 0x83, 0x09  ;; mov ecx,0x9839fc0
..@0x804bc79: db 0xba, 0x1e, 0x01, 0x00, 0x00  ;; mov edx,0x11e
..@0x804bc7e: db 0x8d, 0x83, 0xc0, 0x0b, 0x06, 0x08  ;; lea eax,[ebx+0x8060bc0]
..@0x804bc84: call R.code+0x804bae0
..@0x804bc89: db 0x8d, 0x83, 0x40, 0x10, 0x06, 0x08  ;; lea eax,[ebx+0x8061040]
..@0x804bc8f: pop ebx
..@0x804bc90: db 0xb9, 0x40, 0xa4, 0x83, 0x09  ;; mov ecx,0x983a440
..@0x804bc95: db 0xba, 0x1e, 0x00, 0x00, 0x00  ;; mov edx,0x1e
..@0x804bc9a: jmp strict near R.code+0x804bae0
..@0x804bc9f: nop
..@0x804bca0: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x804bca4: db 0x83, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x01  ;; add dword [0x860cae0],byte +0x1
..@0x804bcab: db 0x83, 0x04, 0x85, 0xe0, 0xc6, 0x60, 0x08, 0x01  ;; add dword [eax*4+0x860c6e0],byte +0x1
..@0x804bcb3: ret
..@0x804bcb4: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804bcba: db 0x8d, 0xbf, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804bcc0: db 0x89, 0xc2  ;; mov edx,eax
..@0x804bcc2: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804bcc4: db 0xc1, 0xfa, 0x0b  ;; sar edx,byte 0xb
..@0x804bcc7: db 0xc1, 0xf9, 0x16  ;; sar ecx,byte 0x16
..@0x804bcca: db 0x31, 0xca  ;; xor edx,ecx
..@0x804bccc: db 0x29, 0xc2  ;; sub edx,eax
..@0x804bcce: db 0x81, 0xe2, 0xff, 0x07, 0x00, 0x00  ;; and edx,0x7ff
..@0x804bcd4: db 0x8b, 0x14, 0x95, 0x80, 0xda, 0x05, 0x08  ;; mov edx,[edx*4+0x805da80]
..@0x804bcdb: db 0x85, 0xd2  ;; test edx,edx
..@0x804bcdd: db 0x78, 0x21  ;; js A.code+0x804bd00
..@0x804bcdf: db 0x8b, 0x0d, 0xe4, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e0e4]
..@0x804bce5: db 0x39, 0x04, 0x91  ;; cmp [ecx+edx*4],eax
..@0x804bce8: db 0x75, 0x0b  ;; jnz A.code+0x804bcf5
..@0x804bcea: db 0xeb, 0x19  ;; jmp short A.code+0x804bd05
..@0x804bcec: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bcf0: db 0x39, 0x04, 0x91  ;; cmp [ecx+edx*4],eax
..@0x804bcf3: db 0x74, 0x10  ;; jz A.code+0x804bd05
..@0x804bcf5: db 0x8b, 0x14, 0x95, 0x80, 0xfa, 0x05, 0x08  ;; mov edx,[edx*4+0x805fa80]
..@0x804bcfc: db 0x85, 0xd2  ;; test edx,edx
..@0x804bcfe: db 0x79, 0xf0  ;; jns A.code+0x804bcf0
..@0x804bd00: db 0xba, 0xff, 0xff, 0xff, 0xff  ;; mov edx,0xffffffff
..@0x804bd05: db 0x89, 0xd0  ;; mov eax,edx
..@0x804bd07: ret
..@0x804bd08: nop
..@0x804bd09: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804bd10: db 0xa1, 0xa8, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a8]
..@0x804bd15: db 0x8b, 0x0d, 0xa4, 0x06, 0x06, 0x08  ;; mov ecx,[0x80606a4]
..@0x804bd1b: db 0x8b, 0x54, 0x24, 0x04  ;; mov edx,[esp+0x4]
..@0x804bd1f: db 0x88, 0x14, 0x01  ;; mov [ecx+eax],dl
..@0x804bd22: add eax, strict byte 0x1
..@0x804bd25: db 0xa3, 0xa8, 0x06, 0x06, 0x08  ;; mov [0x80606a8],eax
..@0x804bd2a: ret
..@0x804bd2b: nop
..@0x804bd2c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bd30: push ebp
..@0x804bd31: push edi
..@0x804bd32: push esi
..@0x804bd33: push ebx
..@0x804bd34: sub esp, strict byte 0x4c
..@0x804bd37: db 0x85, 0xd2  ;; test edx,edx
..@0x804bd39: db 0xc7, 0x05, 0xdc, 0xd2, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983d2dc],0x80000000
..@0x804bd41: db 0x00, 0x80
..@0x804bd43: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x804bd47: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804bd4b: db 0x89, 0x4c, 0x24, 0x30  ;; mov [esp+0x30],ecx
..@0x804bd4f: db 0xc7, 0x05, 0xe4, 0xd2, 0x83, 0x09, 0x3f, 0x02  ;; mov dword [0x983d2e4],0x23f
..@0x804bd57: db 0x00, 0x00
..@0x804bd59: db 0xc7, 0x05, 0xe0, 0xd2, 0x83, 0x09, 0x3f, 0x02  ;; mov dword [0x983d2e0],0x23f
..@0x804bd61: db 0x00, 0x00
..@0x804bd63: db 0xc7, 0x05, 0x68, 0xd7, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983d768],0x0
..@0x804bd6b: db 0x00, 0x00
..@0x804bd6d: db 0x0f, 0x8e, 0x85, 0x03, 0x00, 0x00  ;; jng near A.code+0x804c0f8
..@0x804bd73: sub edx, strict byte 0x1
..@0x804bd76: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x804bd7e: db 0xc7, 0x44, 0x24, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x0
..@0x804bd86: db 0x89, 0x54, 0x24, 0x3c  ;; mov [esp+0x3c],edx
..@0x804bd8a: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x804bd92: db 0x31, 0xff  ;; xor edi,edi
..@0x804bd94: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bd98: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804bd9c: db 0x8b, 0x34, 0xb8  ;; mov esi,[eax+edi*4]
..@0x804bd9f: db 0x85, 0xf6  ;; test esi,esi
..@0x804bda1: db 0x0f, 0x8e, 0x29, 0x02, 0x00, 0x00  ;; jng near A.code+0x804bfd0
..@0x804bda7: db 0x8d, 0x6f, 0x01  ;; lea ebp,[edi+0x1]
..@0x804bdaa: db 0x03, 0x74, 0x24, 0x2c  ;; add esi,[esp+0x2c]
..@0x804bdae: db 0x0f, 0xb6, 0x4c, 0x24, 0x28  ;; movzx ecx,byte [esp+0x28]
..@0x804bdb3: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804bdb5: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x804bdb7: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x804bdbc: db 0xd1, 0xf8  ;; sar eax,1
..@0x804bdbe: db 0x8b, 0x14, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov edx,[eax*4+0x983d2e0]
..@0x804bdc5: db 0xd3, 0xfe  ;; sar esi,cl
..@0x804bdc7: db 0x89, 0x34, 0xbd, 0xe0, 0xc9, 0x83, 0x09  ;; mov [edi*4+0x983c9e0],esi
..@0x804bdce: db 0x3b, 0x34, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; cmp esi,[edx*4+0x983c9e0]
..@0x804bdd5: db 0x7c, 0x0b  ;; jl A.code+0x804bde2
..@0x804bdd7: jmp strict near R.code+0x804bfde
..@0x804bddc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804bde0: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804bde2: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804bde4: db 0x89, 0x14, 0x9d, 0xe0, 0xd2, 0x83, 0x09  ;; mov [ebx*4+0x983d2e0],edx
..@0x804bdeb: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804bded: db 0xd1, 0xf9  ;; sar ecx,1
..@0x804bdef: db 0x8b, 0x14, 0x8d, 0xe0, 0xd2, 0x83, 0x09  ;; mov edx,[ecx*4+0x983d2e0]
..@0x804bdf6: db 0x3b, 0x34, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; cmp esi,[edx*4+0x983c9e0]
..@0x804bdfd: db 0x7c, 0xe1  ;; jl A.code+0x804bde0
..@0x804bdff: db 0x3b, 0x6c, 0x24, 0x20  ;; cmp ebp,[esp+0x20]
..@0x804be03: db 0x89, 0x3c, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov [eax*4+0x983d2e0],edi
..@0x804be0a: db 0xc7, 0x04, 0xbd, 0xe8, 0xd2, 0x83, 0x09, 0x3f  ;; mov dword [edi*4+0x983d2e8],0x23f
..@0x804be12: db 0x02, 0x00, 0x00
..@0x804be15: db 0x89, 0xef  ;; mov edi,ebp
..@0x804be17: db 0x0f, 0x85, 0x7b, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804bd98
..@0x804be1d: db 0x83, 0x7c, 0x24, 0x1c, 0x01  ;; cmp dword [esp+0x1c],byte +0x1
..@0x804be22: db 0x89, 0x2d, 0x68, 0xd7, 0x83, 0x09  ;; mov [0x983d768],ebp
..@0x804be28: db 0x0f, 0x8e, 0x27, 0x03, 0x00, 0x00  ;; jng near A.code+0x804c155
..@0x804be2e: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804be32: db 0x03, 0x54, 0x24, 0x1c  ;; add edx,[esp+0x1c]
..@0x804be36: db 0x89, 0x54, 0x24, 0x34  ;; mov [esp+0x34],edx
..@0x804be3a: sub edx, strict byte 0x2
..@0x804be3d: db 0x39, 0x54, 0x24, 0x20  ;; cmp [esp+0x20],edx
..@0x804be41: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x804be45: db 0x0f, 0x8f, 0xb3, 0x00, 0x00, 0x00  ;; jg near A.code+0x804befe
..@0x804be4b: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x804be4f: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x804be53: sub ebx, strict byte 0x1
..@0x804be56: db 0x89, 0x5c, 0x24, 0x1c  ;; mov [esp+0x1c],ebx
..@0x804be5a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804be60: call R.code+0x804ba10
..@0x804be65: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804be67: db 0x89, 0x3c, 0x85, 0x80, 0xd7, 0x83, 0x09  ;; mov [eax*4+0x983d780],edi
..@0x804be6e: call R.code+0x804ba10
..@0x804be73: db 0x8b, 0x2d, 0x68, 0xd7, 0x83, 0x09  ;; mov ebp,[0x983d768]
..@0x804be79: db 0x8b, 0x34, 0x9d, 0xe0, 0xc9, 0x83, 0x09  ;; mov esi,[ebx*4+0x983c9e0]
..@0x804be80: db 0x89, 0x3c, 0x85, 0x80, 0xd7, 0x83, 0x09  ;; mov [eax*4+0x983d780],edi
..@0x804be87: db 0x8d, 0x5d, 0x01  ;; lea ebx,[ebp+0x1]
..@0x804be8a: db 0x03, 0x34, 0x85, 0xe0, 0xc9, 0x83, 0x09  ;; add esi,[eax*4+0x983c9e0]
..@0x804be91: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804be93: db 0x89, 0x1d, 0x68, 0xd7, 0x83, 0x09  ;; mov [0x983d768],ebx
..@0x804be99: db 0xd1, 0xf8  ;; sar eax,1
..@0x804be9b: db 0x8b, 0x14, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov edx,[eax*4+0x983d2e0]
..@0x804bea2: db 0x89, 0x34, 0xbd, 0xe0, 0xc9, 0x83, 0x09  ;; mov [edi*4+0x983c9e0],esi
..@0x804bea9: db 0x3b, 0x34, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; cmp esi,[edx*4+0x983c9e0]
..@0x804beb0: db 0x7c, 0x10  ;; jl A.code+0x804bec2
..@0x804beb2: jmp strict near R.code+0x804bfe5
..@0x804beb7: db 0x89, 0xf6  ;; mov esi,esi
..@0x804beb9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804bec0: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804bec2: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804bec4: db 0x89, 0x14, 0x9d, 0xe0, 0xd2, 0x83, 0x09  ;; mov [ebx*4+0x983d2e0],edx
..@0x804becb: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804becd: db 0xd1, 0xf9  ;; sar ecx,1
..@0x804becf: db 0x8b, 0x14, 0x8d, 0xe0, 0xd2, 0x83, 0x09  ;; mov edx,[ecx*4+0x983d2e0]
..@0x804bed6: db 0x3b, 0x34, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; cmp esi,[edx*4+0x983c9e0]
..@0x804bedd: db 0x7c, 0xe1  ;; jl A.code+0x804bec0
..@0x804bedf: db 0x89, 0x3c, 0x85, 0xe0, 0xd2, 0x83, 0x09  ;; mov [eax*4+0x983d2e0],edi
..@0x804bee6: add edi, strict byte 0x1
..@0x804bee9: db 0xc7, 0x04, 0xad, 0xe8, 0xd2, 0x83, 0x09, 0x3f  ;; mov dword [ebp*4+0x983d2e8],0x23f
..@0x804bef1: db 0x02, 0x00, 0x00
..@0x804bef4: db 0x3b, 0x7c, 0x24, 0x1c  ;; cmp edi,[esp+0x1c]
..@0x804bef8: db 0x0f, 0x85, 0x62, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804be60
..@0x804befe: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x804bf02: db 0x8b, 0x4c, 0x24, 0x38  ;; mov ecx,[esp+0x38]
..@0x804bf06: sub eax, strict byte 0x3
..@0x804bf09: db 0xc7, 0x04, 0x8d, 0xe0, 0xc9, 0x83, 0x09, 0x00  ;; mov dword [ecx*4+0x983c9e0],0x0
..@0x804bf11: db 0x00, 0x00, 0x00
..@0x804bf14: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x804bf18: db 0x7f, 0x25  ;; jg A.code+0x804bf3f
..@0x804bf1a: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x804bf1e: dw 0x9066  ;; o16 nop
..@0x804bf20: db 0x8b, 0x14, 0x85, 0x80, 0xd7, 0x83, 0x09  ;; mov edx,[eax*4+0x983d780]
..@0x804bf27: db 0x8b, 0x14, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; mov edx,[edx*4+0x983c9e0]
..@0x804bf2e: add edx, strict byte 0x1
..@0x804bf31: db 0x89, 0x14, 0x85, 0xe0, 0xc9, 0x83, 0x09  ;; mov [eax*4+0x983c9e0],edx
..@0x804bf38: sub eax, strict byte 0x1
..@0x804bf3b: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804bf3d: db 0x75, 0xe1  ;; jnz A.code+0x804bf20
..@0x804bf3f: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x804bf43: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804bf45: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804bf49: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804bf4d: db 0xeb, 0x22  ;; jmp short A.code+0x804bf71
..@0x804bf4f: nop
..@0x804bf50: db 0x8b, 0x14, 0x85, 0x80, 0xd7, 0x83, 0x09  ;; mov edx,[eax*4+0x983d780]
..@0x804bf57: db 0x8b, 0x14, 0x95, 0xe0, 0xc9, 0x83, 0x09  ;; mov edx,[edx*4+0x983c9e0]
..@0x804bf5e: add edx, strict byte 0x1
..@0x804bf61: db 0x39, 0xd1  ;; cmp ecx,edx
..@0x804bf63: db 0x89, 0x14, 0x86  ;; mov [esi+eax*4],edx
..@0x804bf66: db 0x0f, 0x4c, 0xca  ;; cmovl ecx,edx
..@0x804bf69: sub eax, strict byte 0x1
..@0x804bf6c: cmp eax, strict byte -0x1
..@0x804bf6f: db 0x74, 0x16  ;; jz A.code+0x804bf87
..@0x804bf71: db 0x8b, 0x3c, 0x83  ;; mov edi,[ebx+eax*4]
..@0x804bf74: db 0x85, 0xff  ;; test edi,edi
..@0x804bf76: db 0x7f, 0xd8  ;; jg A.code+0x804bf50
..@0x804bf78: db 0xc7, 0x04, 0x86, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esi+eax*4],0x0
..@0x804bf7f: sub eax, strict byte 0x1
..@0x804bf82: cmp eax, strict byte -0x1
..@0x804bf85: db 0x75, 0xea  ;; jnz A.code+0x804bf71
..@0x804bf87: db 0x39, 0x4c, 0x24, 0x60  ;; cmp [esp+0x60],ecx
..@0x804bf8b: db 0x7f, 0x5f  ;; jg A.code+0x804bfec
..@0x804bf8d: db 0x0f, 0xb6, 0x4c, 0x24, 0x28  ;; movzx ecx,byte [esp+0x28]
..@0x804bf92: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804bf97: db 0xc7, 0x05, 0xdc, 0xd2, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983d2dc],0x80000000
..@0x804bf9f: db 0x00, 0x80
..@0x804bfa1: db 0x83, 0x44, 0x24, 0x28, 0x01  ;; add dword [esp+0x28],byte +0x1
..@0x804bfa6: db 0xc7, 0x05, 0xe4, 0xd2, 0x83, 0x09, 0x3f, 0x02  ;; mov dword [0x983d2e4],0x23f
..@0x804bfae: db 0x00, 0x00
..@0x804bfb0: db 0xc7, 0x05, 0xe0, 0xd2, 0x83, 0x09, 0x3f, 0x02  ;; mov dword [0x983d2e0],0x23f
..@0x804bfb8: db 0x00, 0x00
..@0x804bfba: db 0xc7, 0x05, 0x68, 0xd7, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983d768],0x0
..@0x804bfc2: db 0x00, 0x00
..@0x804bfc4: db 0xd3, 0xe0  ;; shl eax,cl
..@0x804bfc6: db 0x01, 0x44, 0x24, 0x2c  ;; add [esp+0x2c],eax
..@0x804bfca: jmp strict near R.code+0x804bd8a
..@0x804bfcf: nop
..@0x804bfd0: db 0xc7, 0x04, 0xbd, 0xe0, 0xc9, 0x83, 0x09, 0xff  ;; mov dword [edi*4+0x983c9e0],0x7fffffff
..@0x804bfd8: db 0xff, 0xff, 0x7f
..@0x804bfdb: db 0x8d, 0x6f, 0x01  ;; lea ebp,[edi+0x1]
..@0x804bfde: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804bfe0: jmp strict near R.code+0x804bdff
..@0x804bfe5: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804bfe7: jmp strict near R.code+0x804bedf
..@0x804bfec: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x804bff0: db 0xc7, 0x44, 0x24, 0x1c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x1
..@0x804bff8: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804bffc: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x804c000: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x804c004: db 0x8b, 0x44, 0x91, 0xfc  ;; mov eax,[ecx+edx*4-0x4]
..@0x804c008: sub ebx, strict byte 0x1
..@0x804c00b: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x804c00f: db 0x85, 0xc0  ;; test eax,eax
..@0x804c011: db 0x0f, 0x8e, 0xc3, 0x00, 0x00, 0x00  ;; jng near A.code+0x804c0da
..@0x804c017: db 0x39, 0x54, 0x24, 0x20  ;; cmp [esp+0x20],edx
..@0x804c01b: db 0x0f, 0x8e, 0xcf, 0x00, 0x00, 0x00  ;; jng near A.code+0x804c0f0
..@0x804c021: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x804c025: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x804c029: db 0x03, 0x44, 0x24, 0x2c  ;; add eax,[esp+0x2c]
..@0x804c02d: db 0x03, 0x14, 0x99  ;; add edx,[ecx+ebx*4]
..@0x804c030: db 0x0f, 0xb6, 0x4c, 0x24, 0x28  ;; movzx ecx,byte [esp+0x28]
..@0x804c035: db 0xd3, 0xfa  ;; sar edx,cl
..@0x804c037: db 0xd3, 0xf8  ;; sar eax,cl
..@0x804c039: db 0x39, 0xc2  ;; cmp edx,eax
..@0x804c03b: db 0x0f, 0x85, 0x84, 0x00, 0x00, 0x00  ;; jnz near A.code+0x804c0c5
..@0x804c041: db 0x89, 0x7c, 0x24, 0x34  ;; mov [esp+0x34],edi
..@0x804c045: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x804c049: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x804c04d: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804c051: db 0x8b, 0x6c, 0x24, 0x24  ;; mov ebp,[esp+0x24]
..@0x804c055: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x804c059: db 0xeb, 0x0c  ;; jmp short A.code+0x804c067
..@0x804c05b: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x804c05f: db 0x01, 0xd8  ;; add eax,ebx
..@0x804c061: db 0xd3, 0xf8  ;; sar eax,cl
..@0x804c063: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804c065: db 0x75, 0x54  ;; jnz A.code+0x804c0bb
..@0x804c067: add esi, strict byte 0x1
..@0x804c06a: db 0x39, 0xfe  ;; cmp esi,edi
..@0x804c06c: db 0x75, 0xed  ;; jnz A.code+0x804c05b
..@0x804c06e: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804c072: db 0x8b, 0x6c, 0x24, 0x1c  ;; mov ebp,[esp+0x1c]
..@0x804c076: db 0x8d, 0x5f, 0x04  ;; lea ebx,[edi+0x4]
..@0x804c079: db 0x89, 0x5c, 0x24, 0x34  ;; mov [esp+0x34],ebx
..@0x804c07d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804c07f: db 0x3b, 0x6c, 0x24, 0x30  ;; cmp ebp,[esp+0x30]
..@0x804c083: db 0x89, 0xf8  ;; mov eax,edi
..@0x804c085: db 0x7e, 0x1c  ;; jng A.code+0x804c0a3
..@0x804c087: db 0x89, 0xf6  ;; mov esi,esi
..@0x804c089: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804c090: db 0x8b, 0x08  ;; mov ecx,[eax]
..@0x804c092: db 0x8b, 0x1a  ;; mov ebx,[edx]
..@0x804c094: db 0x39, 0xd9  ;; cmp ecx,ebx
..@0x804c096: db 0x7e, 0x04  ;; jng A.code+0x804c09c
..@0x804c098: db 0x89, 0x18  ;; mov [eax],ebx
..@0x804c09a: db 0x89, 0x0a  ;; mov [edx],ecx
..@0x804c09c: add eax, strict byte 0x4
..@0x804c09f: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804c0a1: db 0x75, 0xed  ;; jnz A.code+0x804c090
..@0x804c0a3: add ebp, strict byte 0x1
..@0x804c0a6: add edx, strict byte 0x4
..@0x804c0a9: db 0x39, 0xf5  ;; cmp ebp,esi
..@0x804c0ab: db 0x75, 0xd2  ;; jnz A.code+0x804c07f
..@0x804c0ad: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x804c0b2: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804c0b6: jmp strict near R.code+0x804bff8
..@0x804c0bb: db 0x39, 0x74, 0x24, 0x1c  ;; cmp [esp+0x1c],esi
..@0x804c0bf: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804c0c3: db 0x7c, 0xad  ;; jl A.code+0x804c072
..@0x804c0c5: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x804c0ca: add edi, strict byte 0x4
..@0x804c0cd: db 0x89, 0x7c, 0x24, 0x34  ;; mov [esp+0x34],edi
..@0x804c0d1: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804c0d5: jmp strict near R.code+0x804bff8
..@0x804c0da: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804c0de: add edi, strict byte 0x4
..@0x804c0e1: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x804c0e6: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x804c0ea: db 0x0f, 0x8f, 0x08, 0xff, 0xff, 0xff  ;; jg near A.code+0x804bff8
..@0x804c0f0: add esp, strict byte 0x4c
..@0x804c0f3: pop ebx
..@0x804c0f4: pop esi
..@0x804c0f5: pop edi
..@0x804c0f6: pop ebp
..@0x804c0f7: ret
..@0x804c0f8: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804c0fc: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804c104: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x804c108: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x804c10b: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804c10f: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804c112: call B.code+memset
..@0x804c117: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x804c11c: db 0x8b, 0x68, 0x34  ;; mov ebp,[eax+0x34]
..@0x804c11f: db 0x85, 0xed  ;; test ebp,ebp
..@0x804c121: db 0x7e, 0xcd  ;; jng A.code+0x804c0f0
..@0x804c123: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x804c127: db 0xc7, 0x01, 0x01, 0x00, 0x00, 0x00  ;; mov dword [ecx],0x1
..@0x804c12d: db 0x8b, 0x50, 0x34  ;; mov edx,[eax+0x34]
..@0x804c130: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c132: cmp edx, strict byte 0x1
..@0x804c135: db 0x7e, 0xb9  ;; jng A.code+0x804c0f0
..@0x804c137: and eax, strict byte 0x1
..@0x804c13a: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x804c13e: cmp eax, strict byte 0x1
..@0x804c141: db 0x19, 0xc0  ;; sbb eax,eax
..@0x804c143: and eax, strict byte 0x4
..@0x804c146: db 0xc7, 0x04, 0x01, 0x01, 0x00, 0x00, 0x00  ;; mov dword [ecx+eax],0x1
..@0x804c14d: add esp, strict byte 0x4c
..@0x804c150: pop ebx
..@0x804c151: pop esi
..@0x804c152: pop edi
..@0x804c153: pop ebp
..@0x804c154: ret
..@0x804c155: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x804c159: db 0xc1, 0xe5, 0x02  ;; shl ebp,byte 0x2
..@0x804c15c: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x804c164: db 0x89, 0x6c, 0x24, 0x08  ;; mov [esp+0x8],ebp
..@0x804c168: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x804c16b: call B.code+memset
..@0x804c170: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804c174: db 0x85, 0xc0  ;; test eax,eax
..@0x804c176: db 0x74, 0x9f  ;; jz A.code+0x804c117
..@0x804c178: call R.code+0x804ba10
..@0x804c17d: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x804c181: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x804c187: db 0xc7, 0x04, 0x81, 0x01, 0x00, 0x00, 0x00  ;; mov dword [ecx+eax*4],0x1
..@0x804c18e: db 0x8b, 0x52, 0x34  ;; mov edx,[edx+0x34]
..@0x804c191: db 0xeb, 0x9f  ;; jmp short A.code+0x804c132
..@0x804c193: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c199: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804c1a0: push ebp
..@0x804c1a1: push edi
..@0x804c1a2: push esi
..@0x804c1a3: push ebx
..@0x804c1a4: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804c1a6: db 0x81, 0xec, 0xcc, 0x00, 0x00, 0x00  ;; sub esp,0xcc
..@0x804c1ac: db 0x8b, 0xb8, 0x74, 0x04, 0x00, 0x00  ;; mov edi,[eax+0x474]
..@0x804c1b2: db 0x85, 0xff  ;; test edi,edi
..@0x804c1b4: db 0x0f, 0x85, 0xb9, 0x05, 0x00, 0x00  ;; jnz near A.code+0x804c773
..@0x804c1ba: db 0xbf, 0x1e, 0x01, 0x00, 0x00  ;; mov edi,0x11e
..@0x804c1bf: db 0xeb, 0x13  ;; jmp short A.code+0x804c1d4
..@0x804c1c1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c1c8: db 0x81, 0xff, 0x01, 0x01, 0x00, 0x00  ;; cmp edi,0x101
..@0x804c1ce: db 0x0f, 0x84, 0x11, 0x05, 0x00, 0x00  ;; jz near A.code+0x804c6e5
..@0x804c1d4: sub edi, strict byte 0x1
..@0x804c1d7: db 0x8b, 0x74, 0xbb, 0xfc  ;; mov esi,[ebx+edi*4-0x4]
..@0x804c1db: db 0x85, 0xf6  ;; test esi,esi
..@0x804c1dd: db 0x74, 0xe9  ;; jz A.code+0x804c1c8
..@0x804c1df: db 0x8d, 0x87, 0xff, 0xfe, 0xff, 0xff  ;; lea eax,[edi-0x101]
..@0x804c1e5: db 0x8b, 0x8b, 0xf4, 0x04, 0x00, 0x00  ;; mov ecx,[ebx+0x4f4]
..@0x804c1eb: db 0xbe, 0x1e, 0x00, 0x00, 0x00  ;; mov esi,0x1e
..@0x804c1f0: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804c1f2: db 0x74, 0x15  ;; jz A.code+0x804c209
..@0x804c1f4: jmp strict near R.code+0x804c766
..@0x804c1f9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c200: cmp esi, strict byte 0x1
..@0x804c203: db 0x0f, 0x84, 0xcf, 0x04, 0x00, 0x00  ;; jz near A.code+0x804c6d8
..@0x804c209: sub esi, strict byte 0x1
..@0x804c20c: db 0x8b, 0x94, 0xb3, 0x7c, 0x04, 0x00, 0x00  ;; mov edx,[ebx+esi*4+0x47c]
..@0x804c213: db 0x85, 0xd2  ;; test edx,edx
..@0x804c215: db 0x74, 0xe9  ;; jz A.code+0x804c200
..@0x804c217: db 0x8d, 0x56, 0xff  ;; lea edx,[esi-0x1]
..@0x804c21a: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804c21e: db 0xba, 0x05, 0x00, 0x00, 0x00  ;; mov edx,0x5
..@0x804c223: call R.code+0x804b950
..@0x804c228: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804c22c: db 0xba, 0x05, 0x00, 0x00, 0x00  ;; mov edx,0x5
..@0x804c231: call R.code+0x804b950
..@0x804c236: db 0x8d, 0x04, 0xbb  ;; lea eax,[ebx+edi*4]
..@0x804c239: db 0x89, 0x44, 0x24, 0x18  ;; mov [esp+0x18],eax
..@0x804c23d: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c23f: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x804c243: nop
..@0x804c244: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c248: db 0x8b, 0x94, 0x83, 0x80, 0x04, 0x00, 0x00  ;; mov edx,[ebx+eax*4+0x480]
..@0x804c24f: db 0x89, 0x14, 0x81  ;; mov [ecx+eax*4],edx
..@0x804c252: add eax, strict byte 0x1
..@0x804c255: db 0x39, 0xf0  ;; cmp eax,esi
..@0x804c257: db 0x7c, 0xef  ;; jl A.code+0x804c248
..@0x804c259: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x804c25d: db 0x8d, 0x6c, 0x24, 0x74  ;; lea ebp,[esp+0x74]
..@0x804c261: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c268: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x804c26e: add eax, strict byte 0x4
..@0x804c271: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x804c273: db 0x75, 0xf3  ;; jnz A.code+0x804c268
..@0x804c275: db 0x01, 0xf7  ;; add edi,esi
..@0x804c277: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804c279: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c280: db 0x8d, 0x51, 0x01  ;; lea edx,[ecx+0x1]
..@0x804c283: db 0x39, 0xd7  ;; cmp edi,edx
..@0x804c285: db 0x0f, 0x8e, 0x1f, 0x04, 0x00, 0x00  ;; jng near A.code+0x804c6aa
..@0x804c28b: db 0x8b, 0x04, 0x93  ;; mov eax,[ebx+edx*4]
..@0x804c28e: db 0x8b, 0x34, 0x8b  ;; mov esi,[ebx+ecx*4]
..@0x804c291: db 0x39, 0xf0  ;; cmp eax,esi
..@0x804c293: db 0x0f, 0x85, 0x25, 0x04, 0x00, 0x00  ;; jnz near A.code+0x804c6be
..@0x804c299: db 0x89, 0xd6  ;; mov esi,edx
..@0x804c29b: db 0xeb, 0x08  ;; jmp short A.code+0x804c2a5
..@0x804c29d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c2a0: db 0x39, 0x04, 0xb3  ;; cmp [ebx+esi*4],eax
..@0x804c2a3: db 0x75, 0x07  ;; jnz A.code+0x804c2ac
..@0x804c2a5: add esi, strict byte 0x1
..@0x804c2a8: db 0x39, 0xfe  ;; cmp esi,edi
..@0x804c2aa: db 0x75, 0xf4  ;; jnz A.code+0x804c2a0
..@0x804c2ac: db 0x29, 0xce  ;; sub esi,ecx
..@0x804c2ae: db 0x85, 0xc0  ;; test eax,eax
..@0x804c2b0: db 0x0f, 0x85, 0x32, 0x02, 0x00, 0x00  ;; jnz near A.code+0x804c4e8
..@0x804c2b6: cmp esi, strict byte 0x2
..@0x804c2b9: db 0x0f, 0x8e, 0x29, 0x02, 0x00, 0x00  ;; jng near A.code+0x804c4e8
..@0x804c2bf: db 0x81, 0xfe, 0x8a, 0x00, 0x00, 0x00  ;; cmp esi,0x8a
..@0x804c2c5: db 0x0f, 0x8f, 0x4d, 0x03, 0x00, 0x00  ;; jg near A.code+0x804c618
..@0x804c2cb: cmp esi, strict byte 0xa
..@0x804c2ce: db 0x0f, 0x8f, 0xbd, 0x04, 0x00, 0x00  ;; jg near A.code+0x804c791
..@0x804c2d4: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804c2d6: db 0x74, 0x0c  ;; jz A.code+0x804c2e4
..@0x804c2d8: db 0x8b, 0x44, 0x8b, 0xfc  ;; mov eax,[ebx+ecx*4-0x4]
..@0x804c2dc: db 0x85, 0xc0  ;; test eax,eax
..@0x804c2de: db 0x0f, 0x84, 0xb0, 0x03, 0x00, 0x00  ;; jz near A.code+0x804c694
..@0x804c2e4: db 0x83, 0x44, 0x24, 0x6c, 0x01  ;; add dword [esp+0x6c],byte +0x1
..@0x804c2e9: sub esi, strict byte 0x1
..@0x804c2ec: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c2f0: db 0x8d, 0x4c, 0x0e, 0x01  ;; lea ecx,[esi+ecx+0x1]
..@0x804c2f4: db 0x39, 0xcf  ;; cmp edi,ecx
..@0x804c2f6: db 0x7f, 0x88  ;; jg A.code+0x804c280
..@0x804c2f8: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804c2fa: db 0xba, 0x13, 0x00, 0x00, 0x00  ;; mov edx,0x13
..@0x804c2ff: db 0xc7, 0x04, 0x24, 0x08, 0x00, 0x00, 0x00  ;; mov dword [esp],0x8
..@0x804c306: db 0x8d, 0x44, 0x24, 0x28  ;; lea eax,[esp+0x28]
..@0x804c30a: call R.code+0x804bd30
..@0x804c30f: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c311: db 0xba, 0x13, 0x00, 0x00, 0x00  ;; mov edx,0x13
..@0x804c316: db 0x8d, 0x4c, 0x24, 0x28  ;; lea ecx,[esp+0x28]
..@0x804c31a: db 0xbd, 0x13, 0x00, 0x00, 0x00  ;; mov ebp,0x13
..@0x804c31f: call R.code+0x804bae0
..@0x804c324: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c328: db 0x8b, 0x04, 0xad, 0xbc, 0xb6, 0x05, 0x08  ;; mov eax,[ebp*4+code_ptr_0x805b6bc]
..@0x804c32f: db 0x8b, 0x44, 0x84, 0x74  ;; mov eax,[esp+eax*4+0x74]
..@0x804c333: db 0x85, 0xc0  ;; test eax,eax
..@0x804c335: db 0x0f, 0x85, 0x95, 0x03, 0x00, 0x00  ;; jnz near A.code+0x804c6d0
..@0x804c33b: sub ebp, strict byte 0x1
..@0x804c33e: cmp ebp, strict byte 0x4
..@0x804c341: db 0x75, 0xe5  ;; jnz A.code+0x804c328
..@0x804c343: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c345: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x804c34a: db 0x31, 0xf6  ;; xor esi,esi
..@0x804c34c: call R.code+0x804b950
..@0x804c351: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c358: db 0x8b, 0x04, 0xb5, 0xc0, 0xb6, 0x05, 0x08  ;; mov eax,[esi*4+0x805b6c0]
..@0x804c35f: db 0xba, 0x03, 0x00, 0x00, 0x00  ;; mov edx,0x3
..@0x804c364: add esi, strict byte 0x1
..@0x804c367: db 0x8b, 0x44, 0x84, 0x74  ;; mov eax,[esp+eax*4+0x74]
..@0x804c36b: call R.code+0x804b950
..@0x804c370: db 0x39, 0xee  ;; cmp esi,ebp
..@0x804c372: db 0x7c, 0xe4  ;; jl A.code+0x804c358
..@0x804c374: db 0x31, 0xf6  ;; xor esi,esi
..@0x804c376: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c379: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804c380: db 0x8d, 0x6e, 0x01  ;; lea ebp,[esi+0x1]
..@0x804c383: db 0x39, 0xef  ;; cmp edi,ebp
..@0x804c385: db 0x0f, 0x8e, 0x29, 0x03, 0x00, 0x00  ;; jng near A.code+0x804c6b4
..@0x804c38b: db 0x8b, 0x0c, 0xab  ;; mov ecx,[ebx+ebp*4]
..@0x804c38e: db 0x8b, 0x04, 0xb3  ;; mov eax,[ebx+esi*4]
..@0x804c391: db 0x39, 0xc1  ;; cmp ecx,eax
..@0x804c393: db 0x0f, 0x85, 0x2e, 0x03, 0x00, 0x00  ;; jnz near A.code+0x804c6c7
..@0x804c399: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c39b: db 0xeb, 0x08  ;; jmp short A.code+0x804c3a5
..@0x804c39d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c3a0: db 0x39, 0x0c, 0x83  ;; cmp [ebx+eax*4],ecx
..@0x804c3a3: db 0x75, 0x07  ;; jnz A.code+0x804c3ac
..@0x804c3a5: add eax, strict byte 0x1
..@0x804c3a8: db 0x39, 0xf8  ;; cmp eax,edi
..@0x804c3aa: db 0x75, 0xf4  ;; jnz A.code+0x804c3a0
..@0x804c3ac: db 0x29, 0xf0  ;; sub eax,esi
..@0x804c3ae: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804c3b0: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x804c3b4: db 0x0f, 0x85, 0x9e, 0x00, 0x00, 0x00  ;; jnz near A.code+0x804c458
..@0x804c3ba: cmp eax, strict byte 0x2
..@0x804c3bd: db 0x0f, 0x8e, 0x95, 0x00, 0x00, 0x00  ;; jng near A.code+0x804c458
..@0x804c3c3: db 0x3d, 0x8a, 0x00, 0x00, 0x00  ;; cmp eax,0x8a
..@0x804c3c8: db 0x0f, 0x8f, 0x62, 0x02, 0x00, 0x00  ;; jg near A.code+0x804c630
..@0x804c3ce: cmp eax, strict byte 0xa
..@0x804c3d1: db 0x0f, 0x8f, 0xab, 0x03, 0x00, 0x00  ;; jg near A.code+0x804c782
..@0x804c3d7: db 0x85, 0xf6  ;; test esi,esi
..@0x804c3d9: db 0x7e, 0x13  ;; jng A.code+0x804c3ee
..@0x804c3db: db 0x8b, 0x44, 0xb3, 0xfc  ;; mov eax,[ebx+esi*4-0x4]
..@0x804c3df: db 0x85, 0xc0  ;; test eax,eax
..@0x804c3e1: db 0x75, 0x0b  ;; jnz A.code+0x804c3ee
..@0x804c3e3: db 0x83, 0x7c, 0x24, 0x14, 0x06  ;; cmp dword [esp+0x14],byte +0x6
..@0x804c3e8: db 0x0f, 0x8e, 0xfe, 0x02, 0x00, 0x00  ;; jng near A.code+0x804c6ec
..@0x804c3ee: db 0x8b, 0x94, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb8]
..@0x804c3f5: db 0x8b, 0x44, 0x24, 0x6c  ;; mov eax,[esp+0x6c]
..@0x804c3f9: call R.code+0x804b950
..@0x804c3fe: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804c402: db 0xba, 0x03, 0x00, 0x00, 0x00  ;; mov edx,0x3
..@0x804c407: sub eax, strict byte 0x3
..@0x804c40a: call R.code+0x804b950
..@0x804c40f: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x804c413: sub ecx, strict byte 0x1
..@0x804c416: db 0x8d, 0x74, 0x0e, 0x01  ;; lea esi,[esi+ecx+0x1]
..@0x804c41a: db 0x39, 0xf7  ;; cmp edi,esi
..@0x804c41c: db 0x0f, 0x8f, 0x5e, 0xff, 0xff, 0xff  ;; jg near A.code+0x804c380
..@0x804c422: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x804c426: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804c42a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c430: db 0x8b, 0x0c, 0x82  ;; mov ecx,[edx+eax*4]
..@0x804c433: db 0x89, 0x8c, 0x83, 0x80, 0x04, 0x00, 0x00  ;; mov [ebx+eax*4+0x480],ecx
..@0x804c43a: db 0xc7, 0x04, 0x82, 0x00, 0x00, 0x00, 0x00  ;; mov dword [edx+eax*4],0x0
..@0x804c441: sub eax, strict byte 0x1
..@0x804c444: cmp eax, strict byte -0x1
..@0x804c447: db 0x75, 0xe7  ;; jnz A.code+0x804c430
..@0x804c449: db 0x81, 0xc4, 0xcc, 0x00, 0x00, 0x00  ;; add esp,0xcc
..@0x804c44f: pop ebx
..@0x804c450: pop esi
..@0x804c451: pop edi
..@0x804c452: pop ebp
..@0x804c453: ret
..@0x804c454: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c458: db 0x85, 0xf6  ;; test esi,esi
..@0x804c45a: db 0x7e, 0x0a  ;; jng A.code+0x804c466
..@0x804c45c: db 0x39, 0x4c, 0xb3, 0xfc  ;; cmp [ebx+esi*4-0x4],ecx
..@0x804c460: db 0x0f, 0x84, 0x02, 0x01, 0x00, 0x00  ;; jz near A.code+0x804c568
..@0x804c466: db 0x83, 0x7c, 0x24, 0x14, 0x03  ;; cmp dword [esp+0x14],byte +0x3
..@0x804c46b: db 0x0f, 0x8e, 0xcf, 0x00, 0x00, 0x00  ;; jng near A.code+0x804c540
..@0x804c471: db 0x8b, 0x54, 0x8c, 0x74  ;; mov edx,[esp+ecx*4+0x74]
..@0x804c475: db 0x8b, 0x44, 0x8c, 0x28  ;; mov eax,[esp+ecx*4+0x28]
..@0x804c479: call R.code+0x804b950
..@0x804c47e: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x804c482: db 0xb8, 0xab, 0xaa, 0xaa, 0x2a  ;; mov eax,0x2aaaaaab
..@0x804c487: sub esi, strict byte 0x1
..@0x804c48a: db 0xf7, 0xee  ;; imul esi
..@0x804c48c: db 0x89, 0xf0  ;; mov eax,esi
..@0x804c48e: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x804c491: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c493: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x804c496: db 0x89, 0xf2  ;; mov edx,esi
..@0x804c498: db 0x01, 0xc0  ;; add eax,eax
..@0x804c49a: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c49c: db 0x89, 0xd0  ;; mov eax,edx
..@0x804c49e: db 0x8b, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb4]
..@0x804c4a5: cmp eax, strict byte 0x2
..@0x804c4a8: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804c4ac: db 0x0f, 0x84, 0xbb, 0x01, 0x00, 0x00  ;; jz near A.code+0x804c66d
..@0x804c4b2: call R.code+0x804b950
..@0x804c4b7: cmp esi, strict byte 0x6
..@0x804c4ba: db 0xb9, 0x05, 0x00, 0x00, 0x00  ;; mov ecx,0x5
..@0x804c4bf: db 0xb8, 0x03, 0x00, 0x00, 0x00  ;; mov eax,0x3
..@0x804c4c4: db 0x0f, 0x8e, 0xb7, 0x01, 0x00, 0x00  ;; jng near A.code+0x804c681
..@0x804c4ca: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c4cf: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x804c4d3: call R.code+0x804b950
..@0x804c4d8: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x804c4dc: db 0x8d, 0x74, 0x0d, 0x01  ;; lea esi,[ebp+ecx+0x1]
..@0x804c4e0: jmp strict near R.code+0x804c41a
..@0x804c4e5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c4e8: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804c4ea: db 0x74, 0x0a  ;; jz A.code+0x804c4f6
..@0x804c4ec: db 0x39, 0x44, 0x8b, 0xfc  ;; cmp [ebx+ecx*4-0x4],eax
..@0x804c4f0: db 0x0f, 0x84, 0xda, 0x00, 0x00, 0x00  ;; jz near A.code+0x804c5d0
..@0x804c4f6: cmp esi, strict byte 0x3
..@0x804c4f9: db 0x7e, 0x5d  ;; jng A.code+0x804c558
..@0x804c4fb: db 0x83, 0x44, 0x84, 0x28, 0x01  ;; add dword [esp+eax*4+0x28],byte +0x1
..@0x804c500: sub esi, strict byte 0x1
..@0x804c503: db 0xb8, 0xab, 0xaa, 0xaa, 0x2a  ;; mov eax,0x2aaaaaab
..@0x804c508: db 0xf7, 0xee  ;; imul esi
..@0x804c50a: db 0x89, 0xf0  ;; mov eax,esi
..@0x804c50c: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x804c50f: db 0x83, 0x44, 0x24, 0x68, 0x01  ;; add dword [esp+0x68],byte +0x1
..@0x804c514: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c516: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x804c519: db 0x89, 0xf2  ;; mov edx,esi
..@0x804c51b: db 0x01, 0xc0  ;; add eax,eax
..@0x804c51d: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c51f: cmp edx, strict byte 0x2
..@0x804c522: db 0x0f, 0x84, 0x3b, 0x01, 0x00, 0x00  ;; jz near A.code+0x804c663
..@0x804c528: cmp esi, strict byte 0x7
..@0x804c52b: db 0xb8, 0x06, 0x00, 0x00, 0x00  ;; mov eax,0x6
..@0x804c530: db 0x0f, 0x4d, 0xf0  ;; cmovnl esi,eax
..@0x804c533: jmp strict near R.code+0x804c2f0
..@0x804c538: nop
..@0x804c539: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c540: db 0x8b, 0x54, 0x8c, 0x74  ;; mov edx,[esp+ecx*4+0x74]
..@0x804c544: db 0x89, 0xee  ;; mov esi,ebp
..@0x804c546: db 0x8b, 0x44, 0x8c, 0x28  ;; mov eax,[esp+ecx*4+0x28]
..@0x804c54a: call R.code+0x804b950
..@0x804c54f: jmp strict near R.code+0x804c41a
..@0x804c554: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c558: db 0x83, 0x44, 0x84, 0x28, 0x01  ;; add dword [esp+eax*4+0x28],byte +0x1
..@0x804c55d: db 0x89, 0xd1  ;; mov ecx,edx
..@0x804c55f: jmp strict near R.code+0x804c2f4
..@0x804c564: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c568: db 0x83, 0x7c, 0x24, 0x14, 0x02  ;; cmp dword [esp+0x14],byte +0x2
..@0x804c56d: db 0x7e, 0xd1  ;; jng A.code+0x804c540
..@0x804c56f: db 0xb8, 0xab, 0xaa, 0xaa, 0x2a  ;; mov eax,0x2aaaaaab
..@0x804c574: db 0xf7, 0x6c, 0x24, 0x14  ;; imul dword [esp+0x14]
..@0x804c578: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804c57c: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x804c57f: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c581: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x804c584: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x804c588: db 0x01, 0xc0  ;; add eax,eax
..@0x804c58a: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c58c: db 0x89, 0xd0  ;; mov eax,edx
..@0x804c58e: db 0x8b, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb4]
..@0x804c595: cmp eax, strict byte 0x2
..@0x804c598: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804c59c: db 0x0f, 0x84, 0x77, 0x01, 0x00, 0x00  ;; jz near A.code+0x804c719
..@0x804c5a2: call R.code+0x804b950
..@0x804c5a7: db 0x83, 0x7c, 0x24, 0x14, 0x06  ;; cmp dword [esp+0x14],byte +0x6
..@0x804c5ac: db 0xbd, 0x05, 0x00, 0x00, 0x00  ;; mov ebp,0x5
..@0x804c5b1: db 0xb8, 0x03, 0x00, 0x00, 0x00  ;; mov eax,0x3
..@0x804c5b6: db 0x0f, 0x8e, 0x89, 0x01, 0x00, 0x00  ;; jng near A.code+0x804c745
..@0x804c5bc: db 0x8d, 0x74, 0x2e, 0x01  ;; lea esi,[esi+ebp+0x1]
..@0x804c5c0: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c5c5: call R.code+0x804b950
..@0x804c5ca: jmp strict near R.code+0x804c41a
..@0x804c5cf: nop
..@0x804c5d0: cmp esi, strict byte 0x2
..@0x804c5d3: db 0x0f, 0x8e, 0x7f, 0xff, 0xff, 0xff  ;; jng near A.code+0x804c558
..@0x804c5d9: db 0x83, 0x44, 0x24, 0x68, 0x01  ;; add dword [esp+0x68],byte +0x1
..@0x804c5de: db 0xb8, 0xab, 0xaa, 0xaa, 0x2a  ;; mov eax,0x2aaaaaab
..@0x804c5e3: db 0xf7, 0xee  ;; imul esi
..@0x804c5e5: db 0x89, 0xf0  ;; mov eax,esi
..@0x804c5e7: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x804c5ea: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c5ec: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x804c5ef: db 0x89, 0xf2  ;; mov edx,esi
..@0x804c5f1: db 0x01, 0xc0  ;; add eax,eax
..@0x804c5f3: db 0x29, 0xc2  ;; sub edx,eax
..@0x804c5f5: cmp edx, strict byte 0x2
..@0x804c5f8: db 0x0f, 0x84, 0x3d, 0x01, 0x00, 0x00  ;; jz near A.code+0x804c73b
..@0x804c5fe: db 0x8d, 0x56, 0xff  ;; lea edx,[esi-0x1]
..@0x804c601: db 0xb8, 0x05, 0x00, 0x00, 0x00  ;; mov eax,0x5
..@0x804c606: cmp esi, strict byte 0x6
..@0x804c609: db 0x0f, 0x4e, 0xc2  ;; cmovng eax,edx
..@0x804c60c: db 0x8d, 0x4c, 0x01, 0x01  ;; lea ecx,[ecx+eax+0x1]
..@0x804c610: jmp strict near R.code+0x804c2f4
..@0x804c615: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c618: db 0xbe, 0x89, 0x00, 0x00, 0x00  ;; mov esi,0x89
..@0x804c61d: db 0x83, 0x44, 0x24, 0x70, 0x01  ;; add dword [esp+0x70],byte +0x1
..@0x804c622: jmp strict near R.code+0x804c2f0
..@0x804c627: db 0x89, 0xf6  ;; mov esi,esi
..@0x804c629: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804c630: db 0xb9, 0x89, 0x00, 0x00, 0x00  ;; mov ecx,0x89
..@0x804c635: db 0xbd, 0x7f, 0x00, 0x00, 0x00  ;; mov ebp,0x7f
..@0x804c63a: db 0x8b, 0x94, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xbc]
..@0x804c641: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x804c645: db 0x8b, 0x44, 0x24, 0x70  ;; mov eax,[esp+0x70]
..@0x804c649: call R.code+0x804b950
..@0x804c64e: db 0xba, 0x07, 0x00, 0x00, 0x00  ;; mov edx,0x7
..@0x804c653: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c655: call R.code+0x804b950
..@0x804c65a: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x804c65e: jmp strict near R.code+0x804c416
..@0x804c663: db 0xbe, 0x05, 0x00, 0x00, 0x00  ;; mov esi,0x5
..@0x804c668: jmp strict near R.code+0x804c2f0
..@0x804c66d: call R.code+0x804b950
..@0x804c672: db 0xb9, 0x04, 0x00, 0x00, 0x00  ;; mov ecx,0x4
..@0x804c677: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x804c67c: jmp strict near R.code+0x804c4ca
..@0x804c681: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804c685: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x804c689: sub eax, strict byte 0x4
..@0x804c68c: sub ecx, strict byte 0x2
..@0x804c68f: jmp strict near R.code+0x804c4ca
..@0x804c694: cmp esi, strict byte 0x6
..@0x804c697: db 0x0f, 0x8f, 0x47, 0xfc, 0xff, 0xff  ;; jg near A.code+0x804c2e4
..@0x804c69d: db 0x83, 0x44, 0x24, 0x68, 0x01  ;; add dword [esp+0x68],byte +0x1
..@0x804c6a2: sub esi, strict byte 0x1
..@0x804c6a5: jmp strict near R.code+0x804c2f0
..@0x804c6aa: db 0x8b, 0x04, 0x8b  ;; mov eax,[ebx+ecx*4]
..@0x804c6ad: db 0x89, 0xd6  ;; mov esi,edx
..@0x804c6af: jmp strict near R.code+0x804c2ac
..@0x804c6b4: db 0x8b, 0x0c, 0xb3  ;; mov ecx,[ebx+esi*4]
..@0x804c6b7: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c6b9: jmp strict near R.code+0x804c3ac
..@0x804c6be: db 0x89, 0xf0  ;; mov eax,esi
..@0x804c6c0: db 0x89, 0xd6  ;; mov esi,edx
..@0x804c6c2: jmp strict near R.code+0x804c2ac
..@0x804c6c7: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804c6c9: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c6cb: jmp strict near R.code+0x804c3ac
..@0x804c6d0: db 0x8d, 0x45, 0xfc  ;; lea eax,[ebp-0x4]
..@0x804c6d3: jmp strict near R.code+0x804c345
..@0x804c6d8: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x804c6e0: jmp strict near R.code+0x804c21e
..@0x804c6e5: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c6e7: jmp strict near R.code+0x804c1e5
..@0x804c6ec: db 0x8b, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb4]
..@0x804c6f3: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804c6f7: call R.code+0x804b950
..@0x804c6fc: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804c700: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c705: sub eax, strict byte 0x3
..@0x804c708: call R.code+0x804b950
..@0x804c70d: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x804c711: sub ecx, strict byte 0x1
..@0x804c714: jmp strict near R.code+0x804c416
..@0x804c719: call R.code+0x804b950
..@0x804c71e: db 0xbd, 0x04, 0x00, 0x00, 0x00  ;; mov ebp,0x4
..@0x804c723: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x804c728: db 0x8d, 0x74, 0x2e, 0x01  ;; lea esi,[esi+ebp+0x1]
..@0x804c72c: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c731: call R.code+0x804b950
..@0x804c736: jmp strict near R.code+0x804c41a
..@0x804c73b: db 0xb8, 0x04, 0x00, 0x00, 0x00  ;; mov eax,0x4
..@0x804c740: jmp strict near R.code+0x804c60c
..@0x804c745: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804c749: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c74e: db 0x8b, 0x6c, 0x24, 0x14  ;; mov ebp,[esp+0x14]
..@0x804c752: sub eax, strict byte 0x3
..@0x804c755: call R.code+0x804b950
..@0x804c75a: sub ebp, strict byte 0x1
..@0x804c75d: db 0x8d, 0x74, 0x2e, 0x01  ;; lea esi,[esi+ebp+0x1]
..@0x804c761: jmp strict near R.code+0x804c41a
..@0x804c766: db 0xc7, 0x44, 0x24, 0x1c, 0x1d, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x1d
..@0x804c76e: jmp strict near R.code+0x804c21e
..@0x804c773: db 0xb8, 0x1d, 0x00, 0x00, 0x00  ;; mov eax,0x1d
..@0x804c778: db 0xbf, 0x1e, 0x01, 0x00, 0x00  ;; mov edi,0x11e
..@0x804c77d: jmp strict near R.code+0x804c1e5
..@0x804c782: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804c784: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804c786: sub ebp, strict byte 0xb
..@0x804c789: sub ecx, strict byte 0x1
..@0x804c78c: jmp strict near R.code+0x804c63a
..@0x804c791: sub esi, strict byte 0x1
..@0x804c794: jmp strict near R.code+0x804c61d
..@0x804c799: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c7a0: push edi
..@0x804c7a1: push esi
..@0x804c7a2: push ebx
..@0x804c7a3: sub esp, strict byte 0x10
..@0x804c7a6: db 0x8b, 0x1d, 0x24, 0xef, 0x6b, 0x08  ;; mov ebx,[0x86bef24]
..@0x804c7ac: db 0xa1, 0xc0, 0xa3, 0x83, 0x09  ;; mov eax,[0x983a3c0]
..@0x804c7b1: db 0x69, 0xf3, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,ebx,dword 0xa18
..@0x804c7b7: db 0x8b, 0x96, 0xc0, 0x0f, 0x06, 0x08  ;; mov edx,[esi+0x8060fc0]
..@0x804c7bd: db 0x83, 0x86, 0xc0, 0x0a, 0x06, 0x08, 0x01  ;; add dword [esi+0x8060ac0],byte +0x1
..@0x804c7c4: call R.code+0x804b950
..@0x804c7c9: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c7cb: db 0xeb, 0x1a  ;; jmp short A.code+0x804c7e7
..@0x804c7cd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804c7d0: db 0x81, 0xe2, 0xff, 0xff, 0xff, 0x7f  ;; and edx,0x7fffffff
..@0x804c7d6: db 0x89, 0x94, 0x86, 0xc0, 0x06, 0x06, 0x08  ;; mov [esi+eax*4+0x80606c0],edx
..@0x804c7dd: add eax, strict byte 0x1
..@0x804c7e0: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x804c7e5: db 0x74, 0x24  ;; jz A.code+0x804c80b
..@0x804c7e7: db 0x8b, 0x94, 0x86, 0xc0, 0x06, 0x06, 0x08  ;; mov edx,[esi+eax*4+0x80606c0]
..@0x804c7ee: db 0x81, 0xfa, 0x00, 0x00, 0x00, 0x80  ;; cmp edx,0x80000000
..@0x804c7f4: db 0x75, 0xda  ;; jnz A.code+0x804c7d0
..@0x804c7f6: db 0xc7, 0x84, 0x86, 0xc0, 0x06, 0x06, 0x08, 0x01  ;; mov dword [esi+eax*4+0x80606c0],0x1
..@0x804c7fe: db 0x00, 0x00, 0x00
..@0x804c801: add eax, strict byte 0x1
..@0x804c804: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x804c809: db 0x75, 0xdc  ;; jnz A.code+0x804c7e7
..@0x804c80b: db 0x69, 0xf3, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,ebx,dword 0xa18
..@0x804c811: db 0xb9, 0xe0, 0xa4, 0x83, 0x09  ;; mov ecx,0x983a4e0
..@0x804c816: db 0xba, 0x1e, 0x01, 0x00, 0x00  ;; mov edx,0x11e
..@0x804c81b: db 0xc7, 0x04, 0x24, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp],0x10
..@0x804c822: db 0x8d, 0x86, 0xc0, 0x06, 0x06, 0x08  ;; lea eax,[esi+0x80606c0]
..@0x804c828: call R.code+0x804bd30
..@0x804c82d: db 0xb9, 0x60, 0xa9, 0x83, 0x09  ;; mov ecx,0x983a960
..@0x804c832: db 0xba, 0x1e, 0x00, 0x00, 0x00  ;; mov edx,0x1e
..@0x804c837: db 0x8d, 0x86, 0x40, 0x0b, 0x06, 0x08  ;; lea eax,[esi+0x8060b40]
..@0x804c83d: db 0xc7, 0x04, 0x24, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp],0x10
..@0x804c844: call R.code+0x804bd30
..@0x804c849: db 0x8b, 0x3d, 0xe4, 0xca, 0x60, 0x08  ;; mov edi,[0x860cae4]
..@0x804c84f: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804c851: db 0x8d, 0x96, 0xc0, 0x0b, 0x06, 0x08  ;; lea edx,[esi+0x8060bc0]
..@0x804c857: db 0x89, 0xf6  ;; mov esi,esi
..@0x804c859: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804c860: db 0x8b, 0x34, 0x8d, 0xe0, 0xa4, 0x83, 0x09  ;; mov esi,[ecx*4+0x983a4e0]
..@0x804c867: add ecx, strict byte 0x1
..@0x804c86a: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x804c86c: db 0x89, 0x32  ;; mov [edx],esi
..@0x804c86e: db 0x29, 0xf0  ;; sub eax,esi
..@0x804c870: db 0x0f, 0xaf, 0x82, 0x00, 0xfb, 0xff, 0xff  ;; imul eax,[edx-0x500]
..@0x804c877: add edx, strict byte 0x4
..@0x804c87a: db 0x01, 0xc7  ;; add edi,eax
..@0x804c87c: db 0x81, 0xf9, 0x40, 0x01, 0x00, 0x00  ;; cmp ecx,0x140
..@0x804c882: db 0x75, 0xdc  ;; jnz A.code+0x804c860
..@0x804c884: db 0x8b, 0x35, 0xac, 0x06, 0x06, 0x08  ;; mov esi,[0x80606ac]
..@0x804c88a: add ebx, strict byte 0x1
..@0x804c88d: db 0x89, 0x3d, 0xe4, 0xca, 0x60, 0x08  ;; mov [0x860cae4],edi
..@0x804c893: db 0x89, 0x1d, 0x24, 0xef, 0x6b, 0x08  ;; mov [0x86bef24],ebx
..@0x804c899: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x804c89b: db 0x7c, 0x07  ;; jl A.code+0x804c8a4
..@0x804c89d: add esp, strict byte 0x10
..@0x804c8a0: pop ebx
..@0x804c8a1: pop esi
..@0x804c8a2: pop edi
..@0x804c8a3: ret
..@0x804c8a4: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804c8a6: sub esi, strict byte 0x1
..@0x804c8a9: call R.code+0x804bb80
..@0x804c8ae: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x804c8b0: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x804c8b5: db 0x7d, 0x2c  ;; jnl A.code+0x804c8e3
..@0x804c8b7: db 0x31, 0xc0  ;; xor eax,eax
..@0x804c8b9: call R.code+0x804b950
..@0x804c8be: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x804c8c3: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804c8c8: call R.code+0x804b950
..@0x804c8cd: add esp, strict byte 0x10
..@0x804c8d0: db 0x69, 0xc3, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,ebx,dword 0xa18
..@0x804c8d6: pop ebx
..@0x804c8d7: db 0x05, 0xc0, 0x0b, 0x06, 0x08  ;; add eax,0x8060bc0
..@0x804c8dc: pop esi
..@0x804c8dd: pop edi
..@0x804c8de: jmp strict near R.code+0x804c1a0
..@0x804c8e3: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x804c8e8: call R.code+0x804b950
..@0x804c8ed: db 0xeb, 0xcf  ;; jmp short A.code+0x804c8be
..@0x804c8ef: nop
..@0x804c8f0: push ebp
..@0x804c8f1: push edi
..@0x804c8f2: push esi
..@0x804c8f3: push ebx
..@0x804c8f4: sub esp, strict byte 0x7c
..@0x804c8f7: db 0x85, 0xd2  ;; test edx,edx
..@0x804c8f9: db 0x0f, 0x84, 0x0f, 0x0d, 0x00, 0x00  ;; jz near A.code+0x804d60e
..@0x804c8ff: db 0x8b, 0x0d, 0x08, 0xef, 0x6a, 0x08  ;; mov ecx,[0x86aef08]
..@0x804c905: db 0x89, 0xcf  ;; mov edi,ecx
..@0x804c907: db 0x29, 0xc8  ;; sub eax,ecx
..@0x804c909: db 0x89, 0x4c, 0x24, 0x50  ;; mov [esp+0x50],ecx
..@0x804c90d: db 0x01, 0xd7  ;; add edi,edx
..@0x804c90f: db 0x85, 0xd2  ;; test edx,edx
..@0x804c911: db 0x7e, 0x19  ;; jng A.code+0x804c92c
..@0x804c913: nop
..@0x804c914: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804c918: db 0x0f, 0xb6, 0x1c, 0x08  ;; movzx ebx,byte [eax+ecx]
..@0x804c91c: db 0x0f, 0xb7, 0xf1  ;; movzx esi,cx
..@0x804c91f: add ecx, strict byte 0x1
..@0x804c922: db 0x39, 0xf9  ;; cmp ecx,edi
..@0x804c924: db 0x88, 0x9e, 0x20, 0xef, 0x6a, 0x08  ;; mov [esi+0x86aef20],bl
..@0x804c92a: db 0x75, 0xec  ;; jnz A.code+0x804c918
..@0x804c92c: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x804c930: db 0x01, 0xd0  ;; add eax,edx
..@0x804c932: db 0x8b, 0x15, 0x20, 0xef, 0x6a, 0x08  ;; mov edx,[0x86aef20]
..@0x804c938: db 0x8d, 0xb0, 0xfc, 0xfe, 0xff, 0xff  ;; lea esi,[eax-0x104]
..@0x804c93e: db 0xa3, 0x08, 0xef, 0x6a, 0x08  ;; mov [0x86aef08],eax
..@0x804c943: db 0x89, 0x74, 0x24, 0x58  ;; mov [esp+0x58],esi
..@0x804c947: db 0x89, 0x44, 0x24, 0x50  ;; mov [esp+0x50],eax
..@0x804c94b: db 0x89, 0x15, 0x20, 0xef, 0x6b, 0x08  ;; mov [0x86bef20],edx
..@0x804c951: db 0x8b, 0x3d, 0x24, 0xef, 0x6b, 0x08  ;; mov edi,[0x86bef24]
..@0x804c957: db 0x69, 0xd7, 0x18, 0x0a, 0x00, 0x00  ;; imul edx,edi,dword 0xa18
..@0x804c95d: db 0x89, 0x7c, 0x24, 0x64  ;; mov [esp+0x64],edi
..@0x804c961: db 0x8b, 0x92, 0xc8, 0x10, 0x06, 0x08  ;; mov edx,[edx+0x80610c8]
..@0x804c967: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804c969: db 0x0f, 0x4e, 0xd0  ;; cmovng edx,eax
..@0x804c96c: db 0xa1, 0x40, 0xf7, 0x6b, 0x08  ;; mov eax,[0x86bf740]
..@0x804c971: db 0x89, 0x54, 0x24, 0x68  ;; mov [esp+0x68],edx
..@0x804c975: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804c977: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804c979: db 0xa1, 0x48, 0xf7, 0x6b, 0x08  ;; mov eax,[0x86bf748]
..@0x804c97e: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x804c984: db 0x8b, 0x0d, 0xa0, 0x9f, 0x83, 0x09  ;; mov ecx,[0x9839fa0]
..@0x804c98a: db 0x8b, 0x35, 0x80, 0x99, 0x71, 0x09  ;; mov esi,[0x9719980]
..@0x804c990: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x804c994: db 0xa1, 0x9c, 0x9f, 0x83, 0x09  ;; mov eax,[0x9839f9c]
..@0x804c999: db 0x89, 0x54, 0x24, 0x34  ;; mov [esp+0x34],edx
..@0x804c99d: db 0x8b, 0x15, 0x60, 0xf7, 0x6d, 0x08  ;; mov edx,[0x86df760]
..@0x804c9a3: db 0x89, 0x4c, 0x24, 0x5c  ;; mov [esp+0x5c],ecx
..@0x804c9a7: db 0x0f, 0xb6, 0x3d, 0x44, 0xf7, 0x6b, 0x08  ;; movzx edi,byte [0x86bf744]
..@0x804c9ae: db 0x8b, 0x0d, 0x64, 0xf7, 0x6d, 0x08  ;; mov ecx,[0x86df764]
..@0x804c9b4: db 0x89, 0x74, 0x24, 0x10  ;; mov [esp+0x10],esi
..@0x804c9b8: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x804c9bc: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804c9be: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x804c9c0: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804c9c4: db 0x8b, 0x35, 0x98, 0x9f, 0x83, 0x09  ;; mov esi,[0x9839f98]
..@0x804c9ca: db 0x69, 0x54, 0x24, 0x64, 0x86, 0x02, 0x00, 0x00  ;; imul edx,[esp+0x64],dword 0x286
..@0x804c9d2: db 0x39, 0x6c, 0x24, 0x58  ;; cmp [esp+0x58],ebp
..@0x804c9d6: db 0x89, 0x4c, 0x24, 0x24  ;; mov [esp+0x24],ecx
..@0x804c9da: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804c9dc: db 0x89, 0x74, 0x24, 0x1c  ;; mov [esp+0x1c],esi
..@0x804c9e0: db 0x89, 0x54, 0x24, 0x54  ;; mov [esp+0x54],edx
..@0x804c9e4: db 0x0f, 0x8e, 0xd4, 0x01, 0x00, 0x00  ;; jng near A.code+0x804cbbe
..@0x804c9ea: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804c9f0: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804c9f4: db 0x89, 0xea  ;; mov edx,ebp
..@0x804c9f6: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804c9fb: db 0x81, 0xe2, 0xff, 0x01, 0x00, 0x00  ;; and edx,0x1ff
..@0x804ca01: db 0x8b, 0xb0, 0x20, 0xef, 0x6a, 0x08  ;; mov esi,[eax+0x86aef20]
..@0x804ca07: db 0x8b, 0x1c, 0x95, 0x40, 0xef, 0x6b, 0x08  ;; mov ebx,[edx*4+0x86bef40]
..@0x804ca0e: db 0xc7, 0x04, 0x95, 0x40, 0xef, 0x6b, 0x08, 0xff  ;; mov dword [edx*4+0x86bef40],0x7fffffff
..@0x804ca16: db 0xff, 0xff, 0x7f
..@0x804ca19: db 0x8b, 0x57, 0x4c  ;; mov edx,[edi+0x4c]
..@0x804ca1c: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x804ca20: cmp edx, strict byte 0x2
..@0x804ca23: db 0x0f, 0x8e, 0xff, 0x01, 0x00, 0x00  ;; jng near A.code+0x804cc28
..@0x804ca29: db 0x8d, 0x45, 0x01  ;; lea eax,[ebp+0x1]
..@0x804ca2c: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x804ca2e: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x804ca34: db 0x0f, 0xb6, 0x9b, 0x20, 0xef, 0x6a, 0x08  ;; movzx ebx,byte [ebx+0x86aef20]
..@0x804ca3b: db 0x88, 0x5c, 0x24, 0x62  ;; mov [esp+0x62],bl
..@0x804ca3f: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x804ca43: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x804ca47: db 0x0f, 0xb6, 0x5c, 0x24, 0x62  ;; movzx ebx,byte [esp+0x62]
..@0x804ca4c: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x804ca50: db 0x03, 0x5c, 0x24, 0x54  ;; add ebx,[esp+0x54]
..@0x804ca54: db 0x03, 0x34, 0x9d, 0xc0, 0x0b, 0x06, 0x08  ;; add esi,[ebx*4+0x8060bc0]
..@0x804ca5b: db 0x81, 0x0c, 0x9d, 0xc0, 0x06, 0x06, 0x08, 0x00  ;; or dword [ebx*4+0x80606c0],0x80000000
..@0x804ca63: db 0x00, 0x00, 0x80
..@0x804ca66: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804ca68: db 0x81, 0xe3, 0xff, 0x01, 0x00, 0x00  ;; and ebx,0x1ff
..@0x804ca6e: db 0x3b, 0x34, 0x9d, 0x40, 0xef, 0x6b, 0x08  ;; cmp esi,[ebx*4+0x86bef40]
..@0x804ca75: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804ca79: db 0x7f, 0x38  ;; jg A.code+0x804cab3
..@0x804ca7b: db 0x3b, 0x44, 0x24, 0x18  ;; cmp eax,[esp+0x18]
..@0x804ca7f: db 0x7e, 0x08  ;; jng A.code+0x804ca89
..@0x804ca81: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x804ca85: db 0x89, 0x44, 0x24, 0x18  ;; mov [esp+0x18],eax
..@0x804ca89: db 0x0f, 0xb6, 0x5c, 0x24, 0x62  ;; movzx ebx,byte [esp+0x62]
..@0x804ca8e: db 0x89, 0xc7  ;; mov edi,eax
..@0x804ca90: db 0x81, 0xe7, 0xff, 0xff, 0x03, 0x00  ;; and edi,0x3ffff
..@0x804ca96: db 0x66, 0xc7, 0x04, 0xbd, 0xa0, 0x99, 0x71, 0x09  ;; mov word [edi*4+0x97199a0],0x1
..@0x804ca9e: db 0x01, 0x00
..@0x804caa0: db 0x66, 0x89, 0x1c, 0xbd, 0xa2, 0x99, 0x71, 0x09  ;; mov [edi*4+0x97199a2],bx
..@0x804caa8: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x804caac: db 0x89, 0x34, 0xbd, 0x40, 0xef, 0x6b, 0x08  ;; mov [edi*4+0x86bef40],esi
..@0x804cab3: cmp edx, strict byte 0x2
..@0x804cab6: db 0x74, 0x26  ;; jz A.code+0x804cade
..@0x804cab8: db 0x85, 0xd2  ;; test edx,edx
..@0x804caba: db 0x74, 0x0c  ;; jz A.code+0x804cac8
..@0x804cabc: db 0x8d, 0x9d, 0x02, 0x01, 0x00, 0x00  ;; lea ebx,[ebp+0x102]
..@0x804cac2: db 0x3b, 0x5c, 0x24, 0x18  ;; cmp ebx,[esp+0x18]
..@0x804cac6: db 0x7c, 0x16  ;; jl A.code+0x804cade
..@0x804cac8: db 0x8d, 0x9d, 0x05, 0x01, 0x00, 0x00  ;; lea ebx,[ebp+0x105]
..@0x804cace: db 0x2b, 0x5c, 0x24, 0x5c  ;; sub ebx,[esp+0x5c]
..@0x804cad2: db 0x81, 0xfb, 0xff, 0xff, 0x03, 0x00  ;; cmp ebx,0x3ffff
..@0x804cad8: db 0x0f, 0x8e, 0xca, 0x00, 0x00, 0x00  ;; jng near A.code+0x804cba8
..@0x804cade: db 0x3b, 0x44, 0x24, 0x18  ;; cmp eax,[esp+0x18]
..@0x804cae2: db 0x8b, 0x6c, 0x24, 0x34  ;; mov ebp,[esp+0x34]
..@0x804cae6: db 0x7c, 0x53  ;; jl A.code+0x804cb3b
..@0x804cae8: jmp strict near R.code+0x804cba8
..@0x804caed: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804caf0: db 0xc7, 0x44, 0x24, 0x14, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x14],0x0
..@0x804caf8: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804cafa: db 0x66, 0x89, 0x8c, 0x3f, 0x60, 0xf7, 0x6b, 0x08  ;; mov [edi+edi+0x86bf760],cx
..@0x804cb02: db 0x89, 0xd1  ;; mov ecx,edx
..@0x804cb04: db 0xc7, 0x04, 0xb5, 0xa0, 0x99, 0x81, 0x09, 0x00  ;; mov dword [esi*4+0x98199a0],0x0
..@0x804cb0c: db 0x00, 0x00, 0x00
..@0x804cb0f: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x804cb17: add eax, strict byte 0x1
..@0x804cb1a: db 0x0f, 0xb7, 0x94, 0x1b, 0x80, 0xf7, 0x6f, 0x08  ;; movzx edx,word [ebx+ebx+0x86ff780]
..@0x804cb22: db 0x66, 0x89, 0xb4, 0x1b, 0x80, 0xf7, 0x6f, 0x08  ;; mov [ebx+ebx+0x86ff780],si
..@0x804cb2a: db 0x3b, 0x44, 0x24, 0x10  ;; cmp eax,[esp+0x10]
..@0x804cb2e: db 0x66, 0x89, 0x94, 0x36, 0x80, 0x17, 0x70, 0x08  ;; mov [esi+esi+0x8701780],dx
..@0x804cb36: db 0x7d, 0x68  ;; jnl A.code+0x804cba0
..@0x804cb38: db 0x8b, 0x55, 0x4c  ;; mov edx,[ebp+0x4c]
..@0x804cb3b: db 0x0f, 0xb7, 0xf8  ;; movzx edi,ax
..@0x804cb3e: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804cb40: db 0x8b, 0xb7, 0x20, 0xef, 0x6a, 0x08  ;; mov esi,[edi+0x86aef20]
..@0x804cb46: db 0x81, 0xe3, 0xff, 0x01, 0x00, 0x00  ;; and ebx,0x1ff
..@0x804cb4c: db 0xc7, 0x04, 0x9d, 0x40, 0xef, 0x6b, 0x08, 0xff  ;; mov dword [ebx*4+0x86bef40],0x7fffffff
..@0x804cb54: db 0xff, 0xff, 0x7f
..@0x804cb57: db 0x89, 0xf3  ;; mov ebx,esi
..@0x804cb59: db 0xc1, 0xfb, 0x0c  ;; sar ebx,byte 0xc
..@0x804cb5c: db 0x29, 0xf3  ;; sub ebx,esi
..@0x804cb5e: db 0x89, 0xc6  ;; mov esi,eax
..@0x804cb60: db 0x81, 0xe3, 0xff, 0x0f, 0x00, 0x00  ;; and ebx,0xfff
..@0x804cb66: db 0x81, 0xe6, 0xff, 0x7f, 0x00, 0x00  ;; and esi,0x7fff
..@0x804cb6c: cmp edx, strict byte 0x2
..@0x804cb6f: db 0x7f, 0xa6  ;; jg A.code+0x804cb17
..@0x804cb71: db 0x0f, 0xb6, 0x97, 0x20, 0xef, 0x6a, 0x08  ;; movzx edx,byte [edi+0x86aef20]
..@0x804cb78: db 0x38, 0xca  ;; cmp dl,cl
..@0x804cb7a: db 0x0f, 0x85, 0x70, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804caf0
..@0x804cb80: db 0x83, 0x44, 0x24, 0x14, 0x01  ;; add dword [esp+0x14],byte +0x1
..@0x804cb85: db 0x81, 0x7c, 0x24, 0x14, 0xff, 0x7f, 0x00, 0x00  ;; cmp dword [esp+0x14],0x7fff
..@0x804cb8d: db 0x0f, 0x8f, 0x7d, 0x00, 0x00, 0x00  ;; jg near A.code+0x804cc10
..@0x804cb93: db 0x0f, 0xb7, 0x4c, 0x24, 0x14  ;; movzx ecx,word [esp+0x14]
..@0x804cb98: jmp strict near R.code+0x804cafa
..@0x804cb9d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804cba0: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x804cba4: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x804cba8: db 0x39, 0x44, 0x24, 0x18  ;; cmp [esp+0x18],eax
..@0x804cbac: db 0x0f, 0x84, 0x46, 0x06, 0x00, 0x00  ;; jz near A.code+0x804d1f8
..@0x804cbb2: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804cbb4: db 0x39, 0x6c, 0x24, 0x58  ;; cmp [esp+0x58],ebp
..@0x804cbb8: db 0x0f, 0x8f, 0x32, 0xfe, 0xff, 0xff  ;; jg near A.code+0x804c9f0
..@0x804cbbe: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804cbc0: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x804cbc4: db 0xa3, 0x40, 0xf7, 0x6b, 0x08  ;; mov [0x86bf740],eax
..@0x804cbc9: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x804cbcb: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x804cbcf: db 0x88, 0x1d, 0x44, 0xf7, 0x6b, 0x08  ;; mov [0x86bf744],bl
..@0x804cbd5: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804cbd9: db 0x8b, 0x5c, 0x24, 0x48  ;; mov ebx,[esp+0x48]
..@0x804cbdd: db 0x89, 0x0d, 0x80, 0x99, 0x71, 0x09  ;; mov [0x9719980],ecx
..@0x804cbe3: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x804cbe7: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x804cbeb: db 0x89, 0x35, 0x48, 0xf7, 0x6b, 0x08  ;; mov [0x86bf748],esi
..@0x804cbf1: db 0xa3, 0x60, 0xf7, 0x6d, 0x08  ;; mov [0x86df760],eax
..@0x804cbf6: db 0x89, 0x1d, 0x9c, 0x9f, 0x83, 0x09  ;; mov [0x9839f9c],ebx
..@0x804cbfc: db 0x89, 0x15, 0x64, 0xf7, 0x6d, 0x08  ;; mov [0x86df764],edx
..@0x804cc02: db 0x89, 0x0d, 0x98, 0x9f, 0x83, 0x09  ;; mov [0x9839f98],ecx
..@0x804cc08: add esp, strict byte 0x7c
..@0x804cc0b: pop ebx
..@0x804cc0c: pop esi
..@0x804cc0d: pop edi
..@0x804cc0e: pop ebp
..@0x804cc0f: ret
..@0x804cc10: db 0xc7, 0x44, 0x24, 0x14, 0xff, 0x7f, 0x00, 0x00  ;; mov dword [esp+0x14],0x7fff
..@0x804cc18: db 0xb9, 0xff, 0x7f, 0x00, 0x00  ;; mov ecx,0x7fff
..@0x804cc1d: jmp strict near R.code+0x804cafa
..@0x804cc22: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804cc28: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x804cc2a: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x804cc30: db 0x0f, 0xb6, 0x83, 0x20, 0xef, 0x6a, 0x08  ;; movzx eax,byte [ebx+0x86aef20]
..@0x804cc37: db 0x38, 0xc8  ;; cmp al,cl
..@0x804cc39: db 0x88, 0x44, 0x24, 0x62  ;; mov [esp+0x62],al
..@0x804cc3d: db 0x0f, 0x84, 0x95, 0x05, 0x00, 0x00  ;; jz near A.code+0x804d1d8
..@0x804cc43: db 0xc7, 0x44, 0x24, 0x14, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x14],0x0
..@0x804cc4b: db 0x31, 0xc0  ;; xor eax,eax
..@0x804cc4d: db 0x66, 0x89, 0x84, 0x1b, 0x60, 0xf7, 0x6b, 0x08  ;; mov [ebx+ebx+0x86bf760],ax
..@0x804cc55: db 0x8d, 0x45, 0x01  ;; lea eax,[ebp+0x1]
..@0x804cc58: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804cc5c: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x804cc60: db 0x8b, 0x4c, 0x24, 0x50  ;; mov ecx,[esp+0x50]
..@0x804cc64: db 0x0f, 0x4c, 0xd0  ;; cmovl edx,eax
..@0x804cc67: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804cc69: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804cc6d: db 0x7d, 0x53  ;; jnl A.code+0x804ccc2
..@0x804cc6f: db 0x0f, 0xb6, 0x4c, 0x24, 0x62  ;; movzx ecx,byte [esp+0x62]
..@0x804cc74: db 0x81, 0xe2, 0xff, 0xff, 0x00, 0x00  ;; and edx,0xffff
..@0x804cc7a: db 0x3a, 0x8a, 0x20, 0xef, 0x6a, 0x08  ;; cmp cl,[edx+0x86aef20]
..@0x804cc80: db 0x75, 0x40  ;; jnz A.code+0x804ccc2
..@0x804cc82: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804cc86: db 0x89, 0xc7  ;; mov edi,eax
..@0x804cc88: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x804cc8c: db 0x89, 0x74, 0x24, 0x18  ;; mov [esp+0x18],esi
..@0x804cc90: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804cc92: db 0x8b, 0x5c, 0x24, 0x50  ;; mov ebx,[esp+0x50]
..@0x804cc96: add edx, strict byte 0x1
..@0x804cc99: db 0xeb, 0x13  ;; jmp short A.code+0x804ccae
..@0x804cc9b: nop
..@0x804cc9c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804cca0: db 0x0f, 0xb7, 0xca  ;; movzx ecx,dx
..@0x804cca3: add edx, strict byte 0x1
..@0x804cca6: db 0x3a, 0x81, 0x20, 0xef, 0x6a, 0x08  ;; cmp al,[ecx+0x86aef20]
..@0x804ccac: db 0x75, 0x06  ;; jnz A.code+0x804ccb4
..@0x804ccae: db 0x39, 0xda  ;; cmp edx,ebx
..@0x804ccb0: db 0x89, 0xd6  ;; mov esi,edx
..@0x804ccb2: db 0x75, 0xec  ;; jnz A.code+0x804cca0
..@0x804ccb4: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x804ccb8: db 0x89, 0x74, 0x24, 0x20  ;; mov [esp+0x20],esi
..@0x804ccbc: db 0x89, 0xf8  ;; mov eax,edi
..@0x804ccbe: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x804ccc2: db 0x81, 0x7c, 0x24, 0x24, 0x00, 0xff, 0x7f, 0x00  ;; cmp dword [esp+0x24],0x7fff00
..@0x804ccca: db 0x89, 0xf2  ;; mov edx,esi
..@0x804cccc: db 0xbf, 0x00, 0x00, 0x00, 0x00  ;; mov edi,0x0
..@0x804ccd1: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804ccd3: db 0x8b, 0x9b, 0x20, 0xef, 0x6a, 0x08  ;; mov ebx,[ebx+0x86aef20]
..@0x804ccd9: db 0x0f, 0x4e, 0x7c, 0x24, 0x24  ;; cmovng edi,[esp+0x24]
..@0x804ccde: db 0xc1, 0xfa, 0x0c  ;; sar edx,byte 0xc
..@0x804cce1: db 0x81, 0xe1, 0xff, 0x7f, 0x00, 0x00  ;; and ecx,0x7fff
..@0x804cce7: db 0x29, 0xf2  ;; sub edx,esi
..@0x804cce9: db 0x89, 0x4c, 0x24, 0x38  ;; mov [esp+0x38],ecx
..@0x804cced: db 0x81, 0xe2, 0xff, 0x0f, 0x00, 0x00  ;; and edx,0xfff
..@0x804ccf3: db 0x89, 0x3c, 0x8d, 0x80, 0xf7, 0x6d, 0x08  ;; mov [ecx*4+0x86df780],edi
..@0x804ccfa: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804ccfc: db 0x0f, 0xb7, 0xb4, 0x12, 0x80, 0xf7, 0x6f, 0x08  ;; movzx esi,word [edx+edx+0x86ff780]
..@0x804cd04: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x804cd08: db 0x89, 0x7c, 0x24, 0x40  ;; mov [esp+0x40],edi
..@0x804cd0c: db 0x0f, 0xbf, 0xd6  ;; movsx edx,si
..@0x804cd0f: db 0x66, 0x89, 0x74, 0x24, 0x60  ;; mov [esp+0x60],si
..@0x804cd14: db 0x29, 0xd1  ;; sub ecx,edx
..@0x804cd16: sub ecx, strict byte 0x1
..@0x804cd19: db 0x81, 0xe1, 0xff, 0x7f, 0x00, 0x00  ;; and ecx,0x7fff
..@0x804cd1f: db 0x8d, 0x79, 0x01  ;; lea edi,[ecx+0x1]
..@0x804cd22: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804cd24: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804cd26: db 0x81, 0xe1, 0xff, 0xff, 0x00, 0x00  ;; and ecx,0xffff
..@0x804cd2c: db 0x8b, 0x89, 0x20, 0xef, 0x6a, 0x08  ;; mov ecx,[ecx+0x86aef20]
..@0x804cd32: db 0x31, 0xd9  ;; xor ecx,ebx
..@0x804cd34: db 0x81, 0xe1, 0xff, 0xff, 0xff, 0x00  ;; and ecx,0xffffff
..@0x804cd3a: db 0x74, 0x3e  ;; jz A.code+0x804cd7a
..@0x804cd3c: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804cd3e: db 0x0f, 0xbf, 0x94, 0x12, 0x80, 0x17, 0x70, 0x08  ;; movsx edx,word [edx+edx+0x8701780]
..@0x804cd46: db 0x89, 0xee  ;; mov esi,ebp
..@0x804cd48: db 0x29, 0xd6  ;; sub esi,edx
..@0x804cd4a: sub esi, strict byte 0x1
..@0x804cd4d: db 0x81, 0xe6, 0xff, 0x7f, 0x00, 0x00  ;; and esi,0x7fff
..@0x804cd53: db 0x8d, 0x7e, 0x01  ;; lea edi,[esi+0x1]
..@0x804cd56: db 0x39, 0xcf  ;; cmp edi,ecx
..@0x804cd58: db 0x0f, 0x8e, 0xdd, 0x08, 0x00, 0x00  ;; jng near A.code+0x804d63b
..@0x804cd5e: db 0x89, 0xee  ;; mov esi,ebp
..@0x804cd60: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804cd62: db 0x29, 0xfe  ;; sub esi,edi
..@0x804cd64: db 0x81, 0xe6, 0xff, 0xff, 0x00, 0x00  ;; and esi,0xffff
..@0x804cd6a: db 0x8b, 0xb6, 0x20, 0xef, 0x6a, 0x08  ;; mov esi,[esi+0x86aef20]
..@0x804cd70: db 0x31, 0xde  ;; xor esi,ebx
..@0x804cd72: db 0x81, 0xe6, 0xff, 0xff, 0xff, 0x00  ;; and esi,0xffffff
..@0x804cd78: db 0x75, 0xc4  ;; jnz A.code+0x804cd3e
..@0x804cd7a: db 0x39, 0xef  ;; cmp edi,ebp
..@0x804cd7c: db 0x0f, 0x8f, 0x16, 0x03, 0x00, 0x00  ;; jg near A.code+0x804d098
..@0x804cd82: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804cd86: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x804cd8a: db 0x29, 0xea  ;; sub edx,ebp
..@0x804cd8c: db 0x89, 0x54, 0x24, 0x30  ;; mov [esp+0x30],edx
..@0x804cd90: db 0x8b, 0x51, 0x4c  ;; mov edx,[ecx+0x4c]
..@0x804cd93: db 0x85, 0xd2  ;; test edx,edx
..@0x804cd95: db 0x0f, 0x85, 0xa5, 0x06, 0x00, 0x00  ;; jnz near A.code+0x804d440
..@0x804cd9b: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x804cd9f: db 0xc7, 0x44, 0x24, 0x4c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4c],0x1
..@0x804cda7: db 0x31, 0xd2  ;; xor edx,edx
..@0x804cda9: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804cdad: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x804cdb1: db 0x0f, 0xb6, 0x8f, 0x7f, 0x19, 0x71, 0x09  ;; movzx ecx,byte [edi+0x971197f]
..@0x804cdb8: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x804cdbc: db 0x8d, 0x5d, 0x03  ;; lea ebx,[ebp+0x3]
..@0x804cdbf: db 0x89, 0x74, 0x24, 0x24  ;; mov [esp+0x24],esi
..@0x804cdc3: db 0xbe, 0x03, 0x00, 0x00, 0x00  ;; mov esi,0x3
..@0x804cdc8: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x804cdcc: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804cdd0: db 0x2b, 0x44, 0x24, 0x40  ;; sub eax,[esp+0x40]
..@0x804cdd4: db 0x39, 0x44, 0x24, 0x4c  ;; cmp [esp+0x4c],eax
..@0x804cdd8: db 0x0f, 0x8e, 0x2a, 0x02, 0x00, 0x00  ;; jng near A.code+0x804d008
..@0x804cdde: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804cde2: db 0x66, 0x89, 0xbc, 0x00, 0x80, 0x17, 0x71, 0x08  ;; mov [eax+eax+0x8711780],di
..@0x804cdea: add eax, strict byte 0x1
..@0x804cded: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x804cdf1: db 0x0f, 0xb6, 0xc1  ;; movzx eax,cl
..@0x804cdf4: db 0x8b, 0x1c, 0x85, 0x80, 0x18, 0x71, 0x09  ;; mov ebx,[eax*4+0x9711880]
..@0x804cdfb: db 0x89, 0x1c, 0x95, 0xa0, 0x99, 0x83, 0x09  ;; mov [edx*4+0x98399a0],ebx
..@0x804ce02: db 0x0f, 0xb6, 0x8a, 0x80, 0x17, 0x71, 0x09  ;; movzx ecx,byte [edx+0x9711780]
..@0x804ce09: db 0x03, 0x1c, 0x8d, 0x80, 0x18, 0x71, 0x09  ;; add ebx,[ecx*4+0x9711880]
..@0x804ce10: db 0x8b, 0x4c, 0x24, 0x44  ;; mov ecx,[esp+0x44]
..@0x804ce14: db 0x03, 0x5c, 0x24, 0x3c  ;; add ebx,[esp+0x3c]
..@0x804ce18: db 0x81, 0xe1, 0xff, 0x01, 0x00, 0x00  ;; and ecx,0x1ff
..@0x804ce1e: db 0x3b, 0x1c, 0x8d, 0x40, 0xef, 0x6b, 0x08  ;; cmp ebx,[ecx*4+0x86bef40]
..@0x804ce25: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x804ce29: db 0x7d, 0x45  ;; jnl A.code+0x804ce70
..@0x804ce2b: db 0x8b, 0x5c, 0x24, 0x68  ;; mov ebx,[esp+0x68]
..@0x804ce2f: db 0x39, 0x5c, 0x24, 0x44  ;; cmp [esp+0x44],ebx
..@0x804ce33: db 0x7f, 0x3b  ;; jg A.code+0x804ce70
..@0x804ce35: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x804ce39: db 0x39, 0x5c, 0x24, 0x44  ;; cmp [esp+0x44],ebx
..@0x804ce3d: db 0x7e, 0x0c  ;; jng A.code+0x804ce4b
..@0x804ce3f: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x804ce43: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x804ce47: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x804ce4b: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x804ce4f: db 0x81, 0xe3, 0xff, 0xff, 0x03, 0x00  ;; and ebx,0x3ffff
..@0x804ce55: db 0x66, 0x89, 0x34, 0x9d, 0xa0, 0x99, 0x71, 0x09  ;; mov [ebx*4+0x97199a0],si
..@0x804ce5d: db 0x66, 0x89, 0x3c, 0x9d, 0xa2, 0x99, 0x71, 0x09  ;; mov [ebx*4+0x97199a2],di
..@0x804ce65: db 0x8b, 0x5c, 0x24, 0x0c  ;; mov ebx,[esp+0xc]
..@0x804ce69: db 0x89, 0x1c, 0x8d, 0x40, 0xef, 0x6b, 0x08  ;; mov [ecx*4+0x86bef40],ebx
..@0x804ce70: db 0x81, 0xfe, 0x02, 0x01, 0x00, 0x00  ;; cmp esi,0x102
..@0x804ce76: db 0x0f, 0x84, 0x14, 0x07, 0x00, 0x00  ;; jz near A.code+0x804d590
..@0x804ce7c: db 0x0f, 0xb6, 0x80, 0xa0, 0x9d, 0x83, 0x09  ;; movzx eax,byte [eax+0x9839da0]
..@0x804ce83: db 0x89, 0xfb  ;; mov ebx,edi
..@0x804ce85: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x804ce89: db 0x0f, 0xb7, 0x44, 0x24, 0x44  ;; movzx eax,word [esp+0x44]
..@0x804ce8e: db 0x0f, 0xb6, 0x80, 0x20, 0xef, 0x6a, 0x08  ;; movzx eax,byte [eax+0x86aef20]
..@0x804ce95: db 0x88, 0x44, 0x24, 0x63  ;; mov [esp+0x63],al
..@0x804ce99: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x804ce9d: db 0x0f, 0xb6, 0x4c, 0x24, 0x63  ;; movzx ecx,byte [esp+0x63]
..@0x804cea2: db 0x29, 0xd8  ;; sub eax,ebx
..@0x804cea4: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804cea9: db 0x38, 0x88, 0x20, 0xef, 0x6a, 0x08  ;; cmp [eax+0x86aef20],cl
..@0x804ceaf: db 0x0f, 0x84, 0x6d, 0x02, 0x00, 0x00  ;; jz near A.code+0x804d122
..@0x804ceb5: db 0x3b, 0x74, 0x24, 0x30  ;; cmp esi,[esp+0x30]
..@0x804ceb9: db 0x0f, 0x84, 0x61, 0x05, 0x00, 0x00  ;; jz near A.code+0x804d420
..@0x804cebf: db 0x8b, 0x4c, 0x24, 0x4c  ;; mov ecx,[esp+0x4c]
..@0x804cec3: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804cec5: db 0x29, 0xd8  ;; sub eax,ebx
..@0x804cec7: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x804cecc: db 0x3b, 0x0c, 0x85, 0xa0, 0x99, 0x81, 0x09  ;; cmp ecx,[eax*4+0x98199a0]
..@0x804ced3: db 0x0f, 0x8e, 0x57, 0x01, 0x00, 0x00  ;; jng near A.code+0x804d030
..@0x804ced9: db 0x83, 0x7c, 0x24, 0x2c, 0x1d  ;; cmp dword [esp+0x2c],byte +0x1d
..@0x804cede: db 0x0f, 0x8f, 0x94, 0x06, 0x00, 0x00  ;; jg near A.code+0x804d578
..@0x804cee4: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804cee8: nop
..@0x804cee9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804cef0: cmp esi, strict byte 0x5
..@0x804cef3: db 0x8b, 0x04, 0x9d, 0x80, 0x18, 0x71, 0x09  ;; mov eax,[ebx*4+0x9711880]
..@0x804cefa: db 0x7e, 0x27  ;; jng A.code+0x804cf23
..@0x804cefc: db 0x3b, 0x04, 0xb5, 0x88, 0x99, 0x83, 0x09  ;; cmp eax,[esi*4+0x9839988]
..@0x804cf03: db 0x7c, 0x17  ;; jl A.code+0x804cf1c
..@0x804cf05: db 0xeb, 0x21  ;; jmp short A.code+0x804cf28
..@0x804cf07: db 0x89, 0xf6  ;; mov esi,esi
..@0x804cf09: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804cf10: db 0x39, 0x04, 0x95, 0x88, 0x99, 0x83, 0x09  ;; cmp [edx*4+0x9839988],eax
..@0x804cf17: db 0x7e, 0x0f  ;; jng A.code+0x804cf28
..@0x804cf19: sub edx, strict byte 0x3
..@0x804cf1c: cmp edx, strict byte 0x5
..@0x804cf1f: db 0x89, 0xd6  ;; mov esi,edx
..@0x804cf21: db 0x7f, 0xed  ;; jg A.code+0x804cf10
..@0x804cf23: cmp esi, strict byte 0x3
..@0x804cf26: db 0x74, 0x21  ;; jz A.code+0x804cf49
..@0x804cf28: db 0x3b, 0x04, 0xb5, 0x90, 0x99, 0x83, 0x09  ;; cmp eax,[esi*4+0x9839990]
..@0x804cf2f: db 0x7c, 0x10  ;; jl A.code+0x804cf41
..@0x804cf31: db 0xeb, 0x16  ;; jmp short A.code+0x804cf49
..@0x804cf33: nop
..@0x804cf34: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804cf38: db 0x39, 0x04, 0xb5, 0x90, 0x99, 0x83, 0x09  ;; cmp [esi*4+0x9839990],eax
..@0x804cf3f: db 0x7e, 0x08  ;; jng A.code+0x804cf49
..@0x804cf41: sub esi, strict byte 0x1
..@0x804cf44: cmp esi, strict byte 0x3
..@0x804cf47: db 0x75, 0xef  ;; jnz A.code+0x804cf38
..@0x804cf49: db 0x8d, 0x46, 0xfe  ;; lea eax,[esi-0x2]
..@0x804cf4c: db 0xeb, 0x4e  ;; jmp short A.code+0x804cf9c
..@0x804cf4e: dw 0x9066  ;; o16 nop
..@0x804cf50: db 0x89, 0xea  ;; mov edx,ebp
..@0x804cf52: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804cf54: db 0x29, 0xfa  ;; sub edx,edi
..@0x804cf56: db 0x81, 0xe2, 0xff, 0x7f, 0x00, 0x00  ;; and edx,0x7fff
..@0x804cf5c: db 0x3b, 0x04, 0x95, 0xa0, 0x99, 0x81, 0x09  ;; cmp eax,[edx*4+0x98199a0]
..@0x804cf63: db 0x0f, 0x8f, 0x0f, 0x06, 0x00, 0x00  ;; jg near A.code+0x804d578
..@0x804cf69: db 0x8b, 0x14, 0x95, 0x80, 0xf7, 0x6d, 0x08  ;; mov edx,[edx*4+0x86df780]
..@0x804cf70: db 0x01, 0xf2  ;; add edx,esi
..@0x804cf72: db 0x0f, 0xb7, 0x94, 0x12, 0x7a, 0x17, 0x71, 0x08  ;; movzx edx,word [edx+edx+0x871177a]
..@0x804cf7a: db 0x01, 0xd7  ;; add edi,edx
..@0x804cf7c: db 0x81, 0xff, 0x00, 0x80, 0x00, 0x00  ;; cmp edi,0x8000
..@0x804cf82: db 0x0f, 0x8f, 0xf0, 0x05, 0x00, 0x00  ;; jg near A.code+0x804d578
..@0x804cf88: db 0x0f, 0xb6, 0x8f, 0x7f, 0x19, 0x71, 0x09  ;; movzx ecx,byte [edi+0x971197f]
..@0x804cf8f: db 0x0f, 0xb6, 0xd1  ;; movzx edx,cl
..@0x804cf92: db 0x39, 0x54, 0x24, 0x2c  ;; cmp [esp+0x2c],edx
..@0x804cf96: db 0x0f, 0x8e, 0x9c, 0x01, 0x00, 0x00  ;; jng near A.code+0x804d138
..@0x804cf9c: db 0x3b, 0x74, 0x24, 0x30  ;; cmp esi,[esp+0x30]
..@0x804cfa0: db 0x75, 0xae  ;; jnz A.code+0x804cf50
..@0x804cfa2: db 0x89, 0xea  ;; mov edx,ebp
..@0x804cfa4: db 0x29, 0xfa  ;; sub edx,edi
..@0x804cfa6: db 0x81, 0xe2, 0xff, 0xff, 0x00, 0x00  ;; and edx,0xffff
..@0x804cfac: db 0x0f, 0xb7, 0x94, 0x12, 0x60, 0xf7, 0x6b, 0x08  ;; movzx edx,word [edx+edx+0x86bf760]
..@0x804cfb4: db 0x01, 0xd7  ;; add edi,edx
..@0x804cfb6: db 0x81, 0xff, 0x00, 0x80, 0x00, 0x00  ;; cmp edi,0x8000
..@0x804cfbc: db 0x0f, 0x8f, 0xb6, 0x05, 0x00, 0x00  ;; jg near A.code+0x804d578
..@0x804cfc2: db 0x0f, 0xb6, 0x97, 0x7f, 0x19, 0x71, 0x09  ;; movzx edx,byte [edi+0x971197f]
..@0x804cfc9: db 0x39, 0x54, 0x24, 0x2c  ;; cmp [esp+0x2c],edx
..@0x804cfcd: db 0x7f, 0x81  ;; jg A.code+0x804cf50
..@0x804cfcf: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804cfd3: db 0x8d, 0x56, 0xfe  ;; lea edx,[esi-0x2]
..@0x804cfd6: db 0x89, 0x54, 0x24, 0x4c  ;; mov [esp+0x4c],edx
..@0x804cfda: db 0x8d, 0x1c, 0x2e  ;; lea ebx,[esi+ebp]
..@0x804cfdd: db 0x8d, 0x56, 0xfd  ;; lea edx,[esi-0x3]
..@0x804cfe0: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x804cfe4: db 0x8b, 0x3c, 0xc5, 0xc4, 0x9d, 0x83, 0x09  ;; mov edi,[eax*8+0x9839dc4]
..@0x804cfeb: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804cfef: db 0x0f, 0xb6, 0x8f, 0x7f, 0x19, 0x71, 0x09  ;; movzx ecx,byte [edi+0x971197f]
..@0x804cff6: db 0x2b, 0x44, 0x24, 0x40  ;; sub eax,[esp+0x40]
..@0x804cffa: db 0x39, 0x44, 0x24, 0x4c  ;; cmp [esp+0x4c],eax
..@0x804cffe: db 0x0f, 0x8f, 0xda, 0xfd, 0xff, 0xff  ;; jg near A.code+0x804cdde
..@0x804d004: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d008: db 0x0f, 0xb6, 0xc1  ;; movzx eax,cl
..@0x804d00b: db 0x8b, 0x1c, 0x85, 0x80, 0x18, 0x71, 0x09  ;; mov ebx,[eax*4+0x9711880]
..@0x804d012: db 0x3b, 0x1c, 0x95, 0xa0, 0x99, 0x83, 0x09  ;; cmp ebx,[edx*4+0x98399a0]
..@0x804d019: db 0x0f, 0x8d, 0xe3, 0xfd, 0xff, 0xff  ;; jnl near A.code+0x804ce02
..@0x804d01f: db 0x89, 0x1c, 0x95, 0xa0, 0x99, 0x83, 0x09  ;; mov [edx*4+0x98399a0],ebx
..@0x804d026: jmp strict near R.code+0x804ce02
..@0x804d02b: nop
..@0x804d02c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d030: db 0x8b, 0x04, 0x85, 0x80, 0xf7, 0x6d, 0x08  ;; mov eax,[eax*4+0x86df780]
..@0x804d037: db 0x01, 0xf0  ;; add eax,esi
..@0x804d039: db 0x0f, 0xb7, 0x84, 0x00, 0x7a, 0x17, 0x71, 0x08  ;; movzx eax,word [eax+eax+0x871177a]
..@0x804d041: db 0x01, 0xc3  ;; add ebx,eax
..@0x804d043: db 0x81, 0xfb, 0x00, 0x80, 0x00, 0x00  ;; cmp ebx,0x8000
..@0x804d049: db 0x0f, 0x8f, 0x8a, 0xfe, 0xff, 0xff  ;; jg near A.code+0x804ced9
..@0x804d04f: db 0x0f, 0xb6, 0x83, 0x7f, 0x19, 0x71, 0x09  ;; movzx eax,byte [ebx+0x971197f]
..@0x804d056: db 0x0f, 0xb6, 0xc8  ;; movzx ecx,al
..@0x804d059: db 0x39, 0x4c, 0x24, 0x2c  ;; cmp [esp+0x2c],ecx
..@0x804d05d: db 0x0f, 0x8f, 0x36, 0xfe, 0xff, 0xff  ;; jg near A.code+0x804ce99
..@0x804d063: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804d067: db 0x0f, 0xb6, 0x8b, 0xa0, 0x9d, 0x83, 0x09  ;; movzx ecx,byte [ebx+0x9839da0]
..@0x804d06e: db 0x38, 0xc1  ;; cmp cl,al
..@0x804d070: db 0x0f, 0x87, 0x6e, 0xfe, 0xff, 0xff  ;; ja near A.code+0x804cee4
..@0x804d076: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804d079: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804d080: db 0x0f, 0xb6, 0xd9  ;; movzx ebx,cl
..@0x804d083: db 0x0f, 0xb6, 0x8b, 0xa0, 0x9d, 0x83, 0x09  ;; movzx ecx,byte [ebx+0x9839da0]
..@0x804d08a: db 0x38, 0xc1  ;; cmp cl,al
..@0x804d08c: db 0x76, 0xf2  ;; jna A.code+0x804d080
..@0x804d08e: jmp strict near R.code+0x804cef0
..@0x804d093: nop
..@0x804d094: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d098: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x804d09c: db 0x31, 0xff  ;; xor edi,edi
..@0x804d09e: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804d0a2: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x804d0a6: db 0x89, 0x74, 0x24, 0x24  ;; mov [esp+0x24],esi
..@0x804d0aa: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x804d0ae: db 0x3b, 0x7c, 0x24, 0x1c  ;; cmp edi,[esp+0x1c]
..@0x804d0b2: db 0x89, 0x3c, 0x95, 0xa0, 0x99, 0x81, 0x09  ;; mov [edx*4+0x98199a0],edi
..@0x804d0b9: db 0x7f, 0x2d  ;; jg A.code+0x804d0e8
..@0x804d0bb: db 0xf7, 0xc7, 0x01, 0x00, 0x00, 0x00  ;; test edi,0x1
..@0x804d0c1: db 0x0f, 0x84, 0x89, 0x00, 0x00, 0x00  ;; jz near A.code+0x804d150
..@0x804d0c7: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x804d0cb: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x804d0cf: db 0x29, 0xfa  ;; sub edx,edi
..@0x804d0d1: db 0x0f, 0xb7, 0x9c, 0x12, 0x80, 0x17, 0x71, 0x08  ;; movzx ebx,word [edx+edx+0x8711780]
..@0x804d0d9: db 0x66, 0x39, 0x9c, 0x09, 0x80, 0x17, 0x71, 0x08  ;; cmp [ecx+ecx+0x8711780],bx
..@0x804d0e1: db 0x74, 0x6d  ;; jz A.code+0x804d150
..@0x804d0e3: nop
..@0x804d0e4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d0e8: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x804d0ec: db 0x89, 0x7c, 0x24, 0x1c  ;; mov [esp+0x1c],edi
..@0x804d0f0: db 0x0f, 0xb7, 0x4c, 0x24, 0x60  ;; movzx ecx,word [esp+0x60]
..@0x804d0f5: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x804d0f9: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x804d0fd: db 0x66, 0x89, 0x8c, 0x12, 0x80, 0x17, 0x70, 0x08  ;; mov [edx+edx+0x8701780],cx
..@0x804d105: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x804d109: db 0x66, 0x89, 0x94, 0x1b, 0x80, 0xf7, 0x6f, 0x08  ;; mov [ebx+ebx+0x86ff780],dx
..@0x804d111: db 0x8b, 0x56, 0x4c  ;; mov edx,[esi+0x4c]
..@0x804d114: db 0x89, 0x4c, 0x24, 0x48  ;; mov [esp+0x48],ecx
..@0x804d118: db 0x0f, 0xb6, 0x4c, 0x24, 0x62  ;; movzx ecx,byte [esp+0x62]
..@0x804d11d: jmp strict near R.code+0x804ca47
..@0x804d122: add esi, strict byte 0x1
..@0x804d125: db 0x0f, 0xb6, 0x8b, 0x7f, 0x19, 0x71, 0x09  ;; movzx ecx,byte [ebx+0x971197f]
..@0x804d12c: db 0x89, 0xdf  ;; mov edi,ebx
..@0x804d12e: db 0x8d, 0x5e, 0xfe  ;; lea ebx,[esi-0x2]
..@0x804d131: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d138: db 0x8d, 0x04, 0x2e  ;; lea eax,[esi+ebp]
..@0x804d13b: db 0x89, 0x5c, 0x24, 0x4c  ;; mov [esp+0x4c],ebx
..@0x804d13f: db 0x8d, 0x56, 0xfd  ;; lea edx,[esi-0x3]
..@0x804d142: db 0x89, 0x44, 0x24, 0x44  ;; mov [esp+0x44],eax
..@0x804d146: jmp strict near R.code+0x804cdcc
..@0x804d14b: nop
..@0x804d14c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d150: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804d152: and ecx, strict byte -0x2
..@0x804d155: db 0x74, 0x5c  ;; jz A.code+0x804d1b3
..@0x804d157: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x804d15b: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804d15f: db 0x29, 0xca  ;; sub edx,ecx
..@0x804d161: db 0x8b, 0xb4, 0x12, 0x80, 0x17, 0x71, 0x08  ;; mov esi,[edx+edx+0x8711780]
..@0x804d168: db 0x29, 0xcb  ;; sub ebx,ecx
..@0x804d16a: db 0x39, 0xb4, 0x1b, 0x80, 0x17, 0x71, 0x08  ;; cmp [ebx+ebx+0x8711780],esi
..@0x804d171: db 0x0f, 0x85, 0x71, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804d0e8
..@0x804d177: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x804d17b: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804d180: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804d184: db 0x29, 0xca  ;; sub edx,ecx
..@0x804d186: db 0x03, 0x54, 0x24, 0x24  ;; add edx,[esp+0x24]
..@0x804d18a: db 0x2b, 0x74, 0x24, 0x24  ;; sub esi,[esp+0x24]
..@0x804d18e: db 0xeb, 0x1a  ;; jmp short A.code+0x804d1aa
..@0x804d190: db 0x8b, 0x9c, 0x12, 0x80, 0x17, 0x71, 0x08  ;; mov ebx,[edx+edx+0x8711780]
..@0x804d197: db 0x8d, 0x04, 0x16  ;; lea eax,[esi+edx]
..@0x804d19a: add edx, strict byte 0x2
..@0x804d19d: db 0x3b, 0x9c, 0x00, 0x80, 0x17, 0x71, 0x08  ;; cmp ebx,[eax+eax+0x8711780]
..@0x804d1a4: db 0x0f, 0x85, 0x34, 0x04, 0x00, 0x00  ;; jnz near A.code+0x804d5de
..@0x804d1aa: sub ecx, strict byte 0x2
..@0x804d1ad: db 0x75, 0xe1  ;; jnz A.code+0x804d190
..@0x804d1af: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804d1b3: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x804d1b7: db 0x8b, 0x74, 0x24, 0x38  ;; mov esi,[esp+0x38]
..@0x804d1bb: db 0x29, 0xfa  ;; sub edx,edi
..@0x804d1bd: db 0x89, 0x14, 0xb5, 0x80, 0xf7, 0x6d, 0x08  ;; mov [esi*4+0x86df780],edx
..@0x804d1c4: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x804d1c8: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804d1cc: jmp strict near R.code+0x804d0e8
..@0x804d1d1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d1d8: db 0x83, 0x44, 0x24, 0x14, 0x01  ;; add dword [esp+0x14],byte +0x1
..@0x804d1dd: db 0x81, 0x7c, 0x24, 0x14, 0xff, 0x7f, 0x00, 0x00  ;; cmp dword [esp+0x14],0x7fff
..@0x804d1e5: db 0x0f, 0x8f, 0xfc, 0x03, 0x00, 0x00  ;; jg near A.code+0x804d5e7
..@0x804d1eb: db 0x0f, 0xb7, 0x44, 0x24, 0x14  ;; movzx eax,word [esp+0x14]
..@0x804d1f0: jmp strict near R.code+0x804cc4d
..@0x804d1f5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804d1f8: db 0x89, 0xcf  ;; mov edi,ecx
..@0x804d1fa: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x804d1fe: db 0x89, 0xf8  ;; mov eax,edi
..@0x804d200: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x804d204: db 0xa2, 0x44, 0xf7, 0x6b, 0x08  ;; mov [0x86bf744],al
..@0x804d209: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x804d20d: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x804d211: db 0x89, 0x15, 0x48, 0xf7, 0x6b, 0x08  ;; mov [0x86bf748],edx
..@0x804d217: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x804d21b: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x804d21f: db 0x89, 0x0d, 0x40, 0xf7, 0x6b, 0x08  ;; mov [0x86bf740],ecx
..@0x804d225: db 0x25, 0xff, 0xff, 0x03, 0x00  ;; and eax,0x3ffff
..@0x804d22a: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x804d22e: db 0x0f, 0xb7, 0x2c, 0x85, 0xa0, 0x99, 0x71, 0x09  ;; movzx ebp,word [eax*4+0x97199a0]
..@0x804d236: db 0x89, 0x1d, 0x80, 0x99, 0x71, 0x09  ;; mov [0x9719980],ebx
..@0x804d23c: db 0x8b, 0x7c, 0x24, 0x48  ;; mov edi,[esp+0x48]
..@0x804d240: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804d244: db 0x89, 0x35, 0x98, 0x9f, 0x83, 0x09  ;; mov [0x9839f98],esi
..@0x804d24a: db 0x89, 0x0d, 0x60, 0xf7, 0x6d, 0x08  ;; mov [0x86df760],ecx
..@0x804d250: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x804d254: db 0x0f, 0xb7, 0xc5  ;; movzx eax,bp
..@0x804d257: db 0x29, 0xc2  ;; sub edx,eax
..@0x804d259: db 0x89, 0x3d, 0x9c, 0x9f, 0x83, 0x09  ;; mov [0x9839f9c],edi
..@0x804d25f: db 0x3b, 0x54, 0x24, 0x5c  ;; cmp edx,[esp+0x5c]
..@0x804d263: db 0x89, 0x1d, 0x64, 0xf7, 0x6d, 0x08  ;; mov [0x86df764],ebx
..@0x804d269: db 0x89, 0xd0  ;; mov eax,edx
..@0x804d26b: db 0x7e, 0x50  ;; jng A.code+0x804d2bd
..@0x804d26d: db 0x8b, 0x7c, 0x24, 0x5c  ;; mov edi,[esp+0x5c]
..@0x804d271: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d278: db 0x89, 0xc2  ;; mov edx,eax
..@0x804d27a: sub esi, strict byte 0x1
..@0x804d27d: db 0x81, 0xe2, 0xff, 0xff, 0x03, 0x00  ;; and edx,0x3ffff
..@0x804d283: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804d285: db 0x8b, 0x1c, 0x95, 0xa0, 0x99, 0x71, 0x09  ;; mov ebx,[edx*4+0x97199a0]
..@0x804d28c: db 0x81, 0xe1, 0xff, 0xff, 0x03, 0x00  ;; and ecx,0x3ffff
..@0x804d292: db 0x89, 0x1c, 0x8d, 0xa0, 0x99, 0x71, 0x09  ;; mov [ecx*4+0x97199a0],ebx
..@0x804d299: db 0x0f, 0xb7, 0x14, 0x95, 0xa0, 0x99, 0x71, 0x09  ;; movzx edx,word [edx*4+0x97199a0]
..@0x804d2a1: db 0x29, 0xd0  ;; sub eax,edx
..@0x804d2a3: db 0x39, 0xf8  ;; cmp eax,edi
..@0x804d2a5: db 0x7f, 0xd1  ;; jg A.code+0x804d278
..@0x804d2a7: db 0x3b, 0x74, 0x24, 0x18  ;; cmp esi,[esp+0x18]
..@0x804d2ab: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x804d2af: db 0x0f, 0x8f, 0x2c, 0x01, 0x00, 0x00  ;; jg near A.code+0x804d3e1
..@0x804d2b5: db 0x0f, 0xb7, 0x2c, 0x8d, 0xa0, 0x99, 0x71, 0x09  ;; movzx ebp,word [ecx*4+0x97199a0]
..@0x804d2bd: db 0x69, 0x4c, 0x24, 0x64, 0x86, 0x02, 0x00, 0x00  ;; imul ecx,[esp+0x64],dword 0x286
..@0x804d2c5: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x804d2c9: jmp strict near R.code+0x804d395
..@0x804d2ce: dw 0x9066  ;; o16 nop
..@0x804d2d0: db 0x0f, 0xb6, 0xbd, 0x7d, 0x17, 0x71, 0x09  ;; movzx edi,byte [ebp+0x971177d]
..@0x804d2d7: db 0x89, 0x6c, 0x24, 0x10  ;; mov [esp+0x10],ebp
..@0x804d2db: add esi, strict byte 0x1
..@0x804d2de: db 0x0f, 0xb7, 0x0c, 0x8d, 0xa2, 0x99, 0x71, 0x09  ;; movzx ecx,word [ecx*4+0x97199a2]
..@0x804d2e6: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x804d2ea: db 0x8d, 0x87, 0xe3, 0x00, 0x00, 0x00  ;; lea eax,[edi+0xe3]
..@0x804d2f0: db 0x0f, 0xb6, 0x99, 0x7f, 0x19, 0x71, 0x09  ;; movzx ebx,byte [ecx+0x971197f]
..@0x804d2f7: db 0x89, 0x4c, 0x24, 0x14  ;; mov [esp+0x14],ecx
..@0x804d2fb: db 0x69, 0x0d, 0x24, 0xef, 0x6b, 0x08, 0x86, 0x02  ;; imul ecx,[0x86bef24],dword 0x286
..@0x804d303: db 0x00, 0x00
..@0x804d305: db 0x01, 0xc2  ;; add edx,eax
..@0x804d307: db 0x83, 0x04, 0x95, 0xc0, 0x06, 0x06, 0x08, 0x01  ;; add dword [edx*4+0x80606c0],byte +0x1
..@0x804d30f: db 0x8b, 0x04, 0x85, 0xc0, 0x9f, 0x83, 0x09  ;; mov eax,[eax*4+0x9839fc0]
..@0x804d316: db 0x8b, 0x14, 0x95, 0xc0, 0x0b, 0x06, 0x08  ;; mov edx,[edx*4+0x8060bc0]
..@0x804d31d: db 0x8d, 0xab, 0x20, 0x01, 0x00, 0x00  ;; lea ebp,[ebx+0x120]
..@0x804d323: db 0x01, 0xe9  ;; add ecx,ebp
..@0x804d325: db 0x83, 0x04, 0x8d, 0xc0, 0x06, 0x06, 0x08, 0x01  ;; add dword [ecx*4+0x80606c0],byte +0x1
..@0x804d32d: call R.code+0x804b950
..@0x804d332: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x804d336: db 0x8b, 0x14, 0xfd, 0xc0, 0x9d, 0x83, 0x09  ;; mov edx,[edi*8+0x9839dc0]
..@0x804d33d: db 0x2b, 0x04, 0xfd, 0xc4, 0x9d, 0x83, 0x09  ;; sub eax,[edi*8+0x9839dc4]
..@0x804d344: call R.code+0x804b950
..@0x804d349: db 0x8b, 0x7c, 0x24, 0x18  ;; mov edi,[esp+0x18]
..@0x804d34d: db 0x8d, 0x84, 0x3d, 0x40, 0x01, 0x00, 0x00  ;; lea eax,[ebp+edi+0x140]
..@0x804d354: db 0x8b, 0x14, 0x85, 0xc0, 0x06, 0x06, 0x08  ;; mov edx,[eax*4+0x80606c0]
..@0x804d35b: db 0x8b, 0x04, 0xad, 0xc0, 0x9f, 0x83, 0x09  ;; mov eax,[ebp*4+0x9839fc0]
..@0x804d362: call R.code+0x804b950
..@0x804d367: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804d36b: db 0x8b, 0x14, 0xdd, 0xc0, 0x9d, 0x83, 0x09  ;; mov edx,[ebx*8+0x9839dc0]
..@0x804d372: db 0x2b, 0x04, 0xdd, 0xc4, 0x9d, 0x83, 0x09  ;; sub eax,[ebx*8+0x9839dc4]
..@0x804d379: call R.code+0x804b950
..@0x804d37e: db 0x39, 0x35, 0x80, 0x99, 0x71, 0x09  ;; cmp [0x9719980],esi
..@0x804d384: db 0x7c, 0x55  ;; jl A.code+0x804d3db
..@0x804d386: db 0x89, 0xf0  ;; mov eax,esi
..@0x804d388: db 0x25, 0xff, 0xff, 0x03, 0x00  ;; and eax,0x3ffff
..@0x804d38d: db 0x0f, 0xb7, 0x2c, 0x85, 0xa0, 0x99, 0x71, 0x09  ;; movzx ebp,word [eax*4+0x97199a0]
..@0x804d395: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804d397: db 0x81, 0xe1, 0xff, 0xff, 0x03, 0x00  ;; and ecx,0x3ffff
..@0x804d39d: db 0x66, 0x83, 0xfd, 0x01  ;; cmp bp,byte +0x1
..@0x804d3a1: db 0x0f, 0x85, 0x29, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804d2d0
..@0x804d3a7: db 0x0f, 0xb7, 0x0c, 0x8d, 0xa2, 0x99, 0x71, 0x09  ;; movzx ecx,word [ecx*4+0x97199a2]
..@0x804d3af: add esi, strict byte 0x1
..@0x804d3b2: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x804d3b6: db 0x01, 0xc8  ;; add eax,ecx
..@0x804d3b8: db 0x83, 0x04, 0x85, 0xc0, 0x06, 0x06, 0x08, 0x01  ;; add dword [eax*4+0x80606c0],byte +0x1
..@0x804d3c0: db 0x8b, 0x14, 0x85, 0xc0, 0x0b, 0x06, 0x08  ;; mov edx,[eax*4+0x8060bc0]
..@0x804d3c7: db 0x8b, 0x04, 0x8d, 0xc0, 0x9f, 0x83, 0x09  ;; mov eax,[ecx*4+0x9839fc0]
..@0x804d3ce: call R.code+0x804b950
..@0x804d3d3: db 0x39, 0x35, 0x80, 0x99, 0x71, 0x09  ;; cmp [0x9719980],esi
..@0x804d3d9: db 0x7d, 0xab  ;; jnl A.code+0x804d386
..@0x804d3db: db 0x8b, 0x1d, 0x40, 0xf7, 0x6b, 0x08  ;; mov ebx,[0x86bf740]
..@0x804d3e1: db 0x69, 0x44, 0x24, 0x64, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,[esp+0x64],dword 0xa18
..@0x804d3e9: db 0x89, 0x1d, 0xa0, 0x9f, 0x83, 0x09  ;; mov [0x9839fa0],ebx
..@0x804d3ef: db 0x39, 0x98, 0xc8, 0x10, 0x06, 0x08  ;; cmp [eax+0x80610c8],ebx
..@0x804d3f5: db 0x0f, 0x8e, 0x57, 0x02, 0x00, 0x00  ;; jng near A.code+0x804d652
..@0x804d3fb: db 0xa1, 0x08, 0xef, 0x6a, 0x08  ;; mov eax,[0x86aef08]
..@0x804d400: db 0x8b, 0x0d, 0x24, 0xef, 0x6b, 0x08  ;; mov ecx,[0x86bef24]
..@0x804d406: db 0x89, 0x44, 0x24, 0x50  ;; mov [esp+0x50],eax
..@0x804d40a: db 0xa1, 0x40, 0xf7, 0x6b, 0x08  ;; mov eax,[0x86bf740]
..@0x804d40f: db 0x89, 0x4c, 0x24, 0x64  ;; mov [esp+0x64],ecx
..@0x804d413: jmp strict near R.code+0x804c977
..@0x804d418: nop
..@0x804d419: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d420: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804d422: db 0x29, 0xd8  ;; sub eax,ebx
..@0x804d424: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804d429: db 0x0f, 0xb7, 0x84, 0x00, 0x60, 0xf7, 0x6b, 0x08  ;; movzx eax,word [eax+eax+0x86bf760]
..@0x804d431: db 0x01, 0xc3  ;; add ebx,eax
..@0x804d433: jmp strict near R.code+0x804cebf
..@0x804d438: nop
..@0x804d439: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d440: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x804d444: db 0x8d, 0x4d, 0x03  ;; lea ecx,[ebp+0x3]
..@0x804d447: db 0xba, 0x03, 0x00, 0x00, 0x00  ;; mov edx,0x3
..@0x804d44c: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x804d450: db 0x89, 0x44, 0x24, 0x44  ;; mov [esp+0x44],eax
..@0x804d454: sub ebx, strict byte 0x2
..@0x804d457: db 0x89, 0x74, 0x24, 0x18  ;; mov [esp+0x18],esi
..@0x804d45b: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804d45f: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x804d463: db 0x66, 0x89, 0x7c, 0x24, 0x6c  ;; mov [esp+0x6c],di
..@0x804d468: db 0x0f, 0xb6, 0x9f, 0x7f, 0x19, 0x71, 0x09  ;; movzx ebx,byte [edi+0x971197f]
..@0x804d46f: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x804d473: db 0x01, 0xd0  ;; add eax,edx
..@0x804d475: db 0x66, 0x89, 0xbc, 0x00, 0x7a, 0x17, 0x71, 0x08  ;; mov [eax+eax+0x871177a],di
..@0x804d47d: db 0x0f, 0xb6, 0x82, 0x7d, 0x17, 0x71, 0x09  ;; movzx eax,byte [edx+0x971177d]
..@0x804d484: db 0x01, 0xd6  ;; add esi,edx
..@0x804d486: db 0x89, 0x74, 0x24, 0x24  ;; mov [esp+0x24],esi
..@0x804d48a: db 0x8b, 0x04, 0x85, 0x80, 0x18, 0x71, 0x09  ;; mov eax,[eax*4+0x9711880]
..@0x804d491: db 0x03, 0x44, 0x24, 0x3c  ;; add eax,[esp+0x3c]
..@0x804d495: db 0x03, 0x04, 0x9d, 0x80, 0x18, 0x71, 0x09  ;; add eax,[ebx*4+0x9711880]
..@0x804d49c: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x804d49e: db 0x81, 0xe3, 0xff, 0x01, 0x00, 0x00  ;; and ebx,0x1ff
..@0x804d4a4: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x804d4a8: db 0x3b, 0x04, 0x9d, 0x40, 0xef, 0x6b, 0x08  ;; cmp eax,[ebx*4+0x86bef40]
..@0x804d4af: db 0x7d, 0x38  ;; jnl A.code+0x804d4e9
..@0x804d4b1: db 0x3b, 0x4c, 0x24, 0x68  ;; cmp ecx,[esp+0x68]
..@0x804d4b5: db 0x7f, 0x32  ;; jg A.code+0x804d4e9
..@0x804d4b7: db 0x3b, 0x4c, 0x24, 0x18  ;; cmp ecx,[esp+0x18]
..@0x804d4bb: db 0x0f, 0x8f, 0x62, 0x01, 0x00, 0x00  ;; jg near A.code+0x804d623
..@0x804d4c1: db 0x0f, 0xb7, 0x5c, 0x24, 0x6c  ;; movzx ebx,word [esp+0x6c]
..@0x804d4c6: db 0x89, 0xce  ;; mov esi,ecx
..@0x804d4c8: db 0x81, 0xe6, 0xff, 0xff, 0x03, 0x00  ;; and esi,0x3ffff
..@0x804d4ce: db 0x66, 0x89, 0x14, 0xb5, 0xa0, 0x99, 0x71, 0x09  ;; mov [esi*4+0x97199a0],dx
..@0x804d4d6: db 0x66, 0x89, 0x1c, 0xb5, 0xa2, 0x99, 0x71, 0x09  ;; mov [esi*4+0x97199a2],bx
..@0x804d4de: db 0x8b, 0x74, 0x24, 0x0c  ;; mov esi,[esp+0xc]
..@0x804d4e2: db 0x89, 0x04, 0xb5, 0x40, 0xef, 0x6b, 0x08  ;; mov [esi*4+0x86bef40],eax
..@0x804d4e9: db 0x81, 0xfa, 0x02, 0x01, 0x00, 0x00  ;; cmp edx,0x102
..@0x804d4ef: db 0x74, 0x6f  ;; jz A.code+0x804d560
..@0x804d4f1: db 0x8d, 0x72, 0xfe  ;; lea esi,[edx-0x2]
..@0x804d4f4: db 0x0f, 0xb7, 0xc1  ;; movzx eax,cx
..@0x804d4f7: db 0x0f, 0xb6, 0x98, 0x20, 0xef, 0x6a, 0x08  ;; movzx ebx,byte [eax+0x86aef20]
..@0x804d4fe: db 0xeb, 0x2d  ;; jmp short A.code+0x804d52d
..@0x804d500: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804d502: db 0x29, 0xf8  ;; sub eax,edi
..@0x804d504: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x804d509: db 0x39, 0x34, 0x85, 0xa0, 0x99, 0x81, 0x09  ;; cmp [eax*4+0x98199a0],esi
..@0x804d510: db 0x7c, 0x4e  ;; jl A.code+0x804d560
..@0x804d512: db 0x8b, 0x04, 0x85, 0x80, 0xf7, 0x6d, 0x08  ;; mov eax,[eax*4+0x86df780]
..@0x804d519: db 0x01, 0xd0  ;; add eax,edx
..@0x804d51b: db 0x0f, 0xb7, 0x84, 0x00, 0x7a, 0x17, 0x71, 0x08  ;; movzx eax,word [eax+eax+0x871177a]
..@0x804d523: db 0x01, 0xc7  ;; add edi,eax
..@0x804d525: db 0x81, 0xff, 0x00, 0x80, 0x00, 0x00  ;; cmp edi,0x8000
..@0x804d52b: db 0x7f, 0x33  ;; jg A.code+0x804d560
..@0x804d52d: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804d52f: db 0x29, 0xf8  ;; sub eax,edi
..@0x804d531: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804d536: db 0x38, 0x98, 0x20, 0xef, 0x6a, 0x08  ;; cmp [eax+0x86aef20],bl
..@0x804d53c: db 0x0f, 0x84, 0xee, 0x00, 0x00, 0x00  ;; jz near A.code+0x804d630
..@0x804d542: db 0x3b, 0x54, 0x24, 0x30  ;; cmp edx,[esp+0x30]
..@0x804d546: db 0x75, 0xb8  ;; jnz A.code+0x804d500
..@0x804d548: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804d54a: db 0x29, 0xf8  ;; sub eax,edi
..@0x804d54c: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804d551: db 0x0f, 0xb7, 0x84, 0x00, 0x60, 0xf7, 0x6b, 0x08  ;; movzx eax,word [eax+eax+0x86bf760]
..@0x804d559: db 0x01, 0xc7  ;; add edi,eax
..@0x804d55b: db 0xeb, 0xa3  ;; jmp short A.code+0x804d500
..@0x804d55d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804d560: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x804d564: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x804d568: db 0x2b, 0x7c, 0x24, 0x40  ;; sub edi,[esp+0x40]
..@0x804d56c: jmp strict near R.code+0x804d0aa
..@0x804d571: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d578: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x804d57c: db 0x8b, 0x44, 0x24, 0x6c  ;; mov eax,[esp+0x6c]
..@0x804d580: db 0x2b, 0x7c, 0x24, 0x40  ;; sub edi,[esp+0x40]
..@0x804d584: jmp strict near R.code+0x804d0aa
..@0x804d589: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d590: db 0x80, 0xb8, 0xa0, 0x9d, 0x83, 0x09, 0x1d  ;; cmp byte [eax+0x9839da0],0x1d
..@0x804d597: db 0x77, 0xdf  ;; ja A.code+0x804d578
..@0x804d599: db 0x81, 0x7c, 0x24, 0x30, 0x02, 0x01, 0x00, 0x00  ;; cmp dword [esp+0x30],0x102
..@0x804d5a1: db 0x74, 0x56  ;; jz A.code+0x804d5f9
..@0x804d5a3: db 0x8b, 0x4c, 0x24, 0x4c  ;; mov ecx,[esp+0x4c]
..@0x804d5a7: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804d5a9: db 0x29, 0xf8  ;; sub eax,edi
..@0x804d5ab: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x804d5b0: db 0x3b, 0x0c, 0x85, 0xa0, 0x99, 0x81, 0x09  ;; cmp ecx,[eax*4+0x98199a0]
..@0x804d5b7: db 0x7f, 0xbf  ;; jg A.code+0x804d578
..@0x804d5b9: db 0x8b, 0x04, 0x85, 0x80, 0xf7, 0x6d, 0x08  ;; mov eax,[eax*4+0x86df780]
..@0x804d5c0: db 0x0f, 0xb7, 0x84, 0x00, 0x7e, 0x19, 0x71, 0x08  ;; movzx eax,word [eax+eax+0x871197e]
..@0x804d5c8: db 0x01, 0xc7  ;; add edi,eax
..@0x804d5ca: db 0x81, 0xff, 0x00, 0x80, 0x00, 0x00  ;; cmp edi,0x8000
..@0x804d5d0: db 0x7f, 0xa6  ;; jg A.code+0x804d578
..@0x804d5d2: db 0x0f, 0xb6, 0x8f, 0x7f, 0x19, 0x71, 0x09  ;; movzx ecx,byte [edi+0x971197f]
..@0x804d5d9: jmp strict near R.code+0x804cdcc
..@0x804d5de: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804d5e2: jmp strict near R.code+0x804d0e8
..@0x804d5e7: db 0xc7, 0x44, 0x24, 0x14, 0xff, 0x7f, 0x00, 0x00  ;; mov dword [esp+0x14],0x7fff
..@0x804d5ef: db 0xb8, 0xff, 0x7f, 0x00, 0x00  ;; mov eax,0x7fff
..@0x804d5f4: jmp strict near R.code+0x804cc4d
..@0x804d5f9: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804d5fb: db 0x29, 0xf8  ;; sub eax,edi
..@0x804d5fd: db 0x25, 0xff, 0xff, 0x00, 0x00  ;; and eax,0xffff
..@0x804d602: db 0x0f, 0xb7, 0x84, 0x00, 0x60, 0xf7, 0x6b, 0x08  ;; movzx eax,word [eax+eax+0x86bf760]
..@0x804d60a: db 0x01, 0xc7  ;; add edi,eax
..@0x804d60c: db 0xeb, 0x95  ;; jmp short A.code+0x804d5a3
..@0x804d60e: db 0x8b, 0x1d, 0x08, 0xef, 0x6a, 0x08  ;; mov ebx,[0x86aef08]
..@0x804d614: db 0x89, 0x5c, 0x24, 0x50  ;; mov [esp+0x50],ebx
..@0x804d618: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804d61a: db 0x89, 0x5c, 0x24, 0x58  ;; mov [esp+0x58],ebx
..@0x804d61e: jmp strict near R.code+0x804c951
..@0x804d623: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x804d627: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x804d62b: jmp strict near R.code+0x804d4c1
..@0x804d630: add edx, strict byte 0x1
..@0x804d633: add ecx, strict byte 0x1
..@0x804d636: jmp strict near R.code+0x804d45f
..@0x804d63b: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x804d63f: db 0x31, 0xff  ;; xor edi,edi
..@0x804d641: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x804d645: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x804d649: db 0x89, 0x4c, 0x24, 0x24  ;; mov [esp+0x24],ecx
..@0x804d64d: jmp strict near R.code+0x804d0aa
..@0x804d652: call R.code+0x804c7a0
..@0x804d657: db 0x31, 0xc0  ;; xor eax,eax
..@0x804d659: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d660: db 0xc7, 0x04, 0x85, 0x40, 0xef, 0x6b, 0x08, 0xff  ;; mov dword [eax*4+0x86bef40],0x7fffffff
..@0x804d668: db 0xff, 0xff, 0x7f
..@0x804d66b: add eax, strict byte 0x1
..@0x804d66e: db 0x3d, 0x00, 0x02, 0x00, 0x00  ;; cmp eax,0x200
..@0x804d673: db 0x75, 0xeb  ;; jnz A.code+0x804d660
..@0x804d675: db 0x8b, 0x35, 0x24, 0xef, 0x6b, 0x08  ;; mov esi,[0x86bef24]
..@0x804d67b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804d67d: db 0x25, 0xff, 0x01, 0x00, 0x00  ;; and eax,0x1ff
..@0x804d682: db 0x8b, 0x3d, 0x08, 0xef, 0x6a, 0x08  ;; mov edi,[0x86aef08]
..@0x804d688: db 0xc7, 0x04, 0x85, 0x40, 0xef, 0x6b, 0x08, 0x00  ;; mov dword [eax*4+0x86bef40],0x80000000
..@0x804d690: db 0x00, 0x00, 0x80
..@0x804d693: db 0x69, 0xc6, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,esi,dword 0xa18
..@0x804d699: db 0x89, 0x74, 0x24, 0x64  ;; mov [esp+0x64],esi
..@0x804d69d: db 0x89, 0x7c, 0x24, 0x50  ;; mov [esp+0x50],edi
..@0x804d6a1: db 0x8b, 0x80, 0xc8, 0x10, 0x06, 0x08  ;; mov eax,[eax+0x80610c8]
..@0x804d6a7: db 0x39, 0x05, 0x08, 0xef, 0x6a, 0x08  ;; cmp [0x86aef08],eax
..@0x804d6ad: db 0x0f, 0x4e, 0x05, 0x08, 0xef, 0x6a, 0x08  ;; cmovng eax,[0x86aef08]
..@0x804d6b4: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x804d6b8: db 0xa1, 0x40, 0xf7, 0x6b, 0x08  ;; mov eax,[0x86bf740]
..@0x804d6bd: jmp strict near R.code+0x804c977
..@0x804d6c2: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d6c9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804d6d0: push ebx
..@0x804d6d1: sub esp, strict byte 0x18
..@0x804d6d4: db 0x8b, 0x15, 0x04, 0xef, 0x6a, 0x08  ;; mov edx,[0x86aef04]
..@0x804d6da: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x804d6de: db 0x0f, 0xb7, 0xc2  ;; movzx eax,dx
..@0x804d6e1: db 0x01, 0xc8  ;; add eax,ecx
..@0x804d6e3: db 0x88, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],cl
..@0x804d6e7: db 0x8d, 0x98, 0x0f, 0x00, 0xff, 0xff  ;; lea ebx,[eax-0xfff1]
..@0x804d6ed: db 0x3d, 0xf1, 0xff, 0x00, 0x00  ;; cmp eax,0xfff1
..@0x804d6f2: db 0x0f, 0x4d, 0xc3  ;; cmovnl eax,ebx
..@0x804d6f5: db 0xc1, 0xea, 0x10  ;; shr edx,byte 0x10
..@0x804d6f8: db 0x01, 0xc2  ;; add edx,eax
..@0x804d6fa: db 0x8d, 0x9a, 0x0f, 0x00, 0xff, 0xff  ;; lea ebx,[edx-0xfff1]
..@0x804d700: db 0x81, 0xfa, 0xf1, 0xff, 0x00, 0x00  ;; cmp edx,0xfff1
..@0x804d706: db 0x0f, 0x4d, 0xd3  ;; cmovnl edx,ebx
..@0x804d709: db 0xc1, 0xe2, 0x10  ;; shl edx,byte 0x10
..@0x804d70c: db 0x01, 0xd0  ;; add eax,edx
..@0x804d70e: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x804d713: db 0xa3, 0x04, 0xef, 0x6a, 0x08  ;; mov [0x86aef04],eax
..@0x804d718: db 0x8d, 0x44, 0x24, 0x0c  ;; lea eax,[esp+0xc]
..@0x804d71c: call R.code+0x804c8f0
..@0x804d721: add esp, strict byte 0x18
..@0x804d724: pop ebx
..@0x804d725: ret
..@0x804d726: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804d729: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804d730: push ebp
..@0x804d731: db 0x31, 0xd2  ;; xor edx,edx
..@0x804d733: db 0x31, 0xc0  ;; xor eax,eax
..@0x804d735: push edi
..@0x804d736: push esi
..@0x804d737: push ebx
..@0x804d738: sub esp, strict byte 0x2c
..@0x804d73b: call R.code+0x804c8f0
..@0x804d740: call R.code+0x804c7a0
..@0x804d745: db 0x8b, 0x15, 0xc0, 0xa4, 0x83, 0x09  ;; mov edx,[0x983a4c0]
..@0x804d74b: db 0x31, 0xc0  ;; xor eax,eax
..@0x804d74d: db 0xf7, 0xda  ;; neg edx
..@0x804d74f: and edx, strict byte 0x7
..@0x804d752: call R.code+0x804b950
..@0x804d757: db 0xa1, 0x04, 0xef, 0x6a, 0x08  ;; mov eax,[0x86aef04]
..@0x804d75c: db 0x0f, 0xc8  ;; bswap eax
..@0x804d75e: db 0xba, 0x20, 0x00, 0x00, 0x00  ;; mov edx,0x20
..@0x804d763: call R.code+0x804b950
..@0x804d768: db 0xa1, 0xc8, 0xa4, 0x83, 0x09  ;; mov eax,[0x983a4c8]
..@0x804d76d: db 0xf7, 0xd0  ;; not eax
..@0x804d76f: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804d771: db 0x89, 0xc2  ;; mov edx,eax
..@0x804d773: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x804d776: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x804d779: db 0x01, 0xd1  ;; add ecx,edx
..@0x804d77b: db 0x89, 0xc2  ;; mov edx,eax
..@0x804d77d: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804d782: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804d785: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804d788: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804d78e: db 0x01, 0xca  ;; add edx,ecx
..@0x804d790: db 0x01, 0xd0  ;; add eax,edx
..@0x804d792: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x804d797: db 0xa3, 0xa0, 0xe0, 0x83, 0x09  ;; mov [0x983e0a0],eax
..@0x804d79c: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804d7a1: call R.code+0x804b8f0
..@0x804d7a6: db 0x8b, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov ebx,[0x860cae8]
..@0x804d7ac: db 0xa1, 0xe0, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e0e0]
..@0x804d7b1: db 0x89, 0xda  ;; mov edx,ebx
..@0x804d7b3: db 0x29, 0xc2  ;; sub edx,eax
..@0x804d7b5: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x804d7ba: db 0x89, 0xd0  ;; mov eax,edx
..@0x804d7bc: sub eax, strict byte 0xc
..@0x804d7bf: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804d7c1: db 0x89, 0xc2  ;; mov edx,eax
..@0x804d7c3: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x804d7c6: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x804d7c9: db 0x01, 0xd1  ;; add ecx,edx
..@0x804d7cb: db 0x89, 0xc2  ;; mov edx,eax
..@0x804d7cd: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804d7d2: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804d7d5: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804d7d8: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804d7de: db 0x01, 0xca  ;; add edx,ecx
..@0x804d7e0: db 0x01, 0xd0  ;; add eax,edx
..@0x804d7e2: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x804d7e7: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804d7eb: db 0x8d, 0x44, 0x24, 0x1c  ;; lea eax,[esp+0x1c]
..@0x804d7ef: call R.code+0x804b8f0
..@0x804d7f4: db 0x8b, 0x3d, 0x60, 0xd6, 0x05, 0x08  ;; mov edi,[0x805d660]
..@0x804d7fa: db 0x89, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebx
..@0x804d800: db 0x8b, 0x5f, 0x68  ;; mov ebx,[edi+0x68]
..@0x804d803: db 0x3b, 0x5f, 0x6c  ;; cmp ebx,[edi+0x6c]
..@0x804d806: db 0x8d, 0x34, 0x9d, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[ebx*4+0x0]
..@0x804d80d: db 0x7d, 0x43  ;; jnl A.code+0x804d852
..@0x804d80f: nop
..@0x804d810: db 0x8b, 0x47, 0x70  ;; mov eax,[edi+0x70]
..@0x804d813: add ebx, strict byte 0x1
..@0x804d816: db 0x8b, 0x04, 0x30  ;; mov eax,[eax+esi]
..@0x804d819: add esi, strict byte 0x4
..@0x804d81c: db 0x8b, 0x08  ;; mov ecx,[eax]
..@0x804d81e: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804d820: db 0x89, 0xca  ;; mov edx,ecx
..@0x804d822: db 0xc1, 0xea, 0x18  ;; shr edx,byte 0x18
..@0x804d825: db 0xc1, 0xe5, 0x18  ;; shl ebp,byte 0x18
..@0x804d828: db 0x8d, 0x6c, 0x15, 0x0c  ;; lea ebp,[ebp+edx+0xc]
..@0x804d82c: db 0x89, 0xca  ;; mov edx,ecx
..@0x804d82e: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x804d834: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x804d837: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x804d83a: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804d840: db 0x01, 0xea  ;; add edx,ebp
..@0x804d842: db 0x01, 0xca  ;; add edx,ecx
..@0x804d844: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804d848: call R.code+0x804b8f0
..@0x804d84d: db 0x39, 0x5f, 0x6c  ;; cmp [edi+0x6c],ebx
..@0x804d850: db 0x7f, 0xbe  ;; jg A.code+0x804d810
..@0x804d852: db 0xb8, 0xa0, 0xe0, 0x83, 0x09  ;; mov eax,0x983e0a0
..@0x804d857: db 0xba, 0x0c, 0x00, 0x00, 0x00  ;; mov edx,0xc
..@0x804d85c: db 0xc7, 0x05, 0xa0, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e0a0],0x0
..@0x804d864: db 0x00, 0x00
..@0x804d866: db 0xc7, 0x05, 0xa4, 0xe0, 0x83, 0x09, 0x49, 0x45  ;; mov dword [0x983e0a4],0x444e4549
..@0x804d86e: db 0x4e, 0x44
..@0x804d870: db 0xc7, 0x05, 0xa8, 0xe0, 0x83, 0x09, 0xae, 0x42  ;; mov dword [0x983e0a8],0x826042ae
..@0x804d878: db 0x60, 0x82
..@0x804d87a: call R.code+0x804b8f0
..@0x804d87f: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804d884: db 0x85, 0xc0  ;; test eax,eax
..@0x804d886: db 0x74, 0x12  ;; jz A.code+0x804d89a
..@0x804d888: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804d88b: call B.code+prog_free
..@0x804d890: db 0xc7, 0x05, 0x90, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e090],0x0
..@0x804d898: db 0x00, 0x00
..@0x804d89a: db 0x8b, 0xbf, 0x84, 0x00, 0x00, 0x00  ;; mov edi,[edi+0x84]
..@0x804d8a0: db 0x8b, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov ebx,[0x860cae8]
..@0x804d8a6: db 0x85, 0xff  ;; test edi,edi
..@0x804d8a8: db 0x0f, 0x84, 0xc2, 0x00, 0x00, 0x00  ;; jz near A.code+0x804d970
..@0x804d8ae: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x804d8b2: db 0xc7, 0x04, 0x24, 0xe8, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3e8
..@0x804d8b9: call [funcptr_printf]
..@0x804d8bf: db 0xa1, 0xe4, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae4]
..@0x804d8c4: db 0x85, 0xc0  ;; test eax,eax
..@0x804d8c6: db 0x7e, 0x0a  ;; jng A.code+0x804d8d2
..@0x804d8c8: db 0x8b, 0x35, 0xb0, 0x06, 0x06, 0x08  ;; mov esi,[0x80606b0]
..@0x804d8ce: db 0x85, 0xf6  ;; test esi,esi
..@0x804d8d0: db 0x74, 0x36  ;; jz A.code+0x804d908
..@0x804d8d2: db 0xc7, 0x04, 0x24, 0x09, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b409
..@0x804d8d9: call [funcptr_printf]
..@0x804d8df: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x804d8e4: db 0x8b, 0x88, 0x84, 0x00, 0x00, 0x00  ;; mov ecx,[eax+0x84]
..@0x804d8ea: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804d8ec: db 0x74, 0x0d  ;; jz A.code+0x804d8fb
..@0x804d8ee: db 0xc7, 0x04, 0x24, 0x49, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_nl
..@0x804d8f5: call [funcptr_printf]
..@0x804d8fb: add esp, strict byte 0x2c
..@0x804d8fe: pop ebx
..@0x804d8ff: pop esi
..@0x804d900: pop edi
..@0x804d901: pop ebp
..@0x804d902: ret
..@0x804d903: nop
..@0x804d904: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d908: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x804d90b: db 0x85, 0xc0  ;; test eax,eax
..@0x804d90d: db 0x75, 0x79  ;; jnz A.code+0x804d988
..@0x804d90f: db 0xc7, 0x04, 0x24, 0xf0, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3f0
..@0x804d916: call [funcptr_printf]
..@0x804d91c: db 0x8b, 0x35, 0xe4, 0xca, 0x60, 0x08  ;; mov esi,[0x860cae4]
..@0x804d922: db 0xc1, 0xe3, 0x03  ;; shl ebx,byte 0x3
..@0x804d925: db 0xb9, 0x1f, 0x85, 0xeb, 0x51  ;; mov ecx,0x51eb851f
..@0x804d92a: db 0xc7, 0x04, 0x24, 0xfc, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3fc
..@0x804d931: db 0x29, 0xf3  ;; sub ebx,esi
..@0x804d933: db 0x89, 0xda  ;; mov edx,ebx
..@0x804d935: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x804d938: and edx, strict byte 0x7
..@0x804d93b: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x804d93f: db 0x6b, 0xd2, 0x7d  ;; imul edx,edx,byte +0x7d
..@0x804d942: db 0x89, 0xd0  ;; mov eax,edx
..@0x804d944: db 0xf7, 0xe9  ;; imul ecx
..@0x804d946: db 0xc1, 0xea, 0x05  ;; shr edx,byte 0x5
..@0x804d949: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x804d94d: db 0x89, 0xf2  ;; mov edx,esi
..@0x804d94f: and edx, strict byte 0x7
..@0x804d952: db 0x6b, 0xd2, 0x7d  ;; imul edx,edx,byte +0x7d
..@0x804d955: db 0x89, 0xd0  ;; mov eax,edx
..@0x804d957: db 0xf7, 0xe9  ;; imul ecx
..@0x804d959: db 0xc1, 0xea, 0x05  ;; shr edx,byte 0x5
..@0x804d95c: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x804d960: call [funcptr_printf]
..@0x804d966: jmp strict near R.code+0x804d8df
..@0x804d96b: nop
..@0x804d96c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804d970: db 0xc7, 0x04, 0x24, 0x5e, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b55e
..@0x804d977: call [funcptr_printf]
..@0x804d97d: jmp strict near R.code+0x804d8ae
..@0x804d982: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804d988: db 0xf7, 0xd8  ;; neg eax
..@0x804d98a: db 0xc7, 0x04, 0x24, 0xf8, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3f8
..@0x804d991: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804d995: call [funcptr_printf]
..@0x804d99b: jmp strict near R.code+0x804d91c
..@0x804d9a0: sub esp, strict byte 0x4c
..@0x804d9a3: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804d9a9: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x804d9ad: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804d9af: db 0x89, 0x74, 0x24, 0x40  ;; mov [esp+0x40],esi
..@0x804d9b3: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x804d9b7: db 0x89, 0x6c, 0x24, 0x48  ;; mov [esp+0x48],ebp
..@0x804d9bb: db 0x85, 0xd2  ;; test edx,edx
..@0x804d9bd: db 0x75, 0x2c  ;; jnz A.code+0x804d9eb
..@0x804d9bf: db 0xa1, 0x74, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d674]
..@0x804d9c4: cmp eax, strict byte 0x3
..@0x804d9c7: db 0x0f, 0x84, 0x73, 0x01, 0x00, 0x00  ;; jz near A.code+0x804db40
..@0x804d9cd: db 0xa3, 0x88, 0xe0, 0x83, 0x09  ;; mov [0x983e088],eax
..@0x804d9d2: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804d9d5: call [0x80606a0]
..@0x804d9db: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804d9e1: db 0xc7, 0x05, 0x8c, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e08c],0x0
..@0x804d9e9: db 0x00, 0x00
..@0x804d9eb: db 0xf6, 0x05, 0x84, 0xe0, 0x83, 0x09, 0x01  ;; test byte [0x983e084],0x1
..@0x804d9f2: db 0x0f, 0x84, 0x28, 0x01, 0x00, 0x00  ;; jz near A.code+0x804db20
..@0x804d9f8: db 0x8b, 0x35, 0x94, 0xe0, 0x83, 0x09  ;; mov esi,[0x983e094]
..@0x804d9fe: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804da03: db 0x01, 0xd6  ;; add esi,edx
..@0x804da05: db 0x89, 0x5c, 0x90, 0x04  ;; mov [eax+edx*4+0x4],ebx
..@0x804da09: add esi, strict byte 0x2
..@0x804da0c: db 0x83, 0x3d, 0x88, 0xe0, 0x83, 0x09, 0x04  ;; cmp dword [0x983e088],byte +0x4
..@0x804da13: db 0x0f, 0x87, 0xa9, 0x00, 0x00, 0x00  ;; ja near A.code+0x804dac2
..@0x804da19: db 0x8b, 0x15, 0x88, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e088]
..@0x804da1f: db 0xff, 0x24, 0x95, 0xe0, 0xb5, 0x05, 0x08  ;; jmp [edx*4+code_ptr_0x805b5e0]
..@0x804da26: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804da29: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804da30: db 0x8b, 0x14, 0xb0  ;; mov edx,[eax+esi*4]
..@0x804da33: db 0xa1, 0x8c, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e08c]
..@0x804da38: db 0x81, 0xe2, 0x00, 0x00, 0xff, 0x00  ;; and edx,0xff0000
..@0x804da3e: db 0x25, 0x00, 0x00, 0xff, 0x00  ;; and eax,0xff0000
..@0x804da43: db 0x01, 0xd0  ;; add eax,edx
..@0x804da45: db 0x89, 0xda  ;; mov edx,ebx
..@0x804da47: db 0xd1, 0xf8  ;; sar eax,1
..@0x804da49: db 0x25, 0x00, 0x00, 0xff, 0x00  ;; and eax,0xff0000
..@0x804da4e: db 0x29, 0xc2  ;; sub edx,eax
..@0x804da50: db 0x89, 0xd0  ;; mov eax,edx
..@0x804da52: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804da55: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804da5a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804da5d: call [0x80606a0]
..@0x804da63: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804da68: db 0x8b, 0x14, 0xb0  ;; mov edx,[eax+esi*4]
..@0x804da6b: db 0xa1, 0x8c, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e08c]
..@0x804da70: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804da76: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804da7b: db 0x01, 0xd0  ;; add eax,edx
..@0x804da7d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804da7f: db 0xd1, 0xf8  ;; sar eax,1
..@0x804da81: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804da86: db 0x29, 0xc2  ;; sub edx,eax
..@0x804da88: db 0x0f, 0xb6, 0xc6  ;; movzx eax,dh
..@0x804da8b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804da8e: call [0x80606a0]
..@0x804da94: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804da99: db 0x0f, 0xb6, 0x14, 0xb0  ;; movzx edx,byte [eax+esi*4]
..@0x804da9d: db 0x0f, 0xb6, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; movzx eax,byte [0x983e08c]
..@0x804daa4: db 0x01, 0xd0  ;; add eax,edx
..@0x804daa6: db 0x89, 0xda  ;; mov edx,ebx
..@0x804daa8: db 0xd1, 0xf8  ;; sar eax,1
..@0x804daaa: db 0x29, 0xc2  ;; sub edx,eax
..@0x804daac: db 0x89, 0xd0  ;; mov eax,edx
..@0x804daae: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dab3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dab6: call [0x80606a0]
..@0x804dabc: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804dac2: add edx, strict byte 0x1
..@0x804dac5: db 0x89, 0x1d, 0x8c, 0xe0, 0x83, 0x09  ;; mov [0x983e08c],ebx
..@0x804dacb: db 0x3b, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e094]
..@0x804dad1: db 0x89, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov [0x983e080],edx
..@0x804dad7: db 0x7c, 0x2c  ;; jl A.code+0x804db05
..@0x804dad9: db 0xc7, 0x05, 0x80, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e080],0x0
..@0x804dae1: db 0x00, 0x00
..@0x804dae3: db 0xa1, 0xa0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a0]
..@0x804dae8: db 0x3d, 0xa0, 0xbc, 0x04, 0x08  ;; cmp eax,A.code+0x804bca0
..@0x804daed: db 0x74, 0x16  ;; jz A.code+0x804db05
..@0x804daef: db 0x8b, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e084]
..@0x804daf5: add edx, strict byte 0x1
..@0x804daf8: db 0x3d, 0xd0, 0xd6, 0x04, 0x08  ;; cmp eax,A.code+0x804d6d0
..@0x804dafd: db 0x89, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov [0x983e084],edx
..@0x804db03: db 0x74, 0x5b  ;; jz A.code+0x804db60
..@0x804db05: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x804db09: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804db0d: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x804db11: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x804db15: add esp, strict byte 0x4c
..@0x804db18: ret
..@0x804db19: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804db20: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x804db26: db 0x8d, 0x72, 0x01  ;; lea esi,[edx+0x1]
..@0x804db29: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804db2e: db 0x01, 0xd1  ;; add ecx,edx
..@0x804db30: db 0x89, 0x5c, 0x88, 0x08  ;; mov [eax+ecx*4+0x8],ebx
..@0x804db34: jmp strict near R.code+0x804da0c
..@0x804db39: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804db40: db 0x8b, 0x2d, 0x84, 0xe0, 0x83, 0x09  ;; mov ebp,[0x983e084]
..@0x804db46: db 0x85, 0xed  ;; test ebp,ebp
..@0x804db48: db 0x0f, 0x85, 0x7f, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x804d9cd
..@0x804db4e: db 0xc7, 0x05, 0x88, 0xe0, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e088],0x1
..@0x804db56: db 0x00, 0x00
..@0x804db58: db 0xb0, 0x01  ;; mov al,0x1
..@0x804db5a: jmp strict near R.code+0x804d9d2
..@0x804db5f: nop
..@0x804db60: db 0x3b, 0x15, 0x98, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e098]
..@0x804db66: db 0x7c, 0x9d  ;; jl A.code+0x804db05
..@0x804db68: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x804db6c: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x804db70: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x804db74: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x804db78: add esp, strict byte 0x4c
..@0x804db7b: jmp strict near R.code+0x804d730
..@0x804db80: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804db86: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804db8a: db 0x89, 0xda  ;; mov edx,ebx
..@0x804db8c: db 0xc1, 0xfa, 0x10  ;; sar edx,byte 0x10
..@0x804db8f: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x804db93: db 0x8d, 0x56, 0xff  ;; lea edx,[esi-0x1]
..@0x804db96: db 0x0f, 0xb6, 0x7c, 0x90, 0x02  ;; movzx edi,byte [eax+edx*4+0x2]
..@0x804db9b: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804db9f: db 0x8d, 0x14, 0xb5, 0x00, 0x00, 0x00, 0x00  ;; lea edx,[esi*4+0x0]
..@0x804dba6: db 0x0f, 0xb6, 0x44, 0xb0, 0x02  ;; movzx eax,byte [eax+esi*4+0x2]
..@0x804dbab: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x804dbaf: db 0x0f, 0xb6, 0x35, 0x8e, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08e]
..@0x804dbb6: db 0x89, 0xc2  ;; mov edx,eax
..@0x804dbb8: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804dbbc: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804dbbe: db 0x29, 0xfa  ;; sub edx,edi
..@0x804dbc0: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804dbc2: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804dbc5: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804dbc7: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dbca: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804dbcc: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804dbce: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804dbd0: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dbd3: db 0x31, 0xea  ;; xor edx,ebp
..@0x804dbd5: db 0x29, 0xea  ;; sub edx,ebp
..@0x804dbd7: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804dbd9: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dbdc: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804dbde: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804dbe0: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804dbe2: db 0x0f, 0x8c, 0x08, 0x02, 0x00, 0x00  ;; jl near A.code+0x804ddf0
..@0x804dbe8: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804dbea: db 0x0f, 0x8f, 0x00, 0x02, 0x00, 0x00  ;; jg near A.code+0x804ddf0
..@0x804dbf0: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x804dbf4: db 0x29, 0xf0  ;; sub eax,esi
..@0x804dbf6: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dbfb: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dbfe: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804dc02: call eax
..@0x804dc04: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804dc0a: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dc0c: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804dc0f: db 0x0f, 0xb6, 0x35, 0x8d, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08d]
..@0x804dc16: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x804dc1a: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804dc1f: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804dc23: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804dc27: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804dc29: db 0x0f, 0xb6, 0x7c, 0x90, 0x01  ;; movzx edi,byte [eax+edx*4+0x1]
..@0x804dc2e: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x804dc32: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804dc34: db 0x8b, 0x04, 0x10  ;; mov eax,[eax+edx]
..@0x804dc37: db 0x0f, 0xb6, 0xc4  ;; movzx eax,ah
..@0x804dc3a: db 0x89, 0xc2  ;; mov edx,eax
..@0x804dc3c: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804dc40: db 0x29, 0xfa  ;; sub edx,edi
..@0x804dc42: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804dc45: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804dc47: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dc4a: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804dc4c: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804dc4e: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804dc50: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dc53: db 0x31, 0xea  ;; xor edx,ebp
..@0x804dc55: db 0x29, 0xea  ;; sub edx,ebp
..@0x804dc57: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804dc59: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dc5c: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804dc5e: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804dc60: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804dc62: db 0x0f, 0x8c, 0x78, 0x01, 0x00, 0x00  ;; jl near A.code+0x804dde0
..@0x804dc68: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804dc6a: db 0x0f, 0x8f, 0x70, 0x01, 0x00, 0x00  ;; jg near A.code+0x804dde0
..@0x804dc70: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x804dc74: db 0x29, 0xf0  ;; sub eax,esi
..@0x804dc76: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dc7b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dc7e: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804dc82: call eax
..@0x804dc84: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804dc8a: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804dc8f: db 0x0f, 0xb6, 0x35, 0x8c, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08c]
..@0x804dc96: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804dc9a: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804dc9e: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804dca0: db 0x0f, 0xb6, 0x3c, 0x90  ;; movzx edi,byte [eax+edx*4]
..@0x804dca4: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x804dca8: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804dcaa: db 0x0f, 0xb6, 0x04, 0x10  ;; movzx eax,byte [eax+edx]
..@0x804dcae: db 0x89, 0xc2  ;; mov edx,eax
..@0x804dcb0: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804dcb4: db 0x29, 0xfa  ;; sub edx,edi
..@0x804dcb6: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804dcb9: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804dcbb: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dcbe: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804dcc0: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804dcc2: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804dcc4: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dcc7: db 0x31, 0xea  ;; xor edx,ebp
..@0x804dcc9: db 0x29, 0xea  ;; sub edx,ebp
..@0x804dccb: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804dccd: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804dcd0: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804dcd2: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804dcd4: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804dcd6: db 0x0f, 0x8c, 0xf4, 0x00, 0x00, 0x00  ;; jl near A.code+0x804ddd0
..@0x804dcdc: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804dcde: db 0x0f, 0x8f, 0xec, 0x00, 0x00, 0x00  ;; jg near A.code+0x804ddd0
..@0x804dce4: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dce6: db 0x29, 0xf0  ;; sub eax,esi
..@0x804dce8: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dced: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dcf0: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804dcf4: call eax
..@0x804dcf6: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804dcfc: jmp strict near R.code+0x804dac2
..@0x804dd01: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804dd08: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dd0a: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804dd0d: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dd12: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd15: call [0x80606a0]
..@0x804dd1b: db 0x0f, 0xb6, 0xc7  ;; movzx eax,bh
..@0x804dd1e: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd21: call [0x80606a0]
..@0x804dd27: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x804dd2a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd2d: call [0x80606a0]
..@0x804dd33: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804dd39: jmp strict near R.code+0x804dac2
..@0x804dd3e: dw 0x9066  ;; o16 nop
..@0x804dd40: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dd42: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804dd45: db 0x2a, 0x05, 0x8e, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08e]
..@0x804dd4b: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804dd4e: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd51: call [0x80606a0]
..@0x804dd57: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dd59: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804dd5c: db 0x2a, 0x05, 0x8d, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08d]
..@0x804dd62: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804dd65: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd68: call [0x80606a0]
..@0x804dd6e: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804dd70: db 0x2b, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; sub eax,[0x983e08c]
..@0x804dd76: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804dd7b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd7e: call [0x80606a0]
..@0x804dd84: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804dd8a: jmp strict near R.code+0x804dac2
..@0x804dd8f: nop
..@0x804dd90: db 0x89, 0xda  ;; mov edx,ebx
..@0x804dd92: db 0xc1, 0xfa, 0x10  ;; sar edx,byte 0x10
..@0x804dd95: db 0x2a, 0x54, 0xb0, 0x02  ;; sub dl,[eax+esi*4+0x2]
..@0x804dd99: db 0x0f, 0xb6, 0xc2  ;; movzx eax,dl
..@0x804dd9c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804dd9f: call [0x80606a0]
..@0x804dda5: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804ddab: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804ddad: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804ddb0: db 0x2a, 0x44, 0xb2, 0x01  ;; sub al,[edx+esi*4+0x1]
..@0x804ddb4: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804ddb7: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804ddba: call [0x80606a0]
..@0x804ddc0: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804ddc5: db 0x89, 0xda  ;; mov edx,ebx
..@0x804ddc7: db 0x2b, 0x14, 0xb0  ;; sub edx,[eax+esi*4]
..@0x804ddca: jmp strict near R.code+0x804daac
..@0x804ddcf: nop
..@0x804ddd0: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x804ddd4: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804ddd6: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804ddd9: jmp strict near R.code+0x804dce4
..@0x804ddde: dw 0x9066  ;; o16 nop
..@0x804dde0: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804dde4: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804dde6: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804dde9: jmp strict near R.code+0x804dc70
..@0x804ddee: dw 0x9066  ;; o16 nop
..@0x804ddf0: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804ddf4: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804ddf6: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804ddf9: jmp strict near R.code+0x804dbf0
..@0x804ddfe: dw 0x9066  ;; o16 nop
..@0x804de00: sub esp, strict byte 0x3c
..@0x804de03: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804de09: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804de0d: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804de0f: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x804de13: db 0x89, 0x7c, 0x24, 0x34  ;; mov [esp+0x34],edi
..@0x804de17: db 0x89, 0x6c, 0x24, 0x38  ;; mov [esp+0x38],ebp
..@0x804de1b: db 0x85, 0xd2  ;; test edx,edx
..@0x804de1d: db 0x75, 0x2c  ;; jnz A.code+0x804de4b
..@0x804de1f: db 0xa1, 0x74, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d674]
..@0x804de24: cmp eax, strict byte 0x3
..@0x804de27: db 0x0f, 0x84, 0xe3, 0x01, 0x00, 0x00  ;; jz near A.code+0x804e010
..@0x804de2d: db 0xa3, 0x88, 0xe0, 0x83, 0x09  ;; mov [0x983e088],eax
..@0x804de32: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804de35: call [0x80606a0]
..@0x804de3b: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804de41: db 0xc7, 0x05, 0x8c, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e08c],0x0
..@0x804de49: db 0x00, 0x00
..@0x804de4b: db 0xf6, 0x05, 0x84, 0xe0, 0x83, 0x09, 0x01  ;; test byte [0x983e084],0x1
..@0x804de52: db 0x0f, 0x84, 0x98, 0x01, 0x00, 0x00  ;; jz near A.code+0x804dff0
..@0x804de58: db 0x8b, 0x3d, 0x94, 0xe0, 0x83, 0x09  ;; mov edi,[0x983e094]
..@0x804de5e: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804de63: db 0x01, 0xd7  ;; add edi,edx
..@0x804de65: db 0x89, 0x5c, 0x90, 0x04  ;; mov [eax+edx*4+0x4],ebx
..@0x804de69: add edi, strict byte 0x2
..@0x804de6c: db 0x83, 0x3d, 0x88, 0xe0, 0x83, 0x09, 0x04  ;; cmp dword [0x983e088],byte +0x4
..@0x804de73: db 0x0f, 0x87, 0x1f, 0x01, 0x00, 0x00  ;; ja near A.code+0x804df98
..@0x804de79: db 0x8b, 0x15, 0x88, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e088]
..@0x804de7f: db 0xff, 0x24, 0x95, 0xf4, 0xb5, 0x05, 0x08  ;; jmp [edx*4+code_ptr_0x805b5f4]
..@0x804de86: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804de89: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804de90: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804de96: db 0x8d, 0x77, 0xff  ;; lea esi,[edi-0x1]
..@0x804de99: db 0x0f, 0xb6, 0x0d, 0x8c, 0xe0, 0x83, 0x09  ;; movzx ecx,byte [0x983e08c]
..@0x804dea0: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x804dea4: db 0x0f, 0xb6, 0x14, 0xb0  ;; movzx edx,byte [eax+esi*4]
..@0x804dea8: db 0x0f, 0xb6, 0x04, 0xb8  ;; movzx eax,byte [eax+edi*4]
..@0x804deac: db 0x89, 0x54, 0x24, 0x10  ;; mov [esp+0x10],edx
..@0x804deb0: db 0x8d, 0x14, 0xbd, 0x00, 0x00, 0x00, 0x00  ;; lea edx,[edi*4+0x0]
..@0x804deb7: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804debb: db 0x89, 0xc2  ;; mov edx,eax
..@0x804debd: db 0x89, 0x44, 0x24, 0x14  ;; mov [esp+0x14],eax
..@0x804dec1: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804dec3: db 0x2b, 0x54, 0x24, 0x10  ;; sub edx,[esp+0x10]
..@0x804dec7: db 0x2b, 0x44, 0x24, 0x10  ;; sub eax,[esp+0x10]
..@0x804decb: db 0x8d, 0x2c, 0x02  ;; lea ebp,[edx+eax]
..@0x804dece: db 0x89, 0xef  ;; mov edi,ebp
..@0x804ded0: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804ded3: db 0x31, 0xfd  ;; xor ebp,edi
..@0x804ded5: db 0x29, 0xfd  ;; sub ebp,edi
..@0x804ded7: db 0x89, 0xd7  ;; mov edi,edx
..@0x804ded9: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804dedc: db 0x31, 0xfa  ;; xor edx,edi
..@0x804dede: db 0x29, 0xfa  ;; sub edx,edi
..@0x804dee0: db 0x89, 0xc7  ;; mov edi,eax
..@0x804dee2: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804dee5: db 0x31, 0xf8  ;; xor eax,edi
..@0x804dee7: db 0x29, 0xf8  ;; sub eax,edi
..@0x804dee9: db 0x39, 0xd5  ;; cmp ebp,edx
..@0x804deeb: db 0x7c, 0x04  ;; jl A.code+0x804def1
..@0x804deed: db 0x39, 0xc2  ;; cmp edx,eax
..@0x804deef: db 0x7e, 0x0b  ;; jng A.code+0x804defc
..@0x804def1: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x804def5: db 0x39, 0xc5  ;; cmp ebp,eax
..@0x804def7: db 0x0f, 0x4c, 0x4c, 0x24, 0x10  ;; cmovl ecx,[esp+0x10]
..@0x804defc: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804defe: db 0x29, 0xc8  ;; sub eax,ecx
..@0x804df00: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804df05: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804df08: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x804df0c: call eax
..@0x804df0e: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804df14: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804df16: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804df19: db 0x89, 0x44, 0x24, 0x18  ;; mov [esp+0x18],eax
..@0x804df1d: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804df22: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x804df26: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804df2a: db 0x0f, 0xb6, 0x7c, 0xb0, 0x01  ;; movzx edi,byte [eax+esi*4+0x1]
..@0x804df2f: db 0x0f, 0xb6, 0x35, 0x8d, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08d]
..@0x804df36: db 0x8b, 0x04, 0x10  ;; mov eax,[eax+edx]
..@0x804df39: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804df3b: db 0x0f, 0xb6, 0xc4  ;; movzx eax,ah
..@0x804df3e: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804df40: db 0x89, 0xc2  ;; mov edx,eax
..@0x804df42: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x804df46: db 0x29, 0xfa  ;; sub edx,edi
..@0x804df48: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804df4b: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804df4d: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804df50: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804df52: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804df54: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804df56: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804df59: db 0x31, 0xea  ;; xor edx,ebp
..@0x804df5b: db 0x29, 0xea  ;; sub edx,ebp
..@0x804df5d: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804df5f: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804df62: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804df64: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804df66: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804df68: db 0x7c, 0x04  ;; jl A.code+0x804df6e
..@0x804df6a: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804df6c: db 0x7e, 0x09  ;; jng A.code+0x804df77
..@0x804df6e: db 0x8b, 0x74, 0x24, 0x10  ;; mov esi,[esp+0x10]
..@0x804df72: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804df74: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804df77: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x804df7b: db 0x29, 0xf0  ;; sub eax,esi
..@0x804df7d: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804df82: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804df85: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x804df89: call eax
..@0x804df8b: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804df91: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804df98: add edx, strict byte 0x1
..@0x804df9b: db 0x89, 0x1d, 0x8c, 0xe0, 0x83, 0x09  ;; mov [0x983e08c],ebx
..@0x804dfa1: db 0x3b, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e094]
..@0x804dfa7: db 0x89, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov [0x983e080],edx
..@0x804dfad: db 0x7c, 0x2c  ;; jl A.code+0x804dfdb
..@0x804dfaf: db 0xc7, 0x05, 0x80, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e080],0x0
..@0x804dfb7: db 0x00, 0x00
..@0x804dfb9: db 0xa1, 0xa0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a0]
..@0x804dfbe: db 0x3d, 0xa0, 0xbc, 0x04, 0x08  ;; cmp eax,A.code+0x804bca0
..@0x804dfc3: db 0x74, 0x16  ;; jz A.code+0x804dfdb
..@0x804dfc5: db 0x8b, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e084]
..@0x804dfcb: add edx, strict byte 0x1
..@0x804dfce: db 0x3d, 0xd0, 0xd6, 0x04, 0x08  ;; cmp eax,A.code+0x804d6d0
..@0x804dfd3: db 0x89, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov [0x983e084],edx
..@0x804dfd9: db 0x74, 0x55  ;; jz A.code+0x804e030
..@0x804dfdb: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804dfdf: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804dfe3: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804dfe7: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x804dfeb: add esp, strict byte 0x3c
..@0x804dfee: ret
..@0x804dfef: nop
..@0x804dff0: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x804dff6: db 0x8d, 0x7a, 0x01  ;; lea edi,[edx+0x1]
..@0x804dff9: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804dffe: db 0x01, 0xd1  ;; add ecx,edx
..@0x804e000: db 0x89, 0x5c, 0x88, 0x08  ;; mov [eax+ecx*4+0x8],ebx
..@0x804e004: jmp strict near R.code+0x804de6c
..@0x804e009: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e010: db 0x8b, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e084]
..@0x804e016: db 0x85, 0xd2  ;; test edx,edx
..@0x804e018: db 0x0f, 0x85, 0x0f, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x804de2d
..@0x804e01e: db 0xc7, 0x05, 0x88, 0xe0, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e088],0x1
..@0x804e026: db 0x00, 0x00
..@0x804e028: db 0xb0, 0x01  ;; mov al,0x1
..@0x804e02a: jmp strict near R.code+0x804de32
..@0x804e02f: nop
..@0x804e030: db 0x3b, 0x15, 0x98, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e098]
..@0x804e036: db 0x7c, 0xa3  ;; jl A.code+0x804dfdb
..@0x804e038: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804e03c: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804e040: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804e044: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x804e048: add esp, strict byte 0x3c
..@0x804e04b: jmp strict near R.code+0x804d730
..@0x804e050: db 0x0f, 0xb6, 0x14, 0xb8  ;; movzx edx,byte [eax+edi*4]
..@0x804e054: db 0x0f, 0xb6, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; movzx eax,byte [0x983e08c]
..@0x804e05b: db 0x01, 0xd0  ;; add eax,edx
..@0x804e05d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e05f: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e061: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e063: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e065: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e06a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e06d: call [0x80606a0]
..@0x804e073: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e078: db 0x8b, 0x14, 0xb8  ;; mov edx,[eax+edi*4]
..@0x804e07b: db 0xa1, 0x8c, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e08c]
..@0x804e080: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804e086: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804e08b: db 0x01, 0xd0  ;; add eax,edx
..@0x804e08d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e08f: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e091: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804e096: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e098: db 0x0f, 0xb6, 0xc6  ;; movzx eax,dh
..@0x804e09b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e09e: call [0x80606a0]
..@0x804e0a4: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e0aa: jmp strict near R.code+0x804df98
..@0x804e0af: nop
..@0x804e0b0: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x804e0b3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e0b6: call [0x80606a0]
..@0x804e0bc: db 0x0f, 0xb6, 0xc7  ;; movzx eax,bh
..@0x804e0bf: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e0c2: call [0x80606a0]
..@0x804e0c8: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e0ce: jmp strict near R.code+0x804df98
..@0x804e0d3: nop
..@0x804e0d4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e0d8: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e0da: db 0x2b, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; sub eax,[0x983e08c]
..@0x804e0e0: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e0e5: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e0e8: call [0x80606a0]
..@0x804e0ee: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e0f0: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804e0f3: db 0x2a, 0x05, 0x8d, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08d]
..@0x804e0f9: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e0fc: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e0ff: call [0x80606a0]
..@0x804e105: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e10b: jmp strict near R.code+0x804df98
..@0x804e110: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e112: db 0x2b, 0x14, 0xb8  ;; sub edx,[eax+edi*4]
..@0x804e115: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e117: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e11c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e11f: call [0x80606a0]
..@0x804e125: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e12b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e12d: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804e130: db 0x2a, 0x44, 0xba, 0x01  ;; sub al,[edx+edi*4+0x1]
..@0x804e134: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e137: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e13a: call [0x80606a0]
..@0x804e140: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e146: jmp strict near R.code+0x804df98
..@0x804e14b: nop
..@0x804e14c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e150: push ebp
..@0x804e151: push edi
..@0x804e152: push esi
..@0x804e153: push ebx
..@0x804e154: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804e156: sub esp, strict byte 0x3c
..@0x804e159: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e15f: db 0x85, 0xd2  ;; test edx,edx
..@0x804e161: db 0x75, 0x2c  ;; jnz A.code+0x804e18f
..@0x804e163: db 0xa1, 0x74, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d674]
..@0x804e168: cmp eax, strict byte 0x3
..@0x804e16b: db 0x0f, 0x84, 0xd7, 0x02, 0x00, 0x00  ;; jz near A.code+0x804e448
..@0x804e171: db 0xa3, 0x88, 0xe0, 0x83, 0x09  ;; mov [0x983e088],eax
..@0x804e176: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e179: call [0x80606a0]
..@0x804e17f: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e185: db 0xc7, 0x05, 0x8c, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e08c],0x0
..@0x804e18d: db 0x00, 0x00
..@0x804e18f: db 0xf6, 0x05, 0x84, 0xe0, 0x83, 0x09, 0x01  ;; test byte [0x983e084],0x1
..@0x804e196: db 0x0f, 0x84, 0x8c, 0x02, 0x00, 0x00  ;; jz near A.code+0x804e428
..@0x804e19c: db 0x8b, 0x35, 0x94, 0xe0, 0x83, 0x09  ;; mov esi,[0x983e094]
..@0x804e1a2: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e1a7: db 0x01, 0xd6  ;; add esi,edx
..@0x804e1a9: db 0x89, 0x5c, 0x90, 0x04  ;; mov [eax+edx*4+0x4],ebx
..@0x804e1ad: add esi, strict byte 0x2
..@0x804e1b0: db 0x83, 0x3d, 0x88, 0xe0, 0x83, 0x09, 0x04  ;; cmp dword [0x983e088],byte +0x4
..@0x804e1b7: db 0x0f, 0x87, 0x1b, 0x02, 0x00, 0x00  ;; ja near A.code+0x804e3d8
..@0x804e1bd: db 0x8b, 0x15, 0x88, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e088]
..@0x804e1c3: db 0xff, 0x24, 0x95, 0x08, 0xb6, 0x05, 0x08  ;; jmp [edx*4+code_ptr_0x805b608]
..@0x804e1ca: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e1d0: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804e1d6: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804e1da: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e1dc: db 0xc1, 0xfa, 0x10  ;; sar edx,byte 0x10
..@0x804e1df: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x804e1e3: db 0x8d, 0x56, 0xff  ;; lea edx,[esi-0x1]
..@0x804e1e6: db 0x0f, 0xb6, 0x7c, 0x90, 0x02  ;; movzx edi,byte [eax+edx*4+0x2]
..@0x804e1eb: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804e1ef: db 0x8d, 0x14, 0xb5, 0x00, 0x00, 0x00, 0x00  ;; lea edx,[esi*4+0x0]
..@0x804e1f6: db 0x0f, 0xb6, 0x44, 0xb0, 0x02  ;; movzx eax,byte [eax+esi*4+0x2]
..@0x804e1fb: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x804e1ff: db 0x0f, 0xb6, 0x35, 0x8e, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08e]
..@0x804e206: db 0x89, 0xc2  ;; mov edx,eax
..@0x804e208: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804e20c: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804e20e: db 0x29, 0xfa  ;; sub edx,edi
..@0x804e210: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804e212: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804e215: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804e217: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e21a: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804e21c: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804e21e: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804e220: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e223: db 0x31, 0xea  ;; xor edx,ebp
..@0x804e225: db 0x29, 0xea  ;; sub edx,ebp
..@0x804e227: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804e229: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e22c: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804e22e: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804e230: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804e232: db 0x7c, 0x04  ;; jl A.code+0x804e238
..@0x804e234: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804e236: db 0x7e, 0x09  ;; jng A.code+0x804e241
..@0x804e238: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804e23c: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804e23e: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804e241: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804e245: db 0x29, 0xf0  ;; sub eax,esi
..@0x804e247: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e24c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e24f: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804e253: call eax
..@0x804e255: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804e25b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e25d: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804e260: db 0x0f, 0xb6, 0x35, 0x8d, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08d]
..@0x804e267: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x804e26b: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e270: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804e274: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804e278: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804e27a: db 0x0f, 0xb6, 0x7c, 0x90, 0x01  ;; movzx edi,byte [eax+edx*4+0x1]
..@0x804e27f: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x804e283: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804e285: db 0x8b, 0x04, 0x10  ;; mov eax,[eax+edx]
..@0x804e288: db 0x0f, 0xb6, 0xc4  ;; movzx eax,ah
..@0x804e28b: db 0x89, 0xc2  ;; mov edx,eax
..@0x804e28d: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804e291: db 0x29, 0xfa  ;; sub edx,edi
..@0x804e293: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804e296: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804e298: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e29b: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804e29d: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804e29f: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804e2a1: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e2a4: db 0x31, 0xea  ;; xor edx,ebp
..@0x804e2a6: db 0x29, 0xea  ;; sub edx,ebp
..@0x804e2a8: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804e2aa: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e2ad: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804e2af: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804e2b1: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804e2b3: db 0x7c, 0x04  ;; jl A.code+0x804e2b9
..@0x804e2b5: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804e2b7: db 0x7e, 0x09  ;; jng A.code+0x804e2c2
..@0x804e2b9: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804e2bd: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804e2bf: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804e2c2: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804e2c6: db 0x29, 0xf0  ;; sub eax,esi
..@0x804e2c8: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e2cd: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e2d0: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804e2d4: call eax
..@0x804e2d6: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804e2dc: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e2e1: db 0x0f, 0xb6, 0x35, 0x8c, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08c]
..@0x804e2e8: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804e2ec: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804e2f0: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804e2f2: db 0x0f, 0xb6, 0x3c, 0x90  ;; movzx edi,byte [eax+edx*4]
..@0x804e2f6: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x804e2fa: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804e2fc: db 0x0f, 0xb6, 0x04, 0x10  ;; movzx eax,byte [eax+edx]
..@0x804e300: db 0x89, 0xc2  ;; mov edx,eax
..@0x804e302: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804e306: db 0x29, 0xfa  ;; sub edx,edi
..@0x804e308: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804e30b: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804e30d: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e310: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804e312: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804e314: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804e316: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e319: db 0x31, 0xea  ;; xor edx,ebp
..@0x804e31b: db 0x29, 0xea  ;; sub edx,ebp
..@0x804e31d: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804e31f: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e322: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804e324: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804e326: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804e328: db 0x7c, 0x04  ;; jl A.code+0x804e32e
..@0x804e32a: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804e32c: db 0x7e, 0x09  ;; jng A.code+0x804e337
..@0x804e32e: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804e332: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804e334: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804e337: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e339: db 0x29, 0xf0  ;; sub eax,esi
..@0x804e33b: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e340: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e343: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804e347: call eax
..@0x804e349: db 0x8b, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a0]
..@0x804e34f: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e351: db 0xc1, 0xf8, 0x18  ;; sar eax,byte 0x18
..@0x804e354: db 0x0f, 0xb6, 0x35, 0x8f, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08f]
..@0x804e35b: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x804e35f: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e364: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804e368: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804e36c: db 0x0f, 0xb6, 0x54, 0x90, 0x03  ;; movzx edx,byte [eax+edx*4+0x3]
..@0x804e371: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x804e375: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x804e379: db 0x8b, 0x04, 0x10  ;; mov eax,[eax+edx]
..@0x804e37c: db 0x89, 0xf2  ;; mov edx,esi
..@0x804e37e: db 0x2b, 0x54, 0x24, 0x1c  ;; sub edx,[esp+0x1c]
..@0x804e382: db 0xc1, 0xe8, 0x18  ;; shr eax,byte 0x18
..@0x804e385: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804e387: db 0x2b, 0x4c, 0x24, 0x1c  ;; sub ecx,[esp+0x1c]
..@0x804e38b: db 0x8d, 0x2c, 0x11  ;; lea ebp,[ecx+edx]
..@0x804e38e: db 0x89, 0xef  ;; mov edi,ebp
..@0x804e390: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804e393: db 0x31, 0xfd  ;; xor ebp,edi
..@0x804e395: db 0x29, 0xfd  ;; sub ebp,edi
..@0x804e397: db 0x89, 0xcf  ;; mov edi,ecx
..@0x804e399: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804e39c: db 0x31, 0xf9  ;; xor ecx,edi
..@0x804e39e: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804e3a0: db 0x89, 0xd7  ;; mov edi,edx
..@0x804e3a2: db 0xc1, 0xff, 0x1f  ;; sar edi,byte 0x1f
..@0x804e3a5: db 0x31, 0xfa  ;; xor edx,edi
..@0x804e3a7: db 0x29, 0xfa  ;; sub edx,edi
..@0x804e3a9: db 0x39, 0xcd  ;; cmp ebp,ecx
..@0x804e3ab: db 0x7c, 0x04  ;; jl A.code+0x804e3b1
..@0x804e3ad: db 0x39, 0xd1  ;; cmp ecx,edx
..@0x804e3af: db 0x7e, 0x09  ;; jng A.code+0x804e3ba
..@0x804e3b1: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x804e3b5: db 0x39, 0xd5  ;; cmp ebp,edx
..@0x804e3b7: db 0x0f, 0x4d, 0xf0  ;; cmovnl esi,eax
..@0x804e3ba: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x804e3be: db 0x29, 0xf0  ;; sub eax,esi
..@0x804e3c0: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e3c5: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e3c8: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804e3cc: call eax
..@0x804e3ce: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e3d4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e3d8: add edx, strict byte 0x1
..@0x804e3db: db 0x89, 0x1d, 0x8c, 0xe0, 0x83, 0x09  ;; mov [0x983e08c],ebx
..@0x804e3e1: db 0x3b, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e094]
..@0x804e3e7: db 0x89, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov [0x983e080],edx
..@0x804e3ed: db 0x7c, 0x2c  ;; jl A.code+0x804e41b
..@0x804e3ef: db 0xc7, 0x05, 0x80, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e080],0x0
..@0x804e3f7: db 0x00, 0x00
..@0x804e3f9: db 0xa1, 0xa0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a0]
..@0x804e3fe: db 0x3d, 0xa0, 0xbc, 0x04, 0x08  ;; cmp eax,A.code+0x804bca0
..@0x804e403: db 0x74, 0x16  ;; jz A.code+0x804e41b
..@0x804e405: db 0x8b, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e084]
..@0x804e40b: add edx, strict byte 0x1
..@0x804e40e: db 0x3d, 0xd0, 0xd6, 0x04, 0x08  ;; cmp eax,A.code+0x804d6d0
..@0x804e413: db 0x89, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov [0x983e084],edx
..@0x804e419: db 0x74, 0x55  ;; jz A.code+0x804e470
..@0x804e41b: add esp, strict byte 0x3c
..@0x804e41e: pop ebx
..@0x804e41f: pop esi
..@0x804e420: pop edi
..@0x804e421: pop ebp
..@0x804e422: ret
..@0x804e423: nop
..@0x804e424: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e428: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x804e42e: db 0x8d, 0x72, 0x01  ;; lea esi,[edx+0x1]
..@0x804e431: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e436: db 0x01, 0xd1  ;; add ecx,edx
..@0x804e438: db 0x89, 0x5c, 0x88, 0x08  ;; mov [eax+ecx*4+0x8],ebx
..@0x804e43c: jmp strict near R.code+0x804e1b0
..@0x804e441: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e448: db 0x8b, 0x0d, 0x84, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e084]
..@0x804e44e: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804e450: db 0x0f, 0x85, 0x1b, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x804e171
..@0x804e456: db 0xc7, 0x05, 0x88, 0xe0, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e088],0x1
..@0x804e45e: db 0x00, 0x00
..@0x804e460: db 0xb0, 0x01  ;; mov al,0x1
..@0x804e462: jmp strict near R.code+0x804e176
..@0x804e467: db 0x89, 0xf6  ;; mov esi,esi
..@0x804e469: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804e470: db 0x3b, 0x15, 0x98, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e098]
..@0x804e476: db 0x7c, 0xa3  ;; jl A.code+0x804e41b
..@0x804e478: add esp, strict byte 0x3c
..@0x804e47b: pop ebx
..@0x804e47c: pop esi
..@0x804e47d: pop edi
..@0x804e47e: pop ebp
..@0x804e47f: jmp strict near R.code+0x804d730
..@0x804e484: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e488: db 0x8b, 0x14, 0xb0  ;; mov edx,[eax+esi*4]
..@0x804e48b: db 0xa1, 0x8c, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e08c]
..@0x804e490: db 0x81, 0xe2, 0x00, 0x00, 0xff, 0x00  ;; and edx,0xff0000
..@0x804e496: db 0x25, 0x00, 0x00, 0xff, 0x00  ;; and eax,0xff0000
..@0x804e49b: db 0x01, 0xd0  ;; add eax,edx
..@0x804e49d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e49f: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e4a1: db 0x25, 0x00, 0x00, 0xff, 0x00  ;; and eax,0xff0000
..@0x804e4a6: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e4a8: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e4aa: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804e4ad: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e4b2: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e4b5: call [0x80606a0]
..@0x804e4bb: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e4c0: db 0x8b, 0x14, 0xb0  ;; mov edx,[eax+esi*4]
..@0x804e4c3: db 0xa1, 0x8c, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e08c]
..@0x804e4c8: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804e4ce: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804e4d3: db 0x01, 0xd0  ;; add eax,edx
..@0x804e4d5: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e4d7: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e4d9: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x804e4de: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e4e0: db 0x0f, 0xb6, 0xc6  ;; movzx eax,dh
..@0x804e4e3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e4e6: call [0x80606a0]
..@0x804e4ec: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e4f1: db 0x0f, 0xb6, 0x14, 0xb0  ;; movzx edx,byte [eax+esi*4]
..@0x804e4f5: db 0x0f, 0xb6, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; movzx eax,byte [0x983e08c]
..@0x804e4fc: db 0x01, 0xd0  ;; add eax,edx
..@0x804e4fe: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e500: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e502: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e504: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e506: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e50b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e50e: call [0x80606a0]
..@0x804e514: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e51a: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e51c: db 0xc1, 0xe8, 0x18  ;; shr eax,byte 0x18
..@0x804e51f: db 0x0f, 0xb6, 0x4c, 0xb2, 0x03  ;; movzx ecx,byte [edx+esi*4+0x3]
..@0x804e524: db 0x0f, 0xb6, 0x15, 0x8f, 0xe0, 0x83, 0x09  ;; movzx edx,byte [0x983e08f]
..@0x804e52b: db 0x01, 0xca  ;; add edx,ecx
..@0x804e52d: db 0xd1, 0xfa  ;; sar edx,1
..@0x804e52f: db 0x29, 0xd0  ;; sub eax,edx
..@0x804e531: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e536: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e539: call [0x80606a0]
..@0x804e53f: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e545: jmp strict near R.code+0x804e3d8
..@0x804e54a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e550: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e552: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804e555: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e55a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e55d: call [0x80606a0]
..@0x804e563: db 0x0f, 0xb6, 0xc7  ;; movzx eax,bh
..@0x804e566: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e569: call [0x80606a0]
..@0x804e56f: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x804e572: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e575: call [0x80606a0]
..@0x804e57b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e57d: db 0xc1, 0xe8, 0x18  ;; shr eax,byte 0x18
..@0x804e580: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e583: call [0x80606a0]
..@0x804e589: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e58f: jmp strict near R.code+0x804e3d8
..@0x804e594: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e598: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e59a: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x804e59d: db 0x2a, 0x05, 0x8e, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08e]
..@0x804e5a3: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e5a6: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e5a9: call [0x80606a0]
..@0x804e5af: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e5b1: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804e5b4: db 0x2a, 0x05, 0x8d, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08d]
..@0x804e5ba: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e5bd: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e5c0: call [0x80606a0]
..@0x804e5c6: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e5c8: db 0x2b, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; sub eax,[0x983e08c]
..@0x804e5ce: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e5d3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e5d6: call [0x80606a0]
..@0x804e5dc: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e5de: db 0xc1, 0xf8, 0x18  ;; sar eax,byte 0x18
..@0x804e5e1: db 0x2a, 0x05, 0x8f, 0xe0, 0x83, 0x09  ;; sub al,[0x983e08f]
..@0x804e5e7: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e5ea: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e5ed: call [0x80606a0]
..@0x804e5f3: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e5f9: jmp strict near R.code+0x804e3d8
..@0x804e5fe: dw 0x9066  ;; o16 nop
..@0x804e600: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e602: db 0xc1, 0xfa, 0x10  ;; sar edx,byte 0x10
..@0x804e605: db 0x2a, 0x54, 0xb0, 0x02  ;; sub dl,[eax+esi*4+0x2]
..@0x804e609: db 0x0f, 0xb6, 0xc2  ;; movzx eax,dl
..@0x804e60c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e60f: call [0x80606a0]
..@0x804e615: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e61b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e61d: db 0xc1, 0xf8, 0x08  ;; sar eax,byte 0x8
..@0x804e620: db 0x2a, 0x44, 0xb2, 0x01  ;; sub al,[edx+esi*4+0x1]
..@0x804e624: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e627: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e62a: call [0x80606a0]
..@0x804e630: db 0xa1, 0x90, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e090]
..@0x804e635: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e637: db 0x2b, 0x14, 0xb0  ;; sub edx,[eax+esi*4]
..@0x804e63a: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e63c: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e641: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e644: call [0x80606a0]
..@0x804e64a: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e650: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e652: db 0xc1, 0xf8, 0x18  ;; sar eax,byte 0x18
..@0x804e655: db 0x2a, 0x44, 0xb2, 0x03  ;; sub al,[edx+esi*4+0x3]
..@0x804e659: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x804e65c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e65f: call [0x80606a0]
..@0x804e665: db 0x8b, 0x15, 0x80, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e080]
..@0x804e66b: jmp strict near R.code+0x804e3d8
..@0x804e670: sub esp, strict byte 0x3c
..@0x804e673: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804e677: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804e679: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e67e: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x804e682: db 0x89, 0x7c, 0x24, 0x34  ;; mov [esp+0x34],edi
..@0x804e686: db 0x89, 0x6c, 0x24, 0x38  ;; mov [esp+0x38],ebp
..@0x804e68a: db 0x85, 0xc0  ;; test eax,eax
..@0x804e68c: db 0x75, 0x2b  ;; jnz A.code+0x804e6b9
..@0x804e68e: db 0xa1, 0x74, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d674]
..@0x804e693: cmp eax, strict byte 0x3
..@0x804e696: db 0x0f, 0x84, 0x44, 0x01, 0x00, 0x00  ;; jz near A.code+0x804e7e0
..@0x804e69c: db 0xa3, 0x88, 0xe0, 0x83, 0x09  ;; mov [0x983e088],eax
..@0x804e6a1: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e6a4: call [0x80606a0]
..@0x804e6aa: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e6af: db 0xc7, 0x05, 0x8c, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e08c],0x0
..@0x804e6b7: db 0x00, 0x00
..@0x804e6b9: db 0xf6, 0x05, 0x84, 0xe0, 0x83, 0x09, 0x01  ;; test byte [0x983e084],0x1
..@0x804e6c0: db 0x0f, 0x84, 0xfa, 0x00, 0x00, 0x00  ;; jz near A.code+0x804e7c0
..@0x804e6c6: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x804e6cc: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e6d2: db 0x01, 0xc1  ;; add ecx,eax
..@0x804e6d4: db 0x89, 0x5c, 0x82, 0x04  ;; mov [edx+eax*4+0x4],ebx
..@0x804e6d8: add ecx, strict byte 0x2
..@0x804e6db: db 0x83, 0x3d, 0x88, 0xe0, 0x83, 0x09, 0x04  ;; cmp dword [0x983e088],byte +0x4
..@0x804e6e2: db 0x77, 0x7c  ;; ja A.code+0x804e760
..@0x804e6e4: db 0xa1, 0x88, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e088]
..@0x804e6e9: db 0xff, 0x24, 0x85, 0x1c, 0xb6, 0x05, 0x08  ;; jmp [eax*4+code_ptr_0x805b61c]
..@0x804e6f0: db 0x0f, 0xb6, 0x35, 0x8c, 0xe0, 0x83, 0x09  ;; movzx esi,byte [0x983e08c]
..@0x804e6f7: db 0x0f, 0xb6, 0x7c, 0x8a, 0xfc  ;; movzx edi,byte [edx+ecx*4-0x4]
..@0x804e6fc: db 0x0f, 0xb6, 0x14, 0x8a  ;; movzx edx,byte [edx+ecx*4]
..@0x804e700: db 0xa1, 0xa0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a0]
..@0x804e705: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804e707: db 0x29, 0xf9  ;; sub ecx,edi
..@0x804e709: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x804e70d: db 0x29, 0xfa  ;; sub edx,edi
..@0x804e70f: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804e713: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x804e716: db 0x89, 0xc5  ;; mov ebp,eax
..@0x804e718: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e71b: db 0x31, 0xe8  ;; xor eax,ebp
..@0x804e71d: db 0x29, 0xe8  ;; sub eax,ebp
..@0x804e71f: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804e721: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e724: db 0x31, 0xea  ;; xor edx,ebp
..@0x804e726: db 0x29, 0xea  ;; sub edx,ebp
..@0x804e728: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804e72a: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x804e72d: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x804e72f: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x804e731: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804e733: db 0x7c, 0x04  ;; jl A.code+0x804e739
..@0x804e735: db 0x39, 0xca  ;; cmp edx,ecx
..@0x804e737: db 0x7e, 0x09  ;; jng A.code+0x804e742
..@0x804e739: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x804e73d: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804e73f: db 0x0f, 0x4c, 0xf7  ;; cmovl esi,edi
..@0x804e742: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e744: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804e748: db 0x29, 0xf0  ;; sub eax,esi
..@0x804e74a: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e74f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e752: call edx
..@0x804e754: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e759: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e760: add eax, strict byte 0x1
..@0x804e763: db 0x89, 0x1d, 0x8c, 0xe0, 0x83, 0x09  ;; mov [0x983e08c],ebx
..@0x804e769: db 0x3b, 0x05, 0x94, 0xe0, 0x83, 0x09  ;; cmp eax,[0x983e094]
..@0x804e76f: db 0xa3, 0x80, 0xe0, 0x83, 0x09  ;; mov [0x983e080],eax
..@0x804e774: db 0x7c, 0x2c  ;; jl A.code+0x804e7a2
..@0x804e776: db 0xc7, 0x05, 0x80, 0xe0, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e080],0x0
..@0x804e77e: db 0x00, 0x00
..@0x804e780: db 0xa1, 0xa0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a0]
..@0x804e785: db 0x3d, 0xa0, 0xbc, 0x04, 0x08  ;; cmp eax,A.code+0x804bca0
..@0x804e78a: db 0x74, 0x16  ;; jz A.code+0x804e7a2
..@0x804e78c: db 0x8b, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e084]
..@0x804e792: add edx, strict byte 0x1
..@0x804e795: db 0x3d, 0xd0, 0xd6, 0x04, 0x08  ;; cmp eax,A.code+0x804d6d0
..@0x804e79a: db 0x89, 0x15, 0x84, 0xe0, 0x83, 0x09  ;; mov [0x983e084],edx
..@0x804e7a0: db 0x74, 0x5e  ;; jz A.code+0x804e800
..@0x804e7a2: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804e7a6: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804e7aa: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804e7ae: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x804e7b2: add esp, strict byte 0x3c
..@0x804e7b5: ret
..@0x804e7b6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804e7b9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804e7c0: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x804e7c6: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804e7cc: db 0x01, 0xc1  ;; add ecx,eax
..@0x804e7ce: db 0x89, 0x5c, 0x8a, 0x08  ;; mov [edx+ecx*4+0x8],ebx
..@0x804e7d2: db 0x8d, 0x48, 0x01  ;; lea ecx,[eax+0x1]
..@0x804e7d5: jmp strict near R.code+0x804e6db
..@0x804e7da: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e7e0: db 0x8b, 0x35, 0x84, 0xe0, 0x83, 0x09  ;; mov esi,[0x983e084]
..@0x804e7e6: db 0x85, 0xf6  ;; test esi,esi
..@0x804e7e8: db 0x0f, 0x85, 0xae, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x804e69c
..@0x804e7ee: db 0xc7, 0x05, 0x88, 0xe0, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e088],0x1
..@0x804e7f6: db 0x00, 0x00
..@0x804e7f8: db 0xb0, 0x01  ;; mov al,0x1
..@0x804e7fa: jmp strict near R.code+0x804e6a1
..@0x804e7ff: nop
..@0x804e800: db 0x3b, 0x15, 0x98, 0xe0, 0x83, 0x09  ;; cmp edx,[0x983e098]
..@0x804e806: db 0x7c, 0x9a  ;; jl A.code+0x804e7a2
..@0x804e808: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x804e80c: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x804e810: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x804e814: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x804e818: add esp, strict byte 0x3c
..@0x804e81b: jmp strict near R.code+0x804d730
..@0x804e820: db 0x0f, 0xb6, 0x14, 0x8a  ;; movzx edx,byte [edx+ecx*4]
..@0x804e824: db 0x0f, 0xb6, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; movzx eax,byte [0x983e08c]
..@0x804e82b: db 0x01, 0xd0  ;; add eax,edx
..@0x804e82d: db 0x89, 0xda  ;; mov edx,ebx
..@0x804e82f: db 0xd1, 0xf8  ;; sar eax,1
..@0x804e831: db 0x29, 0xc2  ;; sub edx,eax
..@0x804e833: db 0x89, 0xd0  ;; mov eax,edx
..@0x804e835: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e83a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e83d: call [0x80606a0]
..@0x804e843: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e848: jmp strict near R.code+0x804e760
..@0x804e84d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804e850: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x804e853: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e856: call [0x80606a0]
..@0x804e85c: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e861: jmp strict near R.code+0x804e760
..@0x804e866: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804e869: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804e870: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e872: db 0x2b, 0x05, 0x8c, 0xe0, 0x83, 0x09  ;; sub eax,[0x983e08c]
..@0x804e878: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e87d: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e880: call [0x80606a0]
..@0x804e886: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e88b: jmp strict near R.code+0x804e760
..@0x804e890: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e892: db 0x2b, 0x04, 0x8a  ;; sub eax,[edx+ecx*4]
..@0x804e895: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804e89a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804e89d: call [0x80606a0]
..@0x804e8a3: db 0xa1, 0x80, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e080]
..@0x804e8a8: jmp strict near R.code+0x804e760
..@0x804e8ad: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804e8b0: push ebp
..@0x804e8b1: push edi
..@0x804e8b2: push esi
..@0x804e8b3: db 0x89, 0xc6  ;; mov esi,eax
..@0x804e8b5: db 0x31, 0xc0  ;; xor eax,eax
..@0x804e8b7: push ebx
..@0x804e8b8: db 0x89, 0xd3  ;; mov ebx,edx
..@0x804e8ba: db 0xba, 0xe0, 0xa9, 0x83, 0x09  ;; mov edx,0x983a9e0
..@0x804e8bf: sub esp, strict byte 0x7c
..@0x804e8c2: db 0x89, 0xd7  ;; mov edi,edx
..@0x804e8c4: db 0xba, 0xe0, 0xad, 0x83, 0x09  ;; mov edx,0x983ade0
..@0x804e8c9: db 0x89, 0x4c, 0x24, 0x68  ;; mov [esp+0x68],ecx
..@0x804e8cd: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x804e8d2: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804e8d4: db 0xf3, 0xab  ;; rep stosd
..@0x804e8d6: db 0x89, 0xd7  ;; mov edi,edx
..@0x804e8d8: db 0x66, 0xb9, 0x00, 0x01  ;; mov cx,0x100
..@0x804e8dc: db 0xf3, 0xab  ;; rep stosd
..@0x804e8de: db 0x0f, 0x8e, 0xe1, 0x02, 0x00, 0x00  ;; jng near A.code+0x804ebc5
..@0x804e8e4: db 0x8d, 0x0c, 0x33  ;; lea ecx,[ebx+esi]
..@0x804e8e7: db 0x89, 0xf0  ;; mov eax,esi
..@0x804e8e9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e8f0: db 0x0f, 0xb6, 0x10  ;; movzx edx,byte [eax]
..@0x804e8f3: add eax, strict byte 0x1
..@0x804e8f6: db 0x83, 0x04, 0x95, 0xe0, 0xad, 0x83, 0x09, 0x01  ;; add dword [edx*4+0x983ade0],byte +0x1
..@0x804e8fe: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804e900: db 0x75, 0xee  ;; jnz A.code+0x804e8f0
..@0x804e902: db 0xa1, 0xe0, 0xad, 0x83, 0x09  ;; mov eax,[0x983ade0]
..@0x804e907: db 0x31, 0xff  ;; xor edi,edi
..@0x804e909: db 0xeb, 0x2f  ;; jmp short A.code+0x804e93a
..@0x804e90b: nop
..@0x804e90c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804e910: db 0xdd, 0x14, 0xfd, 0xe0, 0xb9, 0x83, 0x09  ;; fst qword [edi*8+0x983b9e0]
..@0x804e917: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x804e91b: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804e91f: db 0xde, 0xc9  ;; fmulp st1
..@0x804e921: db 0xdd, 0x1c, 0xfd, 0xe0, 0xc1, 0x83, 0x09  ;; fstp qword [edi*8+0x983c1e0]
..@0x804e928: add edi, strict byte 0x1
..@0x804e92b: db 0x81, 0xff, 0x00, 0x01, 0x00, 0x00  ;; cmp edi,0x100
..@0x804e931: db 0x74, 0x3d  ;; jz A.code+0x804e970
..@0x804e933: db 0x8b, 0x04, 0xbd, 0xe0, 0xad, 0x83, 0x09  ;; mov eax,[edi*4+0x983ade0]
..@0x804e93a: db 0xd9, 0xee  ;; fldz
..@0x804e93c: db 0x85, 0xc0  ;; test eax,eax
..@0x804e93e: db 0xdd, 0x14, 0xfd, 0xe0, 0xb1, 0x83, 0x09  ;; fst qword [edi*8+0x983b1e0]
..@0x804e945: db 0x74, 0xc9  ;; jz A.code+0x804e910
..@0x804e947: db 0xdd, 0xd8  ;; fstp st0
..@0x804e949: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x804e94d: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804e951: db 0xdd, 0x1c, 0x24  ;; fstp qword [esp]
..@0x804e954: call B.code+log
..@0x804e959: db 0x8b, 0x04, 0xbd, 0xe0, 0xad, 0x83, 0x09  ;; mov eax,[edi*4+0x983ade0]
..@0x804e960: db 0xdd, 0x14, 0xfd, 0xe0, 0xb9, 0x83, 0x09  ;; fst qword [edi*8+0x983b9e0]
..@0x804e967: db 0xeb, 0xae  ;; jmp short A.code+0x804e917
..@0x804e969: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e970: db 0x8d, 0x7b, 0xff  ;; lea edi,[ebx-0x1]
..@0x804e973: db 0x89, 0x7c, 0x24, 0x6c  ;; mov [esp+0x6c],edi
..@0x804e977: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804e97b: db 0xdd, 0x1c, 0x24  ;; fstp qword [esp]
..@0x804e97e: call B.code+log
..@0x804e983: db 0x89, 0x5c, 0x24, 0x6c  ;; mov [esp+0x6c],ebx
..@0x804e987: db 0xdd, 0x5c, 0x24, 0x48  ;; fstp qword [esp+0x48]
..@0x804e98b: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804e98f: db 0xdd, 0x14, 0x24  ;; fst qword [esp]
..@0x804e992: db 0xdd, 0x5c, 0x24, 0x30  ;; fstp qword [esp+0x30]
..@0x804e996: call B.code+log
..@0x804e99b: db 0x85, 0xff  ;; test edi,edi
..@0x804e99d: db 0xdd, 0x44, 0x24, 0x30  ;; fld qword [esp+0x30]
..@0x804e9a1: db 0xde, 0xc9  ;; fmulp st1
..@0x804e9a3: db 0x0f, 0x8e, 0x23, 0x02, 0x00, 0x00  ;; jng near A.code+0x804ebcc
..@0x804e9a9: db 0xdd, 0x05, 0x10, 0xb7, 0x05, 0x08  ;; fld qword [0x805b710]
..@0x804e9af: db 0xc7, 0x44, 0x24, 0x64, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x64],0x0
..@0x804e9b7: db 0x31, 0xed  ;; xor ebp,ebp
..@0x804e9b9: db 0xdd, 0x5c, 0x24, 0x58  ;; fstp qword [esp+0x58]
..@0x804e9bd: db 0xd9, 0xee  ;; fldz
..@0x804e9bf: db 0xdd, 0x54, 0x24, 0x50  ;; fst qword [esp+0x50]
..@0x804e9c3: db 0xd9, 0xc9  ;; fxch st1
..@0x804e9c5: jmp strict near R.code+0x804ea9e
..@0x804e9ca: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804e9d0: db 0x0f, 0x85, 0x57, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804eb2d
..@0x804e9d6: db 0xdd, 0xd8  ;; fstp st0
..@0x804e9d8: db 0xdd, 0x04, 0xc5, 0xe0, 0xb9, 0x83, 0x09  ;; fld qword [eax*8+0x983b9e0]
..@0x804e9df: db 0xd9, 0xcb  ;; fxch st3
..@0x804e9e1: db 0xde, 0xca  ;; fmulp st2
..@0x804e9e3: db 0x8d, 0x55, 0x01  ;; lea edx,[ebp+0x1]
..@0x804e9e6: db 0x89, 0x54, 0x24, 0x6c  ;; mov [esp+0x6c],edx
..@0x804e9ea: db 0xde, 0xca  ;; fmulp st2
..@0x804e9ec: db 0xde, 0xc1  ;; faddp st1
..@0x804e9ee: db 0xdd, 0x14, 0xc5, 0xe0, 0xc1, 0x83, 0x09  ;; fst qword [eax*8+0x983c1e0]
..@0x804e9f5: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804e9f7: db 0x29, 0xd0  ;; sub eax,edx
..@0x804e9f9: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804e9fd: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x804ea01: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804ea05: db 0xdd, 0x44, 0x24, 0x50  ;; fld qword [esp+0x50]
..@0x804ea09: db 0xd8, 0xca  ;; fmul st2
..@0x804ea0b: db 0xdd, 0x44, 0x24, 0x48  ;; fld qword [esp+0x48]
..@0x804ea0f: db 0xd8, 0xca  ;; fmul st2
..@0x804ea11: db 0xde, 0xc1  ;; faddp st1
..@0x804ea13: db 0xd9, 0xe8  ;; fld1
..@0x804ea15: db 0xd9, 0xc3  ;; fld st3
..@0x804ea17: db 0xd8, 0xc1  ;; fadd st1
..@0x804ea19: db 0xd8, 0xcc  ;; fmul st4
..@0x804ea1b: db 0xd9, 0x05, 0x40, 0xb7, 0x05, 0x08  ;; fld dword [0x805b740]
..@0x804ea21: db 0xdc, 0xc5  ;; fadd to st5
..@0x804ea23: db 0xdd, 0x05, 0x20, 0xb7, 0x05, 0x08  ;; fld qword [0x805b720]
..@0x804ea29: db 0xd8, 0xc2  ;; fadd st2
..@0x804ea2b: db 0xde, 0xce  ;; fmulp st6
..@0x804ea2d: db 0xdd, 0x05, 0x28, 0xb7, 0x05, 0x08  ;; fld qword [0x805b728]
..@0x804ea33: db 0xd8, 0xc2  ;; fadd st2
..@0x804ea35: db 0xde, 0xca  ;; fmulp st2
..@0x804ea37: db 0xd9, 0xcd  ;; fxch st5
..@0x804ea39: db 0xde, 0xf1  ;; fdivrp st1
..@0x804ea3b: db 0xdc, 0x44, 0x24, 0x50  ;; fadd qword [esp+0x50]
..@0x804ea3f: db 0xdd, 0x5c, 0x24, 0x50  ;; fstp qword [esp+0x50]
..@0x804ea43: db 0xd8, 0xc2  ;; fadd st2
..@0x804ea45: db 0xd8, 0xca  ;; fmul st2
..@0x804ea47: db 0xd9, 0xca  ;; fxch st2
..@0x804ea49: db 0xde, 0xc3  ;; faddp st3
..@0x804ea4b: db 0xdd, 0x05, 0x20, 0xb7, 0x05, 0x08  ;; fld qword [0x805b720]
..@0x804ea51: db 0xd8, 0xc2  ;; fadd st2
..@0x804ea53: db 0xde, 0xcb  ;; fmulp st3
..@0x804ea55: db 0xdd, 0x05, 0x28, 0xb7, 0x05, 0x08  ;; fld qword [0x805b728]
..@0x804ea5b: db 0xd8, 0xc2  ;; fadd st2
..@0x804ea5d: db 0xde, 0xca  ;; fmulp st2
..@0x804ea5f: db 0xd9, 0xca  ;; fxch st2
..@0x804ea61: db 0xde, 0xf1  ;; fdivrp st1
..@0x804ea63: db 0xdc, 0x6c, 0x24, 0x48  ;; fsubr qword [esp+0x48]
..@0x804ea67: db 0xdd, 0x5c, 0x24, 0x48  ;; fstp qword [esp+0x48]
..@0x804ea6b: db 0xdc, 0xe9  ;; fsub to st1
..@0x804ea6d: db 0xd9, 0xc9  ;; fxch st1
..@0x804ea6f: db 0xdc, 0x6c, 0x24, 0x40  ;; fsubr qword [esp+0x40]
..@0x804ea73: db 0xdd, 0x44, 0x24, 0x58  ;; fld qword [esp+0x58]
..@0x804ea77: db 0xdf, 0xe9  ;; fucomip st1
..@0x804ea79: db 0x76, 0x08  ;; jna A.code+0x804ea83
..@0x804ea7b: db 0x89, 0x54, 0x24, 0x64  ;; mov [esp+0x64],edx
..@0x804ea7f: db 0xdd, 0x54, 0x24, 0x58  ;; fst qword [esp+0x58]
..@0x804ea83: db 0x66, 0x85, 0xed  ;; test bp,bp
..@0x804ea86: db 0x75, 0x0a  ;; jnz A.code+0x804ea92
..@0x804ea88: jmp strict near R.code+0x804eb60
..@0x804ea8d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804ea90: db 0xd9, 0xc9  ;; fxch st1
..@0x804ea92: db 0x39, 0xd7  ;; cmp edi,edx
..@0x804ea94: db 0x0f, 0x84, 0x0b, 0x01, 0x00, 0x00  ;; jz near A.code+0x804eba5
..@0x804ea9a: db 0xd9, 0xc9  ;; fxch st1
..@0x804ea9c: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804ea9e: db 0x0f, 0xb6, 0x04, 0x2e  ;; movzx eax,byte [esi+ebp]
..@0x804eaa2: db 0xdc, 0x2c, 0xc5, 0xe0, 0xc1, 0x83, 0x09  ;; fsubr qword [eax*8+0x983c1e0]
..@0x804eaa9: db 0x8b, 0x14, 0x85, 0xe0, 0xa9, 0x83, 0x09  ;; mov edx,[eax*4+0x983a9e0]
..@0x804eab0: db 0xde, 0xc1  ;; faddp st1
..@0x804eab2: db 0x8d, 0x4a, 0x01  ;; lea ecx,[edx+0x1]
..@0x804eab5: add edx, strict byte 0x2
..@0x804eab8: db 0x89, 0x4c, 0x24, 0x6c  ;; mov [esp+0x6c],ecx
..@0x804eabc: db 0x89, 0x0c, 0x85, 0xe0, 0xa9, 0x83, 0x09  ;; mov [eax*4+0x983a9e0],ecx
..@0x804eac3: db 0xdd, 0x5c, 0x24, 0x40  ;; fstp qword [esp+0x40]
..@0x804eac7: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804eacb: db 0x89, 0x54, 0x24, 0x6c  ;; mov [esp+0x6c],edx
..@0x804eacf: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804ead3: db 0xd8, 0xc9  ;; fmul st1
..@0x804ead5: db 0x8b, 0x14, 0x85, 0xe0, 0xad, 0x83, 0x09  ;; mov edx,[eax*4+0x983ade0]
..@0x804eadc: db 0x29, 0xca  ;; sub edx,ecx
..@0x804eade: db 0xd9, 0xc1  ;; fld st1
..@0x804eae0: db 0x89, 0x54, 0x24, 0x6c  ;; mov [esp+0x6c],edx
..@0x804eae4: add edx, strict byte 0x1
..@0x804eae7: db 0xd8, 0x05, 0x40, 0xb7, 0x05, 0x08  ;; fadd dword [0x805b740]
..@0x804eaed: db 0xdd, 0x05, 0x20, 0xb7, 0x05, 0x08  ;; fld qword [0x805b720]
..@0x804eaf3: db 0xd8, 0xc2  ;; fadd st2
..@0x804eaf5: db 0xde, 0xc9  ;; fmulp st1
..@0x804eaf7: db 0xdd, 0x05, 0x28, 0xb7, 0x05, 0x08  ;; fld qword [0x805b728]
..@0x804eafd: db 0xd8, 0xc2  ;; fadd st2
..@0x804eaff: db 0xde, 0xca  ;; fmulp st2
..@0x804eb01: db 0xde, 0xf1  ;; fdivrp st1
..@0x804eb03: db 0xdc, 0x04, 0xc5, 0xe0, 0xb1, 0x83, 0x09  ;; fadd qword [eax*8+0x983b1e0]
..@0x804eb0a: db 0xdd, 0x14, 0xc5, 0xe0, 0xb1, 0x83, 0x09  ;; fst qword [eax*8+0x983b1e0]
..@0x804eb11: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804eb15: db 0x89, 0x54, 0x24, 0x6c  ;; mov [esp+0x6c],edx
..@0x804eb19: db 0xdb, 0x44, 0x24, 0x6c  ;; fild dword [esp+0x6c]
..@0x804eb1d: db 0xd8, 0xc9  ;; fmul st1
..@0x804eb1f: db 0xd9, 0xee  ;; fldz
..@0x804eb21: db 0xd9, 0xc9  ;; fxch st1
..@0x804eb23: db 0xdb, 0xe9  ;; fucomi st1
..@0x804eb25: db 0xdd, 0xd9  ;; fstp st1
..@0x804eb27: db 0x0f, 0x8b, 0xa3, 0xfe, 0xff, 0xff  ;; jpo near A.code+0x804e9d0
..@0x804eb2d: db 0xd9, 0xc1  ;; fld st1
..@0x804eb2f: db 0xd8, 0x05, 0x40, 0xb7, 0x05, 0x08  ;; fadd dword [0x805b740]
..@0x804eb35: db 0xdd, 0x05, 0x20, 0xb7, 0x05, 0x08  ;; fld qword [0x805b720]
..@0x804eb3b: db 0xd8, 0xc2  ;; fadd st2
..@0x804eb3d: db 0xde, 0xc9  ;; fmulp st1
..@0x804eb3f: db 0xdd, 0x05, 0x28, 0xb7, 0x05, 0x08  ;; fld qword [0x805b728]
..@0x804eb45: db 0xd8, 0xc2  ;; fadd st2
..@0x804eb47: db 0xde, 0xca  ;; fmulp st2
..@0x804eb49: db 0xde, 0xf1  ;; fdivrp st1
..@0x804eb4b: db 0xdc, 0x2c, 0xc5, 0xe0, 0xb9, 0x83, 0x09  ;; fsubr qword [eax*8+0x983b9e0]
..@0x804eb52: db 0xdd, 0x14, 0xc5, 0xe0, 0xb9, 0x83, 0x09  ;; fst qword [eax*8+0x983b9e0]
..@0x804eb59: db 0xd9, 0xcb  ;; fxch st3
..@0x804eb5b: jmp strict near R.code+0x804e9e1
..@0x804eb60: db 0xdd, 0x5c, 0x24, 0x10  ;; fstp qword [esp+0x10]
..@0x804eb64: db 0xdd, 0x5c, 0x24, 0x20  ;; fstp qword [esp+0x20]
..@0x804eb68: db 0x89, 0x54, 0x24, 0x30  ;; mov [esp+0x30],edx
..@0x804eb6c: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804eb73: call [0x805d668]
..@0x804eb79: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x804eb7d: db 0xdd, 0x44, 0x24, 0x10  ;; fld qword [esp+0x10]
..@0x804eb81: db 0x85, 0xc0  ;; test eax,eax
..@0x804eb83: db 0xdd, 0x44, 0x24, 0x20  ;; fld qword [esp+0x20]
..@0x804eb87: db 0x0f, 0x84, 0x03, 0xff, 0xff, 0xff  ;; jz near A.code+0x804ea90
..@0x804eb8d: db 0xdd, 0xd8  ;; fstp st0
..@0x804eb8f: db 0xdd, 0xd8  ;; fstp st0
..@0x804eb91: db 0xc7, 0x44, 0x24, 0x64, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x64],0xffffffff
..@0x804eb99: db 0x8b, 0x44, 0x24, 0x64  ;; mov eax,[esp+0x64]
..@0x804eb9d: add esp, strict byte 0x7c
..@0x804eba0: pop ebx
..@0x804eba1: pop esi
..@0x804eba2: pop edi
..@0x804eba3: pop ebp
..@0x804eba4: ret
..@0x804eba5: db 0xdd, 0xd8  ;; fstp st0
..@0x804eba7: db 0xdd, 0xd8  ;; fstp st0
..@0x804eba9: db 0xdd, 0x44, 0x24, 0x58  ;; fld qword [esp+0x58]
..@0x804ebad: db 0xdc, 0x0d, 0x30, 0xb7, 0x05, 0x08  ;; fmul qword [0x805b730]
..@0x804ebb3: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x804ebb7: db 0xdd, 0x18  ;; fstp qword [eax]
..@0x804ebb9: db 0x8b, 0x44, 0x24, 0x64  ;; mov eax,[esp+0x64]
..@0x804ebbd: add esp, strict byte 0x7c
..@0x804ebc0: pop ebx
..@0x804ebc1: pop esi
..@0x804ebc2: pop edi
..@0x804ebc3: pop ebp
..@0x804ebc4: ret
..@0x804ebc5: db 0x31, 0xc0  ;; xor eax,eax
..@0x804ebc7: jmp strict near R.code+0x804e907
..@0x804ebcc: db 0xdd, 0xd8  ;; fstp st0
..@0x804ebce: db 0xdd, 0x05, 0x18, 0xb7, 0x05, 0x08  ;; fld qword [0x805b718]
..@0x804ebd4: db 0xc7, 0x44, 0x24, 0x64, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x64],0x0
..@0x804ebdc: db 0xeb, 0xd5  ;; jmp short A.code+0x804ebb3
..@0x804ebde: dw 0x9066  ;; o16 nop
..@0x804ebe0: db 0xba, 0x80, 0xda, 0x05, 0x08  ;; mov edx,0x805da80
..@0x804ebe5: push edi
..@0x804ebe6: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x804ebeb: db 0x89, 0xd7  ;; mov edi,edx
..@0x804ebed: db 0xb9, 0x00, 0x08, 0x00, 0x00  ;; mov ecx,0x800
..@0x804ebf2: db 0xba, 0x80, 0xfa, 0x05, 0x08  ;; mov edx,0x805fa80
..@0x804ebf7: db 0xf3, 0xab  ;; rep stosd
..@0x804ebf9: db 0x89, 0xd7  ;; mov edi,edx
..@0x804ebfb: db 0xc7, 0x05, 0x80, 0xfe, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805fe80],0x0
..@0x804ec03: db 0x00, 0x00
..@0x804ec05: db 0xc7, 0x05, 0xe4, 0xe0, 0x83, 0x09, 0x80, 0xd6  ;; mov dword [0x983e0e4],0x805d680
..@0x804ec0d: db 0x05, 0x08
..@0x804ec0f: db 0x66, 0xb9, 0x00, 0x01  ;; mov cx,0x100
..@0x804ec13: db 0xf3, 0xab  ;; rep stosd
..@0x804ec15: pop edi
..@0x804ec16: ret
..@0x804ec17: db 0x89, 0xf6  ;; mov esi,esi
..@0x804ec19: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804ec20: push edi
..@0x804ec21: push esi
..@0x804ec22: push ebx
..@0x804ec23: sub esp, strict byte 0x30
..@0x804ec26: db 0x8b, 0x3d, 0xe0, 0xca, 0x60, 0x08  ;; mov edi,[0x860cae0]
..@0x804ec2c: db 0xa1, 0x88, 0xe0, 0x83, 0x09  ;; mov eax,[0x983e088]
..@0x804ec31: db 0x8d, 0x5f, 0xff  ;; lea ebx,[edi-0x1]
..@0x804ec34: db 0x83, 0x2c, 0x85, 0xe0, 0xc6, 0x60, 0x08, 0x01  ;; sub dword [eax*4+0x860c6e0],byte +0x1
..@0x804ec3c: db 0x89, 0x1d, 0xe0, 0xca, 0x60, 0x08  ;; mov [0x860cae0],ebx
..@0x804ec42: db 0x3b, 0x1d, 0xec, 0xe0, 0x83, 0x09  ;; cmp ebx,[0x983e0ec]
..@0x804ec48: db 0x0f, 0x84, 0xd2, 0x00, 0x00, 0x00  ;; jz near A.code+0x804ed20
..@0x804ec4e: db 0xa1, 0x00, 0xef, 0x6a, 0x08  ;; mov eax,[0x86aef00]
..@0x804ec53: db 0x89, 0x1d, 0xec, 0xe0, 0x83, 0x09  ;; mov [0x983e0ec],ebx
..@0x804ec59: db 0x85, 0xc0  ;; test eax,eax
..@0x804ec5b: db 0x74, 0x08  ;; jz A.code+0x804ec65
..@0x804ec5d: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804ec60: call B.code+prog_free
..@0x804ec65: db 0xc1, 0xe7, 0x02  ;; shl edi,byte 0x2
..@0x804ec68: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x804ec6b: call B.code+prog_malloc
..@0x804ec70: db 0x85, 0xc0  ;; test eax,eax
..@0x804ec72: db 0x89, 0xc6  ;; mov esi,eax
..@0x804ec74: db 0xa3, 0x00, 0xef, 0x6a, 0x08  ;; mov [0x86aef00],eax
..@0x804ec79: db 0x0f, 0x84, 0xb1, 0x00, 0x00, 0x00  ;; jz near A.code+0x804ed30
..@0x804ec7f: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804ec83: db 0xdb, 0x44, 0x24, 0x2c  ;; fild dword [esp+0x2c]
..@0x804ec87: db 0xdd, 0x14, 0x24  ;; fst qword [esp]
..@0x804ec8a: db 0xdd, 0x5c, 0x24, 0x10  ;; fstp qword [esp+0x10]
..@0x804ec8e: call B.code+log
..@0x804ec93: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804ec95: db 0xdd, 0x44, 0x24, 0x10  ;; fld qword [esp+0x10]
..@0x804ec99: db 0xdc, 0xc9  ;; fmul to st1
..@0x804ec9b: db 0xd9, 0xc9  ;; fxch st1
..@0x804ec9d: db 0xdc, 0x3d, 0x38, 0xb7, 0x05, 0x08  ;; fdivr qword [0x805b738]
..@0x804eca3: db 0xdd, 0x5c, 0x24, 0x20  ;; fstp qword [esp+0x20]
..@0x804eca7: db 0x7f, 0x0f  ;; jg A.code+0x804ecb8
..@0x804eca9: db 0xdd, 0xd8  ;; fstp st0
..@0x804ecab: db 0xeb, 0x41  ;; jmp short A.code+0x804ecee
..@0x804ecad: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804ecb0: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x804ecb4: db 0xdb, 0x44, 0x24, 0x2c  ;; fild dword [esp+0x2c]
..@0x804ecb8: db 0xdd, 0x14, 0x24  ;; fst qword [esp]
..@0x804ecbb: db 0xdd, 0x5c, 0x24, 0x10  ;; fstp qword [esp+0x10]
..@0x804ecbf: call B.code+log
..@0x804ecc4: db 0xd9, 0x7c, 0x24, 0x2a  ;; fnstcw [esp+0x2a]
..@0x804ecc8: db 0xdd, 0x44, 0x24, 0x10  ;; fld qword [esp+0x10]
..@0x804eccc: db 0xde, 0xc9  ;; fmulp st1
..@0x804ecce: db 0x0f, 0xb7, 0x54, 0x24, 0x2a  ;; movzx edx,word [esp+0x2a]
..@0x804ecd3: db 0xdc, 0x4c, 0x24, 0x20  ;; fmul qword [esp+0x20]
..@0x804ecd7: db 0xb6, 0x0c  ;; mov dh,0xc
..@0x804ecd9: db 0x66, 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],dx
..@0x804ecde: db 0xd9, 0x6c, 0x24, 0x28  ;; fldcw [esp+0x28]
..@0x804ece2: db 0xdb, 0x1c, 0x9e  ;; fistp dword [esi+ebx*4]
..@0x804ece5: db 0xd9, 0x6c, 0x24, 0x2a  ;; fldcw [esp+0x2a]
..@0x804ece9: sub ebx, strict byte 0x1
..@0x804ecec: db 0x75, 0xc2  ;; jnz A.code+0x804ecb0
..@0x804ecee: db 0xc7, 0x06, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esi],0x0
..@0x804ecf4: db 0xba, 0xdc, 0xca, 0x60, 0x08  ;; mov edx,0x860cadc
..@0x804ecf9: db 0xb8, 0xfe, 0xff, 0xff, 0x7f  ;; mov eax,0x7ffffffe
..@0x804ecfe: dw 0x9066  ;; o16 nop
..@0x804ed00: db 0x8b, 0x0a  ;; mov ecx,[edx]
..@0x804ed02: sub edx, strict byte 0x4
..@0x804ed05: db 0x2b, 0x04, 0x8e  ;; sub eax,[esi+ecx*4]
..@0x804ed08: db 0x81, 0xfa, 0xdc, 0xc6, 0x60, 0x08  ;; cmp edx,0x860c6dc
..@0x804ed0e: db 0x75, 0xf0  ;; jnz A.code+0x804ed00
..@0x804ed10: add esp, strict byte 0x30
..@0x804ed13: pop ebx
..@0x804ed14: pop esi
..@0x804ed15: pop edi
..@0x804ed16: ret
..@0x804ed17: db 0x89, 0xf6  ;; mov esi,esi
..@0x804ed19: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804ed20: db 0x8b, 0x35, 0x00, 0xef, 0x6a, 0x08  ;; mov esi,[0x86aef00]
..@0x804ed26: db 0x85, 0xf6  ;; test esi,esi
..@0x804ed28: db 0x75, 0xca  ;; jnz A.code+0x804ecf4
..@0x804ed2a: jmp strict near R.code+0x804ec65
..@0x804ed2f: nop
..@0x804ed30: db 0xc7, 0x04, 0x24, 0x39, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b439
..@0x804ed37: call [funcptr_printf]
..@0x804ed3d: db 0x8b, 0x15, 0x90, 0xe0, 0x83, 0x09  ;; mov edx,[0x983e090]
..@0x804ed43: db 0xb8, 0x00, 0x00, 0x00, 0x80  ;; mov eax,0x80000000
..@0x804ed48: db 0x85, 0xd2  ;; test edx,edx
..@0x804ed4a: db 0x74, 0xc4  ;; jz A.code+0x804ed10
..@0x804ed4c: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x804ed4f: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804ed53: call B.code+prog_free
..@0x804ed58: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804ed5c: db 0xeb, 0xb2  ;; jmp short A.code+0x804ed10
..@0x804ed5e: dw 0x9066  ;; o16 nop
..@0x804ed60: push ebp
..@0x804ed61: db 0xb8, 0xd0, 0xb8, 0x04, 0x08  ;; mov eax,A.code+0x804b8d0
..@0x804ed66: push edi
..@0x804ed67: push esi
..@0x804ed68: push ebx
..@0x804ed69: db 0x81, 0xec, 0xac, 0x00, 0x00, 0x00  ;; sub esp,0xac
..@0x804ed6f: db 0xc7, 0x05, 0x7c, 0xd6, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d67c],0xffffffff
..@0x804ed77: db 0xff, 0xff
..@0x804ed79: db 0x8b, 0xac, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov ebp,[esp+0xc0]
..@0x804ed80: db 0xc7, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00, 0x56  ;; mov dword [esp+0x84],0x805b456
..@0x804ed88: db 0xb4, 0x05, 0x08
..@0x804ed8b: db 0xc7, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, 0x4a  ;; mov dword [esp+0x88],0x805b54a
..@0x804ed93: db 0xb5, 0x05, 0x08
..@0x804ed96: db 0xc7, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, 0x61  ;; mov dword [esp+0x8c],0x805b461
..@0x804ed9e: db 0xb4, 0x05, 0x08
..@0x804eda1: db 0xc7, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00, 0x6b  ;; mov dword [esp+0x90],0x805b46b
..@0x804eda9: db 0xb4, 0x05, 0x08
..@0x804edac: db 0x8b, 0x55, 0x7c  ;; mov edx,[ebp+0x7c]
..@0x804edaf: db 0x89, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov [0x805d660],ebp
..@0x804edb5: db 0x8b, 0x4d, 0x24  ;; mov ecx,[ebp+0x24]
..@0x804edb8: db 0xc7, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00, 0x75  ;; mov dword [esp+0x94],0x805b475
..@0x804edc0: db 0xb4, 0x05, 0x08
..@0x804edc3: db 0x8b, 0x5d, 0x28  ;; mov ebx,[ebp+0x28]
..@0x804edc6: db 0xc7, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00, 0x4a  ;; mov dword [esp+0x98],0x805b54a
..@0x804edce: db 0xb5, 0x05, 0x08
..@0x804edd1: db 0xc7, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00, 0x86  ;; mov dword [esp+0x9c],0x805b486
..@0x804edd9: db 0xb4, 0x05, 0x08
..@0x804eddc: db 0x85, 0xd2  ;; test edx,edx
..@0x804edde: db 0xc7, 0x45, 0x78, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0x78],0x0
..@0x804ede5: db 0x0f, 0x45, 0xc2  ;; cmovnz eax,edx
..@0x804ede8: db 0x8b, 0x95, 0x80, 0x00, 0x00, 0x00  ;; mov edx,[ebp+0x80]
..@0x804edee: db 0x89, 0x0d, 0x70, 0xd6, 0x05, 0x08  ;; mov [0x805d670],ecx
..@0x804edf4: db 0x89, 0x1d, 0x78, 0xd6, 0x05, 0x08  ;; mov [0x805d678],ebx
..@0x804edfa: mov [funcptr_printf],eax  ; Sets up funcptr_printf function. It sets to eax == message_printf == 0x804b680, setup called once (got it from gdb).
..@0x804edff: db 0xb8, 0xe0, 0xb8, 0x04, 0x08  ;; mov eax,A.code+0x804b8e0
..@0x804ee04: db 0xc7, 0x45, 0x74, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0x74],0x0
..@0x804ee0b: db 0x85, 0xd2  ;; test edx,edx
..@0x804ee0d: db 0x0f, 0x45, 0xc2  ;; cmovnz eax,edx
..@0x804ee10: db 0x8b, 0x55, 0x20  ;; mov edx,[ebp+0x20]
..@0x804ee13: cmp ecx, strict byte 0x6
..@0x804ee16: db 0xa3, 0x68, 0xd6, 0x05, 0x08  ;; mov [0x805d668],eax
..@0x804ee1b: db 0x8b, 0x45, 0x1c  ;; mov eax,[ebp+0x1c]
..@0x804ee1e: db 0x89, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],edx
..@0x804ee24: db 0xa3, 0x6c, 0xd6, 0x05, 0x08  ;; mov [0x805d66c],eax
..@0x804ee29: db 0x0f, 0x84, 0xfb, 0x01, 0x00, 0x00  ;; jz near A.code+0x804f02a
..@0x804ee2f: call R.code+0x804ebe0
..@0x804ee34: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x804ee37: db 0x8b, 0x4d, 0x00  ;; mov ecx,[ebp+0x0]
..@0x804ee3a: db 0x85, 0xd2  ;; test edx,edx
..@0x804ee3c: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804ee40: db 0x0f, 0x8e, 0xa3, 0x24, 0x00, 0x00  ;; jng near A.code+0x80512e9
..@0x804ee46: db 0x31, 0xf6  ;; xor esi,esi
..@0x804ee48: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x804ee50: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x804ee54: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804ee5b: call [0x805d668]
..@0x804ee61: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x804ee65: db 0x85, 0xc0  ;; test eax,eax
..@0x804ee67: db 0x0f, 0x85, 0x74, 0x01, 0x00, 0x00  ;; jnz near A.code+0x804efe1
..@0x804ee6d: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804ee73: db 0x8b, 0x5d, 0x08  ;; mov ebx,[ebp+0x8]
..@0x804ee76: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804ee78: db 0x7e, 0x7c  ;; jng A.code+0x804eef6
..@0x804ee7a: db 0x89, 0xea  ;; mov edx,ebp
..@0x804ee7c: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804ee7e: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x804ee80: db 0xeb, 0x0e  ;; jmp short A.code+0x804ee90
..@0x804ee82: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804ee88: add ebx, strict byte 0x1
..@0x804ee8b: db 0x39, 0x5a, 0x08  ;; cmp [edx+0x8],ebx
..@0x804ee8e: db 0x7e, 0x62  ;; jng A.code+0x804eef2
..@0x804ee90: db 0x8b, 0x7c, 0x9d, 0x00  ;; mov edi,[ebp+ebx*4+0x0]
..@0x804ee94: db 0x3b, 0x3d, 0x7c, 0xd6, 0x05, 0x08  ;; cmp edi,[0x805d67c]
..@0x804ee9a: db 0x73, 0x06  ;; jnc A.code+0x804eea2
..@0x804ee9c: db 0x89, 0x3d, 0x7c, 0xd6, 0x05, 0x08  ;; mov [0x805d67c],edi
..@0x804eea2: db 0xf7, 0xc6, 0x02, 0x00, 0x00, 0x00  ;; test esi,0x2
..@0x804eea8: db 0x75, 0x14  ;; jnz A.code+0x804eebe
..@0x804eeaa: db 0x89, 0xf8  ;; mov eax,edi
..@0x804eeac: db 0x89, 0xf1  ;; mov ecx,esi
..@0x804eeae: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804eeb1: or ecx, strict byte 0x2
..@0x804eeb4: db 0x31, 0xf8  ;; xor eax,edi
..@0x804eeb6: db 0xa9, 0x00, 0xff, 0xff, 0x00  ;; test eax,0xffff00
..@0x804eebb: db 0x0f, 0x45, 0xf1  ;; cmovnz esi,ecx
..@0x804eebe: db 0xf7, 0xc6, 0x04, 0x00, 0x00, 0x00  ;; test esi,0x4
..@0x804eec4: db 0x75, 0xc2  ;; jnz A.code+0x804ee88
..@0x804eec6: db 0x89, 0xf8  ;; mov eax,edi
..@0x804eec8: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x804eecc: call R.code+0x804bcc0
..@0x804eed1: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x804eed5: db 0x85, 0xc0  ;; test eax,eax
..@0x804eed7: db 0x79, 0xaf  ;; jns A.code+0x804ee88
..@0x804eed9: db 0x81, 0x7c, 0x24, 0x1c, 0xff, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x1c],0xff
..@0x804eee1: db 0x0f, 0x8e, 0xa1, 0x00, 0x00, 0x00  ;; jng near A.code+0x804ef88
..@0x804eee7: add ebx, strict byte 0x1
..@0x804eeea: or esi, strict byte 0x4
..@0x804eeed: db 0x39, 0x5a, 0x08  ;; cmp [edx+0x8],ebx
..@0x804eef0: db 0x7f, 0x9e  ;; jg A.code+0x804ee90
..@0x804eef2: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804eef4: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804eef6: db 0x03, 0x4d, 0x04  ;; add ecx,[ebp+0x4]
..@0x804eef9: db 0x83, 0x6c, 0x24, 0x20, 0x01  ;; sub dword [esp+0x20],byte +0x1
..@0x804eefe: db 0x0f, 0x85, 0x4c, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804ee50
..@0x804ef04: db 0x8b, 0x1d, 0x7c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d67c]
..@0x804ef0a: db 0x8b, 0x4d, 0x30  ;; mov ecx,[ebp+0x30]
..@0x804ef0d: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804ef0f: db 0x74, 0x4c  ;; jz A.code+0x804ef5d
..@0x804ef11: db 0xf7, 0xc6, 0x02, 0x00, 0x00, 0x00  ;; test esi,0x2
..@0x804ef17: db 0x0f, 0x84, 0xc1, 0x0a, 0x00, 0x00  ;; jz near A.code+0x804f9de
..@0x804ef1d: db 0xf7, 0xc6, 0x04, 0x00, 0x00, 0x00  ;; test esi,0x4
..@0x804ef23: db 0x75, 0x38  ;; jnz A.code+0x804ef5d
..@0x804ef25: db 0x81, 0x7c, 0x24, 0x1c, 0x00, 0x01, 0x00, 0x00  ;; cmp dword [esp+0x1c],0x100
..@0x804ef2d: db 0x75, 0x2e  ;; jnz A.code+0x804ef5d
..@0x804ef2f: db 0xb8, 0xff, 0x00, 0x00, 0x00  ;; mov eax,0xff
..@0x804ef34: db 0xeb, 0x16  ;; jmp short A.code+0x804ef4c
..@0x804ef36: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804ef39: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804ef40: sub eax, strict byte 0x1
..@0x804ef43: cmp eax, strict byte -0x1
..@0x804ef46: db 0x0f, 0x84, 0x6e, 0x23, 0x00, 0x00  ;; jz near A.code+0x80512ba
..@0x804ef4c: db 0x8b, 0x14, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov edx,[eax*4+0x805d680]
..@0x804ef53: db 0x31, 0xca  ;; xor edx,ecx
..@0x804ef55: db 0x81, 0xe2, 0xff, 0xff, 0xff, 0x00  ;; and edx,0xffffff
..@0x804ef5b: db 0x75, 0xe3  ;; jnz A.code+0x804ef40
..@0x804ef5d: db 0x81, 0xfb, 0xff, 0xff, 0xff, 0xfe  ;; cmp ebx,0xfeffffff
..@0x804ef63: db 0x0f, 0x86, 0x77, 0x11, 0x00, 0x00  ;; jna near A.code+0x80500e0
..@0x804ef69: db 0xc7, 0x05, 0x7c, 0xd6, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d67c],0xffffffff
..@0x804ef71: db 0xff, 0xff
..@0x804ef73: cmp esi, strict byte 0x7
..@0x804ef76: db 0x0f, 0x87, 0x6c, 0x04, 0x00, 0x00  ;; ja near A.code+0x804f3e8
..@0x804ef7c: db 0xff, 0x24, 0xb5, 0x30, 0xb6, 0x05, 0x08  ;; jmp [esi*4+code_ptr_0x805b630]
..@0x804ef83: nop
..@0x804ef84: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804ef88: db 0x83, 0x05, 0x80, 0xfe, 0x05, 0x08, 0x01  ;; add dword [0x805fe80],byte +0x1
..@0x804ef8f: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804ef91: db 0xc1, 0xf9, 0x0b  ;; sar ecx,byte 0xb
..@0x804ef94: db 0x89, 0x4c, 0x24, 0x2c  ;; mov [esp+0x2c],ecx
..@0x804ef98: db 0x89, 0xf9  ;; mov ecx,edi
..@0x804ef9a: db 0xc1, 0xf9, 0x16  ;; sar ecx,byte 0x16
..@0x804ef9d: db 0x31, 0x4c, 0x24, 0x2c  ;; xor [esp+0x2c],ecx
..@0x804efa1: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x804efa5: db 0x29, 0x7c, 0x24, 0x2c  ;; sub [esp+0x2c],edi
..@0x804efa9: db 0x89, 0x3c, 0x8d, 0x80, 0xd6, 0x05, 0x08  ;; mov [ecx*4+0x805d680],edi
..@0x804efb0: db 0x81, 0x64, 0x24, 0x2c, 0xff, 0x07, 0x00, 0x00  ;; and dword [esp+0x2c],0x7ff
..@0x804efb8: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804efbc: db 0x8b, 0x04, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov eax,[eax*4+0x805da80]
..@0x804efc3: db 0x89, 0x04, 0x8d, 0x80, 0xfa, 0x05, 0x08  ;; mov [ecx*4+0x805fa80],eax
..@0x804efca: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804efce: db 0x89, 0x0c, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov [eax*4+0x805da80],ecx
..@0x804efd5: add ecx, strict byte 0x1
..@0x804efd8: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x804efdc: jmp strict near R.code+0x804ee88
..@0x804efe1: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x804efe7: db 0xa1, 0x00, 0xef, 0x6a, 0x08  ;; mov eax,[0x86aef00]
..@0x804efec: db 0x85, 0xc0  ;; test eax,eax
..@0x804efee: db 0x74, 0x12  ;; jz A.code+0x804f002
..@0x804eff0: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804eff3: call B.code+prog_free
..@0x804eff8: db 0xc7, 0x05, 0x00, 0xef, 0x6a, 0x08, 0x00, 0x00  ;; mov dword [0x86aef00],0x0
..@0x804f000: db 0x00, 0x00
..@0x804f002: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f004: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x804f009: db 0x74, 0x12  ;; jz A.code+0x804f01d
..@0x804f00b: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804f00e: call B.code+prog_free
..@0x804f013: db 0xc7, 0x05, 0xa4, 0x06, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80606a4],0x0
..@0x804f01b: db 0x00, 0x00
..@0x804f01d: db 0x81, 0xc4, 0xac, 0x00, 0x00, 0x00  ;; add esp,0xac
..@0x804f023: db 0x89, 0xf0  ;; mov eax,esi
..@0x804f025: pop ebx
..@0x804f026: pop esi
..@0x804f027: pop edi
..@0x804f028: pop ebp
..@0x804f029: ret
..@0x804f02a: db 0xbb, 0x06, 0x00, 0x00, 0x00  ;; mov ebx,0x6
..@0x804f02f: db 0x85, 0xd2  ;; test edx,edx
..@0x804f031: db 0x0f, 0x88, 0x06, 0x04, 0x00, 0x00  ;; js near A.code+0x804f43d
..@0x804f037: db 0x3d, 0xff, 0x00, 0x00, 0x00  ;; cmp eax,0xff
..@0x804f03c: db 0xba, 0x00, 0x04, 0x00, 0x00  ;; mov edx,0x400
..@0x804f041: db 0x0f, 0x8e, 0x89, 0x03, 0x00, 0x00  ;; jng near A.code+0x804f3d0
..@0x804f047: db 0x8b, 0x45, 0x18  ;; mov eax,[ebp+0x18]
..@0x804f04a: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x804f04e: db 0xc7, 0x04, 0x24, 0x80, 0xd6, 0x05, 0x08  ;; mov dword [esp],0x805d680
..@0x804f055: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804f059: call B.code+memcpy
..@0x804f05e: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f060: db 0x0f, 0x84, 0xf6, 0x03, 0x00, 0x00  ;; jz near A.code+0x804f45c
..@0x804f066: cmp ebx, strict byte 0x3
..@0x804f069: db 0x0f, 0x84, 0xfe, 0x04, 0x00, 0x00  ;; jz near A.code+0x804f56d
..@0x804f06f: db 0xa1, 0x78, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d678]
..@0x804f074: db 0x8d, 0x50, 0xff  ;; lea edx,[eax-0x1]
..@0x804f077: cmp edx, strict byte 0x1
..@0x804f07a: db 0x0f, 0x86, 0x7f, 0x09, 0x00, 0x00  ;; jna near A.code+0x804f9ff
..@0x804f080: cmp eax, strict byte 0x4
..@0x804f083: db 0x0f, 0x84, 0x76, 0x09, 0x00, 0x00  ;; jz near A.code+0x804f9ff
..@0x804f089: db 0xc7, 0x05, 0x78, 0xd6, 0x05, 0x08, 0x08, 0x00  ;; mov dword [0x805d678],0x8
..@0x804f091: db 0x00, 0x00
..@0x804f093: db 0xa1, 0x74, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d674]
..@0x804f098: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x804f09c: db 0xc7, 0x04, 0x24, 0xd6, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4d6
..@0x804f0a3: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x804f0a7: call [funcptr_printf]
..@0x804f0ad: db 0x8b, 0x15, 0x70, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d670]
..@0x804f0b3: db 0x85, 0xd2  ;; test edx,edx
..@0x804f0b5: db 0x0f, 0x84, 0x8d, 0x0f, 0x00, 0x00  ;; jz near A.code+0x8050048
..@0x804f0bb: cmp edx, strict byte 0x3
..@0x804f0be: db 0x0f, 0x84, 0xc2, 0x14, 0x00, 0x00  ;; jz near A.code+0x8050586
..@0x804f0c4: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x804f0c9: db 0x8b, 0x0d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d66c]
..@0x804f0cf: db 0x89, 0x50, 0x44  ;; mov [eax+0x44],edx
..@0x804f0d2: db 0x8b, 0x15, 0x78, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d678]
..@0x804f0d8: db 0x89, 0x48, 0x3c  ;; mov [eax+0x3c],ecx
..@0x804f0db: db 0x8b, 0x0d, 0x74, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d674]
..@0x804f0e1: db 0xc7, 0x40, 0x38, 0x80, 0xd6, 0x05, 0x08  ;; mov dword [eax+0x38],0x805d680
..@0x804f0e8: db 0x89, 0x50, 0x48  ;; mov [eax+0x48],edx
..@0x804f0eb: db 0x89, 0x48, 0x40  ;; mov [eax+0x40],ecx
..@0x804f0ee: db 0xc7, 0x04, 0x24, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp],0x2
..@0x804f0f5: call [0x805d668]
..@0x804f0fb: db 0x85, 0xc0  ;; test eax,eax
..@0x804f0fd: db 0x0f, 0x85, 0xde, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x804f103: db 0x8b, 0x2d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d674]
..@0x804f109: db 0x89, 0x6c, 0x24, 0x38  ;; mov [esp+0x38],ebp
..@0x804f10d: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804f113: db 0x8b, 0x55, 0x6c  ;; mov edx,[ebp+0x6c]
..@0x804f116: db 0x85, 0xd2  ;; test edx,edx
..@0x804f118: db 0x0f, 0x8e, 0x5b, 0x14, 0x00, 0x00  ;; jng near A.code+0x8050579
..@0x804f11e: db 0x8b, 0x45, 0x70  ;; mov eax,[ebp+0x70]
..@0x804f121: db 0xc7, 0x44, 0x24, 0x24, 0x3f, 0x08, 0x00, 0x00  ;; mov dword [esp+0x24],0x83f
..@0x804f129: db 0x8d, 0x0c, 0x90  ;; lea ecx,[eax+edx*4]
..@0x804f12c: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x804f12e: add eax, strict byte 0x4
..@0x804f131: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x804f135: db 0x8b, 0x12  ;; mov edx,[edx]
..@0x804f137: db 0x89, 0xd3  ;; mov ebx,edx
..@0x804f139: db 0xc1, 0xe3, 0x18  ;; shl ebx,byte 0x18
..@0x804f13c: db 0x8d, 0x74, 0x1f, 0x0c  ;; lea esi,[edi+ebx+0xc]
..@0x804f140: db 0x89, 0xd3  ;; mov ebx,edx
..@0x804f142: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x804f145: db 0x01, 0xde  ;; add esi,ebx
..@0x804f147: db 0x89, 0xd3  ;; mov ebx,edx
..@0x804f149: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x804f14f: db 0xc1, 0xeb, 0x08  ;; shr ebx,byte 0x8
..@0x804f152: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x804f155: db 0x81, 0xe3, 0x00, 0xff, 0x00, 0x00  ;; and ebx,0xff00
..@0x804f15b: db 0x01, 0xf3  ;; add ebx,esi
..@0x804f15d: db 0x01, 0xda  ;; add edx,ebx
..@0x804f15f: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804f161: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x804f165: db 0x75, 0xc5  ;; jnz A.code+0x804f12c
..@0x804f167: db 0x83, 0x3d, 0x70, 0xd6, 0x05, 0x08, 0x06  ;; cmp dword [0x805d670],byte +0x6
..@0x804f16e: db 0x0f, 0x86, 0x5e, 0x08, 0x00, 0x00  ;; jna near A.code+0x804f9d2
..@0x804f174: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804f178: db 0x3b, 0x5d, 0x14  ;; cmp ebx,[ebp+0x14]
..@0x804f17b: db 0x0f, 0x8c, 0x49, 0x08, 0x00, 0x00  ;; jl near A.code+0x804f9ca
..@0x804f181: db 0x8b, 0x45, 0x10  ;; mov eax,[ebp+0x10]
..@0x804f184: db 0x85, 0xc0  ;; test eax,eax
..@0x804f186: db 0x0f, 0x84, 0xe2, 0x1f, 0x00, 0x00  ;; jz near A.code+0x805116e
..@0x804f18c: db 0x8b, 0x85, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[ebp+0x84]
..@0x804f192: db 0x85, 0xc0  ;; test eax,eax
..@0x804f194: db 0x0f, 0x85, 0xfe, 0x07, 0x00, 0x00  ;; jnz near A.code+0x804f998
..@0x804f19a: db 0xbb, 0xff, 0x00, 0x00, 0x00  ;; mov ebx,0xff
..@0x804f19f: nop
..@0x804f1a0: db 0x89, 0xda  ;; mov edx,ebx
..@0x804f1a2: db 0xb9, 0x08, 0x00, 0x00, 0x00  ;; mov ecx,0x8
..@0x804f1a7: db 0x89, 0xf6  ;; mov esi,esi
..@0x804f1a9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804f1b0: db 0x89, 0xd0  ;; mov eax,edx
..@0x804f1b2: db 0xd1, 0xea  ;; shr edx,1
..@0x804f1b4: and eax, strict byte 0x1
..@0x804f1b7: db 0xf7, 0xd8  ;; neg eax
..@0x804f1b9: db 0x25, 0x20, 0x83, 0xb8, 0xed  ;; and eax,0xedb88320
..@0x804f1be: db 0x31, 0xc2  ;; xor edx,eax
..@0x804f1c0: sub ecx, strict byte 0x1
..@0x804f1c3: db 0x75, 0xeb  ;; jnz A.code+0x804f1b0
..@0x804f1c5: db 0x89, 0x14, 0x9d, 0xa0, 0x02, 0x06, 0x08  ;; mov [ebx*4+0x80602a0],edx
..@0x804f1cc: sub ebx, strict byte 0x1
..@0x804f1cf: cmp ebx, strict byte -0x1
..@0x804f1d2: db 0x75, 0xcc  ;; jnz A.code+0x804f1a0
..@0x804f1d4: db 0x83, 0x7d, 0x4c, 0x04  ;; cmp dword [ebp+0x4c],byte +0x4
..@0x804f1d8: db 0x0f, 0x84, 0x65, 0x07, 0x00, 0x00  ;; jz near A.code+0x804f943
..@0x804f1de: db 0x8b, 0x45, 0x54  ;; mov eax,[ebp+0x54]
..@0x804f1e1: db 0x85, 0xc0  ;; test eax,eax
..@0x804f1e3: db 0x7f, 0x11  ;; jg A.code+0x804f1f6
..@0x804f1e5: db 0xdd, 0x45, 0x58  ;; fld qword [ebp+0x58]
..@0x804f1e8: db 0xd9, 0xee  ;; fldz
..@0x804f1ea: db 0xd9, 0xc9  ;; fxch st1
..@0x804f1ec: db 0xdf, 0xe9  ;; fucomip st1
..@0x804f1ee: db 0xdd, 0xd8  ;; fstp st0
..@0x804f1f0: db 0x0f, 0x86, 0x40, 0x13, 0x00, 0x00  ;; jna near A.code+0x8050536
..@0x804f1f6: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x804f1f9: db 0xc7, 0x45, 0x74, 0xff, 0xff, 0xff, 0xff  ;; mov dword [ebp+0x74],0xffffffff
..@0x804f200: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0x10, 0xbd  ;; mov dword [0x80606a0],A.code+0x804bd10
..@0x804f208: db 0x04, 0x08
..@0x804f20a: db 0x8d, 0x04, 0x85, 0x01, 0x00, 0x00, 0x00  ;; lea eax,[eax*4+0x1]
..@0x804f211: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x804f215: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804f218: call B.code+prog_malloc
..@0x804f21d: db 0x85, 0xc0  ;; test eax,eax
..@0x804f21f: db 0xa3, 0xa4, 0x06, 0x06, 0x08  ;; mov [0x80606a4],eax
..@0x804f224: db 0x0f, 0x84, 0xdc, 0x12, 0x00, 0x00  ;; jz near A.code+0x8050506
..@0x804f22a: db 0xc7, 0x05, 0xa8, 0x06, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80606a8],0x0
..@0x804f232: db 0x00, 0x00
..@0x804f234: db 0xc7, 0x05, 0xac, 0x06, 0x06, 0x08, 0x01, 0x00  ;; mov dword [0x80606ac],0x1
..@0x804f23c: db 0x00, 0x00
..@0x804f23e: db 0xc7, 0x05, 0xb0, 0x06, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80606b0],0x0
..@0x804f246: db 0x00, 0x00
..@0x804f248: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x804f24d: db 0x8b, 0x40, 0x0c  ;; mov eax,[eax+0xc]
..@0x804f250: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804f252: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x804f257: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804f259: db 0x73, 0x04  ;; jnc A.code+0x804f25f
..@0x804f25b: db 0xf7, 0xd8  ;; neg eax
..@0x804f25d: db 0xeb, 0x05  ;; jmp short A.code+0x804f264
..@0x804f25f: db 0x8d, 0x0c, 0x00  ;; lea ecx,[eax+eax]
..@0x804f262: db 0xf7, 0xf1  ;; div ecx
..@0x804f264: db 0xa3, 0xc4, 0xc6, 0x60, 0x08  ;; mov [0x860c6c4],eax
..@0x804f269: db 0xf7, 0xe3  ;; mul ebx
..@0x804f26b: db 0x31, 0xc0  ;; xor eax,eax
..@0x804f26d: cmp edx, strict byte 0x1
..@0x804f270: db 0x0f, 0x92, 0xc0  ;; setc al
..@0x804f273: db 0xa3, 0xc0, 0xc6, 0x60, 0x08  ;; mov [0x860c6c0],eax
..@0x804f278: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x804f27e: db 0xc7, 0x44, 0x24, 0x44, 0xff, 0xff, 0xff, 0x7f  ;; mov dword [esp+0x44],0x7fffffff
..@0x804f286: db 0xc7, 0x44, 0x24, 0x34, 0x10, 0xbd, 0x04, 0x08  ;; mov dword [esp+0x34],A.code+0x804bd10
..@0x804f28e: db 0x8b, 0x7b, 0x74  ;; mov edi,[ebx+0x74]
..@0x804f291: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x804f295: db 0x85, 0xff  ;; test edi,edi
..@0x804f297: db 0x0f, 0x85, 0x30, 0x0c, 0x00, 0x00  ;; jnz near A.code+0x804fecd
..@0x804f29d: db 0x8b, 0x43, 0x54  ;; mov eax,[ebx+0x54]
..@0x804f2a0: db 0x85, 0xc0  ;; test eax,eax
..@0x804f2a2: db 0x0f, 0x8f, 0x08, 0x08, 0x00, 0x00  ;; jg near A.code+0x804fab0
..@0x804f2a8: db 0xdd, 0x43, 0x58  ;; fld qword [ebx+0x58]
..@0x804f2ab: db 0xd9, 0xee  ;; fldz
..@0x804f2ad: db 0xd9, 0xc9  ;; fxch st1
..@0x804f2af: db 0xdf, 0xe9  ;; fucomip st1
..@0x804f2b1: db 0xdd, 0xd8  ;; fstp st0
..@0x804f2b3: db 0x0f, 0x86, 0x69, 0x0f, 0x00, 0x00  ;; jna near A.code+0x8050222
..@0x804f2b9: db 0xa1, 0xa8, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a8]
..@0x804f2be: db 0x31, 0xed  ;; xor ebp,ebp
..@0x804f2c0: db 0xc7, 0x05, 0xc4, 0x10, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80610c4],0x0
..@0x804f2c8: db 0x00, 0x00
..@0x804f2ca: db 0xc7, 0x05, 0xac, 0x06, 0x06, 0x08, 0x01, 0x00  ;; mov dword [0x80606ac],0x1
..@0x804f2d2: db 0x00, 0x00
..@0x804f2d4: db 0xc7, 0x05, 0xcc, 0x10, 0x06, 0x08, 0xff, 0xff  ;; mov dword [0x80610cc],0xffffffff
..@0x804f2dc: db 0xff, 0xff
..@0x804f2de: db 0xa3, 0xc8, 0x10, 0x06, 0x08  ;; mov [0x80610c8],eax
..@0x804f2e3: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x804f2e8: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x804f2ec: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x804f2ee: db 0xbf, 0x02, 0x00, 0x00, 0x00  ;; mov edi,0x2
..@0x804f2f3: jmp strict near R.code+0x804f37d
..@0x804f2f8: nop
..@0x804f2f9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804f300: db 0x74, 0x57  ;; jz A.code+0x804f359
..@0x804f302: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x804f308: db 0xdd, 0x42, 0x58  ;; fld qword [edx+0x58]
..@0x804f30b: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804f30f: db 0xdd, 0x44, 0x24, 0x60  ;; fld qword [esp+0x60]
..@0x804f313: db 0xdf, 0xe9  ;; fucomip st1
..@0x804f315: db 0xdd, 0xd8  ;; fstp st0
..@0x804f317: db 0x76, 0x40  ;; jna A.code+0x804f359
..@0x804f319: db 0x8b, 0x4e, 0x08  ;; mov ecx,[esi+0x8]
..@0x804f31c: db 0x69, 0x15, 0xac, 0x06, 0x06, 0x08, 0x18, 0x0a  ;; imul edx,[0x80606ac],dword 0xa18
..@0x804f324: db 0x00, 0x00
..@0x804f326: db 0x03, 0x46, 0x04  ;; add eax,[esi+0x4]
..@0x804f329: db 0x89, 0x8a, 0xc8, 0x10, 0x06, 0x08  ;; mov [edx+0x80610c8],ecx
..@0x804f32f: db 0x8b, 0x0d, 0xac, 0x06, 0x06, 0x08  ;; mov ecx,[0x80606ac]
..@0x804f335: db 0x89, 0x9a, 0xcc, 0x10, 0x06, 0x08  ;; mov [edx+0x80610cc],ebx
..@0x804f33b: db 0x89, 0x82, 0xc4, 0x10, 0x06, 0x08  ;; mov [edx+0x80610c4],eax
..@0x804f341: db 0x89, 0x46, 0x08  ;; mov [esi+0x8],eax
..@0x804f344: add ecx, strict byte 0x1
..@0x804f347: db 0x81, 0xf9, 0xff, 0x07, 0x00, 0x00  ;; cmp ecx,0x7ff
..@0x804f34d: db 0x89, 0x0d, 0xac, 0x06, 0x06, 0x08  ;; mov [0x80606ac],ecx
..@0x804f353: db 0x0f, 0x8f, 0xc5, 0x11, 0x00, 0x00  ;; jg near A.code+0x805051e
..@0x804f359: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x804f35e: db 0x69, 0xdb, 0x18, 0x0a, 0x00, 0x00  ;; imul ebx,ebx,dword 0xa18
..@0x804f364: sub edi, strict byte 0x1
..@0x804f367: db 0x8b, 0x9b, 0xcc, 0x10, 0x06, 0x08  ;; mov ebx,[ebx+0x80610cc]
..@0x804f36d: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f36f: db 0x0f, 0x88, 0xcd, 0x11, 0x00, 0x00  ;; js near A.code+0x8050542
..@0x804f375: db 0x85, 0xff  ;; test edi,edi
..@0x804f377: db 0x0f, 0x84, 0xc5, 0x11, 0x00, 0x00  ;; jz near A.code+0x8050542
..@0x804f37d: db 0x69, 0xf3, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,ebx,dword 0xa18
..@0x804f383: db 0x81, 0xc6, 0xc0, 0x10, 0x06, 0x08  ;; add esi,0x80610c0
..@0x804f389: db 0x8b, 0x4e, 0x04  ;; mov ecx,[esi+0x4]
..@0x804f38c: db 0x8b, 0x56, 0x08  ;; mov edx,[esi+0x8]
..@0x804f38f: db 0x29, 0xca  ;; sub edx,ecx
..@0x804f391: cmp edx, strict byte 0x1
..@0x804f394: db 0x7e, 0xc8  ;; jng A.code+0x804f35e
..@0x804f396: db 0x01, 0xc8  ;; add eax,ecx
..@0x804f398: db 0x8d, 0x4c, 0x24, 0x60  ;; lea ecx,[esp+0x60]
..@0x804f39c: call R.code+0x804e8b0
..@0x804f3a1: cmp eax, strict byte 0x0
..@0x804f3a4: db 0x0f, 0x8d, 0x56, 0xff, 0xff, 0xff  ;; jnl near A.code+0x804f300
..@0x804f3aa: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x804f3af: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x804f3b3: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x804f3b7: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804f3b9: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804f3bc: call B.code+prog_free
..@0x804f3c1: db 0xc7, 0x05, 0xa4, 0x06, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80606a4],0x0
..@0x804f3c9: db 0x00, 0x00
..@0x804f3cb: jmp strict near R.code+0x804efe7
..@0x804f3d0: db 0x66, 0x31, 0xd2  ;; xor dx,dx
..@0x804f3d3: db 0x85, 0xc0  ;; test eax,eax
..@0x804f3d5: db 0x0f, 0x49, 0xd0  ;; cmovns edx,eax
..@0x804f3d8: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x804f3db: jmp strict near R.code+0x804f047
..@0x804f3e0: db 0xc7, 0x44, 0x24, 0x24, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp+0x24],0x3
..@0x804f3e8: db 0x8b, 0x1d, 0x70, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d670]
..@0x804f3ee: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f3f0: db 0x79, 0x0a  ;; jns A.code+0x804f3fc
..@0x804f3f2: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804f3f6: db 0x89, 0x1d, 0x70, 0xd6, 0x05, 0x08  ;; mov [0x805d670],ebx
..@0x804f3fc: cmp ebx, strict byte 0x2
..@0x804f3ff: db 0x0f, 0x84, 0xa3, 0x0c, 0x00, 0x00  ;; jz near A.code+0x80500a8
..@0x804f405: db 0x0f, 0x8e, 0x3e, 0x01, 0x00, 0x00  ;; jng near A.code+0x804f549
..@0x804f40b: cmp ebx, strict byte 0x3
..@0x804f40e: db 0x0f, 0x84, 0x55, 0x0c, 0x00, 0x00  ;; jz near A.code+0x8050069
..@0x804f414: cmp ebx, strict byte 0x4
..@0x804f417: db 0x0f, 0x84, 0x63, 0x06, 0x00, 0x00  ;; jz near A.code+0x804fa80
..@0x804f41d: db 0x8b, 0x0d, 0x74, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d674]
..@0x804f423: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804f429: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804f42b: db 0x8b, 0x45, 0x1c  ;; mov eax,[ebp+0x1c]
..@0x804f42e: db 0x0f, 0x89, 0x03, 0xfc, 0xff, 0xff  ;; jns near A.code+0x804f037
..@0x804f434: cmp ebx, strict byte 0x3
..@0x804f437: db 0x0f, 0x84, 0x4c, 0x0c, 0x00, 0x00  ;; jz near A.code+0x8050089
..@0x804f43d: db 0x3d, 0xff, 0x00, 0x00, 0x00  ;; cmp eax,0xff
..@0x804f442: db 0xba, 0x00, 0x04, 0x00, 0x00  ;; mov edx,0x400
..@0x804f447: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x05, 0x00  ;; mov dword [0x805d674],0x5
..@0x804f44f: db 0x00, 0x00
..@0x804f451: db 0x0f, 0x8f, 0xf0, 0xfb, 0xff, 0xff  ;; jg near A.code+0x804f047
..@0x804f457: jmp strict near R.code+0x804f3d0
..@0x804f45c: db 0xba, 0xa0, 0xfe, 0x05, 0x08  ;; mov edx,0x805fea0
..@0x804f461: db 0x89, 0xd8  ;; mov eax,ebx
..@0x804f463: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x804f468: db 0x89, 0xd7  ;; mov edi,edx
..@0x804f46a: db 0xf3, 0xab  ;; rep stosd
..@0x804f46c: db 0x8b, 0x45, 0x30  ;; mov eax,[ebp+0x30]
..@0x804f46f: db 0x85, 0xc0  ;; test eax,eax
..@0x804f471: db 0x0f, 0x85, 0xad, 0x00, 0x00, 0x00  ;; jnz near A.code+0x804f524
..@0x804f477: db 0x8b, 0x75, 0x0c  ;; mov esi,[ebp+0xc]
..@0x804f47a: db 0x8b, 0x7d, 0x00  ;; mov edi,[ebp+0x0]
..@0x804f47d: db 0x85, 0xf6  ;; test esi,esi
..@0x804f47f: db 0x7e, 0x46  ;; jng A.code+0x804f4c7
..@0x804f481: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804f488: call [0x805d668]
..@0x804f48e: db 0x85, 0xc0  ;; test eax,eax
..@0x804f490: db 0x0f, 0x85, 0x4b, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x804f496: db 0x8b, 0x0d, 0x60, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d660]
..@0x804f49c: db 0x8b, 0x41, 0x08  ;; mov eax,[ecx+0x8]
..@0x804f49f: db 0x85, 0xc0  ;; test eax,eax
..@0x804f4a1: db 0x7e, 0x1c  ;; jng A.code+0x804f4bf
..@0x804f4a3: db 0x31, 0xc0  ;; xor eax,eax
..@0x804f4a5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804f4a8: db 0x0f, 0xb6, 0x14, 0x87  ;; movzx edx,byte [edi+eax*4]
..@0x804f4ac: add eax, strict byte 0x1
..@0x804f4af: db 0xc7, 0x04, 0x95, 0xa0, 0xfe, 0x05, 0x08, 0x01  ;; mov dword [edx*4+0x805fea0],0x1
..@0x804f4b7: db 0x00, 0x00, 0x00
..@0x804f4ba: db 0x39, 0x41, 0x08  ;; cmp [ecx+0x8],eax
..@0x804f4bd: db 0x7f, 0xe9  ;; jg A.code+0x804f4a8
..@0x804f4bf: db 0x03, 0x79, 0x04  ;; add edi,[ecx+0x4]
..@0x804f4c2: sub esi, strict byte 0x1
..@0x804f4c5: db 0x75, 0xba  ;; jnz A.code+0x804f481
..@0x804f4c7: db 0xb9, 0x9c, 0x00, 0x06, 0x08  ;; mov ecx,0x806009c
..@0x804f4cc: db 0xb8, 0x80, 0x00, 0x00, 0x00  ;; mov eax,0x80
..@0x804f4d1: db 0xba, 0x7f, 0x00, 0x00, 0x00  ;; mov edx,0x7f
..@0x804f4d6: db 0x8b, 0x31  ;; mov esi,[ecx]
..@0x804f4d8: db 0x0b, 0x34, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; or esi,[eax*4+0x805fea0]
..@0x804f4df: db 0x74, 0x1d  ;; jz A.code+0x804f4fe
..@0x804f4e1: cmp eax, strict byte 0x55
..@0x804f4e4: db 0x74, 0x39  ;; jz A.code+0x804f51f
..@0x804f4e6: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804f4e8: db 0xc1, 0xe3, 0x04  ;; shl ebx,byte 0x4
..@0x804f4eb: db 0x31, 0xc3  ;; xor ebx,eax
..@0x804f4ed: db 0x81, 0xe3, 0xf0, 0x00, 0x00, 0x00  ;; and ebx,0xf0
..@0x804f4f3: db 0x0f, 0x85, 0x87, 0x0a, 0x00, 0x00  ;; jnz near A.code+0x804ff80
..@0x804f4f9: db 0xbb, 0x03, 0x00, 0x00, 0x00  ;; mov ebx,0x3
..@0x804f4fe: db 0x85, 0xd2  ;; test edx,edx
..@0x804f500: db 0x0f, 0x84, 0x62, 0x1d, 0x00, 0x00  ;; jz near A.code+0x8051268
..@0x804f506: add ecx, strict byte 0x4
..@0x804f509: sub eax, strict byte 0x1
..@0x804f50c: sub edx, strict byte 0x1
..@0x804f50f: db 0x8b, 0x31  ;; mov esi,[ecx]
..@0x804f511: db 0x0b, 0x34, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; or esi,[eax*4+0x805fea0]
..@0x804f518: db 0x74, 0xe4  ;; jz A.code+0x804f4fe
..@0x804f51a: cmp eax, strict byte 0x55
..@0x804f51d: db 0x75, 0xc7  ;; jnz A.code+0x804f4e6
..@0x804f51f: or ebx, strict byte 0x1
..@0x804f522: db 0xeb, 0xe2  ;; jmp short A.code+0x804f506
..@0x804f524: db 0x89, 0xc2  ;; mov edx,eax
..@0x804f526: db 0xc1, 0xfa, 0x08  ;; sar edx,byte 0x8
..@0x804f529: db 0x31, 0xc2  ;; xor edx,eax
..@0x804f52b: db 0x66, 0x85, 0xd2  ;; test dx,dx
..@0x804f52e: db 0x0f, 0x85, 0x3c, 0x1d, 0x00, 0x00  ;; jnz near A.code+0x8051270
..@0x804f534: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x804f539: db 0xc7, 0x04, 0x85, 0xa0, 0xfe, 0x05, 0x08, 0x01  ;; mov dword [eax*4+0x805fea0],0x1
..@0x804f541: db 0x00, 0x00, 0x00
..@0x804f544: jmp strict near R.code+0x804f477
..@0x804f549: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f54b: db 0x0f, 0x85, 0xcc, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x804f41d
..@0x804f551: db 0x85, 0xf6  ;; test esi,esi
..@0x804f553: db 0x0f, 0x85, 0xbb, 0x1d, 0x00, 0x00  ;; jnz near A.code+0x8051314
..@0x804f559: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804f55f: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x804f565: db 0x8b, 0x45, 0x1c  ;; mov eax,[ebp+0x1c]
..@0x804f568: jmp strict near R.code+0x804f02f
..@0x804f56d: db 0x8b, 0x15, 0x6c, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d66c]
..@0x804f573: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804f577: call R.code+0x804ebe0
..@0x804f57c: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x804f580: db 0x85, 0xc0  ;; test eax,eax
..@0x804f582: db 0x0f, 0x84, 0x27, 0x10, 0x00, 0x00  ;; jz near A.code+0x80505af
..@0x804f588: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804f58c: sub esi, strict byte 0x1
..@0x804f58f: db 0x85, 0xf6  ;; test esi,esi
..@0x804f591: db 0x89, 0xf2  ;; mov edx,esi
..@0x804f593: db 0x78, 0x4b  ;; js A.code+0x804f5e0
..@0x804f595: db 0x8b, 0x3d, 0x80, 0xfe, 0x05, 0x08  ;; mov edi,[0x805fe80]
..@0x804f59b: nop
..@0x804f59c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804f5a0: db 0x8b, 0x0c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[edx*4+0x805d680]
..@0x804f5a7: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804f5a9: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x804f5ab: db 0xc1, 0xf8, 0x0b  ;; sar eax,byte 0xb
..@0x804f5ae: db 0xc1, 0xfb, 0x16  ;; sar ebx,byte 0x16
..@0x804f5b1: db 0x31, 0xd8  ;; xor eax,ebx
..@0x804f5b3: db 0x29, 0xc8  ;; sub eax,ecx
..@0x804f5b5: db 0x25, 0xff, 0x07, 0x00, 0x00  ;; and eax,0x7ff
..@0x804f5ba: db 0x8b, 0x0c, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov ecx,[eax*4+0x805da80]
..@0x804f5c1: db 0x89, 0x14, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov [eax*4+0x805da80],edx
..@0x804f5c8: db 0x89, 0x0c, 0x95, 0x80, 0xfa, 0x05, 0x08  ;; mov [edx*4+0x805fa80],ecx
..@0x804f5cf: sub edx, strict byte 0x1
..@0x804f5d2: cmp edx, strict byte -0x1
..@0x804f5d5: db 0x75, 0xc9  ;; jnz A.code+0x804f5a0
..@0x804f5d7: db 0x8d, 0x44, 0x37, 0x01  ;; lea eax,[edi+esi+0x1]
..@0x804f5db: db 0xa3, 0x80, 0xfe, 0x05, 0x08  ;; mov [0x805fe80],eax
..@0x804f5e0: db 0x8b, 0x7d, 0x2c  ;; mov edi,[ebp+0x2c]
..@0x804f5e3: db 0x85, 0xff  ;; test edi,edi
..@0x804f5e5: db 0x0f, 0x85, 0x38, 0x02, 0x00, 0x00  ;; jnz near A.code+0x804f823
..@0x804f5eb: db 0xba, 0xa0, 0xfe, 0x05, 0x08  ;; mov edx,0x805fea0
..@0x804f5f0: db 0x31, 0xc0  ;; xor eax,eax
..@0x804f5f2: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x804f5f7: db 0x89, 0xd7  ;; mov edi,edx
..@0x804f5f9: db 0xf3, 0xab  ;; rep stosd
..@0x804f5fb: db 0x8b, 0x75, 0x0c  ;; mov esi,[ebp+0xc]
..@0x804f5fe: db 0x85, 0xf6  ;; test esi,esi
..@0x804f600: db 0x0f, 0x8e, 0x29, 0x04, 0x00, 0x00  ;; jng near A.code+0x804fa2f
..@0x804f606: db 0x31, 0xff  ;; xor edi,edi
..@0x804f608: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804f60f: call [0x805d668]
..@0x804f615: db 0x85, 0xc0  ;; test eax,eax
..@0x804f617: db 0x0f, 0x85, 0xc4, 0xf9, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x804f61d: db 0x8b, 0x35, 0x60, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d660]
..@0x804f623: db 0x8b, 0x5e, 0x08  ;; mov ebx,[esi+0x8]
..@0x804f626: db 0x85, 0xdb  ;; test ebx,ebx
..@0x804f628: db 0x0f, 0x8e, 0xe9, 0x03, 0x00, 0x00  ;; jng near A.code+0x804fa17
..@0x804f62e: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804f630: db 0xeb, 0x1a  ;; jmp short A.code+0x804f64c
..@0x804f632: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804f638: db 0x83, 0x04, 0x85, 0xa0, 0xfe, 0x05, 0x08, 0x01  ;; add dword [eax*4+0x805fea0],byte +0x1
..@0x804f640: add ebx, strict byte 0x1
..@0x804f643: db 0x39, 0x5e, 0x08  ;; cmp [esi+0x8],ebx
..@0x804f646: db 0x0f, 0x8e, 0xcb, 0x03, 0x00, 0x00  ;; jng near A.code+0x804fa17
..@0x804f64c: db 0x8b, 0x46, 0x04  ;; mov eax,[esi+0x4]
..@0x804f64f: db 0x0f, 0xaf, 0xc7  ;; imul eax,edi
..@0x804f652: db 0x8d, 0x04, 0x98  ;; lea eax,[eax+ebx*4]
..@0x804f655: db 0x03, 0x06  ;; add eax,[esi]
..@0x804f657: db 0x8b, 0x00  ;; mov eax,[eax]
..@0x804f659: call R.code+0x804bcc0
..@0x804f65e: db 0x85, 0xc0  ;; test eax,eax
..@0x804f660: db 0x79, 0xd6  ;; jns A.code+0x804f638
..@0x804f662: db 0xc7, 0x05, 0x6c, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d66c],0x0
..@0x804f66a: db 0x00, 0x00
..@0x804f66c: db 0x89, 0xf5  ;; mov ebp,esi
..@0x804f66e: call R.code+0x804ebe0
..@0x804f673: db 0x8b, 0x46, 0x2c  ;; mov eax,[esi+0x2c]
..@0x804f676: db 0x85, 0xc0  ;; test eax,eax
..@0x804f678: db 0x74, 0x13  ;; jz A.code+0x804f68d
..@0x804f67a: db 0xc7, 0x04, 0x24, 0xa0, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3a0
..@0x804f681: call [funcptr_printf]
..@0x804f687: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804f68d: db 0x8b, 0x4d, 0x0c  ;; mov ecx,[ebp+0xc]
..@0x804f690: db 0x8b, 0x7d, 0x00  ;; mov edi,[ebp+0x0]
..@0x804f693: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804f695: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x804f699: db 0x0f, 0x8e, 0xab, 0x00, 0x00, 0x00  ;; jng near A.code+0x804f74a
..@0x804f69f: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x804f6a6: call [0x805d668]
..@0x804f6ac: db 0x85, 0xc0  ;; test eax,eax
..@0x804f6ae: db 0x0f, 0x85, 0x2d, 0xf9, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x804f6b4: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x804f6ba: db 0x8b, 0x6b, 0x08  ;; mov ebp,[ebx+0x8]
..@0x804f6bd: db 0x85, 0xed  ;; test ebp,ebp
..@0x804f6bf: db 0x7e, 0x79  ;; jng A.code+0x804f73a
..@0x804f6c1: db 0x31, 0xf6  ;; xor esi,esi
..@0x804f6c3: db 0xeb, 0x10  ;; jmp short A.code+0x804f6d5
..@0x804f6c5: db 0x83, 0x04, 0x85, 0xa0, 0xfe, 0x05, 0x08, 0x01  ;; add dword [eax*4+0x805fea0],byte +0x1
..@0x804f6cd: add esi, strict byte 0x1
..@0x804f6d0: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x804f6d3: db 0x7e, 0x65  ;; jng A.code+0x804f73a
..@0x804f6d5: db 0x8b, 0x2c, 0xb7  ;; mov ebp,[edi+esi*4]
..@0x804f6d8: db 0x89, 0xe8  ;; mov eax,ebp
..@0x804f6da: call R.code+0x804bcc0
..@0x804f6df: db 0x85, 0xc0  ;; test eax,eax
..@0x804f6e1: db 0x79, 0xe2  ;; jns A.code+0x804f6c5
..@0x804f6e3: db 0x89, 0xea  ;; mov edx,ebp
..@0x804f6e5: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x804f6e7: db 0xa1, 0x6c, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d66c]
..@0x804f6ec: db 0xc1, 0xf9, 0x16  ;; sar ecx,byte 0x16
..@0x804f6ef: db 0xc1, 0xfa, 0x0b  ;; sar edx,byte 0xb
..@0x804f6f2: add esi, strict byte 0x1
..@0x804f6f5: db 0x83, 0x05, 0x80, 0xfe, 0x05, 0x08, 0x01  ;; add dword [0x805fe80],byte +0x1
..@0x804f6fc: db 0x31, 0xca  ;; xor edx,ecx
..@0x804f6fe: db 0x29, 0xea  ;; sub edx,ebp
..@0x804f700: db 0x81, 0xe2, 0xff, 0x07, 0x00, 0x00  ;; and edx,0x7ff
..@0x804f706: db 0x8b, 0x0c, 0x95, 0x80, 0xda, 0x05, 0x08  ;; mov ecx,[edx*4+0x805da80]
..@0x804f70d: db 0x89, 0x2c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov [eax*4+0x805d680],ebp
..@0x804f714: db 0xc7, 0x04, 0x85, 0xa0, 0xfe, 0x05, 0x08, 0x01  ;; mov dword [eax*4+0x805fea0],0x1
..@0x804f71c: db 0x00, 0x00, 0x00
..@0x804f71f: db 0x89, 0x04, 0x95, 0x80, 0xda, 0x05, 0x08  ;; mov [edx*4+0x805da80],eax
..@0x804f726: db 0x89, 0x0c, 0x85, 0x80, 0xfa, 0x05, 0x08  ;; mov [eax*4+0x805fa80],ecx
..@0x804f72d: add eax, strict byte 0x1
..@0x804f730: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x804f733: db 0xa3, 0x6c, 0xd6, 0x05, 0x08  ;; mov [0x805d66c],eax
..@0x804f738: db 0x7f, 0x9b  ;; jg A.code+0x804f6d5
..@0x804f73a: db 0x03, 0x7b, 0x04  ;; add edi,[ebx+0x4]
..@0x804f73d: db 0x83, 0x6c, 0x24, 0x1c, 0x01  ;; sub dword [esp+0x1c],byte +0x1
..@0x804f742: db 0x0f, 0x85, 0x57, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804f69f
..@0x804f748: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x804f74a: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x804f750: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x804f754: db 0xd1, 0xfb  ;; sar ebx,1
..@0x804f756: db 0x89, 0x5c, 0x24, 0x1c  ;; mov [esp+0x1c],ebx
..@0x804f75a: db 0x0f, 0x84, 0xc3, 0x00, 0x00, 0x00  ;; jz near A.code+0x804f823
..@0x804f760: db 0x89, 0x6c, 0x24, 0x38  ;; mov [esp+0x38],ebp
..@0x804f764: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804f768: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x804f770: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804f774: db 0x2b, 0x54, 0x24, 0x1c  ;; sub edx,[esp+0x1c]
..@0x804f778: db 0xf7, 0xd8  ;; neg eax
..@0x804f77a: db 0x8d, 0x2c, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea ebp,[eax*4+0x0]
..@0x804f781: db 0x85, 0xd2  ;; test edx,edx
..@0x804f783: db 0x89, 0x54, 0x24, 0x30  ;; mov [esp+0x30],edx
..@0x804f787: db 0x0f, 0x8e, 0x88, 0x00, 0x00, 0x00  ;; jng near A.code+0x804f815
..@0x804f78d: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x804f791: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x804f795: db 0x8b, 0x3c, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; mov edi,[eax*4+0x805fea0]
..@0x804f79c: db 0x01, 0xc2  ;; add edx,eax
..@0x804f79e: db 0x8b, 0x34, 0x95, 0xa0, 0xfe, 0x05, 0x08  ;; mov esi,[edx*4+0x805fea0]
..@0x804f7a5: db 0x39, 0xf7  ;; cmp edi,esi
..@0x804f7a7: db 0x7d, 0x59  ;; jnl A.code+0x804f802
..@0x804f7a9: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x804f7ad: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x804f7b1: db 0xc1, 0xe1, 0x02  ;; shl ecx,byte 0x2
..@0x804f7b4: db 0x8d, 0x81, 0xa0, 0xfe, 0x05, 0x08  ;; lea eax,[ecx+0x805fea0]
..@0x804f7ba: db 0x81, 0xc1, 0x80, 0xd6, 0x05, 0x08  ;; add ecx,0x805d680
..@0x804f7c0: db 0xeb, 0x19  ;; jmp short A.code+0x804f7db
..@0x804f7c2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804f7c8: db 0x8b, 0x3c, 0x28  ;; mov edi,[eax+ebp]
..@0x804f7cb: db 0x01, 0xe9  ;; add ecx,ebp
..@0x804f7cd: db 0x89, 0xda  ;; mov edx,ebx
..@0x804f7cf: db 0x8b, 0x30  ;; mov esi,[eax]
..@0x804f7d1: db 0x01, 0xe8  ;; add eax,ebp
..@0x804f7d3: db 0x39, 0xf7  ;; cmp edi,esi
..@0x804f7d5: db 0x7d, 0x2b  ;; jnl A.code+0x804f802
..@0x804f7d7: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804f7db: db 0x89, 0x30  ;; mov [eax],esi
..@0x804f7dd: db 0x8b, 0x31  ;; mov esi,[ecx]
..@0x804f7df: db 0x89, 0x3c, 0x95, 0xa0, 0xfe, 0x05, 0x08  ;; mov [edx*4+0x805fea0],edi
..@0x804f7e6: db 0x8b, 0x3c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov edi,[edx*4+0x805d680]
..@0x804f7ed: db 0x89, 0x39  ;; mov [ecx],edi
..@0x804f7ef: db 0x89, 0x34, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov [edx*4+0x805d680],esi
..@0x804f7f6: db 0x89, 0xde  ;; mov esi,ebx
..@0x804f7f8: db 0x2b, 0x74, 0x24, 0x1c  ;; sub esi,[esp+0x1c]
..@0x804f7fc: db 0x89, 0x74, 0x24, 0x24  ;; mov [esp+0x24],esi
..@0x804f800: db 0x79, 0xc6  ;; jns A.code+0x804f7c8
..@0x804f802: db 0x83, 0x44, 0x24, 0x28, 0x01  ;; add dword [esp+0x28],byte +0x1
..@0x804f807: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x804f80b: db 0x39, 0x7c, 0x24, 0x28  ;; cmp [esp+0x28],edi
..@0x804f80f: db 0x0f, 0x85, 0x78, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804f78d
..@0x804f815: db 0xd1, 0x7c, 0x24, 0x1c  ;; sar dword [esp+0x1c],1
..@0x804f819: db 0x0f, 0x85, 0x45, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804f764
..@0x804f81f: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x804f823: db 0x8b, 0x55, 0x30  ;; mov edx,[ebp+0x30]
..@0x804f826: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804f82a: db 0x85, 0xd2  ;; test edx,edx
..@0x804f82c: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x804f830: db 0x74, 0x46  ;; jz A.code+0x804f878
..@0x804f832: db 0x89, 0xf0  ;; mov eax,esi
..@0x804f834: sub eax, strict byte 0x1
..@0x804f837: db 0x78, 0x34  ;; js A.code+0x804f86d
..@0x804f839: db 0x8b, 0x0c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[eax*4+0x805d680]
..@0x804f840: db 0x31, 0xd1  ;; xor ecx,edx
..@0x804f842: db 0x81, 0xe1, 0xff, 0xff, 0xff, 0x00  ;; and ecx,0xffffff
..@0x804f848: db 0x75, 0x1b  ;; jnz A.code+0x804f865
..@0x804f84a: jmp strict near R.code+0x8051295
..@0x804f84f: nop
..@0x804f850: db 0x8b, 0x0c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[eax*4+0x805d680]
..@0x804f857: db 0x31, 0xd1  ;; xor ecx,edx
..@0x804f859: db 0x81, 0xe1, 0xff, 0xff, 0xff, 0x00  ;; and ecx,0xffffff
..@0x804f85f: db 0x0f, 0x84, 0x23, 0x1a, 0x00, 0x00  ;; jz near A.code+0x8051288
..@0x804f865: sub eax, strict byte 0x1
..@0x804f868: cmp eax, strict byte -0x1
..@0x804f86b: db 0x75, 0xe3  ;; jnz A.code+0x804f850
..@0x804f86d: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x804f871: add esi, strict byte 0x1
..@0x804f874: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x804f878: db 0xb8, 0x03, 0x00, 0x00, 0x00  ;; mov eax,0x3
..@0x804f87d: db 0xb9, 0x01, 0x00, 0x00, 0x00  ;; mov ecx,0x1
..@0x804f882: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x804f887: db 0x89, 0xd3  ;; mov ebx,edx
..@0x804f889: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x804f88b: db 0x39, 0x5c, 0x24, 0x28  ;; cmp [esp+0x28],ebx
..@0x804f88f: db 0x7e, 0x07  ;; jng A.code+0x804f898
..@0x804f891: db 0x01, 0xc9  ;; add ecx,ecx
..@0x804f893: sub eax, strict byte 0x1
..@0x804f896: db 0x75, 0xef  ;; jnz A.code+0x804f887
..@0x804f898: db 0xa1, 0x78, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d678]
..@0x804f89d: db 0x8d, 0x50, 0xff  ;; lea edx,[eax-0x1]
..@0x804f8a0: cmp edx, strict byte 0x1
..@0x804f8a3: db 0x0f, 0x86, 0x4e, 0x01, 0x00, 0x00  ;; jna near A.code+0x804f9f7
..@0x804f8a9: cmp eax, strict byte 0x4
..@0x804f8ac: db 0x0f, 0x84, 0x45, 0x01, 0x00, 0x00  ;; jz near A.code+0x804f9f7
..@0x804f8b2: cmp eax, strict byte 0x8
..@0x804f8b5: db 0x0f, 0x84, 0x3c, 0x01, 0x00, 0x00  ;; jz near A.code+0x804f9f7
..@0x804f8bb: db 0x89, 0x0d, 0x78, 0xd6, 0x05, 0x08  ;; mov [0x805d678],ecx
..@0x804f8c1: db 0x8b, 0x45, 0x2c  ;; mov eax,[ebp+0x2c]
..@0x804f8c4: db 0x85, 0xc0  ;; test eax,eax
..@0x804f8c6: db 0x75, 0x70  ;; jnz A.code+0x804f938
..@0x804f8c8: db 0x83, 0x7c, 0x24, 0x20, 0x01  ;; cmp dword [esp+0x20],byte +0x1
..@0x804f8cd: db 0x7e, 0x69  ;; jng A.code+0x804f938
..@0x804f8cf: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x804f8d4: db 0x31, 0xc0  ;; xor eax,eax
..@0x804f8d6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804f8d9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804f8e0: db 0x8b, 0x0c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[eax*4+0x805d680]
..@0x804f8e7: db 0x81, 0xf9, 0xff, 0xff, 0xff, 0xfe  ;; cmp ecx,0xfeffffff
..@0x804f8ed: db 0x76, 0x39  ;; jna A.code+0x804f928
..@0x804f8ef: db 0x8b, 0x1c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov ebx,[edx*4+0x805d680]
..@0x804f8f6: db 0x81, 0xfb, 0xff, 0xff, 0xff, 0xfe  ;; cmp ebx,0xfeffffff
..@0x804f8fc: db 0x77, 0x2a  ;; ja A.code+0x804f928
..@0x804f8fe: db 0x8b, 0x34, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; mov esi,[eax*4+0x805fea0]
..@0x804f905: db 0x89, 0x1c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov [eax*4+0x805d680],ebx
..@0x804f90c: db 0x8b, 0x3c, 0x95, 0xa0, 0xfe, 0x05, 0x08  ;; mov edi,[edx*4+0x805fea0]
..@0x804f913: db 0x89, 0x0c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov [edx*4+0x805d680],ecx
..@0x804f91a: db 0x89, 0x3c, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; mov [eax*4+0x805fea0],edi
..@0x804f921: db 0x89, 0x34, 0x95, 0xa0, 0xfe, 0x05, 0x08  ;; mov [edx*4+0x805fea0],esi
..@0x804f928: add eax, strict byte 0x1
..@0x804f92b: db 0x39, 0xd0  ;; cmp eax,edx
..@0x804f92d: db 0x75, 0xb1  ;; jnz A.code+0x804f8e0
..@0x804f92f: db 0x8d, 0x50, 0x01  ;; lea edx,[eax+0x1]
..@0x804f932: db 0x3b, 0x54, 0x24, 0x20  ;; cmp edx,[esp+0x20]
..@0x804f936: db 0x75, 0x9c  ;; jnz A.code+0x804f8d4
..@0x804f938: db 0x8b, 0x1d, 0x70, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d670]
..@0x804f93e: jmp strict near R.code+0x804f093
..@0x804f943: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804f947: db 0x3b, 0x5d, 0x14  ;; cmp ebx,[ebp+0x14]
..@0x804f94a: db 0x7e, 0x30  ;; jng A.code+0x804f97c
..@0x804f94c: db 0x8b, 0x45, 0x10  ;; mov eax,[ebp+0x10]
..@0x804f94f: db 0x89, 0x5d, 0x14  ;; mov [ebp+0x14],ebx
..@0x804f952: db 0x85, 0xc0  ;; test eax,eax
..@0x804f954: db 0x74, 0x0f  ;; jz A.code+0x804f965
..@0x804f956: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804f959: call B.code+prog_free
..@0x804f95e: db 0x8b, 0x5d, 0x14  ;; mov ebx,[ebp+0x14]
..@0x804f961: db 0x89, 0x5c, 0x24, 0x24  ;; mov [esp+0x24],ebx
..@0x804f965: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x804f969: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x804f96c: call B.code+prog_malloc
..@0x804f971: db 0x85, 0xc0  ;; test eax,eax
..@0x804f973: db 0x89, 0x45, 0x10  ;; mov [ebp+0x10],eax
..@0x804f976: db 0x0f, 0x84, 0x26, 0x19, 0x00, 0x00  ;; jz near A.code+0x80512a2
..@0x804f97c: db 0x8b, 0x3d, 0x70, 0xd6, 0x05, 0x08  ;; mov edi,[0x805d670]
..@0x804f982: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x804f985: cmp edi, strict byte 0x6
..@0x804f988: db 0x0f, 0x87, 0x28, 0x18, 0x00, 0x00  ;; ja near A.code+0x80511b6
..@0x804f98e: db 0xff, 0x24, 0xbd, 0x50, 0xb6, 0x05, 0x08  ;; jmp [edi*4+code_ptr_0x805b650]
..@0x804f995: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804f998: db 0x8d, 0x44, 0x24, 0x7c  ;; lea eax,[esp+0x7c]
..@0x804f99c: db 0xc7, 0x44, 0x24, 0x7c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x7c],0x0
..@0x804f9a4: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804f9a8: db 0x8d, 0x44, 0x24, 0x6c  ;; lea eax,[esp+0x6c]
..@0x804f9ac: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804f9af: db 0xc7, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x80],0x0
..@0x804f9b7: db 0x00, 0x00, 0x00
..@0x804f9ba: call B.code+gettimeofday
..@0x804f9bf: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x804f9c5: jmp strict near R.code+0x804f19a
..@0x804f9ca: db 0x89, 0x5d, 0x14  ;; mov [ebp+0x14],ebx
..@0x804f9cd: jmp strict near R.code+0x804f181
..@0x804f9d2: db 0xa1, 0x70, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d670]
..@0x804f9d7: db 0xff, 0x24, 0x85, 0x6c, 0xb6, 0x05, 0x08  ;; jmp [eax*4+code_ptr_0x805b66c]
..@0x804f9de: db 0x89, 0xc8  ;; mov eax,ecx
..@0x804f9e0: db 0x89, 0xf2  ;; mov edx,esi
..@0x804f9e2: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x804f9e5: or edx, strict byte 0x2
..@0x804f9e8: db 0x31, 0xc8  ;; xor eax,ecx
..@0x804f9ea: db 0xa9, 0x00, 0xff, 0xff, 0x00  ;; test eax,0xffff00
..@0x804f9ef: db 0x0f, 0x45, 0xf2  ;; cmovnz esi,edx
..@0x804f9f2: jmp strict near R.code+0x804ef1d
..@0x804f9f7: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x804f9f9: db 0x0f, 0x8d, 0xc2, 0xfe, 0xff, 0xff  ;; jnl near A.code+0x804f8c1
..@0x804f9ff: db 0xc7, 0x04, 0x24, 0x78, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b378
..@0x804fa06: call [funcptr_printf]
..@0x804fa0c: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x804fa12: jmp strict near R.code+0x804efe7
..@0x804fa17: add edi, strict byte 0x1
..@0x804fa1a: db 0x39, 0x7e, 0x0c  ;; cmp [esi+0xc],edi
..@0x804fa1d: db 0x0f, 0x8f, 0xe5, 0xfb, 0xff, 0xff  ;; jg near A.code+0x804f608
..@0x804fa23: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x804fa29: db 0x89, 0xf5  ;; mov ebp,esi
..@0x804fa2b: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x804fa2f: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x804fa33: db 0x31, 0xd2  ;; xor edx,edx
..@0x804fa35: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804fa37: db 0x7e, 0x30  ;; jng A.code+0x804fa69
..@0x804fa39: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x804fa3d: db 0x31, 0xc0  ;; xor eax,eax
..@0x804fa3f: db 0x8b, 0x0c, 0x85, 0xa0, 0xfe, 0x05, 0x08  ;; mov ecx,[eax*4+0x805fea0]
..@0x804fa46: db 0x85, 0xc9  ;; test ecx,ecx
..@0x804fa48: db 0x74, 0x18  ;; jz A.code+0x804fa62
..@0x804fa4a: db 0x8b, 0x34, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov esi,[eax*4+0x805d680]
..@0x804fa51: db 0x89, 0x0c, 0x95, 0xa0, 0xfe, 0x05, 0x08  ;; mov [edx*4+0x805fea0],ecx
..@0x804fa58: db 0x89, 0x34, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov [edx*4+0x805d680],esi
..@0x804fa5f: add edx, strict byte 0x1
..@0x804fa62: add eax, strict byte 0x1
..@0x804fa65: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x804fa67: db 0x75, 0xd6  ;; jnz A.code+0x804fa3f
..@0x804fa69: db 0x89, 0x15, 0x6c, 0xd6, 0x05, 0x08  ;; mov [0x805d66c],edx
..@0x804fa6f: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804fa73: jmp strict near R.code+0x804f823
..@0x804fa78: nop
..@0x804fa79: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804fa80: and esi, strict byte 0x2
..@0x804fa83: db 0x0f, 0x84, 0xd0, 0xfa, 0xff, 0xff  ;; jz near A.code+0x804f559
..@0x804fa89: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x804fa8d: db 0x8b, 0x84, 0x94, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+edx*4+0x84]
..@0x804fa94: db 0xc7, 0x04, 0x24, 0x24, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b324
..@0x804fa9b: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x804fa9f: call [funcptr_printf]
..@0x804faa5: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x804faab: jmp strict near R.code+0x804efe7
..@0x804fab0: db 0x8b, 0x15, 0xa8, 0x06, 0x06, 0x08  ;; mov edx,[0x80606a8]
..@0x804fab6: cmp eax, strict byte 0x1
..@0x804fab9: db 0xc7, 0x05, 0xc4, 0x10, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80610c4],0x0
..@0x804fac1: db 0x00, 0x00
..@0x804fac3: db 0xc7, 0x05, 0xac, 0x06, 0x06, 0x08, 0x01, 0x00  ;; mov dword [0x80606ac],0x1
..@0x804facb: db 0x00, 0x00
..@0x804facd: db 0x89, 0x15, 0xc8, 0x10, 0x06, 0x08  ;; mov [0x80610c8],edx
..@0x804fad3: db 0x0f, 0x84, 0xe4, 0x08, 0x00, 0x00  ;; jz near A.code+0x80503bd
..@0x804fad9: db 0x3d, 0x00, 0x08, 0x00, 0x00  ;; cmp eax,0x800
..@0x804fade: db 0x7e, 0x07  ;; jng A.code+0x804fae7
..@0x804fae0: db 0xc7, 0x43, 0x54, 0x00, 0x08, 0x00, 0x00  ;; mov dword [ebx+0x54],0x800
..@0x804fae7: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x804faec: cmp edx, strict byte 0x1
..@0x804faef: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x804faf3: db 0x0f, 0x8e, 0xd8, 0x09, 0x00, 0x00  ;; jng near A.code+0x80504d1
..@0x804faf9: db 0xb9, 0xd0, 0x10, 0x06, 0x08  ;; mov ecx,0x80610d0
..@0x804fafe: call R.code+0x804e8b0
..@0x804fb03: db 0x85, 0xc0  ;; test eax,eax
..@0x804fb05: db 0xa3, 0xc0, 0x10, 0x06, 0x08  ;; mov [0x80610c0],eax
..@0x804fb0a: db 0x0f, 0x88, 0x9a, 0xf8, 0xff, 0xff  ;; js near A.code+0x804f3aa
..@0x804fb10: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x804fb16: db 0x8b, 0x15, 0xac, 0x06, 0x06, 0x08  ;; mov edx,[0x80606ac]
..@0x804fb1c: db 0x8b, 0x0d, 0xa4, 0x06, 0x06, 0x08  ;; mov ecx,[0x80606a4]
..@0x804fb22: db 0x03, 0x05, 0xc4, 0x10, 0x06, 0x08  ;; add eax,[0x80610c4]
..@0x804fb28: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x804fb2c: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x804fb30: db 0x89, 0x4c, 0x24, 0x30  ;; mov [esp+0x30],ecx
..@0x804fb34: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x804fb38: db 0xa3, 0xc0, 0x10, 0x06, 0x08  ;; mov [0x80610c0],eax
..@0x804fb3d: db 0x39, 0x73, 0x54  ;; cmp [ebx+0x54],esi
..@0x804fb40: db 0x0f, 0x8e, 0x80, 0x09, 0x00, 0x00  ;; jng near A.code+0x80504c6
..@0x804fb46: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x804fb4a: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x804fb4e: db 0x89, 0xf8  ;; mov eax,edi
..@0x804fb50: db 0xdd, 0x05, 0xd0, 0x10, 0x06, 0x08  ;; fld qword [0x80610d0]
..@0x804fb56: sub eax, strict byte 0x1
..@0x804fb59: db 0xdd, 0x54, 0x24, 0x60  ;; fst qword [esp+0x60]
..@0x804fb5d: db 0x0f, 0x88, 0x5a, 0x09, 0x00, 0x00  ;; js near A.code+0x80504bd
..@0x804fb63: db 0x69, 0xd0, 0x18, 0x0a, 0x00, 0x00  ;; imul edx,eax,dword 0xa18
..@0x804fb69: db 0x31, 0xf6  ;; xor esi,esi
..@0x804fb6b: db 0x81, 0xc2, 0xd0, 0x10, 0x06, 0x08  ;; add edx,0x80610d0
..@0x804fb71: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804fb78: db 0xdd, 0x02  ;; fld qword [edx]
..@0x804fb7a: db 0xdb, 0xe9  ;; fucomi st1
..@0x804fb7c: db 0x76, 0x0a  ;; jna A.code+0x804fb88
..@0x804fb7e: db 0xdd, 0xd9  ;; fstp st1
..@0x804fb80: db 0x89, 0xc6  ;; mov esi,eax
..@0x804fb82: db 0xeb, 0x06  ;; jmp short A.code+0x804fb8a
..@0x804fb84: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x804fb88: db 0xdd, 0xd8  ;; fstp st0
..@0x804fb8a: sub eax, strict byte 0x1
..@0x804fb8d: db 0x81, 0xea, 0x18, 0x0a, 0x00, 0x00  ;; sub edx,0xa18
..@0x804fb93: cmp eax, strict byte -0x1
..@0x804fb96: db 0x75, 0xe0  ;; jnz A.code+0x804fb78
..@0x804fb98: db 0xdd, 0x5c, 0x24, 0x60  ;; fstp qword [esp+0x60]
..@0x804fb9c: db 0x69, 0xc6, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,esi,dword 0xa18
..@0x804fba2: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804fba6: db 0x05, 0xc0, 0x10, 0x06, 0x08  ;; add eax,0x80610c0
..@0x804fbab: db 0x89, 0xc2  ;; mov edx,eax
..@0x804fbad: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x804fbb1: db 0x8b, 0x40, 0x08  ;; mov eax,[eax+0x8]
..@0x804fbb4: db 0x89, 0xc1  ;; mov ecx,eax
..@0x804fbb6: db 0x2b, 0x4a, 0x04  ;; sub ecx,[edx+0x4]
..@0x804fbb9: cmp ecx, strict byte 0x1
..@0x804fbbc: db 0x0f, 0x8e, 0xde, 0x08, 0x00, 0x00  ;; jng near A.code+0x80504a0
..@0x804fbc2: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804fbc6: db 0x69, 0xcf, 0x18, 0x0a, 0x00, 0x00  ;; imul ecx,edi,dword 0xa18
..@0x804fbcc: db 0x89, 0x81, 0xc8, 0x10, 0x06, 0x08  ;; mov [ecx+0x80610c8],eax
..@0x804fbd2: db 0x8b, 0x9a, 0xc0, 0x10, 0x06, 0x08  ;; mov ebx,[edx+0x80610c0]
..@0x804fbd8: db 0x89, 0xc2  ;; mov edx,eax
..@0x804fbda: db 0x31, 0xc0  ;; xor eax,eax
..@0x804fbdc: db 0x29, 0xda  ;; sub edx,ebx
..@0x804fbde: db 0x89, 0x99, 0xc4, 0x10, 0x06, 0x08  ;; mov [ecx+0x80610c4],ebx
..@0x804fbe4: cmp edx, strict byte 0x1
..@0x804fbe7: db 0x7e, 0x15  ;; jng A.code+0x804fbfe
..@0x804fbe9: db 0x8d, 0x44, 0x1d, 0x00  ;; lea eax,[ebp+ebx+0x0]
..@0x804fbed: db 0x81, 0xc1, 0xd0, 0x10, 0x06, 0x08  ;; add ecx,0x80610d0
..@0x804fbf3: call R.code+0x804e8b0
..@0x804fbf8: db 0x8b, 0x2d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebp,[0x80606a4]
..@0x804fbfe: db 0x69, 0xff, 0x18, 0x0a, 0x00, 0x00  ;; imul edi,edi,dword 0xa18
..@0x804fc04: db 0x89, 0x87, 0xc0, 0x10, 0x06, 0x08  ;; mov [edi+0x80610c0],eax
..@0x804fc0a: db 0x8b, 0x3d, 0xac, 0x06, 0x06, 0x08  ;; mov edi,[0x80606ac]
..@0x804fc10: db 0x69, 0xc7, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,edi,dword 0xa18
..@0x804fc16: db 0x8b, 0x90, 0xc0, 0x10, 0x06, 0x08  ;; mov edx,[eax+0x80610c0]
..@0x804fc1c: db 0x85, 0xd2  ;; test edx,edx
..@0x804fc1e: db 0x0f, 0x88, 0x4c, 0x09, 0x00, 0x00  ;; js near A.code+0x8050570
..@0x804fc24: db 0x03, 0x90, 0xc4, 0x10, 0x06, 0x08  ;; add edx,[eax+0x80610c4]
..@0x804fc2a: db 0x69, 0xde, 0x18, 0x0a, 0x00, 0x00  ;; imul ebx,esi,dword 0xa18
..@0x804fc30: db 0x89, 0x90, 0xc0, 0x10, 0x06, 0x08  ;; mov [eax+0x80610c0],edx
..@0x804fc36: db 0x8b, 0x83, 0xc4, 0x10, 0x06, 0x08  ;; mov eax,[ebx+0x80610c4]
..@0x804fc3c: db 0x8b, 0x93, 0xc0, 0x10, 0x06, 0x08  ;; mov edx,[ebx+0x80610c0]
..@0x804fc42: db 0x89, 0x93, 0xc8, 0x10, 0x06, 0x08  ;; mov [ebx+0x80610c8],edx
..@0x804fc48: db 0x29, 0xc2  ;; sub edx,eax
..@0x804fc4a: cmp edx, strict byte 0x1
..@0x804fc4d: db 0x0f, 0x8e, 0x15, 0x03, 0x00, 0x00  ;; jng near A.code+0x804ff68
..@0x804fc53: db 0x8d, 0x8b, 0xd0, 0x10, 0x06, 0x08  ;; lea ecx,[ebx+0x80610d0]
..@0x804fc59: db 0x01, 0xe8  ;; add eax,ebp
..@0x804fc5b: call R.code+0x804e8b0
..@0x804fc60: db 0x85, 0xc0  ;; test eax,eax
..@0x804fc62: db 0x89, 0x83, 0xc0, 0x10, 0x06, 0x08  ;; mov [ebx+0x80610c0],eax
..@0x804fc68: db 0x0f, 0x88, 0x3c, 0xf7, 0xff, 0xff  ;; js near A.code+0x804f3aa
..@0x804fc6e: db 0x8b, 0x3d, 0xac, 0x06, 0x06, 0x08  ;; mov edi,[0x80606ac]
..@0x804fc74: db 0x8b, 0x2d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebp,[0x80606a4]
..@0x804fc7a: db 0x69, 0xf6, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,esi,dword 0xa18
..@0x804fc80: add edi, strict byte 0x1
..@0x804fc83: db 0x89, 0x3d, 0xac, 0x06, 0x06, 0x08  ;; mov [0x80606ac],edi
..@0x804fc89: db 0x03, 0x86, 0xc4, 0x10, 0x06, 0x08  ;; add eax,[esi+0x80610c4]
..@0x804fc8f: db 0x89, 0x86, 0xc0, 0x10, 0x06, 0x08  ;; mov [esi+0x80610c0],eax
..@0x804fc95: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x804fc9a: db 0x3b, 0x78, 0x54  ;; cmp edi,[eax+0x54]
..@0x804fc9d: db 0x89, 0xc3  ;; mov ebx,eax
..@0x804fc9f: db 0x0f, 0x8c, 0xa9, 0xfe, 0xff, 0xff  ;; jl near A.code+0x804fb4e
..@0x804fca5: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x804fca9: db 0xd1, 0xff  ;; sar edi,1
..@0x804fcab: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x804fcaf: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x804fcb3: db 0x89, 0x7c, 0x24, 0x1c  ;; mov [esp+0x1c],edi
..@0x804fcb7: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x804fcbb: db 0x85, 0xc0  ;; test eax,eax
..@0x804fcbd: db 0x0f, 0x84, 0x03, 0x07, 0x00, 0x00  ;; jz near A.code+0x80503c6
..@0x804fcc3: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x804fcc7: db 0x2b, 0x44, 0x24, 0x1c  ;; sub eax,[esp+0x1c]
..@0x804fccb: db 0x85, 0xc0  ;; test eax,eax
..@0x804fccd: db 0x89, 0x44, 0x24, 0x40  ;; mov [esp+0x40],eax
..@0x804fcd1: db 0x0f, 0x8e, 0x9a, 0x00, 0x00, 0x00  ;; jng near A.code+0x804fd71
..@0x804fcd7: db 0x69, 0x44, 0x24, 0x1c, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,[esp+0x1c],dword 0xa18
..@0x804fcdf: db 0xc7, 0x44, 0x24, 0x3c, 0xc8, 0x10, 0x06, 0x08  ;; mov dword [esp+0x3c],0x80610c8
..@0x804fce7: db 0x69, 0x7c, 0x24, 0x1c, 0xe8, 0xf5, 0xff, 0xff  ;; imul edi,[esp+0x1c],dword 0xfffff5e8
..@0x804fcef: db 0xc7, 0x44, 0x24, 0x34, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x34],0x0
..@0x804fcf7: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x804fcfb: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x804fcff: db 0x8b, 0x6c, 0x24, 0x28  ;; mov ebp,[esp+0x28]
..@0x804fd03: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x804fd07: db 0x8b, 0x0a  ;; mov ecx,[edx]
..@0x804fd09: db 0x8b, 0x1c, 0x2a  ;; mov ebx,[edx+ebp]
..@0x804fd0c: db 0x03, 0x74, 0x24, 0x1c  ;; add esi,[esp+0x1c]
..@0x804fd10: db 0x39, 0xcb  ;; cmp ebx,ecx
..@0x804fd12: db 0x7d, 0x46  ;; jnl A.code+0x804fd5a
..@0x804fd14: db 0x69, 0x44, 0x24, 0x34, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,[esp+0x34],dword 0xa18
..@0x804fd1c: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x804fd20: db 0x05, 0xc8, 0x10, 0x06, 0x08  ;; add eax,0x80610c8
..@0x804fd25: db 0xeb, 0x1d  ;; jmp short A.code+0x804fd44
..@0x804fd27: db 0x89, 0xf6  ;; mov esi,esi
..@0x804fd29: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x804fd30: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x804fd34: db 0x8b, 0x0c, 0x38  ;; mov ecx,[eax+edi]
..@0x804fd37: db 0x01, 0xf8  ;; add eax,edi
..@0x804fd39: db 0x8b, 0x1c, 0x30  ;; mov ebx,[eax+esi]
..@0x804fd3c: db 0x89, 0xd6  ;; mov esi,edx
..@0x804fd3e: db 0x39, 0xd9  ;; cmp ecx,ebx
..@0x804fd40: db 0x7e, 0x18  ;; jng A.code+0x804fd5a
..@0x804fd42: db 0x89, 0xea  ;; mov edx,ebp
..@0x804fd44: db 0x89, 0xd5  ;; mov ebp,edx
..@0x804fd46: db 0x69, 0xf6, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,esi,dword 0xa18
..@0x804fd4c: db 0x89, 0x18  ;; mov [eax],ebx
..@0x804fd4e: db 0x2b, 0x6c, 0x24, 0x1c  ;; sub ebp,[esp+0x1c]
..@0x804fd52: db 0x89, 0x8e, 0xc8, 0x10, 0x06, 0x08  ;; mov [esi+0x80610c8],ecx
..@0x804fd58: db 0x79, 0xd6  ;; jns A.code+0x804fd30
..@0x804fd5a: db 0x83, 0x44, 0x24, 0x34, 0x01  ;; add dword [esp+0x34],byte +0x1
..@0x804fd5f: db 0x8b, 0x6c, 0x24, 0x40  ;; mov ebp,[esp+0x40]
..@0x804fd63: db 0x81, 0x44, 0x24, 0x3c, 0x18, 0x0a, 0x00, 0x00  ;; add dword [esp+0x3c],0xa18
..@0x804fd6b: db 0x39, 0x6c, 0x24, 0x34  ;; cmp [esp+0x34],ebp
..@0x804fd6f: db 0x75, 0x8a  ;; jnz A.code+0x804fcfb
..@0x804fd71: db 0xd1, 0x7c, 0x24, 0x1c  ;; sar dword [esp+0x1c],1
..@0x804fd75: db 0x0f, 0x85, 0x48, 0xff, 0xff, 0xff  ;; jnz near A.code+0x804fcc3
..@0x804fd7b: jmp strict near R.code+0x80503c6
..@0x804fd80: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x804fd87: call B.code+time
..@0x804fd8c: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x804fd94: db 0xc7, 0x04, 0x24, 0x4b, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_dev_urandom
..@0x804fd9b: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax  ; Save current timestamp.
..@0x804fd9f: call B.code+fopen
..@0x804fda4: db 0x85, 0xc0  ;; test eax,eax
..@0x804fda6: db 0x89, 0xc7  ;; mov edi,eax
..@0x804fda8: db 0x74, 0x28  ;; jz A.code+0x804fdd2
..@0x804fdaa: db 0x8d, 0x6c, 0x24, 0x5c  ;; lea ebp,[esp+0x5c]
..@0x804fdae: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x804fdb2: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x804fdba: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x804fdc2: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x804fdc5: call B.code+fread
..@0x804fdca: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x804fdcd: call B.code+fclose
..@0x804fdd2: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]  ; Use current timestamp above as random seed.
..@0x804fdd6: db 0x31, 0xff  ;; xor edi,edi
..@0x804fdd8: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x804fddb: call B.code+srand  ; srand(time(NULL) or 4 bytes from /dev/urandom);
..@0x804fde0: call B.code+rand
..@0x804fde5: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x804fdea: db 0x05, 0x00, 0x40, 0x00, 0x00  ;; add eax,0x4000
..@0x804fdef: db 0x89, 0x84, 0xbb, 0xc0, 0x06, 0x06, 0x08  ;; mov [ebx+edi*4+0x80606c0],eax
..@0x804fdf6: add edi, strict byte 0x1
..@0x804fdf9: db 0x81, 0xff, 0x1e, 0x01, 0x00, 0x00  ;; cmp edi,0x11e
..@0x804fdff: db 0x75, 0xdf  ;; jnz A.code+0x804fde0
..@0x804fe01: db 0x69, 0xc6, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,esi,dword 0xa18
..@0x804fe07: db 0x66, 0xbf, 0x20, 0x01  ;; mov di,0x120
..@0x804fe0b: db 0xc7, 0x80, 0x38, 0x0b, 0x06, 0x08, 0x00, 0x00  ;; mov dword [eax+0x8060b38],0x0
..@0x804fe13: db 0x00, 0x00
..@0x804fe15: db 0xc7, 0x83, 0x3c, 0x0b, 0x06, 0x08, 0x00, 0x00  ;; mov dword [ebx+0x8060b3c],0x0
..@0x804fe1d: db 0x00, 0x00
..@0x804fe1f: nop
..@0x804fe20: call B.code+rand
..@0x804fe25: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x804fe2a: db 0x05, 0x00, 0x40, 0x00, 0x00  ;; add eax,0x4000
..@0x804fe2f: db 0x89, 0x84, 0xbb, 0xc0, 0x06, 0x06, 0x08  ;; mov [ebx+edi*4+0x80606c0],eax
..@0x804fe36: add edi, strict byte 0x1
..@0x804fe39: db 0x81, 0xff, 0x3e, 0x01, 0x00, 0x00  ;; cmp edi,0x13e
..@0x804fe3f: db 0x75, 0xdf  ;; jnz A.code+0x804fe20
..@0x804fe41: db 0x69, 0xfe, 0x18, 0x0a, 0x00, 0x00  ;; imul edi,esi,dword 0xa18
..@0x804fe47: db 0xba, 0x1e, 0x01, 0x00, 0x00  ;; mov edx,0x11e
..@0x804fe4c: db 0xc7, 0x04, 0x24, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp],0x10
..@0x804fe53: db 0xc7, 0x83, 0xb8, 0x0b, 0x06, 0x08, 0x00, 0x00  ;; mov dword [ebx+0x8060bb8],0x0
..@0x804fe5b: db 0x00, 0x00
..@0x804fe5d: db 0xc7, 0x83, 0xbc, 0x0b, 0x06, 0x08, 0x00, 0x00  ;; mov dword [ebx+0x8060bbc],0x0
..@0x804fe65: db 0x00, 0x00
..@0x804fe67: db 0x8d, 0x8f, 0xc0, 0x0b, 0x06, 0x08  ;; lea ecx,[edi+0x8060bc0]
..@0x804fe6d: db 0x8d, 0x87, 0xc0, 0x06, 0x06, 0x08  ;; lea eax,[edi+0x80606c0]
..@0x804fe73: call R.code+0x804bd30
..@0x804fe78: db 0x8d, 0x8f, 0x40, 0x10, 0x06, 0x08  ;; lea ecx,[edi+0x8061040]
..@0x804fe7e: db 0xba, 0x1e, 0x00, 0x00, 0x00  ;; mov edx,0x1e
..@0x804fe83: db 0x8d, 0x87, 0x40, 0x0b, 0x06, 0x08  ;; lea eax,[edi+0x8060b40]
..@0x804fe89: db 0xc7, 0x04, 0x24, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp],0x10
..@0x804fe90: call R.code+0x804bd30
..@0x804fe95: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x804fe9b: add esi, strict byte 0x1
..@0x804fe9e: db 0x81, 0xc3, 0x18, 0x0a, 0x00, 0x00  ;; add ebx,0xa18
..@0x804fea4: db 0x39, 0x35, 0xac, 0x06, 0x06, 0x08  ;; cmp [0x80606ac],esi
..@0x804feaa: db 0x0f, 0x8f, 0x92, 0x03, 0x00, 0x00  ;; jg near A.code+0x8050242
..@0x804feb0: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x804feb4: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x804feb8: db 0xc7, 0x44, 0x24, 0x34, 0xd0, 0xd6, 0x04, 0x08  ;; mov dword [esp+0x34],A.code+0x804d6d0
..@0x804fec0: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xd0, 0xd6  ;; mov dword [0x80606a0],A.code+0x804d6d0
..@0x804fec8: db 0x04, 0x08
..@0x804feca: db 0x8b, 0x7a, 0x74  ;; mov edi,[edx+0x74]
..@0x804fecd: db 0x85, 0xff  ;; test edi,edi
..@0x804fecf: db 0x78, 0x47  ;; js A.code+0x804ff18
..@0x804fed1: db 0x8b, 0x35, 0xac, 0x06, 0x06, 0x08  ;; mov esi,[0x80606ac]
..@0x804fed7: db 0x85, 0xf6  ;; test esi,esi
..@0x804fed9: db 0x7e, 0x3d  ;; jng A.code+0x804ff18
..@0x804fedb: db 0x69, 0xf6, 0x18, 0x0a, 0x00, 0x00  ;; imul esi,esi,dword 0xa18
..@0x804fee1: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x804fee3: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x804fee5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804fee8: db 0x31, 0xc0  ;; xor eax,eax
..@0x804feea: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x804fef0: db 0x8b, 0x94, 0x81, 0xc0, 0x0b, 0x06, 0x08  ;; mov edx,[ecx+eax*4+0x8060bc0]
..@0x804fef7: db 0x88, 0x94, 0x03, 0xc0, 0xc6, 0x56, 0x08  ;; mov [ebx+eax+0x856c6c0],dl
..@0x804fefe: add eax, strict byte 0x1
..@0x804ff01: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x804ff06: db 0x75, 0xe8  ;; jnz A.code+0x804fef0
..@0x804ff08: db 0x81, 0xc1, 0x18, 0x0a, 0x00, 0x00  ;; add ecx,0xa18
..@0x804ff0e: db 0x81, 0xc3, 0x40, 0x01, 0x00, 0x00  ;; add ebx,0x140
..@0x804ff14: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x804ff16: db 0x75, 0xd0  ;; jnz A.code+0x804fee8
..@0x804ff18: db 0xc7, 0x04, 0x24, 0x5e, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b55e
..@0x804ff1f: call [funcptr_printf]
..@0x804ff25: db 0x8b, 0x0d, 0x60, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d660]
..@0x804ff2b: db 0x89, 0x4c, 0x24, 0x20  ;; mov [esp+0x20],ecx
..@0x804ff2f: db 0xc7, 0x41, 0x78, 0xff, 0xff, 0xff, 0xff  ;; mov dword [ecx+0x78],0xffffffff
..@0x804ff36: db 0x8b, 0x0d, 0x70, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d670]
..@0x804ff3c: cmp ecx, strict byte 0x6
..@0x804ff3f: db 0x89, 0x4c, 0x24, 0x40  ;; mov [esp+0x40],ecx
..@0x804ff43: db 0x76, 0x34  ;; jna A.code+0x804ff79
..@0x804ff45: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x804ff49: db 0xc7, 0x04, 0x24, 0xc4, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b3c4
..@0x804ff50: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x804ff54: call [funcptr_printf]
..@0x804ff5a: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x804ff60: jmp strict near R.code+0x804efe7
..@0x804ff65: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x804ff68: db 0xc7, 0x83, 0xc0, 0x10, 0x06, 0x08, 0x00, 0x00  ;; mov dword [ebx+0x80610c0],0x0
..@0x804ff70: db 0x00, 0x00
..@0x804ff72: db 0x31, 0xc0  ;; xor eax,eax
..@0x804ff74: jmp strict near R.code+0x804fc7a
..@0x804ff79: db 0xff, 0x24, 0x8d, 0x88, 0xb6, 0x05, 0x08  ;; jmp [ecx*4+code_ptr_0x805b688]
..@0x804ff80: db 0xbb, 0x08, 0x00, 0x00, 0x00  ;; mov ebx,0x8
..@0x804ff85: db 0x8b, 0x0d, 0x78, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d678]
..@0x804ff8b: db 0x8d, 0x41, 0xff  ;; lea eax,[ecx-0x1]
..@0x804ff8e: cmp eax, strict byte 0x1
..@0x804ff91: db 0x0f, 0x86, 0x9f, 0x00, 0x00, 0x00  ;; jna near A.code+0x8050036
..@0x804ff97: cmp ecx, strict byte 0x4
..@0x804ff9a: db 0x0f, 0x84, 0x96, 0x00, 0x00, 0x00  ;; jz near A.code+0x8050036
..@0x804ffa0: cmp ecx, strict byte 0x8
..@0x804ffa3: db 0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00  ;; jz near A.code+0x8050036
..@0x804ffa9: db 0x89, 0x1d, 0x78, 0xd6, 0x05, 0x08  ;; mov [0x805d678],ebx
..@0x804ffaf: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x804ffb1: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x804ffb6: db 0xd3, 0xe6  ;; shl esi,cl
..@0x804ffb8: cmp ecx, strict byte 0x2
..@0x804ffbb: db 0x89, 0x35, 0x6c, 0xd6, 0x05, 0x08  ;; mov [0x805d66c],esi
..@0x804ffc1: db 0x0f, 0x84, 0x97, 0x12, 0x00, 0x00  ;; jz near A.code+0x805125e
..@0x804ffc7: db 0x7f, 0x57  ;; jg A.code+0x8050020
..@0x804ffc9: cmp ecx, strict byte 0x1
..@0x804ffcc: db 0xb8, 0xff, 0xff, 0xff, 0x00  ;; mov eax,0xffffff
..@0x804ffd1: db 0x0f, 0x44, 0xd8  ;; cmovz ebx,eax
..@0x804ffd4: db 0x85, 0xf6  ;; test esi,esi
..@0x804ffd6: db 0x7e, 0x17  ;; jng A.code+0x804ffef
..@0x804ffd8: db 0xba, 0x00, 0x00, 0x00, 0xff  ;; mov edx,0xff000000
..@0x804ffdd: db 0x31, 0xc0  ;; xor eax,eax
..@0x804ffdf: db 0x89, 0x14, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov [eax*4+0x805d680],edx
..@0x804ffe6: add eax, strict byte 0x1
..@0x804ffe9: db 0x01, 0xda  ;; add edx,ebx
..@0x804ffeb: db 0x39, 0xf0  ;; cmp eax,esi
..@0x804ffed: db 0x75, 0xf0  ;; jnz A.code+0x804ffdf
..@0x804ffef: db 0x8b, 0x0d, 0x7c, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d67c]
..@0x804fff5: cmp ecx, strict byte -0x1
..@0x804fff8: db 0x0f, 0x84, 0x3a, 0xf9, 0xff, 0xff  ;; jz near A.code+0x804f938
..@0x804fffe: db 0x89, 0xca  ;; mov edx,ecx
..@0x8050000: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8050002: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x8050005: db 0xf7, 0xfb  ;; idiv ebx
..@0x8050007: db 0x8b, 0x1d, 0x70, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d670]
..@0x805000d: db 0x89, 0x0c, 0x85, 0x80, 0xd6, 0x05, 0x08  ;; mov [eax*4+0x805d680],ecx
..@0x8050014: jmp strict near R.code+0x804f093
..@0x8050019: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8050020: cmp ecx, strict byte 0x4
..@0x8050023: db 0x0f, 0x84, 0x2b, 0x12, 0x00, 0x00  ;; jz near A.code+0x8051254
..@0x8050029: cmp ecx, strict byte 0x8
..@0x805002c: db 0xb8, 0x01, 0x01, 0x01, 0x00  ;; mov eax,0x10101
..@0x8050031: db 0x0f, 0x44, 0xd8  ;; cmovz ebx,eax
..@0x8050034: db 0xeb, 0x9e  ;; jmp short A.code+0x804ffd4
..@0x8050036: db 0x39, 0xd9  ;; cmp ecx,ebx
..@0x8050038: db 0x0f, 0x8d, 0x73, 0xff, 0xff, 0xff  ;; jnl near A.code+0x804ffb1
..@0x805003e: jmp strict near R.code+0x804f9ff
..@0x8050043: nop
..@0x8050044: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8050048: db 0xa1, 0x78, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d678]
..@0x805004d: db 0xc7, 0x04, 0x24, 0x3b, 0xb1, 0x05, 0x08  ;; mov dword [esp],0x805b13b
..@0x8050054: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8050058: call [funcptr_printf]
..@0x805005e: db 0x8b, 0x15, 0x70, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d670]
..@0x8050064: jmp strict near R.code+0x804f0c4
..@0x8050069: and esi, strict byte 0x4
..@0x805006c: db 0x0f, 0x85, 0x50, 0x12, 0x00, 0x00  ;; jnz near A.code+0x80512c2
..@0x8050072: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x8050078: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x805007e: db 0x85, 0xd2  ;; test edx,edx
..@0x8050080: db 0x8b, 0x45, 0x1c  ;; mov eax,[ebp+0x1c]
..@0x8050083: db 0x0f, 0x89, 0xae, 0xef, 0xff, 0xff  ;; jns near A.code+0x804f037
..@0x8050089: db 0x3d, 0xff, 0x00, 0x00, 0x00  ;; cmp eax,0xff
..@0x805008e: db 0xba, 0x00, 0x04, 0x00, 0x00  ;; mov edx,0x400
..@0x8050093: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x805009b: db 0x00, 0x00
..@0x805009d: db 0x0f, 0x8f, 0xa4, 0xef, 0xff, 0xff  ;; jg near A.code+0x804f047
..@0x80500a3: jmp strict near R.code+0x804f3d0
..@0x80500a8: and esi, strict byte 0x1
..@0x80500ab: db 0x0f, 0x84, 0xa8, 0xf4, 0xff, 0xff  ;; jz near A.code+0x804f559
..@0x80500b1: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x80500b5: db 0x8b, 0x84, 0xbc, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+edi*4+0x84]
..@0x80500bc: db 0xc7, 0x04, 0x24, 0xbc, 0xb2, 0x05, 0x08  ;; mov dword [esp],0x805b2bc
..@0x80500c3: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80500c7: call [funcptr_printf]
..@0x80500cd: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x80500d3: jmp strict near R.code+0x804efe7
..@0x80500d8: nop
..@0x80500d9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80500e0: db 0x81, 0xfb, 0xff, 0xff, 0xff, 0x00  ;; cmp ebx,0xffffff
..@0x80500e6: db 0x77, 0x77  ;; ja A.code+0x805015f
..@0x80500e8: db 0x8b, 0x7d, 0x0c  ;; mov edi,[ebp+0xc]
..@0x80500eb: db 0x8b, 0x6d, 0x00  ;; mov ebp,[ebp+0x0]
..@0x80500ee: db 0x85, 0xff  ;; test edi,edi
..@0x80500f0: db 0x0f, 0x8e, 0x7d, 0xee, 0xff, 0xff  ;; jng near A.code+0x804ef73
..@0x80500f6: db 0x89, 0x74, 0x24, 0x20  ;; mov [esp+0x20],esi
..@0x80500fa: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8050101: call [0x805d668]
..@0x8050107: db 0x85, 0xc0  ;; test eax,eax
..@0x8050109: db 0x0f, 0x85, 0xd2, 0xee, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x805010f: db 0x8b, 0x35, 0x60, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d660]
..@0x8050115: db 0x8b, 0x4e, 0x08  ;; mov ecx,[esi+0x8]
..@0x8050118: db 0x85, 0xc9  ;; test ecx,ecx
..@0x805011a: db 0x7e, 0x4f  ;; jng A.code+0x805016b
..@0x805011c: db 0x8b, 0x1d, 0x7c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d67c]
..@0x8050122: db 0x31, 0xc0  ;; xor eax,eax
..@0x8050124: db 0x89, 0x7c, 0x24, 0x30  ;; mov [esp+0x30],edi
..@0x8050128: db 0xeb, 0x19  ;; jmp short A.code+0x8050143
..@0x805012a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8050130: db 0x81, 0xfa, 0xff, 0xff, 0xff, 0xfe  ;; cmp edx,0xfeffffff
..@0x8050136: db 0x77, 0x04  ;; ja A.code+0x805013c
..@0x8050138: db 0x39, 0xda  ;; cmp edx,ebx
..@0x805013a: db 0x75, 0x1f  ;; jnz A.code+0x805015b
..@0x805013c: add eax, strict byte 0x1
..@0x805013f: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8050141: db 0x74, 0x24  ;; jz A.code+0x8050167
..@0x8050143: db 0x8b, 0x54, 0x85, 0x00  ;; mov edx,[ebp+eax*4+0x0]
..@0x8050147: db 0x89, 0xd7  ;; mov edi,edx
..@0x8050149: db 0x81, 0xe7, 0xff, 0xff, 0xff, 0x00  ;; and edi,0xffffff
..@0x805014f: db 0x39, 0xdf  ;; cmp edi,ebx
..@0x8050151: db 0x75, 0xdd  ;; jnz A.code+0x8050130
..@0x8050153: db 0xf7, 0xc2, 0x00, 0x00, 0x00, 0xff  ;; test edx,0xff000000
..@0x8050159: db 0x74, 0xd5  ;; jz A.code+0x8050130
..@0x805015b: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x805015f: or esi, strict byte 0x1
..@0x8050162: jmp strict near R.code+0x804ef73
..@0x8050167: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x805016b: db 0x03, 0x6e, 0x04  ;; add ebp,[esi+0x4]
..@0x805016e: sub edi, strict byte 0x1
..@0x8050171: db 0x75, 0x87  ;; jnz A.code+0x80500fa
..@0x8050173: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x8050177: jmp strict near R.code+0x804ef73
..@0x805017c: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x805017f: db 0x8d, 0x44, 0x00, 0x06  ;; lea eax,[eax+eax+0x6]
..@0x8050183: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x8050187: db 0x01, 0x44, 0x24, 0x24  ;; add [esp+0x24],eax
..@0x805018b: jmp strict near R.code+0x804f174
..@0x8050190: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8050194: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x805019a: db 0x8d, 0x54, 0x98, 0x18  ;; lea edx,[eax+ebx*4+0x18]
..@0x805019e: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x80501a1: db 0x0f, 0xaf, 0x05, 0x78, 0xd6, 0x05, 0x08  ;; imul eax,[0x805d678]
..@0x80501a8: add eax, strict byte 0x7
..@0x80501ab: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x80501ae: add eax, strict byte 0x6
..@0x80501b1: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x80501b5: db 0x01, 0xd0  ;; add eax,edx
..@0x80501b7: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x80501bb: jmp strict near R.code+0x804f174
..@0x80501c0: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x80501c3: db 0x8d, 0x44, 0x40, 0x06  ;; lea eax,[eax+eax*2+0x6]
..@0x80501c7: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x80501cb: db 0x01, 0x44, 0x24, 0x24  ;; add [esp+0x24],eax
..@0x80501cf: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x80501d3: add eax, strict byte 0x12
..@0x80501d6: db 0x83, 0x3d, 0x7c, 0xd6, 0x05, 0x08, 0xff  ;; cmp dword [0x805d67c],byte -0x1
..@0x80501dd: db 0x0f, 0x44, 0x44, 0x24, 0x24  ;; cmovz eax,[esp+0x24]
..@0x80501e2: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x80501e6: jmp strict near R.code+0x804f174
..@0x80501eb: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x80501ee: db 0x0f, 0xaf, 0x05, 0x78, 0xd6, 0x05, 0x08  ;; imul eax,[0x805d678]
..@0x80501f5: add eax, strict byte 0x7
..@0x80501f8: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x80501fb: add eax, strict byte 0x6
..@0x80501fe: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x8050202: db 0x01, 0x44, 0x24, 0x24  ;; add [esp+0x24],eax
..@0x8050206: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x805020a: add eax, strict byte 0xe
..@0x805020d: db 0x83, 0x3d, 0x7c, 0xd6, 0x05, 0x08, 0xff  ;; cmp dword [0x805d67c],byte -0x1
..@0x8050214: db 0x0f, 0x44, 0x44, 0x24, 0x24  ;; cmovz eax,[esp+0x24]
..@0x8050219: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x805021d: jmp strict near R.code+0x804f174
..@0x8050222: db 0xc7, 0x05, 0xac, 0x06, 0x06, 0x08, 0x01, 0x00  ;; mov dword [0x80606ac],0x1
..@0x805022a: db 0x00, 0x00
..@0x805022c: db 0x8b, 0xab, 0x84, 0x00, 0x00, 0x00  ;; mov ebp,[ebx+0x84]
..@0x8050232: db 0x85, 0xed  ;; test ebp,ebp
..@0x8050234: db 0x0f, 0x85, 0x5a, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8050394
..@0x805023a: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x805023e: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8050240: db 0x31, 0xf6  ;; xor esi,esi
..@0x8050242: db 0x83, 0x7a, 0x4c, 0x02  ;; cmp dword [edx+0x4c],byte +0x2
..@0x8050246: db 0x0f, 0x8f, 0xe6, 0x00, 0x00, 0x00  ;; jg near A.code+0x8050332
..@0x805024c: db 0x8b, 0x7a, 0x50  ;; mov edi,[edx+0x50]
..@0x805024f: db 0x85, 0xff  ;; test edi,edi
..@0x8050251: db 0x0f, 0x85, 0x29, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x804fd80
..@0x8050257: db 0x31, 0xc0  ;; xor eax,eax
..@0x8050259: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8050260: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x08  ;; mov dword [ebx+eax*4+0x8060bc0],0x8
..@0x8050268: db 0x00, 0x00, 0x00
..@0x805026b: add eax, strict byte 0x1
..@0x805026e: db 0x3d, 0x90, 0x00, 0x00, 0x00  ;; cmp eax,0x90
..@0x8050273: db 0x75, 0xeb  ;; jnz A.code+0x8050260
..@0x8050275: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8050278: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x09  ;; mov dword [ebx+eax*4+0x8060bc0],0x9
..@0x8050280: db 0x00, 0x00, 0x00
..@0x8050283: add eax, strict byte 0x1
..@0x8050286: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x805028b: db 0x75, 0xeb  ;; jnz A.code+0x8050278
..@0x805028d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8050290: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x07  ;; mov dword [ebx+eax*4+0x8060bc0],0x7
..@0x8050298: db 0x00, 0x00, 0x00
..@0x805029b: add eax, strict byte 0x1
..@0x805029e: db 0x3d, 0x1a, 0x01, 0x00, 0x00  ;; cmp eax,0x11a
..@0x80502a3: db 0x75, 0xeb  ;; jnz A.code+0x8050290
..@0x80502a5: db 0xc7, 0x83, 0x28, 0x10, 0x06, 0x08, 0x08, 0x00  ;; mov dword [ebx+0x8061028],0x8
..@0x80502ad: db 0x00, 0x00
..@0x80502af: db 0xb0, 0x1e  ;; mov al,0x1e
..@0x80502b1: db 0xc7, 0x83, 0x2c, 0x10, 0x06, 0x08, 0x08, 0x00  ;; mov dword [ebx+0x806102c],0x8
..@0x80502b9: db 0x00, 0x00
..@0x80502bb: db 0xc7, 0x83, 0x30, 0x10, 0x06, 0x08, 0x08, 0x00  ;; mov dword [ebx+0x8061030],0x8
..@0x80502c3: db 0x00, 0x00
..@0x80502c5: db 0xc7, 0x83, 0x34, 0x10, 0x06, 0x08, 0x08, 0x00  ;; mov dword [ebx+0x8061034],0x8
..@0x80502cd: db 0x00, 0x00
..@0x80502cf: nop
..@0x80502d0: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x00  ;; mov dword [ebx+eax*4+0x8060bc0],0x0
..@0x80502d8: db 0x00, 0x00, 0x00
..@0x80502db: add eax, strict byte 0x1
..@0x80502de: db 0x3d, 0x20, 0x01, 0x00, 0x00  ;; cmp eax,0x120
..@0x80502e3: db 0x75, 0xeb  ;; jnz A.code+0x80502d0
..@0x80502e5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80502e8: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x04  ;; mov dword [ebx+eax*4+0x8060bc0],0x4
..@0x80502f0: db 0x00, 0x00, 0x00
..@0x80502f3: add eax, strict byte 0x1
..@0x80502f6: db 0x3d, 0x22, 0x01, 0x00, 0x00  ;; cmp eax,0x122
..@0x80502fb: db 0x75, 0xeb  ;; jnz A.code+0x80502e8
..@0x80502fd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8050300: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x05  ;; mov dword [ebx+eax*4+0x8060bc0],0x5
..@0x8050308: db 0x00, 0x00, 0x00
..@0x805030b: add eax, strict byte 0x1
..@0x805030e: db 0x3d, 0x3e, 0x01, 0x00, 0x00  ;; cmp eax,0x13e
..@0x8050313: db 0x75, 0xeb  ;; jnz A.code+0x8050300
..@0x8050315: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8050318: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x00  ;; mov dword [ebx+eax*4+0x8060bc0],0x0
..@0x8050320: db 0x00, 0x00, 0x00
..@0x8050323: add eax, strict byte 0x1
..@0x8050326: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x805032b: db 0x75, 0xeb  ;; jnz A.code+0x8050318
..@0x805032d: jmp strict near R.code+0x804fe9b
..@0x8050332: db 0x31, 0xc0  ;; xor eax,eax
..@0x8050334: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8050338: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x08  ;; mov dword [ebx+eax*4+0x8060bc0],0x8
..@0x8050340: db 0x00, 0x00, 0x00
..@0x8050343: add eax, strict byte 0x1
..@0x8050346: db 0x3d, 0x80, 0x00, 0x00, 0x00  ;; cmp eax,0x80
..@0x805034b: db 0x75, 0xeb  ;; jnz A.code+0x8050338
..@0x805034d: db 0xc7, 0x83, 0xc0, 0x0d, 0x06, 0x08, 0x09, 0x00  ;; mov dword [ebx+0x8060dc0],0x9
..@0x8050355: db 0x00, 0x00
..@0x8050357: db 0xb0, 0x81  ;; mov al,0x81
..@0x8050359: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x08  ;; mov dword [ebx+eax*4+0x8060bc0],0x8
..@0x8050361: db 0x00, 0x00, 0x00
..@0x8050364: add eax, strict byte 0x1
..@0x8050367: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x805036c: db 0x75, 0xeb  ;; jnz A.code+0x8050359
..@0x805036e: db 0xc7, 0x83, 0xc0, 0x0f, 0x06, 0x08, 0x09, 0x00  ;; mov dword [ebx+0x8060fc0],0x9
..@0x8050376: db 0x00, 0x00
..@0x8050378: db 0xb0, 0x01  ;; mov al,0x1
..@0x805037a: db 0xc7, 0x84, 0x83, 0xc0, 0x0b, 0x06, 0x08, 0x00  ;; mov dword [ebx+eax*4+0x8060bc0],0x0
..@0x8050382: db 0x00, 0x00, 0x00
..@0x8050385: add eax, strict byte 0x1
..@0x8050388: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x805038d: db 0x75, 0xeb  ;; jnz A.code+0x805037a
..@0x805038f: jmp strict near R.code+0x804fe9b
..@0x8050394: db 0xc7, 0x04, 0x24, 0x49, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_nl
..@0x805039b: call [funcptr_printf]
..@0x80503a1: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80503a7: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80503ab: db 0xa1, 0xac, 0x06, 0x06, 0x08  ;; mov eax,[0x80606ac]
..@0x80503b0: db 0x85, 0xc0  ;; test eax,eax
..@0x80503b2: db 0x0f, 0x8f, 0x82, 0xfe, 0xff, 0xff  ;; jg near A.code+0x805023a
..@0x80503b8: jmp strict near R.code+0x804feb4
..@0x80503bd: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x80503c2: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x80503c6: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80503ca: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80503cd: call B.code+prog_free
..@0x80503d2: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x80503d6: db 0xc7, 0x05, 0xa4, 0x06, 0x06, 0x08, 0x00, 0x00  ;; mov dword [0x80606a4],0x0
..@0x80503de: db 0x00, 0x00
..@0x80503e0: db 0x8b, 0xba, 0x84, 0x00, 0x00, 0x00  ;; mov edi,[edx+0x84]
..@0x80503e6: db 0x85, 0xff  ;; test edi,edi
..@0x80503e8: db 0x74, 0xc1  ;; jz A.code+0x80503ab
..@0x80503ea: db 0xc7, 0x04, 0x24, 0x1c, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b51c
..@0x80503f1: call [funcptr_printf]
..@0x80503f7: db 0x83, 0x3d, 0xac, 0x06, 0x06, 0x08, 0x01  ;; cmp dword [0x80606ac],byte +0x1
..@0x80503fe: db 0x7e, 0x4b  ;; jng A.code+0x805044b
..@0x8050400: db 0xbe, 0xc8, 0x10, 0x06, 0x08  ;; mov esi,0x80610c8
..@0x8050405: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8050407: db 0xeb, 0x0d  ;; jmp short A.code+0x8050416
..@0x8050409: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8050410: db 0x81, 0xc6, 0x18, 0x0a, 0x00, 0x00  ;; add esi,0xa18
..@0x8050416: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8050418: db 0xc7, 0x04, 0x24, 0x34, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b534
..@0x805041f: add ebx, strict byte 0x1
..@0x8050422: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8050426: call [funcptr_printf]
..@0x805042c: db 0xa1, 0xac, 0x06, 0x06, 0x08  ;; mov eax,[0x80606ac]
..@0x8050431: db 0x8d, 0x50, 0xff  ;; lea edx,[eax-0x1]
..@0x8050434: db 0x39, 0xda  ;; cmp edx,ebx
..@0x8050436: db 0x7e, 0x25  ;; jng A.code+0x805045d
..@0x8050438: db 0x85, 0xdb  ;; test ebx,ebx
..@0x805043a: db 0x74, 0xd4  ;; jz A.code+0x8050410
..@0x805043c: db 0xc7, 0x04, 0x24, 0xe8, 0xb0, 0x05, 0x08  ;; mov dword [esp],str_comma
..@0x8050443: call [funcptr_printf]
..@0x8050449: db 0xeb, 0xc5  ;; jmp short A.code+0x8050410
..@0x805044b: db 0xc7, 0x04, 0x24, 0x37, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b537
..@0x8050452: call [funcptr_printf]
..@0x8050458: db 0xa1, 0xac, 0x06, 0x06, 0x08  ;; mov eax,[0x80606ac]
..@0x805045d: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8050461: db 0xc7, 0x04, 0x24, 0x3c, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b53c
..@0x8050468: call [funcptr_printf]
..@0x805046e: db 0x83, 0x3d, 0xac, 0x06, 0x06, 0x08, 0x01  ;; cmp dword [0x80606ac],byte +0x1
..@0x8050475: db 0x7e, 0x0d  ;; jng A.code+0x8050484
..@0x8050477: db 0xc7, 0x04, 0x24, 0xf0, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4f0
..@0x805047e: call [funcptr_printf]
..@0x8050484: db 0xc7, 0x04, 0x24, 0x47, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b547
..@0x805048b: call [funcptr_printf]
..@0x8050491: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8050497: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x805049b: jmp strict near R.code+0x80503ab
..@0x80504a0: db 0x8b, 0x35, 0xac, 0x06, 0x06, 0x08  ;; mov esi,[0x80606ac]
..@0x80504a6: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x80504aa: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80504ae: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x80504b2: db 0xd1, 0xfe  ;; sar esi,1
..@0x80504b4: db 0x89, 0x74, 0x24, 0x1c  ;; mov [esp+0x1c],esi
..@0x80504b8: jmp strict near R.code+0x804fcb7
..@0x80504bd: db 0xdd, 0xd8  ;; fstp st0
..@0x80504bf: db 0x31, 0xf6  ;; xor esi,esi
..@0x80504c1: jmp strict near R.code+0x804fb9c
..@0x80504c6: db 0xd1, 0xfe  ;; sar esi,1
..@0x80504c8: db 0x89, 0x74, 0x24, 0x1c  ;; mov [esp+0x1c],esi
..@0x80504cc: jmp strict near R.code+0x804fcb7
..@0x80504d1: db 0xc7, 0x44, 0x24, 0x2c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x1
..@0x80504d9: db 0x31, 0xc0  ;; xor eax,eax
..@0x80504db: jmp strict near R.code+0x804fb34
..@0x80504e0: db 0x31, 0xd2  ;; xor edx,edx
..@0x80504e2: db 0x81, 0x7c, 0x24, 0x1c, 0x80, 0x00, 0x00, 0x00  ;; cmp dword [esp+0x1c],0x80
..@0x80504ea: db 0x0f, 0x9c, 0xc2  ;; setl dl
..@0x80504ed: db 0x8d, 0x0c, 0x52  ;; lea ecx,[edx+edx*2]
..@0x80504f0: db 0x89, 0x4c, 0x24, 0x24  ;; mov [esp+0x24],ecx
..@0x80504f4: jmp strict near R.code+0x804f3e8
..@0x80504f9: db 0xc7, 0x44, 0x24, 0x24, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x24],0x4
..@0x8050501: jmp strict near R.code+0x804f3e8
..@0x8050506: db 0xc7, 0x04, 0x24, 0x0d, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b50d
..@0x805050d: call [funcptr_printf]
..@0x8050513: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x8050519: jmp strict near R.code+0x804efe7
..@0x805051e: db 0xa1, 0xa4, 0x06, 0x06, 0x08  ;; mov eax,[0x80606a4]
..@0x8050523: db 0x89, 0x4c, 0x24, 0x2c  ;; mov [esp+0x2c],ecx
..@0x8050527: db 0xd1, 0xf9  ;; sar ecx,1
..@0x8050529: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x805052d: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x8050531: jmp strict near R.code+0x804fcc3
..@0x8050536: db 0xc7, 0x45, 0x74, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebp+0x74],0x0
..@0x805053d: jmp strict near R.code+0x804f23e
..@0x8050542: db 0x8b, 0x0d, 0xac, 0x06, 0x06, 0x08  ;; mov ecx,[0x80606ac]
..@0x8050548: add ebp, strict byte 0x1
..@0x805054b: db 0x39, 0xcd  ;; cmp ebp,ecx
..@0x805054d: db 0x0f, 0x8c, 0x99, 0xed, 0xff, 0xff  ;; jl near A.code+0x804f2ec
..@0x8050553: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8050559: db 0x89, 0x4c, 0x24, 0x2c  ;; mov [esp+0x2c],ecx
..@0x805055d: db 0xd1, 0xf9  ;; sar ecx,1
..@0x805055f: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x8050563: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x8050567: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x805056b: jmp strict near R.code+0x804fcb7
..@0x8050570: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x8050574: jmp strict near R.code+0x804f3b3
..@0x8050579: db 0xc7, 0x44, 0x24, 0x24, 0x3f, 0x08, 0x00, 0x00  ;; mov dword [esp+0x24],0x83f
..@0x8050581: jmp strict near R.code+0x804f167
..@0x8050586: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x805058a: db 0xc7, 0x04, 0x24, 0xe1, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4e1
..@0x8050591: db 0xa1, 0x78, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d678]
..@0x8050596: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x805059a: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805059e: call [funcptr_printf]
..@0x80505a4: db 0x8b, 0x15, 0x70, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d670]
..@0x80505aa: jmp strict near R.code+0x804f0c4
..@0x80505af: db 0x89, 0xee  ;; mov esi,ebp
..@0x80505b1: jmp strict near R.code+0x804f673
..@0x80505b6: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x80505ba: db 0xb9, 0x06, 0x00, 0x00, 0x00  ;; mov ecx,0x6
..@0x80505bf: db 0x8b, 0x57, 0x0c  ;; mov edx,[edi+0xc]
..@0x80505c2: db 0x8b, 0x47, 0x08  ;; mov eax,[edi+0x8]
..@0x80505c5: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80505cd: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x80505d5: db 0xc7, 0x04, 0x24, 0x08, 0x00, 0x00, 0x00  ;; mov dword [esp],0x8
..@0x80505dc: call B.code+unknown_func3
..@0x80505e1: db 0x85, 0xc0  ;; test eax,eax
..@0x80505e3: db 0x0f, 0x84, 0xf8, 0xe9, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80505e9: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80505ef: db 0x8b, 0x73, 0x0c  ;; mov esi,[ebx+0xc]
..@0x80505f2: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80505f6: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x80505f8: db 0x85, 0xf6  ;; test esi,esi
..@0x80505fa: db 0x0f, 0x8e, 0x98, 0x00, 0x00, 0x00  ;; jng near A.code+0x8050698
..@0x8050600: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8050608: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x805060d: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x8050613: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8050619: db 0x89, 0xd0  ;; mov eax,edx
..@0x805061b: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8050621: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x8050624: db 0x0f, 0x8c, 0x1b, 0x0f, 0x00, 0x00  ;; jl near A.code+0x8051545
..@0x805062a: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8050631: call [0x805d668]
..@0x8050637: db 0x85, 0xc0  ;; test eax,eax
..@0x8050639: db 0x0f, 0x85, 0xa2, 0xe9, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x805063f: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x8050644: db 0x0f, 0x84, 0x14, 0x0f, 0x00, 0x00  ;; jz near A.code+0x805155e
..@0x805064a: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x805064f: db 0x0f, 0x84, 0xbe, 0x01, 0x00, 0x00  ;; jz near A.code+0x8050813
..@0x8050655: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805065b: db 0x31, 0xf6  ;; xor esi,esi
..@0x805065d: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x8050660: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8050662: db 0x85, 0xd2  ;; test edx,edx
..@0x8050664: db 0x7e, 0x19  ;; jng A.code+0x805067f
..@0x8050666: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x805066a: add esi, strict byte 0x1
..@0x805066d: call R.code+0x804e150
..@0x8050672: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8050678: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x805067b: db 0x89, 0xd8  ;; mov eax,ebx
..@0x805067d: db 0x7f, 0xe7  ;; jg A.code+0x8050666
..@0x805067f: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8050684: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x8050687: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x805068b: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x805068e: db 0x0f, 0x8f, 0x74, 0xff, 0xff, 0xff  ;; jg near A.code+0x8050608
..@0x8050694: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x8050698: db 0x8b, 0x7b, 0x74  ;; mov edi,[ebx+0x74]
..@0x805069b: add edi, strict byte 0x1
..@0x805069e: db 0x85, 0xff  ;; test edi,edi
..@0x80506a0: db 0x89, 0x7b, 0x74  ;; mov [ebx+0x74],edi
..@0x80506a3: db 0x0f, 0x8e, 0xec, 0xeb, 0xff, 0xff  ;; jng near A.code+0x804f295
..@0x80506a9: db 0xa1, 0xb0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606b0]
..@0x80506ae: db 0x85, 0xc0  ;; test eax,eax
..@0x80506b0: db 0x0f, 0x85, 0x98, 0x0f, 0x00, 0x00  ;; jnz near A.code+0x805164e
..@0x80506b6: db 0xa1, 0xe4, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae4]
..@0x80506bb: db 0x85, 0xc0  ;; test eax,eax
..@0x80506bd: db 0x0f, 0x8e, 0x38, 0x0f, 0x00, 0x00  ;; jng near A.code+0x80515fb
..@0x80506c3: db 0x81, 0xff, 0xff, 0x03, 0x00, 0x00  ;; cmp edi,0x3ff
..@0x80506c9: db 0x0f, 0x8f, 0x7f, 0x0f, 0x00, 0x00  ;; jg near A.code+0x805164e
..@0x80506cf: db 0x8b, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov ebp,[0x860cae8]
..@0x80506d5: db 0x89, 0x6c, 0x24, 0x1c  ;; mov [esp+0x1c],ebp
..@0x80506d9: db 0x39, 0x6c, 0x24, 0x44  ;; cmp [esp+0x44],ebp
..@0x80506dd: db 0x89, 0x2c, 0xbd, 0x00, 0xcf, 0x6a, 0x08  ;; mov [edi*4+0x86acf00],ebp
..@0x80506e4: db 0x8b, 0x2d, 0xac, 0x06, 0x06, 0x08  ;; mov ebp,[0x80606ac]
..@0x80506ea: db 0x8d, 0x54, 0xad, 0x00  ;; lea edx,[ebp+ebp*4+0x0]
..@0x80506ee: db 0x0f, 0x8f, 0x06, 0x1a, 0x00, 0x00  ;; jg near A.code+0x80520fa
..@0x80506f4: db 0xc1, 0xe2, 0x06  ;; shl edx,byte 0x6
..@0x80506f7: db 0xc7, 0x04, 0xbd, 0x00, 0xdf, 0x6a, 0x08, 0xff  ;; mov dword [edi*4+0x86adf00],0xffffffff
..@0x80506ff: db 0xff, 0xff, 0xff
..@0x8050702: cmp edx, strict byte 0x1
..@0x8050705: db 0x7e, 0x3c  ;; jng A.code+0x8050743
..@0x8050707: db 0x8d, 0x9a, 0xbf, 0xc6, 0x56, 0x08  ;; lea ebx,[edx+0x856c6bf]
..@0x805070d: db 0xbe, 0xbf, 0xc6, 0x56, 0x08  ;; mov esi,0x856c6bf
..@0x8050712: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8050717: db 0x0f, 0xb6, 0x13  ;; movzx edx,byte [ebx]
..@0x805071a: db 0x0f, 0xb6, 0x4b, 0xff  ;; movzx ecx,byte [ebx-0x1]
..@0x805071e: sub ebx, strict byte 0x2
..@0x8050721: db 0xc1, 0xe2, 0x04  ;; shl edx,byte 0x4
..@0x8050724: db 0x01, 0xca  ;; add edx,ecx
..@0x8050726: db 0x31, 0xc2  ;; xor edx,eax
..@0x8050728: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x805072b: db 0x81, 0xe2, 0xff, 0x00, 0x00, 0x00  ;; and edx,0xff
..@0x8050731: db 0x33, 0x04, 0x95, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[edx*4+0x80602a0]
..@0x8050738: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x805073a: db 0x75, 0xdb  ;; jnz A.code+0x8050717
..@0x805073c: db 0x89, 0x04, 0xbd, 0x00, 0xdf, 0x6a, 0x08  ;; mov [edi*4+0x86adf00],eax
..@0x8050743: db 0x83, 0x3d, 0x70, 0xd6, 0x05, 0x08, 0x03  ;; cmp dword [0x805d670],byte +0x3
..@0x805074a: db 0x0f, 0x84, 0x25, 0x0f, 0x00, 0x00  ;; jz near A.code+0x8051675
..@0x8050750: db 0x89, 0xf8  ;; mov eax,edi
..@0x8050752: sub eax, strict byte 0x1
..@0x8050755: db 0x0f, 0x88, 0x91, 0x00, 0x00, 0x00  ;; js near A.code+0x80507ec
..@0x805075b: db 0x8b, 0x0c, 0xbd, 0x00, 0xdf, 0x6a, 0x08  ;; mov ecx,[edi*4+0x86adf00]
..@0x8050762: db 0xeb, 0x0c  ;; jmp short A.code+0x8050770
..@0x8050764: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8050768: sub eax, strict byte 0x1
..@0x805076b: cmp eax, strict byte -0x1
..@0x805076e: db 0x74, 0x7c  ;; jz A.code+0x80507ec
..@0x8050770: db 0x39, 0x0c, 0x85, 0x00, 0xdf, 0x6a, 0x08  ;; cmp [eax*4+0x86adf00],ecx
..@0x8050777: db 0x75, 0xef  ;; jnz A.code+0x8050768
..@0x8050779: db 0x8b, 0x14, 0xbd, 0x00, 0xcf, 0x6a, 0x08  ;; mov edx,[edi*4+0x86acf00]
..@0x8050780: db 0x3b, 0x14, 0x85, 0x00, 0xcf, 0x6a, 0x08  ;; cmp edx,[eax*4+0x86acf00]
..@0x8050787: db 0x75, 0xdf  ;; jnz A.code+0x8050768
..@0x8050789: db 0x39, 0x54, 0x24, 0x44  ;; cmp [esp+0x44],edx
..@0x805078d: db 0x0f, 0x8d, 0xbb, 0x0e, 0x00, 0x00  ;; jnl near A.code+0x805164e
..@0x8050793: db 0x85, 0xed  ;; test ebp,ebp
..@0x8050795: db 0x7e, 0x3a  ;; jng A.code+0x80507d1
..@0x8050797: db 0x8d, 0x74, 0xad, 0x00  ;; lea esi,[ebp+ebp*4+0x0]
..@0x805079b: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805079d: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x805079f: db 0xc1, 0xe6, 0x06  ;; shl esi,byte 0x6
..@0x80507a2: db 0x31, 0xc0  ;; xor eax,eax
..@0x80507a4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80507a8: db 0x0f, 0xb6, 0x94, 0x01, 0x00, 0xcb, 0x60, 0x08  ;; movzx edx,byte [ecx+eax+0x860cb00]
..@0x80507b0: db 0x89, 0x94, 0x83, 0xc0, 0x0b, 0x06, 0x08  ;; mov [ebx+eax*4+0x8060bc0],edx
..@0x80507b7: add eax, strict byte 0x1
..@0x80507ba: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x80507bf: db 0x75, 0xe7  ;; jnz A.code+0x80507a8
..@0x80507c1: db 0x81, 0xc1, 0x40, 0x01, 0x00, 0x00  ;; add ecx,0x140
..@0x80507c7: db 0x81, 0xc3, 0x18, 0x0a, 0x00, 0x00  ;; add ebx,0xa18
..@0x80507cd: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x80507cf: db 0x75, 0xd1  ;; jnz A.code+0x80507a2
..@0x80507d1: db 0xbe, 0x00, 0xcb, 0x6a, 0x08  ;; mov esi,0x86acb00
..@0x80507d6: db 0xbf, 0x80, 0xd6, 0x05, 0x08  ;; mov edi,0x805d680
..@0x80507db: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x80507e0: db 0xf3, 0xa5  ;; rep movsd
..@0x80507e2: db 0xc7, 0x05, 0xb0, 0x06, 0x06, 0x08, 0x01, 0x00  ;; mov dword [0x80606b0],0x1
..@0x80507ea: db 0x00, 0x00
..@0x80507ec: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x80507f3: call [0x805d668]
..@0x80507f9: db 0x85, 0xc0  ;; test eax,eax
..@0x80507fb: db 0x0f, 0x85, 0xa9, 0x0e, 0x00, 0x00  ;; jnz near A.code+0x80516aa
..@0x8050801: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8050807: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x805080b: db 0x8b, 0x7b, 0x74  ;; mov edi,[ebx+0x74]
..@0x805080e: jmp strict near R.code+0x804f295
..@0x8050813: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x8050818: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x805081c: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x8050820: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8050825: jmp strict near R.code+0x8050655
..@0x805082a: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x8050830: db 0x8d, 0x54, 0x00, 0x01  ;; lea edx,[eax+eax+0x1]
..@0x8050834: db 0x89, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; mov [0x983e094],edx
..@0x805083a: db 0x8b, 0x0d, 0x78, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d678]
..@0x8050840: db 0x8b, 0x55, 0x0c  ;; mov edx,[ebp+0xc]
..@0x8050843: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x8050847: db 0xc7, 0x44, 0x24, 0x04, 0x80, 0xd6, 0x05, 0x08  ;; mov dword [esp+0x4],0x805d680
..@0x805084f: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x8050852: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8050854: call B.code+unknown_func2
..@0x8050859: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x805085f: db 0x85, 0xc0  ;; test eax,eax
..@0x8050861: db 0x0f, 0x84, 0x80, 0xe7, 0xff, 0xff  ;; jz near A.code+0x804efe7
..@0x8050867: db 0x8b, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov ebx,[0x860cae8]
..@0x805086d: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8050871: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8050876: db 0xc7, 0x44, 0x24, 0x5c, 0x49, 0x44, 0x41, 0x54  ;; mov dword [esp+0x5c],0x54414449
..@0x805087e: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x8050882: add ebx, strict byte 0x4
..@0x8050885: db 0x89, 0x5c, 0x24, 0x28  ;; mov [esp+0x28],ebx
..@0x8050889: db 0x89, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebx
..@0x805088f: call R.code+0x804b8f0
..@0x8050894: db 0x8b, 0x35, 0x60, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d660]
..@0x805089a: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x805089f: db 0x8b, 0x56, 0x14  ;; mov edx,[esi+0x14]
..@0x80508a2: db 0x39, 0xc2  ;; cmp edx,eax
..@0x80508a4: db 0x7e, 0x0a  ;; jng A.code+0x80508b0
..@0x80508a6: db 0x8b, 0x56, 0x10  ;; mov edx,[esi+0x10]
..@0x80508a9: db 0xc6, 0x04, 0x02, 0x78  ;; mov byte [edx+eax],0x78
..@0x80508ad: db 0x8b, 0x56, 0x14  ;; mov edx,[esi+0x14]
..@0x80508b0: db 0x8d, 0x48, 0x01  ;; lea ecx,[eax+0x1]
..@0x80508b3: db 0x39, 0xd1  ;; cmp ecx,edx
..@0x80508b5: db 0x89, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ecx
..@0x80508bb: db 0x7d, 0x08  ;; jnl A.code+0x80508c5
..@0x80508bd: db 0x8b, 0x56, 0x10  ;; mov edx,[esi+0x10]
..@0x80508c0: db 0xc6, 0x44, 0x02, 0x01, 0x01  ;; mov byte [edx+eax+0x1],0x1
..@0x80508c5: db 0x8b, 0x56, 0x0c  ;; mov edx,[esi+0xc]
..@0x80508c8: add eax, strict byte 0x2
..@0x80508cb: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x80508d0: db 0x85, 0xd2  ;; test edx,edx
..@0x80508d2: db 0x0f, 0x8e, 0xe0, 0x07, 0x00, 0x00  ;; jng near A.code+0x80510b8
..@0x80508d8: db 0x8b, 0x0d, 0x94, 0xe0, 0x83, 0x09  ;; mov ecx,[0x983e094]
..@0x80508de: db 0xc7, 0x44, 0x24, 0x20, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x20],0x0
..@0x80508e6: db 0x89, 0xf7  ;; mov edi,esi
..@0x80508e8: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x80508ea: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x80508ed: db 0x01, 0xcb  ;; add ebx,ecx
..@0x80508ef: db 0x81, 0xf3, 0x00, 0x00, 0xff, 0xff  ;; xor ebx,0xffff0000
..@0x80508f5: db 0x89, 0x5c, 0x24, 0x38  ;; mov [esp+0x38],ebx
..@0x80508f9: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x80508fe: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x8050900: sub edx, strict byte 0x1
..@0x8050903: db 0x3b, 0x54, 0x24, 0x20  ;; cmp edx,[esp+0x20]
..@0x8050907: db 0x0f, 0x94, 0xc2  ;; setz dl
..@0x805090a: db 0x0f, 0xb6, 0xca  ;; movzx ecx,dl
..@0x805090d: db 0x89, 0x4c, 0x24, 0x5c  ;; mov [esp+0x5c],ecx
..@0x8050911: db 0x39, 0x47, 0x14  ;; cmp [edi+0x14],eax
..@0x8050914: db 0x7e, 0x06  ;; jng A.code+0x805091c
..@0x8050916: db 0x8b, 0x4f, 0x10  ;; mov ecx,[edi+0x10]
..@0x8050919: db 0x88, 0x14, 0x01  ;; mov [ecx+eax],dl
..@0x805091c: db 0x8b, 0x74, 0x24, 0x38  ;; mov esi,[esp+0x38]
..@0x8050920: add eax, strict byte 0x1
..@0x8050923: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8050928: db 0xa3, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],eax
..@0x805092d: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8050931: db 0x89, 0x74, 0x24, 0x5c  ;; mov [esp+0x5c],esi
..@0x8050935: call R.code+0x804b8f0
..@0x805093a: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x8050940: db 0x31, 0xc0  ;; xor eax,eax
..@0x8050942: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x805094a: db 0x39, 0x57, 0x14  ;; cmp [edi+0x14],edx
..@0x805094d: db 0x7e, 0x0b  ;; jng A.code+0x805095a
..@0x805094f: db 0x8b, 0x47, 0x10  ;; mov eax,[edi+0x10]
..@0x8050952: db 0xc6, 0x04, 0x10, 0x00  ;; mov byte [eax+edx],0x0
..@0x8050956: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x805095a: add edx, strict byte 0x1
..@0x805095d: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x8050965: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x805096b: db 0x89, 0xea  ;; mov edx,ebp
..@0x805096d: db 0x8b, 0x5f, 0x08  ;; mov ebx,[edi+0x8]
..@0x8050970: db 0x81, 0xe2, 0xff, 0xff, 0x00, 0x00  ;; and edx,0xffff
..@0x8050976: db 0x01, 0xd0  ;; add eax,edx
..@0x8050978: db 0x8d, 0x90, 0x0f, 0x00, 0xff, 0xff  ;; lea edx,[eax-0xfff1]
..@0x805097e: db 0x3d, 0xf1, 0xff, 0x00, 0x00  ;; cmp eax,0xfff1
..@0x8050983: db 0x0f, 0x4d, 0xc2  ;; cmovnl eax,edx
..@0x8050986: db 0x89, 0xea  ;; mov edx,ebp
..@0x8050988: db 0xc1, 0xea, 0x10  ;; shr edx,byte 0x10
..@0x805098b: db 0x01, 0xc2  ;; add edx,eax
..@0x805098d: db 0x8d, 0xaa, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[edx-0xfff1]
..@0x8050993: db 0x81, 0xfa, 0xf1, 0xff, 0x00, 0x00  ;; cmp edx,0xfff1
..@0x8050999: db 0x0f, 0x4c, 0xea  ;; cmovl ebp,edx
..@0x805099c: db 0xc1, 0xe5, 0x10  ;; shl ebp,byte 0x10
..@0x805099f: db 0x01, 0xc5  ;; add ebp,eax
..@0x80509a1: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80509a3: db 0x0f, 0x8e, 0xf7, 0x01, 0x00, 0x00  ;; jng near A.code+0x8050ba0
..@0x80509a9: db 0x8b, 0x35, 0x78, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d678]
..@0x80509af: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x80509b7: db 0x8b, 0x15, 0x70, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d670]
..@0x80509bd: db 0x89, 0x74, 0x24, 0x24  ;; mov [esp+0x24],esi
..@0x80509c1: db 0x89, 0xde  ;; mov esi,ebx
..@0x80509c3: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x80509c5: db 0x89, 0x54, 0x24, 0x34  ;; mov [esp+0x34],edx
..@0x80509c9: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x80509cd: db 0x8b, 0x6c, 0x24, 0x1c  ;; mov ebp,[esp+0x1c]
..@0x80509d1: db 0x0f, 0xaf, 0x47, 0x04  ;; imul eax,[edi+0x4]
..@0x80509d5: db 0x8d, 0x04, 0xa8  ;; lea eax,[eax+ebp*4]
..@0x80509d8: db 0x03, 0x07  ;; add eax,[edi]
..@0x80509da: db 0x83, 0x7c, 0x24, 0x34, 0x06  ;; cmp dword [esp+0x34],byte +0x6
..@0x80509df: db 0x0f, 0x87, 0xaa, 0x01, 0x00, 0x00  ;; ja near A.code+0x8050b8f
..@0x80509e5: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x80509e9: db 0xff, 0x24, 0x95, 0xa4, 0xb6, 0x05, 0x08  ;; jmp [edx*4+code_ptr_0x805b6a4]
..@0x80509f0: db 0x0f, 0xb6, 0x68, 0x02  ;; movzx ebp,byte [eax+0x2]
..@0x80509f4: db 0x89, 0xea  ;; mov edx,ebp
..@0x80509f6: db 0x0f, 0xb6, 0xf2  ;; movzx esi,dl
..@0x80509f9: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x80509ff: db 0x89, 0x74, 0x24, 0x5c  ;; mov [esp+0x5c],esi
..@0x8050a03: db 0x8b, 0x4f, 0x14  ;; mov ecx,[edi+0x14]
..@0x8050a06: db 0x39, 0xd1  ;; cmp ecx,edx
..@0x8050a08: db 0x7e, 0x0f  ;; jng A.code+0x8050a19
..@0x8050a0a: db 0x8b, 0x77, 0x10  ;; mov esi,[edi+0x10]
..@0x8050a0d: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8050a0f: db 0x88, 0x0c, 0x16  ;; mov [esi+edx],cl
..@0x8050a12: db 0x8b, 0x74, 0x24, 0x5c  ;; mov esi,[esp+0x5c]
..@0x8050a16: db 0x8b, 0x4f, 0x14  ;; mov ecx,[edi+0x14]
..@0x8050a19: db 0x8d, 0x6a, 0x01  ;; lea ebp,[edx+0x1]
..@0x8050a1c: db 0x89, 0x6c, 0x24, 0x2c  ;; mov [esp+0x2c],ebp
..@0x8050a20: db 0x89, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebp
..@0x8050a26: db 0x0f, 0xb7, 0xeb  ;; movzx ebp,bx
..@0x8050a29: db 0x01, 0xee  ;; add esi,ebp
..@0x8050a2b: db 0x8d, 0xae, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[esi-0xfff1]
..@0x8050a31: db 0x81, 0xfe, 0xf1, 0xff, 0x00, 0x00  ;; cmp esi,0xfff1
..@0x8050a37: db 0x0f, 0x4d, 0xf5  ;; cmovnl esi,ebp
..@0x8050a3a: db 0xc1, 0xeb, 0x10  ;; shr ebx,byte 0x10
..@0x8050a3d: db 0x01, 0xf3  ;; add ebx,esi
..@0x8050a3f: db 0x8d, 0xab, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[ebx-0xfff1]
..@0x8050a45: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050a4b: db 0x0f, 0x4d, 0xdd  ;; cmovnl ebx,ebp
..@0x8050a4e: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050a51: db 0x39, 0x4c, 0x24, 0x2c  ;; cmp [esp+0x2c],ecx
..@0x8050a55: db 0x8d, 0x2c, 0x1e  ;; lea ebp,[esi+ebx]
..@0x8050a58: db 0x0f, 0xb6, 0x70, 0x01  ;; movzx esi,byte [eax+0x1]
..@0x8050a5c: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8050a5e: db 0x0f, 0xb6, 0xdb  ;; movzx ebx,bl
..@0x8050a61: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x8050a65: db 0x89, 0x5c, 0x24, 0x5c  ;; mov [esp+0x5c],ebx
..@0x8050a69: db 0x7d, 0x14  ;; jnl A.code+0x8050a7f
..@0x8050a6b: db 0x8b, 0x4f, 0x10  ;; mov ecx,[edi+0x10]
..@0x8050a6e: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8050a70: db 0x88, 0x5c, 0x11, 0x01  ;; mov [ecx+edx+0x1],bl
..@0x8050a74: db 0x8b, 0x74, 0x24, 0x5c  ;; mov esi,[esp+0x5c]
..@0x8050a78: db 0x8b, 0x4f, 0x14  ;; mov ecx,[edi+0x14]
..@0x8050a7b: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x8050a7f: db 0x8d, 0x5a, 0x02  ;; lea ebx,[edx+0x2]
..@0x8050a82: db 0x89, 0xee  ;; mov esi,ebp
..@0x8050a84: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8050a88: db 0x81, 0xe6, 0xff, 0xff, 0x00, 0x00  ;; and esi,0xffff
..@0x8050a8e: db 0x89, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebx
..@0x8050a94: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8050a98: db 0x01, 0xf3  ;; add ebx,esi
..@0x8050a9a: db 0x8d, 0xb3, 0x0f, 0x00, 0xff, 0xff  ;; lea esi,[ebx-0xfff1]
..@0x8050aa0: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050aa6: db 0x0f, 0x4d, 0xde  ;; cmovnl ebx,esi
..@0x8050aa9: db 0x89, 0xee  ;; mov esi,ebp
..@0x8050aab: db 0xc1, 0xee, 0x10  ;; shr esi,byte 0x10
..@0x8050aae: db 0x01, 0xde  ;; add esi,ebx
..@0x8050ab0: db 0x8d, 0xae, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[esi-0xfff1]
..@0x8050ab6: db 0x81, 0xfe, 0xf1, 0xff, 0x00, 0x00  ;; cmp esi,0xfff1
..@0x8050abc: db 0x0f, 0x4d, 0xf5  ;; cmovnl esi,ebp
..@0x8050abf: db 0xc1, 0xe6, 0x10  ;; shl esi,byte 0x10
..@0x8050ac2: db 0x39, 0x4c, 0x24, 0x2c  ;; cmp [esp+0x2c],ecx
..@0x8050ac6: db 0x8d, 0x2c, 0x33  ;; lea ebp,[ebx+esi]
..@0x8050ac9: db 0x0f, 0xb6, 0x30  ;; movzx esi,byte [eax]
..@0x8050acc: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8050ace: db 0x0f, 0xb6, 0xdb  ;; movzx ebx,bl
..@0x8050ad1: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x8050ad5: db 0x89, 0x5c, 0x24, 0x5c  ;; mov [esp+0x5c],ebx
..@0x8050ad9: db 0x7d, 0x14  ;; jnl A.code+0x8050aef
..@0x8050adb: db 0x8b, 0x4f, 0x10  ;; mov ecx,[edi+0x10]
..@0x8050ade: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8050ae0: db 0x88, 0x5c, 0x11, 0x02  ;; mov [ecx+edx+0x2],bl
..@0x8050ae4: db 0x8b, 0x74, 0x24, 0x5c  ;; mov esi,[esp+0x5c]
..@0x8050ae8: db 0x8b, 0x4f, 0x14  ;; mov ecx,[edi+0x14]
..@0x8050aeb: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x8050aef: db 0x8d, 0x5a, 0x03  ;; lea ebx,[edx+0x3]
..@0x8050af2: db 0x89, 0xee  ;; mov esi,ebp
..@0x8050af4: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8050af8: db 0x81, 0xe6, 0xff, 0xff, 0x00, 0x00  ;; and esi,0xffff
..@0x8050afe: db 0x89, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebx
..@0x8050b04: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8050b08: db 0x01, 0xf3  ;; add ebx,esi
..@0x8050b0a: db 0x8d, 0xb3, 0x0f, 0x00, 0xff, 0xff  ;; lea esi,[ebx-0xfff1]
..@0x8050b10: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050b16: db 0x0f, 0x4d, 0xde  ;; cmovnl ebx,esi
..@0x8050b19: db 0x89, 0xee  ;; mov esi,ebp
..@0x8050b1b: db 0xc1, 0xee, 0x10  ;; shr esi,byte 0x10
..@0x8050b1e: db 0x01, 0xde  ;; add esi,ebx
..@0x8050b20: db 0x8d, 0xae, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[esi-0xfff1]
..@0x8050b26: db 0x81, 0xfe, 0xf1, 0xff, 0x00, 0x00  ;; cmp esi,0xfff1
..@0x8050b2c: db 0x0f, 0x4d, 0xf5  ;; cmovnl esi,ebp
..@0x8050b2f: db 0xc1, 0xe6, 0x10  ;; shl esi,byte 0x10
..@0x8050b32: db 0x01, 0xde  ;; add esi,ebx
..@0x8050b34: db 0x0f, 0xb6, 0x58, 0x03  ;; movzx ebx,byte [eax+0x3]
..@0x8050b38: db 0x39, 0x4c, 0x24, 0x2c  ;; cmp [esp+0x2c],ecx
..@0x8050b3c: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x8050b3f: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050b43: db 0x7d, 0x0b  ;; jnl A.code+0x8050b50
..@0x8050b45: db 0x8b, 0x47, 0x10  ;; mov eax,[edi+0x10]
..@0x8050b48: db 0x88, 0x5c, 0x10, 0x03  ;; mov [eax+edx+0x3],bl
..@0x8050b4c: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8050b50: add edx, strict byte 0x4
..@0x8050b53: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x8050b59: db 0x89, 0xf2  ;; mov edx,esi
..@0x8050b5b: db 0x81, 0xe2, 0xff, 0xff, 0x00, 0x00  ;; and edx,0xffff
..@0x8050b61: db 0x01, 0xd0  ;; add eax,edx
..@0x8050b63: db 0x8d, 0x90, 0x0f, 0x00, 0xff, 0xff  ;; lea edx,[eax-0xfff1]
..@0x8050b69: db 0x3d, 0xf1, 0xff, 0x00, 0x00  ;; cmp eax,0xfff1
..@0x8050b6e: db 0x0f, 0x4d, 0xc2  ;; cmovnl eax,edx
..@0x8050b71: db 0x89, 0xf2  ;; mov edx,esi
..@0x8050b73: db 0xc1, 0xea, 0x10  ;; shr edx,byte 0x10
..@0x8050b76: db 0x01, 0xc2  ;; add edx,eax
..@0x8050b78: db 0x8d, 0x9a, 0x0f, 0x00, 0xff, 0xff  ;; lea ebx,[edx-0xfff1]
..@0x8050b7e: db 0x81, 0xfa, 0xf1, 0xff, 0x00, 0x00  ;; cmp edx,0xfff1
..@0x8050b84: db 0x0f, 0x4c, 0xda  ;; cmovl ebx,edx
..@0x8050b87: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050b8a: db 0x01, 0xc3  ;; add ebx,eax
..@0x8050b8c: db 0x8b, 0x77, 0x08  ;; mov esi,[edi+0x8]
..@0x8050b8f: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8050b94: db 0x3b, 0x74, 0x24, 0x1c  ;; cmp esi,[esp+0x1c]
..@0x8050b98: db 0x0f, 0x8f, 0x2b, 0xfe, 0xff, 0xff  ;; jg near A.code+0x80509c9
..@0x8050b9e: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x8050ba0: db 0x83, 0x44, 0x24, 0x20, 0x01  ;; add dword [esp+0x20],byte +0x1
..@0x8050ba5: db 0x8b, 0x57, 0x0c  ;; mov edx,[edi+0xc]
..@0x8050ba8: db 0x3b, 0x54, 0x24, 0x20  ;; cmp edx,[esp+0x20]
..@0x8050bac: db 0x0f, 0x8e, 0x20, 0x03, 0x00, 0x00  ;; jng near A.code+0x8050ed2
..@0x8050bb2: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x8050bb7: jmp strict near R.code+0x8050900
..@0x8050bbc: db 0x0f, 0xb6, 0x68, 0x02  ;; movzx ebp,byte [eax+0x2]
..@0x8050bc0: db 0x89, 0xea  ;; mov edx,ebp
..@0x8050bc2: db 0x0f, 0xb6, 0xca  ;; movzx ecx,dl
..@0x8050bc5: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x8050bcb: db 0x89, 0x4c, 0x24, 0x5c  ;; mov [esp+0x5c],ecx
..@0x8050bcf: db 0x8b, 0x77, 0x14  ;; mov esi,[edi+0x14]
..@0x8050bd2: db 0x39, 0xd6  ;; cmp esi,edx
..@0x8050bd4: db 0x7e, 0x0f  ;; jng A.code+0x8050be5
..@0x8050bd6: db 0x8b, 0x77, 0x10  ;; mov esi,[edi+0x10]
..@0x8050bd9: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8050bdb: db 0x88, 0x0c, 0x16  ;; mov [esi+edx],cl
..@0x8050bde: db 0x8b, 0x4c, 0x24, 0x5c  ;; mov ecx,[esp+0x5c]
..@0x8050be2: db 0x8b, 0x77, 0x14  ;; mov esi,[edi+0x14]
..@0x8050be5: db 0x8d, 0x6a, 0x01  ;; lea ebp,[edx+0x1]
..@0x8050be8: db 0x89, 0x6c, 0x24, 0x2c  ;; mov [esp+0x2c],ebp
..@0x8050bec: db 0x89, 0x2d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebp
..@0x8050bf2: db 0x0f, 0xb7, 0xeb  ;; movzx ebp,bx
..@0x8050bf5: db 0x01, 0xe9  ;; add ecx,ebp
..@0x8050bf7: db 0x8d, 0xa9, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[ecx-0xfff1]
..@0x8050bfd: db 0x81, 0xf9, 0xf1, 0xff, 0x00, 0x00  ;; cmp ecx,0xfff1
..@0x8050c03: db 0x0f, 0x4d, 0xcd  ;; cmovnl ecx,ebp
..@0x8050c06: db 0xc1, 0xeb, 0x10  ;; shr ebx,byte 0x10
..@0x8050c09: db 0x01, 0xcb  ;; add ebx,ecx
..@0x8050c0b: db 0x8d, 0xab, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[ebx-0xfff1]
..@0x8050c11: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050c17: db 0x0f, 0x4d, 0xdd  ;; cmovnl ebx,ebp
..@0x8050c1a: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050c1d: db 0x39, 0x74, 0x24, 0x2c  ;; cmp [esp+0x2c],esi
..@0x8050c21: db 0x8d, 0x2c, 0x19  ;; lea ebp,[ecx+ebx]
..@0x8050c24: db 0x0f, 0xb6, 0x58, 0x01  ;; movzx ebx,byte [eax+0x1]
..@0x8050c28: db 0x0f, 0xb6, 0xcb  ;; movzx ecx,bl
..@0x8050c2b: db 0x89, 0x4c, 0x24, 0x5c  ;; mov [esp+0x5c],ecx
..@0x8050c2f: db 0x7d, 0x0e  ;; jnl A.code+0x8050c3f
..@0x8050c31: db 0x8b, 0x4f, 0x10  ;; mov ecx,[edi+0x10]
..@0x8050c34: db 0x88, 0x5c, 0x11, 0x01  ;; mov [ecx+edx+0x1],bl
..@0x8050c38: db 0x8b, 0x4c, 0x24, 0x5c  ;; mov ecx,[esp+0x5c]
..@0x8050c3c: db 0x8b, 0x77, 0x14  ;; mov esi,[edi+0x14]
..@0x8050c3f: db 0x8d, 0x5a, 0x02  ;; lea ebx,[edx+0x2]
..@0x8050c42: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8050c46: db 0x89, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ebx
..@0x8050c4c: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8050c4e: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x8050c54: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8050c56: db 0x8d, 0x99, 0x0f, 0x00, 0xff, 0xff  ;; lea ebx,[ecx-0xfff1]
..@0x8050c5c: db 0x81, 0xf9, 0xf1, 0xff, 0x00, 0x00  ;; cmp ecx,0xfff1
..@0x8050c62: db 0x0f, 0x4d, 0xcb  ;; cmovnl ecx,ebx
..@0x8050c65: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8050c67: db 0xc1, 0xeb, 0x10  ;; shr ebx,byte 0x10
..@0x8050c6a: db 0x01, 0xcb  ;; add ebx,ecx
..@0x8050c6c: db 0x8d, 0xab, 0x0f, 0x00, 0xff, 0xff  ;; lea ebp,[ebx-0xfff1]
..@0x8050c72: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050c78: db 0x0f, 0x4d, 0xdd  ;; cmovnl ebx,ebp
..@0x8050c7b: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050c7e: db 0x01, 0xcb  ;; add ebx,ecx
..@0x8050c80: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x8050c83: db 0x39, 0x74, 0x24, 0x2c  ;; cmp [esp+0x2c],esi
..@0x8050c87: db 0x0f, 0xb6, 0xc1  ;; movzx eax,cl
..@0x8050c8a: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050c8e: db 0x7d, 0x0b  ;; jnl A.code+0x8050c9b
..@0x8050c90: db 0x8b, 0x47, 0x10  ;; mov eax,[edi+0x10]
..@0x8050c93: db 0x88, 0x4c, 0x10, 0x02  ;; mov [eax+edx+0x2],cl
..@0x8050c97: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8050c9b: add edx, strict byte 0x3
..@0x8050c9e: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x8050ca4: db 0x0f, 0xb7, 0xd3  ;; movzx edx,bx
..@0x8050ca7: db 0x01, 0xd0  ;; add eax,edx
..@0x8050ca9: db 0x8d, 0x90, 0x0f, 0x00, 0xff, 0xff  ;; lea edx,[eax-0xfff1]
..@0x8050caf: db 0x3d, 0xf1, 0xff, 0x00, 0x00  ;; cmp eax,0xfff1
..@0x8050cb4: db 0x0f, 0x4d, 0xc2  ;; cmovnl eax,edx
..@0x8050cb7: db 0x89, 0xda  ;; mov edx,ebx
..@0x8050cb9: jmp strict near R.code+0x8050b73
..@0x8050cbe: db 0x83, 0x7c, 0x24, 0x24, 0x02  ;; cmp dword [esp+0x24],byte +0x2
..@0x8050cc3: db 0x0f, 0x84, 0xd7, 0x01, 0x00, 0x00  ;; jz near A.code+0x8050ea0
..@0x8050cc9: db 0x0f, 0x8f, 0x2e, 0x01, 0x00, 0x00  ;; jg near A.code+0x8050dfd
..@0x8050ccf: db 0x83, 0x7c, 0x24, 0x24, 0x01  ;; cmp dword [esp+0x24],byte +0x1
..@0x8050cd4: db 0x0f, 0x85, 0xb5, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8050b8f
..@0x8050cda: db 0x8b, 0x00  ;; mov eax,[eax]
..@0x8050cdc: call R.code+0x804bcc0
..@0x8050ce1: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x8050ce5: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8050ce9: db 0xf7, 0xd1  ;; not ecx
..@0x8050ceb: and ecx, strict byte 0x7
..@0x8050cee: and edx, strict byte 0x7
..@0x8050cf1: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8050cf3: db 0x03, 0x44, 0x24, 0x5c  ;; add eax,[esp+0x5c]
..@0x8050cf7: cmp edx, strict byte 0x7
..@0x8050cfa: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050cfe: db 0x74, 0x0d  ;; jz A.code+0x8050d0d
..@0x8050d00: sub esi, strict byte 0x1
..@0x8050d03: db 0x39, 0x74, 0x24, 0x1c  ;; cmp [esp+0x1c],esi
..@0x8050d07: db 0x0f, 0x85, 0x7f, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8050b8c
..@0x8050d0d: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x8050d13: db 0x0f, 0xb6, 0xc8  ;; movzx ecx,al
..@0x8050d16: db 0x39, 0x57, 0x14  ;; cmp [edi+0x14],edx
..@0x8050d19: db 0x7e, 0x0a  ;; jng A.code+0x8050d25
..@0x8050d1b: db 0x8b, 0x47, 0x10  ;; mov eax,[edi+0x10]
..@0x8050d1e: db 0x88, 0x0c, 0x10  ;; mov [eax+edx],cl
..@0x8050d21: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8050d25: add edx, strict byte 0x1
..@0x8050d28: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x8050d2e: db 0x0f, 0xb7, 0xd3  ;; movzx edx,bx
..@0x8050d31: db 0x01, 0xd0  ;; add eax,edx
..@0x8050d33: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x8050d3b: db 0x8d, 0x90, 0x0f, 0x00, 0xff, 0xff  ;; lea edx,[eax-0xfff1]
..@0x8050d41: db 0x3d, 0xf1, 0xff, 0x00, 0x00  ;; cmp eax,0xfff1
..@0x8050d46: db 0x8b, 0x77, 0x08  ;; mov esi,[edi+0x8]
..@0x8050d49: db 0x0f, 0x4d, 0xc2  ;; cmovnl eax,edx
..@0x8050d4c: db 0x89, 0xda  ;; mov edx,ebx
..@0x8050d4e: db 0xc1, 0xea, 0x10  ;; shr edx,byte 0x10
..@0x8050d51: db 0x01, 0xc2  ;; add edx,eax
..@0x8050d53: db 0x8d, 0x9a, 0x0f, 0x00, 0xff, 0xff  ;; lea ebx,[edx-0xfff1]
..@0x8050d59: db 0x81, 0xfa, 0xf1, 0xff, 0x00, 0x00  ;; cmp edx,0xfff1
..@0x8050d5f: db 0x0f, 0x4c, 0xda  ;; cmovl ebx,edx
..@0x8050d62: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050d65: db 0x01, 0xc3  ;; add ebx,eax
..@0x8050d67: jmp strict near R.code+0x8050b8f
..@0x8050d6c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8050d70: db 0x0f, 0xb6, 0x30  ;; movzx esi,byte [eax]
..@0x8050d73: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8050d75: db 0x0f, 0xb6, 0xd1  ;; movzx edx,cl
..@0x8050d78: db 0x8b, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov ecx,[0x860cae8]
..@0x8050d7e: db 0x89, 0x54, 0x24, 0x5c  ;; mov [esp+0x5c],edx
..@0x8050d82: db 0x8b, 0x6f, 0x14  ;; mov ebp,[edi+0x14]
..@0x8050d85: db 0x39, 0xcd  ;; cmp ebp,ecx
..@0x8050d87: db 0x7e, 0x10  ;; jng A.code+0x8050d99
..@0x8050d89: db 0x8b, 0x6f, 0x10  ;; mov ebp,[edi+0x10]
..@0x8050d8c: db 0x89, 0xf2  ;; mov edx,esi
..@0x8050d8e: db 0x88, 0x54, 0x0d, 0x00  ;; mov [ebp+ecx+0x0],dl
..@0x8050d92: db 0x8b, 0x54, 0x24, 0x5c  ;; mov edx,[esp+0x5c]
..@0x8050d96: db 0x8b, 0x6f, 0x14  ;; mov ebp,[edi+0x14]
..@0x8050d99: db 0x8d, 0x71, 0x01  ;; lea esi,[ecx+0x1]
..@0x8050d9c: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x8050da0: db 0x89, 0x35, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],esi
..@0x8050da6: db 0x0f, 0xb7, 0xf3  ;; movzx esi,bx
..@0x8050da9: db 0x01, 0xf2  ;; add edx,esi
..@0x8050dab: db 0x8d, 0xb2, 0x0f, 0x00, 0xff, 0xff  ;; lea esi,[edx-0xfff1]
..@0x8050db1: db 0x81, 0xfa, 0xf1, 0xff, 0x00, 0x00  ;; cmp edx,0xfff1
..@0x8050db7: db 0x0f, 0x4d, 0xd6  ;; cmovnl edx,esi
..@0x8050dba: db 0xc1, 0xeb, 0x10  ;; shr ebx,byte 0x10
..@0x8050dbd: db 0x01, 0xd3  ;; add ebx,edx
..@0x8050dbf: db 0x8d, 0xb3, 0x0f, 0x00, 0xff, 0xff  ;; lea esi,[ebx-0xfff1]
..@0x8050dc5: db 0x81, 0xfb, 0xf1, 0xff, 0x00, 0x00  ;; cmp ebx,0xfff1
..@0x8050dcb: db 0x0f, 0x4d, 0xde  ;; cmovnl ebx,esi
..@0x8050dce: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x8050dd1: db 0x01, 0xd3  ;; add ebx,edx
..@0x8050dd3: db 0x0f, 0xb6, 0x50, 0x03  ;; movzx edx,byte [eax+0x3]
..@0x8050dd7: db 0x39, 0x6c, 0x24, 0x2c  ;; cmp [esp+0x2c],ebp
..@0x8050ddb: db 0x0f, 0xb6, 0xc2  ;; movzx eax,dl
..@0x8050dde: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050de2: db 0x7d, 0x0b  ;; jnl A.code+0x8050def
..@0x8050de4: db 0x8b, 0x47, 0x10  ;; mov eax,[edi+0x10]
..@0x8050de7: db 0x88, 0x54, 0x08, 0x01  ;; mov [eax+ecx+0x1],dl
..@0x8050deb: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8050def: add ecx, strict byte 0x2
..@0x8050df2: db 0x89, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ecx
..@0x8050df8: jmp strict near R.code+0x8050ca4
..@0x8050dfd: db 0x83, 0x7c, 0x24, 0x24, 0x04  ;; cmp dword [esp+0x24],byte +0x4
..@0x8050e02: db 0x74, 0x39  ;; jz A.code+0x8050e3d
..@0x8050e04: db 0x83, 0x7c, 0x24, 0x24, 0x08  ;; cmp dword [esp+0x24],byte +0x8
..@0x8050e09: db 0x0f, 0x85, 0x80, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8050b8f
..@0x8050e0f: db 0x8b, 0x00  ;; mov eax,[eax]
..@0x8050e11: call R.code+0x804bcc0
..@0x8050e16: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x8050e1c: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050e20: db 0x39, 0x57, 0x14  ;; cmp [edi+0x14],edx
..@0x8050e23: db 0x7e, 0x0a  ;; jng A.code+0x8050e2f
..@0x8050e25: db 0x8b, 0x4f, 0x10  ;; mov ecx,[edi+0x10]
..@0x8050e28: db 0x88, 0x04, 0x11  ;; mov [ecx+edx],al
..@0x8050e2b: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8050e2f: add edx, strict byte 0x1
..@0x8050e32: db 0x89, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],edx
..@0x8050e38: jmp strict near R.code+0x8050ca4
..@0x8050e3d: db 0x8b, 0x00  ;; mov eax,[eax]
..@0x8050e3f: call R.code+0x804bcc0
..@0x8050e44: db 0xf6, 0x44, 0x24, 0x1c, 0x01  ;; test byte [esp+0x1c],0x1
..@0x8050e49: db 0x74, 0x35  ;; jz A.code+0x8050e80
..@0x8050e4b: db 0x03, 0x44, 0x24, 0x5c  ;; add eax,[esp+0x5c]
..@0x8050e4f: db 0x89, 0xc2  ;; mov edx,eax
..@0x8050e51: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050e55: db 0x8b, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov ecx,[0x860cae8]
..@0x8050e5b: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8050e60: db 0x39, 0x4f, 0x14  ;; cmp [edi+0x14],ecx
..@0x8050e63: db 0x7e, 0x0a  ;; jng A.code+0x8050e6f
..@0x8050e65: db 0x8b, 0x57, 0x10  ;; mov edx,[edi+0x10]
..@0x8050e68: db 0x88, 0x04, 0x0a  ;; mov [edx+ecx],al
..@0x8050e6b: db 0x8b, 0x54, 0x24, 0x5c  ;; mov edx,[esp+0x5c]
..@0x8050e6f: add ecx, strict byte 0x1
..@0x8050e72: db 0x0f, 0xb7, 0xc3  ;; movzx eax,bx
..@0x8050e75: db 0x89, 0x0d, 0xe8, 0xca, 0x60, 0x08  ;; mov [0x860cae8],ecx
..@0x8050e7b: jmp strict near R.code+0x8050d31
..@0x8050e80: db 0xc1, 0xe0, 0x04  ;; shl eax,byte 0x4
..@0x8050e83: sub esi, strict byte 0x1
..@0x8050e86: db 0x03, 0x44, 0x24, 0x5c  ;; add eax,[esp+0x5c]
..@0x8050e8a: db 0x39, 0x74, 0x24, 0x1c  ;; cmp [esp+0x1c],esi
..@0x8050e8e: db 0x89, 0xc2  ;; mov edx,eax
..@0x8050e90: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050e94: db 0x0f, 0x85, 0xf2, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x8050b8c
..@0x8050e9a: db 0xeb, 0xb9  ;; jmp short A.code+0x8050e55
..@0x8050e9c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8050ea0: db 0x8b, 0x00  ;; mov eax,[eax]
..@0x8050ea2: call R.code+0x804bcc0
..@0x8050ea7: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8050eab: db 0xf7, 0xd2  ;; not edx
..@0x8050ead: and edx, strict byte 0x3
..@0x8050eb0: db 0x8d, 0x0c, 0x12  ;; lea ecx,[edx+edx]
..@0x8050eb3: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8050eb7: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8050eb9: db 0x03, 0x44, 0x24, 0x5c  ;; add eax,[esp+0x5c]
..@0x8050ebd: and edx, strict byte 0x3
..@0x8050ec0: cmp edx, strict byte 0x3
..@0x8050ec3: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050ec7: db 0x0f, 0x85, 0x33, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8050d00
..@0x8050ecd: jmp strict near R.code+0x8050d0d
..@0x8050ed2: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8050ed4: db 0x89, 0xea  ;; mov edx,ebp
..@0x8050ed6: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8050ed8: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8050edb: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8050edd: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8050ee0: db 0xc1, 0xe3, 0x18  ;; shl ebx,byte 0x18
..@0x8050ee3: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8050ee8: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8050eee: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8050ef0: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8050ef3: db 0x89, 0xfe  ;; mov esi,edi
..@0x8050ef5: db 0x01, 0xca  ;; add edx,ecx
..@0x8050ef7: db 0x01, 0xd0  ;; add eax,edx
..@0x8050ef9: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050efd: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8050f01: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8050f06: call R.code+0x804b8f0
..@0x8050f0b: db 0x8b, 0x7c, 0x24, 0x28  ;; mov edi,[esp+0x28]
..@0x8050f0f: db 0x8b, 0x15, 0xe8, 0xca, 0x60, 0x08  ;; mov edx,[0x860cae8]
..@0x8050f15: db 0x89, 0x7c, 0x24, 0x5c  ;; mov [esp+0x5c],edi
..@0x8050f19: db 0x39, 0xd7  ;; cmp edi,edx
..@0x8050f1b: db 0x0f, 0x8d, 0xb6, 0x01, 0x00, 0x00  ;; jnl near A.code+0x80510d7
..@0x8050f21: db 0x8b, 0x4e, 0x10  ;; mov ecx,[esi+0x10]
..@0x8050f24: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8050f29: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8050f2b: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x8050f2f: db 0x0f, 0xb6, 0x14, 0x19  ;; movzx edx,byte [ecx+ebx]
..@0x8050f33: add ebx, strict byte 0x1
..@0x8050f36: db 0x89, 0x5c, 0x24, 0x5c  ;; mov [esp+0x5c],ebx
..@0x8050f3a: db 0x31, 0xc2  ;; xor edx,eax
..@0x8050f3c: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8050f3f: db 0x89, 0xd7  ;; mov edi,edx
..@0x8050f41: db 0x81, 0xe7, 0xff, 0x00, 0x00, 0x00  ;; and edi,0xff
..@0x8050f47: db 0x33, 0x04, 0xbd, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[edi*4+0x80602a0]
..@0x8050f4e: db 0x3b, 0x5c, 0x24, 0x1c  ;; cmp ebx,[esp+0x1c]
..@0x8050f52: db 0x75, 0xdb  ;; jnz A.code+0x8050f2f
..@0x8050f54: db 0xf7, 0xd0  ;; not eax
..@0x8050f56: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8050f58: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8050f5a: db 0x89, 0xc2  ;; mov edx,eax
..@0x8050f5c: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x8050f5f: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8050f62: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8050f68: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8050f6b: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8050f71: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8050f74: db 0x01, 0xd8  ;; add eax,ebx
..@0x8050f76: db 0x01, 0xc1  ;; add ecx,eax
..@0x8050f78: db 0x01, 0xca  ;; add edx,ecx
..@0x8050f7a: db 0x89, 0x54, 0x24, 0x5c  ;; mov [esp+0x5c],edx
..@0x8050f7e: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8050f82: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8050f87: call R.code+0x804b8f0
..@0x8050f8c: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x8050f91: db 0x8b, 0x4e, 0x10  ;; mov ecx,[esi+0x10]
..@0x8050f94: db 0x2b, 0x44, 0x24, 0x30  ;; sub eax,[esp+0x30]
..@0x8050f98: sub eax, strict byte 0xc
..@0x8050f9b: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8050f9d: db 0x89, 0xc2  ;; mov edx,eax
..@0x8050f9f: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8050fa2: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8050fa5: db 0x01, 0xd3  ;; add ebx,edx
..@0x8050fa7: db 0x89, 0xc2  ;; mov edx,eax
..@0x8050fa9: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8050fae: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8050fb1: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8050fb4: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8050fba: db 0x01, 0xda  ;; add edx,ebx
..@0x8050fbc: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x8050fc0: db 0x01, 0xd0  ;; add eax,edx
..@0x8050fc2: db 0x89, 0x04, 0x19  ;; mov [ecx+ebx],eax
..@0x8050fc5: db 0x8b, 0x46, 0x68  ;; mov eax,[esi+0x68]
..@0x8050fc8: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x8050fcc: db 0x3b, 0x46, 0x6c  ;; cmp eax,[esi+0x6c]
..@0x8050fcf: db 0x7d, 0x43  ;; jnl A.code+0x8051014
..@0x8050fd1: db 0x8b, 0x56, 0x70  ;; mov edx,[esi+0x70]
..@0x8050fd4: db 0x8b, 0x04, 0x82  ;; mov eax,[edx+eax*4]
..@0x8050fd7: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x8050fd9: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8050fdb: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8050fdd: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8050fe0: db 0xc1, 0xe3, 0x18  ;; shl ebx,byte 0x18
..@0x8050fe3: db 0x8d, 0x5c, 0x0b, 0x0c  ;; lea ebx,[ebx+ecx+0xc]
..@0x8050fe7: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8050fe9: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8050fef: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x8050ff2: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8050ff5: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8050ffb: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8050ffd: db 0x01, 0xca  ;; add edx,ecx
..@0x8050fff: call R.code+0x804b8f0
..@0x8051004: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8051008: add eax, strict byte 0x1
..@0x805100b: db 0x89, 0x44, 0x24, 0x5c  ;; mov [esp+0x5c],eax
..@0x805100f: db 0x3b, 0x46, 0x6c  ;; cmp eax,[esi+0x6c]
..@0x8051012: db 0x7c, 0xbd  ;; jl A.code+0x8050fd1
..@0x8051014: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8051019: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x8051021: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8051025: call R.code+0x804b8f0
..@0x805102a: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x805102e: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8051033: db 0xc7, 0x44, 0x24, 0x5c, 0x49, 0x45, 0x4e, 0x44  ;; mov dword [esp+0x5c],0x444e4549
..@0x805103b: call R.code+0x804b8f0
..@0x8051040: db 0x8d, 0x44, 0x24, 0x5c  ;; lea eax,[esp+0x5c]
..@0x8051044: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x8051049: db 0xc7, 0x44, 0x24, 0x5c, 0xae, 0x42, 0x60, 0x82  ;; mov dword [esp+0x5c],0x826042ae
..@0x8051051: call R.code+0x804b8f0
..@0x8051056: db 0x8b, 0x86, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esi+0x84]
..@0x805105c: db 0x85, 0xc0  ;; test eax,eax
..@0x805105e: db 0x75, 0x0d  ;; jnz A.code+0x805106d
..@0x8051060: db 0xc7, 0x04, 0x24, 0x5e, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b55e
..@0x8051067: call [funcptr_printf]
..@0x805106d: db 0xa1, 0xe8, 0xca, 0x60, 0x08  ;; mov eax,[0x860cae8]
..@0x8051072: db 0xc7, 0x04, 0x24, 0xa6, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b5a6
..@0x8051079: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805107d: call [funcptr_printf]
..@0x8051083: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8051088: db 0x8b, 0xa8, 0x84, 0x00, 0x00, 0x00  ;; mov ebp,[eax+0x84]
..@0x805108e: db 0x85, 0xed  ;; test ebp,ebp
..@0x8051090: db 0x75, 0x4c  ;; jnz A.code+0x80510de
..@0x8051092: db 0xa1, 0x00, 0xef, 0x6a, 0x08  ;; mov eax,[0x86aef00]
..@0x8051097: db 0x85, 0xc0  ;; test eax,eax
..@0x8051099: db 0x74, 0x12  ;; jz A.code+0x80510ad
..@0x805109b: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805109e: call B.code+prog_free
..@0x80510a3: db 0xc7, 0x05, 0x00, 0xef, 0x6a, 0x08, 0x00, 0x00  ;; mov dword [0x86aef00],0x0
..@0x80510ab: db 0x00, 0x00
..@0x80510ad: db 0x8b, 0x35, 0xe8, 0xca, 0x60, 0x08  ;; mov esi,[0x860cae8]
..@0x80510b3: jmp strict near R.code+0x804f01d
..@0x80510b8: db 0xb8, 0x00, 0x00, 0x00, 0x01  ;; mov eax,0x1000000
..@0x80510bd: jmp strict near R.code+0x8050ef9
..@0x80510c2: db 0x8d, 0x54, 0x40, 0x01  ;; lea edx,[eax+eax*2+0x1]
..@0x80510c6: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x80510cc: db 0x89, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; mov [0x983e094],edx
..@0x80510d2: jmp strict near R.code+0x805083a
..@0x80510d7: db 0x31, 0xd2  ;; xor edx,edx
..@0x80510d9: jmp strict near R.code+0x8050f7a
..@0x80510de: db 0xc7, 0x04, 0x24, 0x49, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_nl
..@0x80510e5: call [funcptr_printf]
..@0x80510eb: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x80510f0: db 0x8b, 0x80, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[eax+0x84]
..@0x80510f6: db 0x85, 0xc0  ;; test eax,eax
..@0x80510f8: db 0x74, 0x98  ;; jz A.code+0x8051092
..@0x80510fa: db 0x8d, 0x44, 0x24, 0x7c  ;; lea eax,[esp+0x7c]
..@0x80510fe: db 0xc7, 0x44, 0x24, 0x7c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x7c],0x0
..@0x8051106: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805110a: db 0x8d, 0x44, 0x24, 0x74  ;; lea eax,[esp+0x74]
..@0x805110e: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8051111: db 0xc7, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x80],0x0
..@0x8051119: db 0x00, 0x00, 0x00
..@0x805111c: call B.code+gettimeofday
..@0x8051121: db 0x8b, 0x44, 0x24, 0x74  ;; mov eax,[esp+0x74]
..@0x8051125: db 0x8b, 0x54, 0x24, 0x78  ;; mov edx,[esp+0x78]
..@0x8051129: db 0x2b, 0x44, 0x24, 0x6c  ;; sub eax,[esp+0x6c]
..@0x805112d: db 0x2b, 0x54, 0x24, 0x70  ;; sub edx,[esp+0x70]
%ifidn TARGET, ls
..@0x8051131: db 0x79, 0x09  ;; jns A.code+0x805113c
..@0x8051133: db 0x81, 0xc2, 0x40, 0x42, 0x0f, 0x00  ;; add edx, 1000000
..@0x8051139: sub eax, strict byte 0x1
              ; Now the to-be-displayed time difference is in EAX (seconds) + EDX (microseconds).
..@0x805113c: db 0x89, 0x44, 0x24, 0x4c  ;; mov [esp+0x4c],eax
..@0x8051140: db 0xdb, 0x44, 0x24, 0x4c  ;; fild dword [esp+0x4c]
..@0x8051144: db 0x89, 0x54, 0x24, 0x4c  ;; mov [esp+0x4c],edx
..@0x8051148: db 0xd9, 0x05, 0x44, 0xb7, 0x05, 0x08  ;; fld dword [f32_1000000]
..@0x805114e: db 0xc7, 0x04, 0x24, 0xbd, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_message_took_time
..@0x8051155: db 0xdc, 0xc9  ;; fmul to st1
..@0x8051157: db 0xdb, 0x44, 0x24, 0x4c  ;; fild dword [esp+0x4c]
..@0x805115b: db 0xde, 0xc2  ;; faddp st2
..@0x805115d: db 0xde, 0xf9  ;; fdivp st1
..@0x805115f: db 0xdd, 0x5c, 0x24, 0x04  ;; fstp qword [esp+0x4]  ; Store double-precision float (64-bit) to printf value argument.
..@0x8051163: call [funcptr_printf]
%else  ; TARGET, ls
..@0x8051131: jns .1
              add edx, 1000000
              dec eax
.1:              ; Now the to-be-displayed time difference is in EAX (seconds) + EDX (microseconds).
              db 0xc7, 0x04, 0x24
                dd str_fmt_took_time  ;; mov dword [esp],str_fmt_took_time. Push to the stack for *funcptr_printf.
              test eax, eax
              jns .2
              xor eax, eax  ; Convert a negative number to 0.
              xor edx, edx
.2:           mov [esp+4], eax  ; Seconds. Push to the stack for *funcptr_printf.
              ; Now we divide EDX by 1000, to convert from microseconds to
              ; milliseconds. We use EAX as a scratch register.
              ; Multiplication is faster than division, so we do it like
              ; this.
              mov eax, 0x10624dd3
              mul edx  ; EDX:EAX := EAX * EDX.
              shr edx, 6
              mov [esp+8], edx  ; Milliseconds. Push to the stack for *funcptr_printf.
              call [funcptr_printf]
              times 4 dw 0x9066  ;; o16 nop  ; Padding.
%endif  ; TARGET, ls
..@0x8051169: jmp strict near R.code+0x8051092
..@0x805116e: db 0x8b, 0x45, 0x14  ;; mov eax,[ebp+0x14]
..@0x8051171: db 0x85, 0xc0  ;; test eax,eax
..@0x8051173: db 0x75, 0x09  ;; jnz A.code+0x805117e
..@0x8051175: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x8051179: db 0x89, 0x5d, 0x14  ;; mov [ebp+0x14],ebx
..@0x805117c: db 0x89, 0xd8  ;; mov eax,ebx
..@0x805117e: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8051181: call B.code+prog_malloc
..@0x8051186: db 0x85, 0xc0  ;; test eax,eax
..@0x8051188: db 0x89, 0x45, 0x10  ;; mov [ebp+0x10],eax
..@0x805118b: db 0x0f, 0x85, 0xfb, 0xdf, 0xff, 0xff  ;; jnz near A.code+0x804f18c
..@0x8051191: db 0xc7, 0x04, 0x24, 0xf2, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4f2
..@0x8051198: call [funcptr_printf]
..@0x805119e: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x80511a4: jmp strict near R.code+0x804efe7
..@0x80511a9: db 0x8d, 0x14, 0x85, 0x01, 0x00, 0x00, 0x00  ;; lea edx,[eax*4+0x1]
..@0x80511b0: db 0x89, 0x15, 0x94, 0xe0, 0x83, 0x09  ;; mov [0x983e094],edx
..@0x80511b6: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x80511bc: jmp strict near R.code+0x805083a
..@0x80511c1: db 0x0f, 0xaf, 0x05, 0x78, 0xd6, 0x05, 0x08  ;; imul eax,[0x805d678]
..@0x80511c8: add eax, strict byte 0x7
..@0x80511cb: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x80511ce: add eax, strict byte 0x1
..@0x80511d1: db 0xa3, 0x94, 0xe0, 0x83, 0x09  ;; mov [0x983e094],eax
..@0x80511d6: call R.code+0x804ebe0
..@0x80511db: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x80511e1: db 0x8b, 0x0d, 0x80, 0xfe, 0x05, 0x08  ;; mov ecx,[0x805fe80]
..@0x80511e7: db 0x8d, 0x73, 0xff  ;; lea esi,[ebx-0x1]
..@0x80511ea: db 0x85, 0xf6  ;; test esi,esi
..@0x80511ec: db 0x89, 0xf2  ;; mov edx,esi
..@0x80511ee: db 0x89, 0x74, 0x24, 0x5c  ;; mov [esp+0x5c],esi
..@0x80511f2: db 0x78, 0x58  ;; js A.code+0x805124c
..@0x80511f4: db 0x89, 0x4c, 0x24, 0x1c  ;; mov [esp+0x1c],ecx
..@0x80511f8: db 0x8b, 0x04, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov eax,[edx*4+0x805d680]
..@0x80511ff: db 0x8b, 0x0c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[edx*4+0x805d680]
..@0x8051206: db 0xc1, 0xf8, 0x0b  ;; sar eax,byte 0xb
..@0x8051209: db 0xc1, 0xf9, 0x16  ;; sar ecx,byte 0x16
..@0x805120c: db 0x31, 0xc8  ;; xor eax,ecx
..@0x805120e: db 0x2b, 0x04, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; sub eax,[edx*4+0x805d680]
..@0x8051215: db 0x25, 0xff, 0x07, 0x00, 0x00  ;; and eax,0x7ff
..@0x805121a: db 0x8b, 0x0c, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov ecx,[eax*4+0x805da80]
..@0x8051221: db 0x89, 0x14, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov [eax*4+0x805da80],edx
..@0x8051228: db 0x89, 0x0c, 0x95, 0x80, 0xfa, 0x05, 0x08  ;; mov [edx*4+0x805fa80],ecx
..@0x805122f: sub edx, strict byte 0x1
..@0x8051232: cmp edx, strict byte -0x1
..@0x8051235: db 0x75, 0xc1  ;; jnz A.code+0x80511f8
..@0x8051237: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x805123b: db 0xc7, 0x44, 0x24, 0x5c, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x5c],0xffffffff
..@0x8051243: db 0x8d, 0x44, 0x31, 0x01  ;; lea eax,[ecx+esi+0x1]
..@0x8051247: db 0xa3, 0x80, 0xfe, 0x05, 0x08  ;; mov [0x805fe80],eax
..@0x805124c: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x805124f: jmp strict near R.code+0x805083a
..@0x8051254: db 0xbb, 0x11, 0x11, 0x11, 0x00  ;; mov ebx,0x111111
..@0x8051259: jmp strict near R.code+0x804ffd4
..@0x805125e: db 0xbb, 0x55, 0x55, 0x55, 0x00  ;; mov ebx,0x555555
..@0x8051263: jmp strict near R.code+0x804ffd4
..@0x8051268: add ebx, strict byte 0x1
..@0x805126b: jmp strict near R.code+0x804ff85
..@0x8051270: db 0xc7, 0x04, 0x24, 0x4c, 0xb3, 0x05, 0x08  ;; mov dword [esp],0x805b34c
..@0x8051277: call [funcptr_printf]
..@0x805127d: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x8051283: jmp strict near R.code+0x804efe7
..@0x8051288: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x805128c: db 0x89, 0x5c, 0x24, 0x28  ;; mov [esp+0x28],ebx
..@0x8051290: jmp strict near R.code+0x804f878
..@0x8051295: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8051299: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x805129d: jmp strict near R.code+0x804f878
..@0x80512a2: db 0xc7, 0x04, 0x24, 0x8a, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b58a
..@0x80512a9: call [funcptr_printf]
..@0x80512af: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x80512b5: jmp strict near R.code+0x804efe7
..@0x80512ba: or esi, strict byte 0x4
..@0x80512bd: jmp strict near R.code+0x804ef5d
..@0x80512c2: db 0x8b, 0x6c, 0x24, 0x24  ;; mov ebp,[esp+0x24]
..@0x80512c6: db 0x8b, 0x84, 0xac, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+ebp*4+0x84]
..@0x80512cd: db 0xc7, 0x04, 0x24, 0xe8, 0xb2, 0x05, 0x08  ;; mov dword [esp],0x805b2e8
..@0x80512d4: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80512d8: call [funcptr_printf]
..@0x80512de: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x80512e4: jmp strict near R.code+0x804efe7
..@0x80512e9: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x80512ee: db 0x31, 0xf6  ;; xor esi,esi
..@0x80512f0: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x80512f8: jmp strict near R.code+0x804ef0a
..@0x80512fd: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x8051300: db 0x8d, 0x04, 0x85, 0x06, 0x00, 0x00, 0x00  ;; lea eax,[eax*4+0x6]
..@0x8051307: db 0x0f, 0xaf, 0x45, 0x0c  ;; imul eax,[ebp+0xc]
..@0x805130b: db 0x01, 0x44, 0x24, 0x24  ;; add [esp+0x24],eax
..@0x805130f: jmp strict near R.code+0x804f174
..@0x8051314: db 0xc7, 0x04, 0x24, 0x96, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b496
..@0x805131b: call [funcptr_printf]
..@0x8051321: db 0xf7, 0xc6, 0x01, 0x00, 0x00, 0x00  ;; test esi,0x1
..@0x8051327: db 0x74, 0x0d  ;; jz A.code+0x8051336
..@0x8051329: db 0xc7, 0x04, 0x24, 0x9e, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b49e
..@0x8051330: call [funcptr_printf]
..@0x8051336: db 0xf7, 0xc6, 0x02, 0x00, 0x00, 0x00  ;; test esi,0x2
..@0x805133c: db 0x74, 0x0d  ;; jz A.code+0x805134b
..@0x805133e: db 0xc7, 0x04, 0x24, 0xb4, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4b4
..@0x8051345: call [funcptr_printf]
..@0x805134b: and esi, strict byte 0x4
..@0x805134e: db 0x74, 0x0d  ;; jz A.code+0x805135d
..@0x8051350: db 0xc7, 0x04, 0x24, 0x94, 0xb2, 0x05, 0x08  ;; mov dword [esp],0x805b294
..@0x8051357: call [funcptr_printf]
..@0x805135d: db 0x8b, 0x74, 0x24, 0x24  ;; mov esi,[esp+0x24]
..@0x8051361: db 0x8b, 0x84, 0xb4, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+esi*4+0x84]
..@0x8051368: db 0xc7, 0x04, 0x24, 0xc7, 0xb4, 0x05, 0x08  ;; mov dword [esp],0x805b4c7
..@0x805136f: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051373: call [funcptr_printf]
..@0x8051379: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x805137f: jmp strict near R.code+0x804efe7
..@0x8051384: db 0xc7, 0x44, 0x24, 0x24, 0x06, 0x00, 0x00, 0x00  ;; mov dword [esp+0x24],0x6
..@0x805138c: jmp strict near R.code+0x804f3e8
..@0x8051391: db 0xc7, 0x44, 0x24, 0x24, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x24],0x2
..@0x8051399: jmp strict near R.code+0x804f3e8
..@0x805139e: db 0x8b, 0x7c, 0x24, 0x20  ;; mov edi,[esp+0x20]
..@0x80513a2: db 0xb9, 0x04, 0x00, 0x00, 0x00  ;; mov ecx,0x4
..@0x80513a7: db 0x8b, 0x57, 0x0c  ;; mov edx,[edi+0xc]
..@0x80513aa: db 0x8b, 0x47, 0x08  ;; mov eax,[edi+0x8]
..@0x80513ad: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80513b5: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x80513bd: db 0xc7, 0x04, 0x24, 0x08, 0x00, 0x00, 0x00  ;; mov dword [esp],0x8
..@0x80513c4: call B.code+unknown_func3
..@0x80513c9: db 0x85, 0xc0  ;; test eax,eax
..@0x80513cb: db 0x0f, 0x84, 0x10, 0xdc, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80513d1: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80513d7: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x80513da: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80513de: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x80513e0: db 0x85, 0xc0  ;; test eax,eax
..@0x80513e2: db 0x0f, 0x8e, 0xb0, 0xf2, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x80513e8: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x80513f0: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x80513f5: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x80513fb: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8051401: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051403: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8051409: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x805140c: db 0x0f, 0x8c, 0x1a, 0x01, 0x00, 0x00  ;; jl near A.code+0x805152c
..@0x8051412: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8051419: call [0x805d668]
..@0x805141f: db 0x85, 0xc0  ;; test eax,eax
..@0x8051421: db 0x0f, 0x85, 0xba, 0xdb, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051427: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x805142c: db 0x74, 0x60  ;; jz A.code+0x805148e
..@0x805142e: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051433: db 0x74, 0x45  ;; jz A.code+0x805147a
..@0x8051435: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805143b: db 0x31, 0xf6  ;; xor esi,esi
..@0x805143d: db 0x8b, 0x7b, 0x08  ;; mov edi,[ebx+0x8]
..@0x8051440: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051442: db 0x85, 0xff  ;; test edi,edi
..@0x8051444: db 0x7e, 0x1a  ;; jng A.code+0x8051460
..@0x8051446: db 0x0f, 0xb7, 0x44, 0xb5, 0x02  ;; movzx eax,word [ebp+esi*4+0x2]
..@0x805144b: add esi, strict byte 0x1
..@0x805144e: call R.code+0x804de00
..@0x8051453: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051459: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x805145c: db 0x89, 0xd8  ;; mov eax,ebx
..@0x805145e: db 0x7f, 0xe6  ;; jg A.code+0x8051446
..@0x8051460: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8051465: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x8051468: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x805146c: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x805146f: db 0x0f, 0x8f, 0x7b, 0xff, 0xff, 0xff  ;; jg near A.code+0x80513f0
..@0x8051475: jmp strict near R.code+0x8050694
..@0x805147a: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x805147f: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8051483: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x8051487: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x805148c: db 0xeb, 0xa7  ;; jmp short A.code+0x8051435
..@0x805148e: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8051496: db 0x04, 0x08
..@0x8051498: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805149a: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x805149f: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x80514a7: db 0x00, 0x00
..@0x80514a9: db 0x31, 0xc0  ;; xor eax,eax
..@0x80514ab: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x80514b0: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x80514b5: db 0xf3, 0xab  ;; rep stosd
..@0x80514b7: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x80514bc: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x80514c4: db 0x00, 0x00
..@0x80514c6: db 0x8b, 0x40, 0x08  ;; mov eax,[eax+0x8]
..@0x80514c9: db 0x85, 0xc0  ;; test eax,eax
..@0x80514cb: db 0x7e, 0x19  ;; jng A.code+0x80514e6
..@0x80514cd: db 0x31, 0xff  ;; xor edi,edi
..@0x80514cf: db 0x0f, 0xb7, 0x44, 0xbd, 0x02  ;; movzx eax,word [ebp+edi*4+0x2]
..@0x80514d4: add edi, strict byte 0x1
..@0x80514d7: call R.code+0x804de00
..@0x80514dc: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x80514e1: db 0x39, 0x78, 0x08  ;; cmp [eax+0x8],edi
..@0x80514e4: db 0x7f, 0xe9  ;; jg A.code+0x80514cf
..@0x80514e6: call R.code+0x804ec20
..@0x80514eb: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x80514f0: db 0x0f, 0x84, 0xeb, 0xda, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80514f6: db 0x39, 0xf0  ;; cmp eax,esi
..@0x80514f8: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x80514fe: db 0x7d, 0x0a  ;; jnl A.code+0x805150a
..@0x8051500: db 0x8b, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d674]
..@0x8051506: db 0x89, 0xc6  ;; mov esi,eax
..@0x8051508: db 0x89, 0xda  ;; mov edx,ebx
..@0x805150a: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x805150d: cmp eax, strict byte 0x4
..@0x8051510: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051515: db 0x7e, 0x92  ;; jng A.code+0x80514a9
..@0x8051517: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x805151b: db 0x89, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebx
..@0x8051521: db 0x89, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],edx
..@0x8051527: jmp strict near R.code+0x8051435
..@0x805152c: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x805152f: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051533: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x805153a: call [funcptr_printf]
..@0x8051540: jmp strict near R.code+0x8051412
..@0x8051545: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x8051548: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805154c: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x8051553: call [funcptr_printf]
..@0x8051559: jmp strict near R.code+0x805062a
..@0x805155e: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8051566: db 0x04, 0x08
..@0x8051568: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805156a: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x805156f: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x8051577: db 0x00, 0x00
..@0x8051579: db 0x31, 0xc0  ;; xor eax,eax
..@0x805157b: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x8051580: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8051585: db 0xf3, 0xab  ;; rep stosd
..@0x8051587: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x805158c: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x8051594: db 0x00, 0x00
..@0x8051596: db 0x8b, 0x48, 0x08  ;; mov ecx,[eax+0x8]
..@0x8051599: db 0x85, 0xc9  ;; test ecx,ecx
..@0x805159b: db 0x7e, 0x18  ;; jng A.code+0x80515b5
..@0x805159d: db 0x31, 0xff  ;; xor edi,edi
..@0x805159f: db 0x8b, 0x44, 0xbd, 0x00  ;; mov eax,[ebp+edi*4+0x0]
..@0x80515a3: add edi, strict byte 0x1
..@0x80515a6: call R.code+0x804e150
..@0x80515ab: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x80515b0: db 0x39, 0x78, 0x08  ;; cmp [eax+0x8],edi
..@0x80515b3: db 0x7f, 0xea  ;; jg A.code+0x805159f
..@0x80515b5: call R.code+0x804ec20
..@0x80515ba: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x80515bf: db 0x0f, 0x84, 0x1c, 0xda, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80515c5: db 0x39, 0xf0  ;; cmp eax,esi
..@0x80515c7: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x80515cd: db 0x7d, 0x0a  ;; jnl A.code+0x80515d9
..@0x80515cf: db 0x8b, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d674]
..@0x80515d5: db 0x89, 0xc6  ;; mov esi,eax
..@0x80515d7: db 0x89, 0xda  ;; mov edx,ebx
..@0x80515d9: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x80515dc: cmp eax, strict byte 0x4
..@0x80515df: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x80515e4: db 0x7e, 0x93  ;; jng A.code+0x8051579
..@0x80515e6: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x80515ea: db 0x89, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebx
..@0x80515f0: db 0x89, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],edx
..@0x80515f6: jmp strict near R.code+0x8050655
..@0x80515fb: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x80515ff: db 0x3b, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; cmp ebx,[0x860cae8]
..@0x8051605: db 0x7d, 0x47  ;; jnl A.code+0x805164e
..@0x8051607: db 0xa1, 0xac, 0x06, 0x06, 0x08  ;; mov eax,[0x80606ac]
..@0x805160c: db 0x85, 0xc0  ;; test eax,eax
..@0x805160e: db 0x0f, 0x8e, 0xbd, 0xf1, 0xff, 0xff  ;; jng near A.code+0x80507d1
..@0x8051614: db 0x8d, 0x34, 0x80  ;; lea esi,[eax+eax*4]
..@0x8051617: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8051619: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x805161b: db 0xc1, 0xe6, 0x06  ;; shl esi,byte 0x6
..@0x805161e: db 0x31, 0xc0  ;; xor eax,eax
..@0x8051620: db 0x0f, 0xb6, 0x94, 0x01, 0x00, 0xcb, 0x60, 0x08  ;; movzx edx,byte [ecx+eax+0x860cb00]
..@0x8051628: db 0x89, 0x94, 0x83, 0xc0, 0x0b, 0x06, 0x08  ;; mov [ebx+eax*4+0x8060bc0],edx
..@0x805162f: add eax, strict byte 0x1
..@0x8051632: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x8051637: db 0x75, 0xe7  ;; jnz A.code+0x8051620
..@0x8051639: db 0x81, 0xc1, 0x40, 0x01, 0x00, 0x00  ;; add ecx,0x140
..@0x805163f: db 0x81, 0xc3, 0x18, 0x0a, 0x00, 0x00  ;; add ebx,0xa18
..@0x8051645: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x8051647: db 0x75, 0xd5  ;; jnz A.code+0x805161e
..@0x8051649: jmp strict near R.code+0x80507d1
..@0x805164e: db 0x8b, 0x6c, 0x24, 0x20  ;; mov ebp,[esp+0x20]
..@0x8051652: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8051656: db 0x85, 0xc0  ;; test eax,eax
..@0x8051658: db 0x74, 0x10  ;; jz A.code+0x805166a
..@0x805165a: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x805165e: db 0x3b, 0x1d, 0xe8, 0xca, 0x60, 0x08  ;; cmp ebx,[0x860cae8]
..@0x8051664: db 0x0f, 0x8c, 0xd9, 0xe2, 0xff, 0xff  ;; jl near A.code+0x804f943
..@0x805166a: db 0x8b, 0x85, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[ebp+0x84]
..@0x8051670: jmp strict near R.code+0x80510f6
..@0x8051675: db 0x8b, 0x04, 0xbd, 0x00, 0xdf, 0x6a, 0x08  ;; mov eax,[edi*4+0x86adf00]
..@0x805167c: db 0xba, 0x7f, 0xda, 0x05, 0x08  ;; mov edx,0x805da7f
..@0x8051681: db 0x0f, 0xb6, 0x0a  ;; movzx ecx,byte [edx]
..@0x8051684: sub edx, strict byte 0x1
..@0x8051687: db 0x31, 0xc1  ;; xor ecx,eax
..@0x8051689: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x805168c: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x805168f: db 0x33, 0x04, 0x8d, 0xa0, 0x02, 0x06, 0x08  ;; xor eax,[ecx*4+0x80602a0]
..@0x8051696: db 0x81, 0xfa, 0x7f, 0xd6, 0x05, 0x08  ;; cmp edx,0x805d67f
..@0x805169c: db 0x75, 0xe3  ;; jnz A.code+0x8051681
..@0x805169e: db 0x89, 0x04, 0xbd, 0x00, 0xdf, 0x6a, 0x08  ;; mov [edi*4+0x86adf00],eax
..@0x80516a5: jmp strict near R.code+0x8050750
..@0x80516aa: db 0xc7, 0x04, 0x24, 0x7d, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b57d
..@0x80516b1: call [funcptr_printf]
..@0x80516b7: db 0x8b, 0x2d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d660]
..@0x80516bd: db 0xeb, 0x93  ;; jmp short A.code+0x8051652
..@0x80516bf: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x80516c3: db 0xb9, 0x02, 0x00, 0x00, 0x00  ;; mov ecx,0x2
..@0x80516c8: db 0x8b, 0x56, 0x0c  ;; mov edx,[esi+0xc]
..@0x80516cb: db 0x8b, 0x46, 0x08  ;; mov eax,[esi+0x8]
..@0x80516ce: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80516d6: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x80516de: db 0xc7, 0x04, 0x24, 0x08, 0x00, 0x00, 0x00  ;; mov dword [esp],0x8
..@0x80516e5: call B.code+unknown_func3
..@0x80516ea: db 0x85, 0xc0  ;; test eax,eax
..@0x80516ec: db 0x0f, 0x84, 0xef, 0xd8, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80516f2: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80516f8: db 0x8b, 0x73, 0x0c  ;; mov esi,[ebx+0xc]
..@0x80516fb: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80516ff: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x8051701: db 0x85, 0xf6  ;; test esi,esi
..@0x8051703: db 0x0f, 0x8e, 0x8f, 0xef, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x8051709: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8051711: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x8051716: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x805171c: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8051722: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051724: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x805172a: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x805172d: db 0x0f, 0x8c, 0x22, 0x01, 0x00, 0x00  ;; jl near A.code+0x8051855
..@0x8051733: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x805173a: call [0x805d668]
..@0x8051740: db 0x85, 0xc0  ;; test eax,eax
..@0x8051742: db 0x0f, 0x85, 0x99, 0xd8, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051748: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x805174d: db 0x74, 0x64  ;; jz A.code+0x80517b3
..@0x805174f: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051754: db 0x74, 0x49  ;; jz A.code+0x805179f
..@0x8051756: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805175c: db 0x31, 0xf6  ;; xor esi,esi
..@0x805175e: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x8051761: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051763: db 0x85, 0xd2  ;; test edx,edx
..@0x8051765: db 0x7e, 0x1e  ;; jng A.code+0x8051785
..@0x8051767: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x805176b: add esi, strict byte 0x1
..@0x805176e: db 0x25, 0xff, 0xff, 0xff, 0x00  ;; and eax,0xffffff
..@0x8051773: call R.code+0x804d9a0
..@0x8051778: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805177e: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x8051781: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051783: db 0x7f, 0xe2  ;; jg A.code+0x8051767
..@0x8051785: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x805178a: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x805178d: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8051791: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x8051794: db 0x0f, 0x8f, 0x77, 0xff, 0xff, 0xff  ;; jg near A.code+0x8051711
..@0x805179a: jmp strict near R.code+0x8050694
..@0x805179f: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x80517a4: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x80517a8: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x80517ac: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x80517b1: db 0xeb, 0xa3  ;; jmp short A.code+0x8051756
..@0x80517b3: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x80517bb: db 0x04, 0x08
..@0x80517bd: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80517bf: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x80517c4: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x80517cc: db 0x00, 0x00
..@0x80517ce: db 0x31, 0xc0  ;; xor eax,eax
..@0x80517d0: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x80517d5: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x80517da: db 0xf3, 0xab  ;; rep stosd
..@0x80517dc: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x80517e1: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x80517e9: db 0x00, 0x00
..@0x80517eb: db 0x8b, 0x48, 0x08  ;; mov ecx,[eax+0x8]
..@0x80517ee: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80517f0: db 0x7e, 0x1d  ;; jng A.code+0x805180f
..@0x80517f2: db 0x31, 0xff  ;; xor edi,edi
..@0x80517f4: db 0x8b, 0x44, 0xbd, 0x00  ;; mov eax,[ebp+edi*4+0x0]
..@0x80517f8: add edi, strict byte 0x1
..@0x80517fb: db 0x25, 0xff, 0xff, 0xff, 0x00  ;; and eax,0xffffff
..@0x8051800: call R.code+0x804d9a0
..@0x8051805: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x805180a: db 0x39, 0x78, 0x08  ;; cmp [eax+0x8],edi
..@0x805180d: db 0x7f, 0xe5  ;; jg A.code+0x80517f4
..@0x805180f: call R.code+0x804ec20
..@0x8051814: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x8051819: db 0x0f, 0x84, 0xc2, 0xd7, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x805181f: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8051821: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x8051827: db 0x7d, 0x0a  ;; jnl A.code+0x8051833
..@0x8051829: db 0x8b, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d674]
..@0x805182f: db 0x89, 0xc6  ;; mov esi,eax
..@0x8051831: db 0x89, 0xda  ;; mov edx,ebx
..@0x8051833: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x8051836: cmp eax, strict byte 0x4
..@0x8051839: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x805183e: db 0x7e, 0x8e  ;; jng A.code+0x80517ce
..@0x8051840: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x8051844: db 0x89, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebx
..@0x805184a: db 0x89, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],edx
..@0x8051850: jmp strict near R.code+0x8051756
..@0x8051855: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x8051858: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805185c: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x8051863: call [funcptr_printf]  ; This is the first print of str_fmt_percent (got it from gdb).
..@0x8051869: jmp strict near R.code+0x8051733
..@0x805186e: db 0x8b, 0x1d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d66c]
..@0x8051874: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8051878: call R.code+0x804ebe0
..@0x805187d: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x8051881: sub esi, strict byte 0x1
..@0x8051884: db 0x85, 0xf6  ;; test esi,esi
..@0x8051886: db 0x89, 0xf2  ;; mov edx,esi
..@0x8051888: db 0x78, 0x46  ;; js A.code+0x80518d0
..@0x805188a: db 0x8b, 0x3d, 0x80, 0xfe, 0x05, 0x08  ;; mov edi,[0x805fe80]
..@0x8051890: db 0x8b, 0x0c, 0x95, 0x80, 0xd6, 0x05, 0x08  ;; mov ecx,[edx*4+0x805d680]
..@0x8051897: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8051899: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x805189b: db 0xc1, 0xf8, 0x0b  ;; sar eax,byte 0xb
..@0x805189e: db 0xc1, 0xfb, 0x16  ;; sar ebx,byte 0x16
..@0x80518a1: db 0x31, 0xd8  ;; xor eax,ebx
..@0x80518a3: db 0x29, 0xc8  ;; sub eax,ecx
..@0x80518a5: db 0x25, 0xff, 0x07, 0x00, 0x00  ;; and eax,0x7ff
..@0x80518aa: db 0x8b, 0x0c, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov ecx,[eax*4+0x805da80]
..@0x80518b1: db 0x89, 0x14, 0x85, 0x80, 0xda, 0x05, 0x08  ;; mov [eax*4+0x805da80],edx
..@0x80518b8: db 0x89, 0x0c, 0x95, 0x80, 0xfa, 0x05, 0x08  ;; mov [edx*4+0x805fa80],ecx
..@0x80518bf: sub edx, strict byte 0x1
..@0x80518c2: cmp edx, strict byte -0x1
..@0x80518c5: db 0x75, 0xc9  ;; jnz A.code+0x8051890
..@0x80518c7: db 0x8d, 0x44, 0x37, 0x01  ;; lea eax,[edi+esi+0x1]
..@0x80518cb: db 0xa3, 0x80, 0xfe, 0x05, 0x08  ;; mov [0x805fe80],eax
..@0x80518d0: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x80518d4: db 0x8b, 0x0d, 0x78, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d678]
..@0x80518da: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x80518de: db 0x8b, 0x56, 0x0c  ;; mov edx,[esi+0xc]
..@0x80518e1: db 0x8b, 0x46, 0x08  ;; mov eax,[esi+0x8]
..@0x80518e4: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x80518e7: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x80518eb: db 0x89, 0x7c, 0x24, 0x08  ;; mov [esp+0x8],edi
..@0x80518ef: db 0xc7, 0x44, 0x24, 0x04, 0x80, 0xd6, 0x05, 0x08  ;; mov dword [esp+0x4],0x805d680
..@0x80518f7: call B.code+unknown_func3
..@0x80518fc: db 0x85, 0xc0  ;; test eax,eax
..@0x80518fe: db 0x0f, 0x84, 0xdd, 0xd6, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x8051904: db 0xa1, 0x78, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d678]
..@0x8051909: cmp eax, strict byte 0x8
..@0x805190c: db 0x0f, 0x84, 0x6e, 0x06, 0x00, 0x00  ;; jz near A.code+0x8051f80
..@0x8051912: cmp eax, strict byte 0x4
..@0x8051915: db 0x0f, 0x84, 0x7c, 0x04, 0x00, 0x00  ;; jz near A.code+0x8051d97
..@0x805191b: cmp eax, strict byte 0x2
..@0x805191e: db 0x0f, 0x84, 0x52, 0x02, 0x00, 0x00  ;; jz near A.code+0x8051b76
..@0x8051924: cmp eax, strict byte 0x1
..@0x8051927: db 0x0f, 0x85, 0x2d, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8051b5a
..@0x805192d: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051933: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x8051936: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x805193a: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x805193c: db 0x85, 0xc0  ;; test eax,eax
..@0x805193e: db 0x0f, 0x8e, 0x54, 0xed, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x8051944: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x805194c: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x8051951: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x8051957: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x805195d: db 0x89, 0xd0  ;; mov eax,edx
..@0x805195f: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8051965: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x8051968: db 0x0f, 0x8c, 0xa6, 0x01, 0x00, 0x00  ;; jl near A.code+0x8051b14
..@0x805196e: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8051975: call [0x805d668]
..@0x805197b: db 0x85, 0xc0  ;; test eax,eax
..@0x805197d: db 0x0f, 0x85, 0x5e, 0xd6, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051983: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x8051988: db 0x0f, 0x84, 0x98, 0x00, 0x00, 0x00  ;; jz near A.code+0x8051a26
..@0x805198e: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051993: db 0x0f, 0x84, 0x94, 0x01, 0x00, 0x00  ;; jz near A.code+0x8051b2d
..@0x8051999: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805199f: db 0x8b, 0x7b, 0x08  ;; mov edi,[ebx+0x8]
..@0x80519a2: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80519a6: db 0x85, 0xff  ;; test edi,edi
..@0x80519a8: db 0x7e, 0x62  ;; jng A.code+0x8051a0c
..@0x80519aa: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x80519ad: db 0x31, 0xf6  ;; xor esi,esi
..@0x80519af: call R.code+0x804bcc0
..@0x80519b4: db 0x89, 0xc2  ;; mov edx,eax
..@0x80519b6: db 0xc1, 0xe2, 0x07  ;; shl edx,byte 0x7
..@0x80519b9: add esi, strict byte 0x1
..@0x80519bc: db 0x39, 0xfe  ;; cmp esi,edi
..@0x80519be: db 0x7d, 0x43  ;; jnl A.code+0x8051a03
..@0x80519c0: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x80519c4: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x80519c8: call R.code+0x804bcc0
..@0x80519cd: db 0x89, 0xf1  ;; mov ecx,esi
..@0x80519cf: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x80519d3: db 0xf7, 0xd1  ;; not ecx
..@0x80519d5: and ecx, strict byte 0x7
..@0x80519d8: db 0xd3, 0xe0  ;; shl eax,cl
..@0x80519da: db 0x01, 0xc2  ;; add edx,eax
..@0x80519dc: db 0x89, 0xf0  ;; mov eax,esi
..@0x80519de: and eax, strict byte 0x7
..@0x80519e1: cmp eax, strict byte 0x7
..@0x80519e4: db 0x75, 0xd3  ;; jnz A.code+0x80519b9
..@0x80519e6: db 0x89, 0xd0  ;; mov eax,edx
..@0x80519e8: add esi, strict byte 0x1
..@0x80519eb: call R.code+0x804e670
..@0x80519f0: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x80519f6: db 0x31, 0xd2  ;; xor edx,edx
..@0x80519f8: db 0x8b, 0x7b, 0x08  ;; mov edi,[ebx+0x8]
..@0x80519fb: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x80519ff: db 0x39, 0xfe  ;; cmp esi,edi
..@0x8051a01: db 0x7c, 0xbd  ;; jl A.code+0x80519c0
..@0x8051a03: and esi, strict byte 0x7
..@0x8051a06: db 0x0f, 0x85, 0x38, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8051b44
..@0x8051a0c: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8051a11: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x8051a14: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8051a18: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x8051a1b: db 0x0f, 0x8f, 0x2b, 0xff, 0xff, 0xff  ;; jg near A.code+0x805194c
..@0x8051a21: jmp strict near R.code+0x8050698
..@0x8051a26: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8051a2e: db 0x04, 0x08
..@0x8051a30: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x8051a38: db 0x00, 0x00
..@0x8051a3a: db 0xc7, 0x44, 0x24, 0x20, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x20],0x0
..@0x8051a42: db 0xc7, 0x44, 0x24, 0x28, 0xff, 0xff, 0xff, 0x7f  ;; mov dword [esp+0x28],0x7fffffff
..@0x8051a4a: db 0x31, 0xc0  ;; xor eax,eax
..@0x8051a4c: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x8051a51: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8051a56: db 0xf3, 0xab  ;; rep stosd
..@0x8051a58: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8051a5d: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x8051a65: db 0x00, 0x00
..@0x8051a67: db 0x8b, 0x78, 0x08  ;; mov edi,[eax+0x8]
..@0x8051a6a: db 0x85, 0xff  ;; test edi,edi
..@0x8051a6c: db 0x7e, 0x58  ;; jng A.code+0x8051ac6
..@0x8051a6e: db 0x8b, 0x45, 0x00  ;; mov eax,[ebp+0x0]
..@0x8051a71: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8051a73: call R.code+0x804bcc0
..@0x8051a78: db 0x89, 0xc6  ;; mov esi,eax
..@0x8051a7a: db 0xc1, 0xe6, 0x07  ;; shl esi,byte 0x7
..@0x8051a7d: add ebx, strict byte 0x1
..@0x8051a80: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8051a82: db 0x7d, 0x36  ;; jnl A.code+0x8051aba
..@0x8051a84: db 0x8b, 0x44, 0x9d, 0x00  ;; mov eax,[ebp+ebx*4+0x0]
..@0x8051a88: call R.code+0x804bcc0
..@0x8051a8d: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8051a8f: db 0xf7, 0xd1  ;; not ecx
..@0x8051a91: and ecx, strict byte 0x7
..@0x8051a94: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8051a96: db 0x01, 0xc6  ;; add esi,eax
..@0x8051a98: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051a9a: and eax, strict byte 0x7
..@0x8051a9d: cmp eax, strict byte 0x7
..@0x8051aa0: db 0x75, 0xdb  ;; jnz A.code+0x8051a7d
..@0x8051aa2: db 0x89, 0xf0  ;; mov eax,esi
..@0x8051aa4: add ebx, strict byte 0x1
..@0x8051aa7: db 0x31, 0xf6  ;; xor esi,esi
..@0x8051aa9: call R.code+0x804e670
..@0x8051aae: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8051ab3: db 0x8b, 0x78, 0x08  ;; mov edi,[eax+0x8]
..@0x8051ab6: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8051ab8: db 0x7c, 0xca  ;; jl A.code+0x8051a84
..@0x8051aba: and ebx, strict byte 0x7
..@0x8051abd: db 0x74, 0x07  ;; jz A.code+0x8051ac6
..@0x8051abf: db 0x89, 0xf0  ;; mov eax,esi
..@0x8051ac1: call R.code+0x804e670
..@0x8051ac6: call R.code+0x804ec20
..@0x8051acb: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x8051ad0: db 0x0f, 0x84, 0x0b, 0xd5, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x8051ad6: db 0x39, 0x44, 0x24, 0x28  ;; cmp [esp+0x28],eax
..@0x8051ada: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x8051ae0: db 0x7e, 0x08  ;; jng A.code+0x8051aea
..@0x8051ae2: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8051ae6: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8051aea: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x8051aed: cmp eax, strict byte 0x4
..@0x8051af0: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051af5: db 0x0f, 0x8e, 0x4f, 0xff, 0xff, 0xff  ;; jng near A.code+0x8051a4a
..@0x8051afb: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8051aff: db 0x8b, 0x74, 0x24, 0x20  ;; mov esi,[esp+0x20]
..@0x8051b03: db 0x89, 0x1d, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],ebx
..@0x8051b09: db 0x89, 0x35, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],esi
..@0x8051b0f: jmp strict near R.code+0x8051999
..@0x8051b14: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x8051b17: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051b1b: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x8051b22: call [funcptr_printf]
..@0x8051b28: jmp strict near R.code+0x805196e
..@0x8051b2d: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x8051b32: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8051b36: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x8051b3a: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051b3f: jmp strict near R.code+0x8051999
..@0x8051b44: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051b46: call R.code+0x804e670
..@0x8051b4b: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051b51: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051b55: jmp strict near R.code+0x8051a0c
..@0x8051b5a: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051b5e: db 0xc7, 0x04, 0x24, 0x60, 0xb5, 0x05, 0x08  ;; mov dword [esp],0x805b560
..@0x8051b65: call [funcptr_printf]
..@0x8051b6b: db 0x8b, 0x1d, 0xa4, 0x06, 0x06, 0x08  ;; mov ebx,[0x80606a4]
..@0x8051b71: jmp strict near R.code+0x804efe7
..@0x8051b76: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051b7c: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x8051b7f: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051b83: db 0x8b, 0x33  ;; mov esi,[ebx]
..@0x8051b85: db 0x85, 0xc0  ;; test eax,eax
..@0x8051b87: db 0x0f, 0x8e, 0x0b, 0xeb, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x8051b8d: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8051b95: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x8051b9a: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x8051ba0: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8051ba6: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051ba8: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8051bae: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x8051bb1: db 0x7d, 0x14  ;; jnl A.code+0x8051bc7
..@0x8051bb3: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x8051bb6: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051bba: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x8051bc1: call [funcptr_printf]
..@0x8051bc7: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8051bce: call [0x805d668]
..@0x8051bd4: db 0x85, 0xc0  ;; test eax,eax
..@0x8051bd6: db 0x0f, 0x85, 0x05, 0xd4, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051bdc: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x8051be1: db 0x0f, 0x84, 0xa3, 0x00, 0x00, 0x00  ;; jz near A.code+0x8051c8a
..@0x8051be7: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051bec: db 0x75, 0x12  ;; jnz A.code+0x8051c00
..@0x8051bee: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x8051bf3: db 0x8b, 0x6c, 0x24, 0x1c  ;; mov ebp,[esp+0x1c]
..@0x8051bf7: db 0x0f, 0xb6, 0x04, 0x28  ;; movzx eax,byte [eax+ebp]
..@0x8051bfb: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051c00: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051c06: db 0x8b, 0x6b, 0x08  ;; mov ebp,[ebx+0x8]
..@0x8051c09: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051c0d: db 0x85, 0xed  ;; test ebp,ebp
..@0x8051c0f: db 0x7e, 0x5f  ;; jng A.code+0x8051c70
..@0x8051c11: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8051c13: db 0x31, 0xff  ;; xor edi,edi
..@0x8051c15: call R.code+0x804bcc0
..@0x8051c1a: db 0x89, 0xc2  ;; mov edx,eax
..@0x8051c1c: db 0xc1, 0xe2, 0x06  ;; shl edx,byte 0x6
..@0x8051c1f: db 0xeb, 0x32  ;; jmp short A.code+0x8051c53
..@0x8051c21: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8051c28: db 0x8b, 0x04, 0xbe  ;; mov eax,[esi+edi*4]
..@0x8051c2b: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x8051c2f: call R.code+0x804bcc0
..@0x8051c34: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8051c36: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8051c3a: db 0xf7, 0xd1  ;; not ecx
..@0x8051c3c: and ecx, strict byte 0x3
..@0x8051c3f: db 0x01, 0xc9  ;; add ecx,ecx
..@0x8051c41: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8051c43: db 0x01, 0xc2  ;; add edx,eax
..@0x8051c45: db 0x89, 0xf8  ;; mov eax,edi
..@0x8051c47: and eax, strict byte 0x3
..@0x8051c4a: cmp eax, strict byte 0x3
..@0x8051c4d: db 0x0f, 0x84, 0x20, 0x01, 0x00, 0x00  ;; jz near A.code+0x8051d73
..@0x8051c53: add edi, strict byte 0x1
..@0x8051c56: db 0x39, 0xef  ;; cmp edi,ebp
..@0x8051c58: db 0x7c, 0xce  ;; jl A.code+0x8051c28
..@0x8051c5a: and edi, strict byte 0x3
..@0x8051c5d: db 0x74, 0x11  ;; jz A.code+0x8051c70
..@0x8051c5f: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051c61: call R.code+0x804e670
..@0x8051c66: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051c6c: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051c70: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8051c75: db 0x03, 0x73, 0x04  ;; add esi,[ebx+0x4]
..@0x8051c78: db 0x8b, 0x6c, 0x24, 0x1c  ;; mov ebp,[esp+0x1c]
..@0x8051c7c: db 0x39, 0x6b, 0x0c  ;; cmp [ebx+0xc],ebp
..@0x8051c7f: db 0x0f, 0x8f, 0x10, 0xff, 0xff, 0xff  ;; jg near A.code+0x8051b95
..@0x8051c85: jmp strict near R.code+0x8050698
..@0x8051c8a: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8051c92: db 0x04, 0x08
..@0x8051c94: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8051c96: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x8051c9e: db 0x00, 0x00
..@0x8051ca0: db 0xc7, 0x44, 0x24, 0x20, 0xff, 0xff, 0xff, 0x7f  ;; mov dword [esp+0x20],0x7fffffff
..@0x8051ca8: db 0x31, 0xc0  ;; xor eax,eax
..@0x8051caa: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x8051caf: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8051cb4: db 0xf3, 0xab  ;; rep stosd
..@0x8051cb6: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8051cbb: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x8051cc3: db 0x00, 0x00
..@0x8051cc5: db 0x8b, 0x78, 0x08  ;; mov edi,[eax+0x8]
..@0x8051cc8: db 0x85, 0xff  ;; test edi,edi
..@0x8051cca: db 0x7e, 0x59  ;; jng A.code+0x8051d25
..@0x8051ccc: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8051cce: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8051cd0: call R.code+0x804bcc0
..@0x8051cd5: db 0x89, 0xc2  ;; mov edx,eax
..@0x8051cd7: db 0xc1, 0xe2, 0x06  ;; shl edx,byte 0x6
..@0x8051cda: add ebx, strict byte 0x1
..@0x8051cdd: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8051cdf: db 0x7d, 0x3f  ;; jnl A.code+0x8051d20
..@0x8051ce1: db 0x8b, 0x04, 0x9e  ;; mov eax,[esi+ebx*4]
..@0x8051ce4: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x8051ce8: call R.code+0x804bcc0
..@0x8051ced: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8051cef: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8051cf3: db 0xf7, 0xd1  ;; not ecx
..@0x8051cf5: and ecx, strict byte 0x3
..@0x8051cf8: db 0x01, 0xc9  ;; add ecx,ecx
..@0x8051cfa: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8051cfc: db 0x01, 0xc2  ;; add edx,eax
..@0x8051cfe: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051d00: and eax, strict byte 0x3
..@0x8051d03: cmp eax, strict byte 0x3
..@0x8051d06: db 0x75, 0xd2  ;; jnz A.code+0x8051cda
..@0x8051d08: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051d0a: add ebx, strict byte 0x1
..@0x8051d0d: call R.code+0x804e670
..@0x8051d12: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8051d17: db 0x31, 0xd2  ;; xor edx,edx
..@0x8051d19: db 0x8b, 0x78, 0x08  ;; mov edi,[eax+0x8]
..@0x8051d1c: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8051d1e: db 0x7c, 0xc1  ;; jl A.code+0x8051ce1
..@0x8051d20: and ebx, strict byte 0x3
..@0x8051d23: db 0x75, 0x69  ;; jnz A.code+0x8051d8e
..@0x8051d25: call R.code+0x804ec20
..@0x8051d2a: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x8051d2f: db 0x0f, 0x84, 0xac, 0xd2, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x8051d35: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x8051d39: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x8051d3f: db 0x7e, 0x0c  ;; jng A.code+0x8051d4d
..@0x8051d41: db 0x8b, 0x2d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d674]
..@0x8051d47: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x8051d4b: db 0x89, 0xea  ;; mov edx,ebp
..@0x8051d4d: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x8051d50: cmp eax, strict byte 0x4
..@0x8051d53: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051d58: db 0x0f, 0x8e, 0x4a, 0xff, 0xff, 0xff  ;; jng near A.code+0x8051ca8
..@0x8051d5e: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8051d62: db 0x89, 0x2d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebp
..@0x8051d68: db 0x89, 0x1d, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],ebx
..@0x8051d6e: jmp strict near R.code+0x8051c00
..@0x8051d73: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051d75: call R.code+0x804e670
..@0x8051d7a: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051d80: db 0x31, 0xd2  ;; xor edx,edx
..@0x8051d82: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051d86: db 0x8b, 0x6b, 0x08  ;; mov ebp,[ebx+0x8]
..@0x8051d89: jmp strict near R.code+0x8051c53
..@0x8051d8e: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051d90: call R.code+0x804e670
..@0x8051d95: db 0xeb, 0x8e  ;; jmp short A.code+0x8051d25
..@0x8051d97: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051d9d: db 0x8b, 0x43, 0x0c  ;; mov eax,[ebx+0xc]
..@0x8051da0: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051da4: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x8051da6: db 0x85, 0xc0  ;; test eax,eax
..@0x8051da8: db 0x0f, 0x8e, 0xea, 0xe8, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x8051dae: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8051db6: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x8051dbb: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x8051dc1: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8051dc7: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051dc9: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8051dcf: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x8051dd2: db 0x7d, 0x14  ;; jnl A.code+0x8051de8
..@0x8051dd4: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x8051dd7: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8051ddb: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x8051de2: call [funcptr_printf]
..@0x8051de8: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8051def: call [0x805d668]
..@0x8051df5: db 0x85, 0xc0  ;; test eax,eax
..@0x8051df7: db 0x0f, 0x85, 0xe4, 0xd1, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051dfd: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x8051e02: db 0x0f, 0x84, 0x97, 0x00, 0x00, 0x00  ;; jz near A.code+0x8051e9f
..@0x8051e08: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051e0d: db 0x75, 0x12  ;; jnz A.code+0x8051e21
..@0x8051e0f: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x8051e14: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8051e18: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x8051e1c: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051e21: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051e27: db 0x31, 0xf6  ;; xor esi,esi
..@0x8051e29: db 0x31, 0xff  ;; xor edi,edi
..@0x8051e2b: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x8051e2e: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051e30: db 0x85, 0xd2  ;; test edx,edx
..@0x8051e32: db 0x7f, 0x1b  ;; jg A.code+0x8051e4f
..@0x8051e34: db 0xeb, 0x4f  ;; jmp short A.code+0x8051e85
..@0x8051e36: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8051e39: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8051e40: db 0xc1, 0xe0, 0x04  ;; shl eax,byte 0x4
..@0x8051e43: db 0x01, 0xc7  ;; add edi,eax
..@0x8051e45: add esi, strict byte 0x1
..@0x8051e48: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051e4a: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x8051e4d: db 0x7e, 0x22  ;; jng A.code+0x8051e71
..@0x8051e4f: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x8051e53: call R.code+0x804bcc0
..@0x8051e58: db 0xf7, 0xc6, 0x01, 0x00, 0x00, 0x00  ;; test esi,0x1
..@0x8051e5e: db 0x74, 0xe0  ;; jz A.code+0x8051e40
..@0x8051e60: db 0x01, 0xf8  ;; add eax,edi
..@0x8051e62: db 0x31, 0xff  ;; xor edi,edi
..@0x8051e64: call R.code+0x804e670
..@0x8051e69: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051e6f: db 0xeb, 0xd4  ;; jmp short A.code+0x8051e45
..@0x8051e71: and esi, strict byte 0x1
..@0x8051e74: db 0x74, 0x0f  ;; jz A.code+0x8051e85
..@0x8051e76: db 0x89, 0xf8  ;; mov eax,edi
..@0x8051e78: call R.code+0x804e670
..@0x8051e7d: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051e83: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8051e85: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x8051e8a: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x8051e8d: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8051e91: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x8051e94: db 0x0f, 0x8f, 0x1c, 0xff, 0xff, 0xff  ;; jg near A.code+0x8051db6
..@0x8051e9a: jmp strict near R.code+0x8050694
..@0x8051e9f: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8051ea7: db 0x04, 0x08
..@0x8051ea9: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8051eab: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x8051eb0: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x8051eb8: db 0x00, 0x00
..@0x8051eba: db 0x31, 0xc0  ;; xor eax,eax
..@0x8051ebc: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x8051ec1: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8051ec6: db 0xf3, 0xab  ;; rep stosd
..@0x8051ec8: db 0x8b, 0x0d, 0x60, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d660]
..@0x8051ece: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x8051ed6: db 0x00, 0x00
..@0x8051ed8: db 0x8b, 0x79, 0x08  ;; mov edi,[ecx+0x8]
..@0x8051edb: db 0x85, 0xff  ;; test edi,edi
..@0x8051edd: db 0x7e, 0x57  ;; jng A.code+0x8051f36
..@0x8051edf: db 0x31, 0xff  ;; xor edi,edi
..@0x8051ee1: db 0x31, 0xd2  ;; xor edx,edx
..@0x8051ee3: db 0xeb, 0x0d  ;; jmp short A.code+0x8051ef2
..@0x8051ee5: db 0xc1, 0xe0, 0x04  ;; shl eax,byte 0x4
..@0x8051ee8: add edi, strict byte 0x1
..@0x8051eeb: db 0x01, 0xc2  ;; add edx,eax
..@0x8051eed: db 0x39, 0x79, 0x08  ;; cmp [ecx+0x8],edi
..@0x8051ef0: db 0x7e, 0x38  ;; jng A.code+0x8051f2a
..@0x8051ef2: db 0x8b, 0x44, 0xbd, 0x00  ;; mov eax,[ebp+edi*4+0x0]
..@0x8051ef6: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x8051efa: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x8051efe: call R.code+0x804bcc0
..@0x8051f03: db 0xf7, 0xc7, 0x01, 0x00, 0x00, 0x00  ;; test edi,0x1
..@0x8051f09: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8051f0d: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x8051f11: db 0x74, 0xd2  ;; jz A.code+0x8051ee5
..@0x8051f13: db 0x01, 0xd0  ;; add eax,edx
..@0x8051f15: add edi, strict byte 0x1
..@0x8051f18: call R.code+0x804e670
..@0x8051f1d: db 0x8b, 0x0d, 0x60, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d660]
..@0x8051f23: db 0x31, 0xd2  ;; xor edx,edx
..@0x8051f25: db 0x39, 0x79, 0x08  ;; cmp [ecx+0x8],edi
..@0x8051f28: db 0x7f, 0xc8  ;; jg A.code+0x8051ef2
..@0x8051f2a: and edi, strict byte 0x1
..@0x8051f2d: db 0x74, 0x07  ;; jz A.code+0x8051f36
..@0x8051f2f: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051f31: call R.code+0x804e670
..@0x8051f36: call R.code+0x804ec20
..@0x8051f3b: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x8051f40: db 0x0f, 0x84, 0x9b, 0xd0, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x8051f46: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8051f48: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x8051f4e: db 0x7d, 0x0a  ;; jnl A.code+0x8051f5a
..@0x8051f50: db 0x8b, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d674]
..@0x8051f56: db 0x89, 0xc6  ;; mov esi,eax
..@0x8051f58: db 0x89, 0xda  ;; mov edx,ebx
..@0x8051f5a: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x8051f5d: cmp eax, strict byte 0x4
..@0x8051f60: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051f65: db 0x0f, 0x8e, 0x4f, 0xff, 0xff, 0xff  ;; jng near A.code+0x8051eba
..@0x8051f6b: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x8051f6f: db 0x89, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebx
..@0x8051f75: db 0x89, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],edx
..@0x8051f7b: jmp strict near R.code+0x8051e21
..@0x8051f80: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051f86: db 0x8b, 0x73, 0x0c  ;; mov esi,[ebx+0xc]
..@0x8051f89: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8051f8d: db 0x8b, 0x2b  ;; mov ebp,[ebx]
..@0x8051f8f: db 0x85, 0xf6  ;; test esi,esi
..@0x8051f91: db 0x0f, 0x8e, 0x01, 0xe7, 0xff, 0xff  ;; jng near A.code+0x8050698
..@0x8051f97: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x8051f9f: db 0x6b, 0x44, 0x24, 0x1c, 0x64  ;; imul eax,[esp+0x1c],byte +0x64
..@0x8051fa4: db 0x03, 0x05, 0xc0, 0xc6, 0x60, 0x08  ;; add eax,[0x860c6c0]
..@0x8051faa: db 0xf7, 0x25, 0xc4, 0xc6, 0x60, 0x08  ;; mul dword [0x860c6c4]
..@0x8051fb0: db 0x89, 0xd0  ;; mov eax,edx
..@0x8051fb2: db 0x8b, 0x15, 0x60, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d660]
..@0x8051fb8: db 0x39, 0x42, 0x78  ;; cmp [edx+0x78],eax
..@0x8051fbb: db 0x0f, 0x8c, 0x20, 0x01, 0x00, 0x00  ;; jl near A.code+0x80520e1
..@0x8051fc1: db 0xc7, 0x04, 0x24, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp],0x1
..@0x8051fc8: call [0x805d668]
..@0x8051fce: db 0x85, 0xc0  ;; test eax,eax
..@0x8051fd0: db 0x0f, 0x85, 0x0b, 0xd0, 0xff, 0xff  ;; jnz near A.code+0x804efe1
..@0x8051fd6: db 0x83, 0x7c, 0x24, 0x38, 0x05  ;; cmp dword [esp+0x38],byte +0x5
..@0x8051fdb: db 0x74, 0x62  ;; jz A.code+0x805203f
..@0x8051fdd: db 0x83, 0x7c, 0x24, 0x38, 0x06  ;; cmp dword [esp+0x38],byte +0x6
..@0x8051fe2: db 0x75, 0x12  ;; jnz A.code+0x8051ff6
..@0x8051fe4: db 0xa1, 0x04, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e104]
..@0x8051fe9: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8051fed: db 0x0f, 0xb6, 0x04, 0x18  ;; movzx eax,byte [eax+ebx]
..@0x8051ff1: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x8051ff6: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x8051ffc: db 0x31, 0xf6  ;; xor esi,esi
..@0x8051ffe: db 0x8b, 0x53, 0x08  ;; mov edx,[ebx+0x8]
..@0x8052001: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8052003: db 0x85, 0xd2  ;; test edx,edx
..@0x8052005: db 0x7e, 0x1e  ;; jng A.code+0x8052025
..@0x8052007: db 0x8b, 0x44, 0xb5, 0x00  ;; mov eax,[ebp+esi*4+0x0]
..@0x805200b: add esi, strict byte 0x1
..@0x805200e: call R.code+0x804bcc0
..@0x8052013: call R.code+0x804e670
..@0x8052018: db 0x8b, 0x1d, 0x60, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d660]
..@0x805201e: db 0x39, 0x73, 0x08  ;; cmp [ebx+0x8],esi
..@0x8052021: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8052023: db 0x7f, 0xe2  ;; jg A.code+0x8052007
..@0x8052025: db 0x83, 0x44, 0x24, 0x1c, 0x01  ;; add dword [esp+0x1c],byte +0x1
..@0x805202a: db 0x03, 0x6b, 0x04  ;; add ebp,[ebx+0x4]
..@0x805202d: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8052031: db 0x39, 0x73, 0x0c  ;; cmp [ebx+0xc],esi
..@0x8052034: db 0x0f, 0x8f, 0x65, 0xff, 0xff, 0xff  ;; jg near A.code+0x8051f9f
..@0x805203a: jmp strict near R.code+0x8050694
..@0x805203f: db 0xc7, 0x05, 0xa0, 0x06, 0x06, 0x08, 0xa0, 0xbc  ;; mov dword [0x80606a0],A.code+0x804bca0
..@0x8052047: db 0x04, 0x08
..@0x8052049: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805204b: db 0xbe, 0xff, 0xff, 0xff, 0x7f  ;; mov esi,0x7fffffff
..@0x8052050: db 0xc7, 0x05, 0x74, 0xd6, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d674],0x0
..@0x8052058: db 0x00, 0x00
..@0x805205a: db 0x31, 0xc0  ;; xor eax,eax
..@0x805205c: db 0xbf, 0xe0, 0xc6, 0x60, 0x08  ;; mov edi,0x860c6e0
..@0x8052061: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8052066: db 0xf3, 0xab  ;; rep stosd
..@0x8052068: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x805206d: db 0xc7, 0x05, 0xe0, 0xca, 0x60, 0x08, 0x00, 0x00  ;; mov dword [0x860cae0],0x0
..@0x8052075: db 0x00, 0x00
..@0x8052077: db 0x8b, 0x48, 0x08  ;; mov ecx,[eax+0x8]
..@0x805207a: db 0x85, 0xc9  ;; test ecx,ecx
..@0x805207c: db 0x7e, 0x1d  ;; jng A.code+0x805209b
..@0x805207e: db 0x31, 0xff  ;; xor edi,edi
..@0x8052080: db 0x8b, 0x44, 0xbd, 0x00  ;; mov eax,[ebp+edi*4+0x0]
..@0x8052084: add edi, strict byte 0x1
..@0x8052087: call R.code+0x804bcc0
..@0x805208c: call R.code+0x804e670
..@0x8052091: db 0xa1, 0x60, 0xd6, 0x05, 0x08  ;; mov eax,[0x805d660]
..@0x8052096: db 0x39, 0x78, 0x08  ;; cmp [eax+0x8],edi
..@0x8052099: db 0x7f, 0xe5  ;; jg A.code+0x8052080
..@0x805209b: call R.code+0x804ec20
..@0x80520a0: db 0x3d, 0x00, 0x00, 0x00, 0x80  ;; cmp eax,0x80000000
..@0x80520a5: db 0x0f, 0x84, 0x36, 0xcf, 0xff, 0xff  ;; jz near A.code+0x804efe1
..@0x80520ab: db 0x39, 0xc6  ;; cmp esi,eax
..@0x80520ad: db 0x8b, 0x15, 0x74, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d674]
..@0x80520b3: db 0x7e, 0x0a  ;; jng A.code+0x80520bf
..@0x80520b5: db 0x8b, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov ebx,[0x805d674]
..@0x80520bb: db 0x89, 0xc6  ;; mov esi,eax
..@0x80520bd: db 0x89, 0xda  ;; mov edx,ebx
..@0x80520bf: db 0x8d, 0x42, 0x01  ;; lea eax,[edx+0x1]
..@0x80520c2: cmp eax, strict byte 0x4
..@0x80520c5: db 0xa3, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],eax
..@0x80520ca: db 0x7e, 0x8e  ;; jng A.code+0x805205a
..@0x80520cc: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x80520d0: db 0x89, 0x1d, 0x74, 0xd6, 0x05, 0x08  ;; mov [0x805d674],ebx
..@0x80520d6: db 0x89, 0x15, 0xa0, 0x06, 0x06, 0x08  ;; mov [0x80606a0],edx
..@0x80520dc: jmp strict near R.code+0x8051ff6
..@0x80520e1: db 0x89, 0x42, 0x78  ;; mov [edx+0x78],eax
..@0x80520e4: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80520e8: db 0xc7, 0x04, 0x24, 0x58, 0xb5, 0x05, 0x08  ;; mov dword [esp],str_fmt_percent
..@0x80520ef: call [funcptr_printf]
..@0x80520f5: jmp strict near R.code+0x8051fc1
..@0x80520fa: db 0xc1, 0xe2, 0x06  ;; shl edx,byte 0x6
..@0x80520fd: db 0xc7, 0x44, 0x24, 0x04, 0xc0, 0xc6, 0x56, 0x08  ;; mov dword [esp+0x4],0x856c6c0
..@0x8052105: db 0xbe, 0x80, 0xd6, 0x05, 0x08  ;; mov esi,0x805d680
..@0x805210a: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x805210e: db 0xbf, 0x00, 0xcb, 0x6a, 0x08  ;; mov edi,0x86acb00
..@0x8052113: db 0xc7, 0x04, 0x24, 0x00, 0xcb, 0x60, 0x08  ;; mov dword [esp],0x860cb00
..@0x805211a: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x805211e: call B.code+memcpy
..@0x8052123: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8052128: db 0xf3, 0xa5  ;; rep movsd
..@0x805212a: db 0x8b, 0x7b, 0x74  ;; mov edi,[ebx+0x74]
..@0x805212d: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8052131: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8052135: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x8052139: jmp strict near R.code+0x80506f7
..@0x805213e: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8052142: db 0x85, 0xc0  ;; test eax,eax
..@0x8052144: db 0x74, 0x0f  ;; jz A.code+0x8052155
..@0x8052146: db 0x8b, 0x3d, 0x6c, 0xd6, 0x05, 0x08  ;; mov edi,[0x805d66c]
..@0x805214c: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x8052150: jmp strict near R.code+0x8051878
..@0x8052155: db 0x83, 0x3d, 0x78, 0xd6, 0x05, 0x08, 0x08  ;; cmp dword [0x805d678],byte +0x8
..@0x805215c: db 0x74, 0x0f  ;; jz A.code+0x805216d
..@0x805215e: db 0x8b, 0x2d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ebp,[0x805d66c]
..@0x8052164: db 0x89, 0x6c, 0x24, 0x2c  ;; mov [esp+0x2c],ebp
..@0x8052168: jmp strict near R.code+0x8051878
..@0x805216d: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8052171: db 0x8b, 0x40, 0x74  ;; mov eax,[eax+0x74]
..@0x8052174: db 0x85, 0xc0  ;; test eax,eax
..@0x8052176: db 0x7e, 0x18  ;; jng A.code+0x8052190
..@0x8052178: db 0xa1, 0xb0, 0x06, 0x06, 0x08  ;; mov eax,[0x80606b0]
..@0x805217d: db 0x85, 0xc0  ;; test eax,eax
..@0x805217f: db 0x74, 0x1e  ;; jz A.code+0x805219f
..@0x8052181: db 0x8b, 0x0d, 0x6c, 0xd6, 0x05, 0x08  ;; mov ecx,[0x805d66c]
..@0x8052187: db 0x89, 0x4c, 0x24, 0x2c  ;; mov [esp+0x2c],ecx
..@0x805218b: jmp strict near R.code+0x8051878
..@0x8052190: db 0x8b, 0x15, 0x6c, 0xd6, 0x05, 0x08  ;; mov edx,[0x805d66c]
..@0x8052196: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x805219a: jmp strict near R.code+0x8051878
..@0x805219f: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x80521a3: db 0x8b, 0x43, 0x2c  ;; mov eax,[ebx+0x2c]
..@0x80521a6: db 0x85, 0xc0  ;; test eax,eax
..@0x80521a8: db 0x74, 0x0f  ;; jz A.code+0x80521b9
..@0x80521aa: db 0x8b, 0x35, 0x6c, 0xd6, 0x05, 0x08  ;; mov esi,[0x805d66c]
..@0x80521b0: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x80521b4: jmp strict near R.code+0x8051878
..@0x80521b9: db 0x8b, 0x3d, 0x6c, 0xd6, 0x05, 0x08  ;; mov edi,[0x805d66c]
..@0x80521bf: cmp edi, strict byte 0x2
..@0x80521c2: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x80521c6: db 0x0f, 0x8e, 0xd3, 0x00, 0x00, 0x00  ;; jng near A.code+0x805229f
..@0x80521cc: db 0x8b, 0x2d, 0xac, 0x06, 0x06, 0x08  ;; mov ebp,[0x80606ac]
..@0x80521d2: db 0xbf, 0x02, 0x00, 0x00, 0x00  ;; mov edi,0x2
..@0x80521d7: db 0x89, 0xfe  ;; mov esi,edi
..@0x80521d9: db 0x69, 0xc5, 0x18, 0x0a, 0x00, 0x00  ;; imul eax,ebp,dword 0xa18
..@0x80521df: db 0x89, 0x6c, 0x24, 0x3c  ;; mov [esp+0x3c],ebp
..@0x80521e3: db 0x69, 0xed, 0xe8, 0xf5, 0xff, 0xff  ;; imul ebp,ebp,dword 0xfffff5e8
..@0x80521e9: db 0x8d, 0x48, 0x08  ;; lea ecx,[eax+0x8]
..@0x80521ec: add eax, strict byte 0x4
..@0x80521ef: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x80521f3: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x80521f7: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x80521fc: db 0x8b, 0x04, 0xbd, 0x80, 0xd6, 0x05, 0x08  ;; mov eax,[edi*4+0x805d680]
..@0x8052203: db 0x8b, 0x1c, 0xb5, 0x80, 0xd6, 0x05, 0x08  ;; mov ebx,[esi*4+0x805d680]
..@0x805220a: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x805220e: db 0x31, 0xd8  ;; xor eax,ebx
..@0x8052210: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x8052214: db 0xa9, 0x00, 0x00, 0x00, 0xff  ;; test eax,0xff000000
..@0x8052219: db 0x75, 0x64  ;; jnz A.code+0x805227f
..@0x805221b: db 0x8b, 0x04, 0xb5, 0xc0, 0x0b, 0x06, 0x08  ;; mov eax,[esi*4+0x8060bc0]
..@0x8052222: db 0x39, 0x04, 0xbd, 0xc0, 0x0b, 0x06, 0x08  ;; cmp [edi*4+0x8060bc0],eax
..@0x8052229: db 0x7e, 0x54  ;; jng A.code+0x805227f
..@0x805222b: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x805222f: db 0x85, 0xc0  ;; test eax,eax
..@0x8052231: db 0x7e, 0x36  ;; jng A.code+0x8052269
..@0x8052233: db 0x31, 0xc0  ;; xor eax,eax
..@0x8052235: db 0x89, 0x74, 0x24, 0x1c  ;; mov [esp+0x1c],esi
..@0x8052239: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052240: db 0x8b, 0x9c, 0x02, 0xa8, 0x01, 0x06, 0x08  ;; mov ebx,[edx+eax+0x80601a8]
..@0x8052247: db 0x8b, 0xb4, 0x01, 0xa8, 0x01, 0x06, 0x08  ;; mov esi,[ecx+eax+0x80601a8]
..@0x805224e: db 0x89, 0xb4, 0x02, 0xa8, 0x01, 0x06, 0x08  ;; mov [edx+eax+0x80601a8],esi
..@0x8052255: db 0x89, 0x9c, 0x01, 0xa8, 0x01, 0x06, 0x08  ;; mov [ecx+eax+0x80601a8],ebx
..@0x805225c: db 0x2d, 0x18, 0x0a, 0x00, 0x00  ;; sub eax,0xa18
..@0x8052261: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x8052263: db 0x75, 0xdb  ;; jnz A.code+0x8052240
..@0x8052265: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8052269: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x805226d: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8052271: db 0x89, 0x04, 0xbd, 0x80, 0xd6, 0x05, 0x08  ;; mov [edi*4+0x805d680],eax
..@0x8052278: db 0x89, 0x1c, 0xb5, 0x80, 0xd6, 0x05, 0x08  ;; mov [esi*4+0x805d680],ebx
..@0x805227f: add edi, strict byte 0x1
..@0x8052282: add edx, strict byte 0x4
..@0x8052285: db 0x39, 0xf7  ;; cmp edi,esi
..@0x8052287: db 0x0f, 0x85, 0x6f, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80521fc
..@0x805228d: add esi, strict byte 0x1
..@0x8052290: add ecx, strict byte 0x4
..@0x8052293: db 0x3b, 0x74, 0x24, 0x2c  ;; cmp esi,[esp+0x2c]
..@0x8052297: db 0x0f, 0x85, 0x56, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80521f3
..@0x805229d: db 0xeb, 0x0a  ;; jmp short A.code+0x80522a9
..@0x805229f: db 0x8b, 0x35, 0xac, 0x06, 0x06, 0x08  ;; mov esi,[0x80606ac]
..@0x80522a5: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x80522a9: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x80522ad: db 0x85, 0xff  ;; test edi,edi
..@0x80522af: db 0x0f, 0x8e, 0xc3, 0xf5, 0xff, 0xff  ;; jng near A.code+0x8051878
..@0x80522b5: db 0x69, 0x5c, 0x24, 0x3c, 0x18, 0x0a, 0x00, 0x00  ;; imul ebx,[esp+0x3c],dword 0xa18
..@0x80522bd: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80522bf: db 0x31, 0xd2  ;; xor edx,edx
..@0x80522c1: db 0x31, 0xc0  ;; xor eax,eax
..@0x80522c3: db 0x89, 0xde  ;; mov esi,ebx
..@0x80522c5: db 0x0f, 0xb6, 0x9c, 0x82, 0xc0, 0x0b, 0x06, 0x08  ;; movzx ebx,byte [edx+eax*4+0x8060bc0]
..@0x80522cd: db 0x88, 0x9c, 0x01, 0xc0, 0xc6, 0x56, 0x08  ;; mov [ecx+eax+0x856c6c0],bl
..@0x80522d4: add eax, strict byte 0x1
..@0x80522d7: db 0x3d, 0x40, 0x01, 0x00, 0x00  ;; cmp eax,0x140
..@0x80522dc: db 0x75, 0xe7  ;; jnz A.code+0x80522c5
..@0x80522de: db 0x81, 0xc2, 0x18, 0x0a, 0x00, 0x00  ;; add edx,0xa18
..@0x80522e4: db 0x81, 0xc1, 0x40, 0x01, 0x00, 0x00  ;; add ecx,0x140
..@0x80522ea: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80522ec: db 0x39, 0xf2  ;; cmp edx,esi
..@0x80522ee: db 0x75, 0xd1  ;; jnz A.code+0x80522c1
..@0x80522f0: jmp strict near R.code+0x8051878
..@0x80522f5: nop
..@0x80522f6: nop
..@0x80522f7: nop
..@0x80522f8: nop
..@0x80522f9: nop
..@0x80522fa: nop
..@0x80522fb: nop
..@0x80522fc: nop
..@0x80522fd: nop
..@0x80522fe: nop
..@0x80522ff: nop
..@0x8052300: push ebp
..@0x8052301: push edi
..@0x8052302: push esi
..@0x8052303: push ebx
..@0x8052304: sub esp, strict byte 0x24
..@0x8052307: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x805230b: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x805230f: db 0x89, 0x4c, 0x24, 0x08  ;; mov [esp+0x8],ecx
..@0x8052313: db 0x8b, 0x7c, 0x24, 0x38  ;; mov edi,[esp+0x38]
..@0x8052317: db 0x85, 0xd2  ;; test edx,edx
..@0x8052319: db 0x0f, 0x8e, 0xff, 0x00, 0x00, 0x00  ;; jng near A.code+0x805241e
..@0x805231f: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8052321: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x8052325: db 0x89, 0xfe  ;; mov esi,edi
..@0x8052327: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x805232b: db 0xc7, 0x44, 0x24, 0x10, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x10],0x1
..@0x8052333: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8052335: db 0x89, 0xef  ;; mov edi,ebp
..@0x8052337: add edx, strict byte 0x1
..@0x805233a: db 0x8d, 0x04, 0x85, 0xfc, 0xb8, 0x05, 0x08  ;; lea eax,[eax*4+0x805b8fc]
..@0x8052341: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8052345: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x8052349: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x805234d: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8052351: db 0x8b, 0x6c, 0x8a, 0xfc  ;; mov ebp,[edx+ecx*4-0x4]
..@0x8052355: db 0x3b, 0x2c, 0x8a  ;; cmp ebp,[edx+ecx*4]
..@0x8052358: db 0x7d, 0x72  ;; jnl A.code+0x80523cc
..@0x805235a: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x805235e: db 0x0f, 0xb6, 0x44, 0x24, 0x10  ;; movzx eax,byte [esp+0x10]
..@0x8052363: db 0x8b, 0x09  ;; mov ecx,[ecx]
..@0x8052365: db 0x88, 0x44, 0x24, 0x07  ;; mov [esp+0x7],al
..@0x8052369: db 0x89, 0x4c, 0x24, 0x18  ;; mov [esp+0x18],ecx
..@0x805236d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8052370: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x8052374: db 0x01, 0xda  ;; add edx,ebx
..@0x8052376: db 0x39, 0xda  ;; cmp edx,ebx
..@0x8052378: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x805237c: db 0x7c, 0x3e  ;; jl A.code+0x80523bc
..@0x805237e: add edx, strict byte 0x1
..@0x8052381: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8052384: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8052388: db 0x31, 0xc0  ;; xor eax,eax
..@0x805238a: db 0x89, 0xda  ;; mov edx,ebx
..@0x805238c: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x8052390: db 0x31, 0xc0  ;; xor eax,eax
..@0x8052392: db 0xd1, 0xea  ;; shr edx,1
..@0x8052394: db 0x11, 0xc0  ;; adc eax,eax
..@0x8052396: sub ecx, strict byte 0x1
..@0x8052399: db 0x75, 0xf7  ;; jnz A.code+0x8052392
..@0x805239b: db 0x8b, 0x14, 0xaf  ;; mov edx,[edi+ebp*4]
..@0x805239e: add ebx, strict byte 0x1
..@0x80523a1: db 0x8b, 0x4c, 0x24, 0x08  ;; mov ecx,[esp+0x8]
..@0x80523a5: db 0x3b, 0x1c, 0x24  ;; cmp ebx,[esp]
..@0x80523a8: db 0x89, 0x14, 0x81  ;; mov [ecx+eax*4],edx
..@0x80523ab: db 0x0f, 0xb6, 0x54, 0x24, 0x07  ;; movzx edx,byte [esp+0x7]
..@0x80523b0: db 0x88, 0x14, 0x06  ;; mov [esi+eax],dl
..@0x80523b3: db 0x75, 0xd3  ;; jnz A.code+0x8052388
..@0x80523b5: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x80523b9: db 0x8d, 0x59, 0x01  ;; lea ebx,[ecx+0x1]
..@0x80523bc: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x80523c0: add ebp, strict byte 0x1
..@0x80523c3: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x80523c7: db 0x39, 0x2c, 0x82  ;; cmp [edx+eax*4],ebp
..@0x80523ca: db 0x7f, 0xa4  ;; jg A.code+0x8052370
..@0x80523cc: db 0x83, 0x44, 0x24, 0x10, 0x01  ;; add dword [esp+0x10],byte +0x1
..@0x80523d1: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x80523d5: db 0x83, 0x6c, 0x24, 0x1c, 0x04  ;; sub dword [esp+0x1c],byte +0x4
..@0x80523da: db 0x39, 0x4c, 0x24, 0x10  ;; cmp [esp+0x10],ecx
..@0x80523de: db 0x0f, 0x85, 0x65, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8052349
..@0x80523e4: db 0x89, 0xf7  ;; mov edi,esi
..@0x80523e6: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x80523ea: db 0x8b, 0x34, 0x85, 0x00, 0xb9, 0x05, 0x08  ;; mov esi,[eax*4+0x805b900]
..@0x80523f1: db 0x39, 0xde  ;; cmp esi,ebx
..@0x80523f3: db 0x7c, 0x21  ;; jl A.code+0x8052416
..@0x80523f5: add esi, strict byte 0x1
..@0x80523f8: db 0x31, 0xc0  ;; xor eax,eax
..@0x80523fa: db 0x89, 0xda  ;; mov edx,ebx
..@0x80523fc: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x8052400: db 0x31, 0xc0  ;; xor eax,eax
..@0x8052402: db 0xd1, 0xea  ;; shr edx,1
..@0x8052404: db 0x11, 0xc0  ;; adc eax,eax
..@0x8052406: sub ecx, strict byte 0x1
..@0x8052409: db 0x75, 0xf7  ;; jnz A.code+0x8052402
..@0x805240b: add ebx, strict byte 0x1
..@0x805240e: db 0xc6, 0x04, 0x07, 0x00  ;; mov byte [edi+eax],0x0
..@0x8052412: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8052414: db 0x75, 0xe2  ;; jnz A.code+0x80523f8
..@0x8052416: add esp, strict byte 0x24
..@0x8052419: pop ebx
..@0x805241a: pop esi
..@0x805241b: pop edi
..@0x805241c: pop ebp
..@0x805241d: ret
..@0x805241e: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8052420: db 0xeb, 0xc4  ;; jmp short A.code+0x80523e6
..@0x8052422: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052429: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052430: push ebp
..@0x8052431: push edi
..@0x8052432: push esi
..@0x8052433: push ebx
..@0x8052434: add esp, strict byte -0x80
..@0x8052437: db 0x8b, 0xb4, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x94]
..@0x805243e: db 0x8d, 0x7c, 0x24, 0x04  ;; lea edi,[esp+0x4]
..@0x8052442: db 0x8d, 0x5c, 0x24, 0x7c  ;; lea ebx,[esp+0x7c]
..@0x8052446: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8052449: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052450: db 0xc7, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebx],0x0
..@0x8052456: sub ebx, strict byte 0x4
..@0x8052459: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x805245b: db 0x75, 0xf3  ;; jnz A.code+0x8052450
..@0x805245d: db 0x89, 0xd3  ;; mov ebx,edx
..@0x805245f: sub ebx, strict byte 0x1
..@0x8052462: db 0x78, 0x14  ;; js A.code+0x8052478
..@0x8052464: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8052468: db 0x8b, 0x2c, 0x98  ;; mov ebp,[eax+ebx*4]
..@0x805246b: sub ebx, strict byte 0x1
..@0x805246e: db 0x83, 0x44, 0xac, 0x04, 0x01  ;; add dword [esp+ebp*4+0x4],byte +0x1
..@0x8052473: cmp ebx, strict byte -0x1
..@0x8052476: db 0x75, 0xf0  ;; jnz A.code+0x8052468
..@0x8052478: db 0xc7, 0x06, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esi],0x0
..@0x805247e: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8052480: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8052482: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x805248a: db 0xeb, 0x07  ;; jmp short A.code+0x8052493
..@0x805248c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8052490: db 0x8b, 0x2c, 0x9f  ;; mov ebp,[edi+ebx*4]
..@0x8052493: db 0x03, 0x2c, 0x9e  ;; add ebp,[esi+ebx*4]
..@0x8052496: db 0x89, 0x6c, 0x9e, 0x04  ;; mov [esi+ebx*4+0x4],ebp
..@0x805249a: add ebx, strict byte 0x1
..@0x805249d: cmp ebx, strict byte 0x1f
..@0x80524a0: db 0x75, 0xee  ;; jnz A.code+0x8052490
..@0x80524a2: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80524a4: db 0x85, 0xd2  ;; test edx,edx
..@0x80524a6: db 0x7e, 0x23  ;; jng A.code+0x80524cb
..@0x80524a8: nop
..@0x80524a9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80524b0: db 0x8b, 0x3c, 0x98  ;; mov edi,[eax+ebx*4]
..@0x80524b3: db 0x85, 0xff  ;; test edi,edi
..@0x80524b5: db 0x74, 0x0d  ;; jz A.code+0x80524c4
..@0x80524b7: db 0x8d, 0x3c, 0xbe  ;; lea edi,[esi+edi*4]
..@0x80524ba: db 0x8b, 0x2f  ;; mov ebp,[edi]
..@0x80524bc: db 0x89, 0x1c, 0xa9  ;; mov [ecx+ebp*4],ebx
..@0x80524bf: add ebp, strict byte 0x1
..@0x80524c2: db 0x89, 0x2f  ;; mov [edi],ebp
..@0x80524c4: add ebx, strict byte 0x1
..@0x80524c7: db 0x39, 0xd3  ;; cmp ebx,edx
..@0x80524c9: db 0x75, 0xe5  ;; jnz A.code+0x80524b0
..@0x80524cb: sub esp, strict byte -0x80
..@0x80524ce: pop ebx
..@0x80524cf: pop esi
..@0x80524d0: pop edi
..@0x80524d1: pop ebp
..@0x80524d2: ret
..@0x80524d3: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80524d9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80524e0: push ebp
..@0x80524e1: db 0x8d, 0x2c, 0x80  ;; lea ebp,[eax+eax*4]
..@0x80524e4: push edi
..@0x80524e5: push esi
..@0x80524e6: db 0x8b, 0x34, 0x95, 0x7c, 0xb9, 0x05, 0x08  ;; mov esi,[edx*4+0x805b97c]
..@0x80524ed: db 0x31, 0xd2  ;; xor edx,edx
..@0x80524ef: push ebx
..@0x80524f0: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x80524f5: db 0x85, 0xce  ;; test esi,ecx
..@0x80524f7: db 0x0f, 0x95, 0xc2  ;; setnz dl
..@0x80524fa: db 0xc1, 0xe5, 0x04  ;; shl ebp,byte 0x4
..@0x80524fd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8052500: db 0x39, 0x94, 0x9d, 0x00, 0x8c, 0x85, 0x09  ;; cmp [ebp+ebx*4+0x9858c00],edx
..@0x8052507: db 0x7f, 0x37  ;; jg A.code+0x8052540
..@0x8052509: db 0xd1, 0xfe  ;; sar esi,1
..@0x805250b: db 0x89, 0xcf  ;; mov edi,ecx
..@0x805250d: db 0x01, 0xd2  ;; add edx,edx
..@0x805250f: db 0x21, 0xf7  ;; and edi,esi
..@0x8052511: cmp edi, strict byte 0x1
..@0x8052514: sbb edx, strict byte -0x1
..@0x8052517: add ebx, strict byte 0x1
..@0x805251a: cmp ebx, strict byte 0x11
..@0x805251d: db 0x75, 0xe1  ;; jnz A.code+0x8052500
..@0x805251f: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x8052523: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8052527: db 0xc7, 0x00, 0x10, 0x00, 0x00, 0x00  ;; mov dword [eax],0x10
..@0x805252d: db 0xc7, 0x02, 0x00, 0x00, 0x00, 0x00  ;; mov dword [edx],0x0
..@0x8052533: pop ebx
..@0x8052534: pop esi
..@0x8052535: pop edi
..@0x8052536: pop ebp
..@0x8052537: ret
..@0x8052538: nop
..@0x8052539: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052540: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x8052544: db 0x89, 0x19  ;; mov [ecx],ebx
..@0x8052546: db 0x8d, 0x0c, 0x80  ;; lea ecx,[eax+eax*4]
..@0x8052549: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x805254c: db 0x8d, 0x0c, 0x8b  ;; lea ecx,[ebx+ecx*4]
..@0x805254f: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x8052553: db 0x03, 0x04, 0x8d, 0x80, 0x8e, 0x85, 0x09  ;; add eax,[ecx*4+0x9858e80]
..@0x805255a: db 0x0f, 0xb6, 0x84, 0x02, 0x00, 0x91, 0x85, 0x09  ;; movzx eax,byte [edx+eax+0x9859100]
..@0x8052562: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8052564: pop ebx
..@0x8052565: pop esi
..@0x8052566: pop edi
..@0x8052567: pop ebp
..@0x8052568: ret
..@0x8052569: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052570: push ebp
..@0x8052571: push edi
..@0x8052572: push esi
..@0x8052573: push ebx
..@0x8052574: sub esp, strict byte 0x20
..@0x8052577: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x805257b: db 0x05, 0x00, 0x01, 0x00, 0x00  ;; add eax,0x100
..@0x8052580: db 0x8b, 0x7c, 0x24, 0x1c  ;; mov edi,[esp+0x1c]
..@0x8052584: db 0x88, 0x54, 0x24, 0x03  ;; mov [esp+0x3],dl
..@0x8052588: db 0x89, 0x44, 0x24, 0x18  ;; mov [esp+0x18],eax
..@0x805258c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8052590: db 0xf6, 0x44, 0x24, 0x03, 0x01  ;; test byte [esp+0x3],0x1
..@0x8052595: db 0x0f, 0x84, 0xe5, 0x00, 0x00, 0x00  ;; jz near A.code+0x8052680
..@0x805259b: db 0x8b, 0x57, 0x18  ;; mov edx,[edi+0x18]
..@0x805259e: db 0x8b, 0x47, 0x08  ;; mov eax,[edi+0x8]
..@0x80525a1: db 0x8d, 0x0c, 0x10  ;; lea ecx,[eax+edx]
..@0x80525a4: db 0x29, 0xd0  ;; sub eax,edx
..@0x80525a6: db 0xba, 0x80, 0x79, 0x82, 0x5a  ;; mov edx,0x5a827980
..@0x80525ab: db 0xf7, 0xea  ;; imul edx
..@0x80525ad: db 0x8b, 0x07  ;; mov eax,[edi]
..@0x80525af: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x80525b2: db 0x8b, 0x77, 0x10  ;; mov esi,[edi+0x10]
..@0x80525b5: db 0x29, 0xca  ;; sub edx,ecx
..@0x80525b7: db 0x8d, 0x1c, 0x30  ;; lea ebx,[eax+esi]
..@0x80525ba: db 0x29, 0xf0  ;; sub eax,esi
..@0x80525bc: db 0x8d, 0x34, 0x0b  ;; lea esi,[ebx+ecx]
..@0x80525bf: db 0x29, 0xcb  ;; sub ebx,ecx
..@0x80525c1: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x80525c5: db 0x8d, 0x34, 0x10  ;; lea esi,[eax+edx]
..@0x80525c8: db 0x29, 0xd0  ;; sub eax,edx
..@0x80525ca: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x80525ce: db 0x8b, 0x47, 0x14  ;; mov eax,[edi+0x14]
..@0x80525d1: db 0xba, 0x40, 0xaf, 0x41, 0x76  ;; mov edx,0x7641af40
..@0x80525d6: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80525da: db 0x2b, 0x47, 0x0c  ;; sub eax,[edi+0xc]
..@0x80525dd: db 0x03, 0x47, 0x04  ;; add eax,[edi+0x4]
..@0x80525e0: db 0x2b, 0x47, 0x1c  ;; sub eax,[edi+0x1c]
..@0x80525e3: db 0xf7, 0xea  ;; imul edx
..@0x80525e5: db 0x8b, 0x6f, 0x04  ;; mov ebp,[edi+0x4]
..@0x80525e8: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x80525eb: db 0x8b, 0x5f, 0x14  ;; mov ebx,[edi+0x14]
..@0x80525ee: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x80525f2: db 0xba, 0x40, 0xba, 0x9e, 0x53  ;; mov edx,0x539eba40
..@0x80525f7: db 0x8b, 0x47, 0x0c  ;; mov eax,[edi+0xc]
..@0x80525fa: db 0x03, 0x6f, 0x1c  ;; add ebp,[edi+0x1c]
..@0x80525fd: db 0x2b, 0x47, 0x14  ;; sub eax,[edi+0x14]
..@0x8052600: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8052602: db 0x03, 0x5f, 0x0c  ;; add ebx,[edi+0xc]
..@0x8052605: db 0xf7, 0xea  ;; imul edx
..@0x8052607: db 0x2b, 0x6f, 0x14  ;; sub ebp,[edi+0x14]
..@0x805260a: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x805260e: db 0x2b, 0x6f, 0x0c  ;; sub ebp,[edi+0xc]
..@0x8052611: db 0x8d, 0x0c, 0xd0  ;; lea ecx,[eax+edx*8]
..@0x8052614: db 0xba, 0x80, 0x79, 0x82, 0x5a  ;; mov edx,0x5a827980
..@0x8052619: db 0x29, 0xd9  ;; sub ecx,ebx
..@0x805261b: db 0x89, 0xe8  ;; mov eax,ebp
..@0x805261d: db 0xf7, 0xea  ;; imul edx
..@0x805261f: db 0x8b, 0x47, 0x04  ;; mov eax,[edi+0x4]
..@0x8052622: db 0x8d, 0x2c, 0x95, 0x00, 0x00, 0x00, 0x00  ;; lea ebp,[edx*4+0x0]
..@0x8052629: db 0xba, 0x00, 0xea, 0x45, 0x45  ;; mov edx,0x4545ea00
..@0x805262e: db 0x29, 0xcd  ;; sub ebp,ecx
..@0x8052630: db 0x2b, 0x47, 0x1c  ;; sub eax,[edi+0x1c]
..@0x8052633: db 0xf7, 0xea  ;; imul edx
..@0x8052635: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8052639: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x805263c: db 0x2b, 0x54, 0x24, 0x14  ;; sub edx,[esp+0x14]
..@0x8052640: db 0x01, 0xd8  ;; add eax,ebx
..@0x8052642: db 0x89, 0x07  ;; mov [edi],eax
..@0x8052644: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8052648: db 0x01, 0xea  ;; add edx,ebp
..@0x805264a: db 0x29, 0xd8  ;; sub eax,ebx
..@0x805264c: db 0x89, 0x47, 0x1c  ;; mov [edi+0x1c],eax
..@0x805264f: db 0x8d, 0x04, 0x0e  ;; lea eax,[esi+ecx]
..@0x8052652: db 0x89, 0x47, 0x04  ;; mov [edi+0x4],eax
..@0x8052655: db 0x89, 0xf0  ;; mov eax,esi
..@0x8052657: db 0x29, 0xc8  ;; sub eax,ecx
..@0x8052659: db 0x89, 0x47, 0x18  ;; mov [edi+0x18],eax
..@0x805265c: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8052660: db 0x01, 0xe8  ;; add eax,ebp
..@0x8052662: db 0x89, 0x47, 0x08  ;; mov [edi+0x8],eax
..@0x8052665: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8052669: db 0x29, 0xe8  ;; sub eax,ebp
..@0x805266b: db 0x89, 0x47, 0x14  ;; mov [edi+0x14],eax
..@0x805266e: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8052672: db 0x01, 0xd0  ;; add eax,edx
..@0x8052674: db 0x89, 0x47, 0x10  ;; mov [edi+0x10],eax
..@0x8052677: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x805267b: db 0x29, 0xd0  ;; sub eax,edx
..@0x805267d: db 0x89, 0x47, 0x0c  ;; mov [edi+0xc],eax
..@0x8052680: db 0xd0, 0x6c, 0x24, 0x03  ;; shr byte [esp+0x3],1
..@0x8052684: add edi, strict byte 0x20
..@0x8052687: db 0x39, 0x7c, 0x24, 0x18  ;; cmp [esp+0x18],edi
..@0x805268b: db 0x0f, 0x85, 0xff, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8052590
..@0x8052691: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x8052695: db 0x8b, 0x7c, 0x24, 0x1c  ;; mov edi,[esp+0x1c]
..@0x8052699: db 0x81, 0xc6, 0xa0, 0x00, 0x00, 0x00  ;; add esi,0xa0
..@0x805269f: sub edi, strict byte -0x80
..@0x80526a2: db 0x89, 0x74, 0x24, 0x14  ;; mov [esp+0x14],esi
..@0x80526a6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80526a9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80526b0: db 0x8b, 0x57, 0x40  ;; mov edx,[edi+0x40]
..@0x80526b3: db 0x8b, 0x47, 0xc0  ;; mov eax,[edi-0x40]
..@0x80526b6: db 0x8d, 0x0c, 0x10  ;; lea ecx,[eax+edx]
..@0x80526b9: db 0x29, 0xd0  ;; sub eax,edx
..@0x80526bb: db 0xba, 0x80, 0x79, 0x82, 0x5a  ;; mov edx,0x5a827980
..@0x80526c0: db 0xf7, 0xea  ;; imul edx
..@0x80526c2: db 0x8b, 0x47, 0x80  ;; mov eax,[edi-0x80]
..@0x80526c5: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x80526c8: db 0x8b, 0x37  ;; mov esi,[edi]
..@0x80526ca: db 0x29, 0xca  ;; sub edx,ecx
..@0x80526cc: db 0x8d, 0x1c, 0x30  ;; lea ebx,[eax+esi]
..@0x80526cf: db 0x29, 0xf0  ;; sub eax,esi
..@0x80526d1: db 0x8d, 0x34, 0x0b  ;; lea esi,[ebx+ecx]
..@0x80526d4: db 0x29, 0xcb  ;; sub ebx,ecx
..@0x80526d6: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x80526da: db 0x8d, 0x34, 0x10  ;; lea esi,[eax+edx]
..@0x80526dd: db 0x29, 0xd0  ;; sub eax,edx
..@0x80526df: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x80526e3: db 0x8b, 0x47, 0x20  ;; mov eax,[edi+0x20]
..@0x80526e6: db 0xba, 0x40, 0xaf, 0x41, 0x76  ;; mov edx,0x7641af40
..@0x80526eb: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x80526ef: db 0x2b, 0x47, 0xe0  ;; sub eax,[edi-0x20]
..@0x80526f2: db 0x03, 0x47, 0xa0  ;; add eax,[edi-0x60]
..@0x80526f5: db 0x2b, 0x47, 0x60  ;; sub eax,[edi+0x60]
..@0x80526f8: db 0xf7, 0xea  ;; imul edx
..@0x80526fa: db 0x8b, 0x6f, 0xa0  ;; mov ebp,[edi-0x60]
..@0x80526fd: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x8052700: db 0x8b, 0x5f, 0x20  ;; mov ebx,[edi+0x20]
..@0x8052703: db 0x89, 0x54, 0x24, 0x10  ;; mov [esp+0x10],edx
..@0x8052707: db 0xba, 0x40, 0xba, 0x9e, 0x53  ;; mov edx,0x539eba40
..@0x805270c: db 0x8b, 0x47, 0xe0  ;; mov eax,[edi-0x20]
..@0x805270f: db 0x03, 0x6f, 0x60  ;; add ebp,[edi+0x60]
..@0x8052712: db 0x2b, 0x47, 0x20  ;; sub eax,[edi+0x20]
..@0x8052715: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8052717: db 0x03, 0x5f, 0xe0  ;; add ebx,[edi-0x20]
..@0x805271a: db 0xf7, 0xea  ;; imul edx
..@0x805271c: db 0x2b, 0x6f, 0x20  ;; sub ebp,[edi+0x20]
..@0x805271f: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8052723: db 0x2b, 0x6f, 0xe0  ;; sub ebp,[edi-0x20]
..@0x8052726: db 0x8d, 0x0c, 0xd0  ;; lea ecx,[eax+edx*8]
..@0x8052729: db 0xba, 0x80, 0x79, 0x82, 0x5a  ;; mov edx,0x5a827980
..@0x805272e: db 0x29, 0xd9  ;; sub ecx,ebx
..@0x8052730: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8052732: db 0xf7, 0xea  ;; imul edx
..@0x8052734: db 0x8b, 0x47, 0xa0  ;; mov eax,[edi-0x60]
..@0x8052737: db 0x8d, 0x2c, 0x95, 0x00, 0x00, 0x00, 0x00  ;; lea ebp,[edx*4+0x0]
..@0x805273e: db 0xba, 0x00, 0xea, 0x45, 0x45  ;; mov edx,0x4545ea00
..@0x8052743: db 0x29, 0xcd  ;; sub ebp,ecx
..@0x8052745: db 0x2b, 0x47, 0x60  ;; sub eax,[edi+0x60]
..@0x8052748: db 0xf7, 0xea  ;; imul edx
..@0x805274a: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x805274e: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x8052751: db 0x2b, 0x54, 0x24, 0x10  ;; sub edx,[esp+0x10]
..@0x8052755: db 0x01, 0xd8  ;; add eax,ebx
..@0x8052757: db 0x89, 0x47, 0x80  ;; mov [edi-0x80],eax
..@0x805275a: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x805275e: db 0x01, 0xea  ;; add edx,ebp
..@0x8052760: db 0x29, 0xd8  ;; sub eax,ebx
..@0x8052762: db 0x89, 0x47, 0x60  ;; mov [edi+0x60],eax
..@0x8052765: db 0x8d, 0x04, 0x0e  ;; lea eax,[esi+ecx]
..@0x8052768: db 0x89, 0x47, 0xa0  ;; mov [edi-0x60],eax
..@0x805276b: db 0x89, 0xf0  ;; mov eax,esi
..@0x805276d: db 0x29, 0xc8  ;; sub eax,ecx
..@0x805276f: db 0x89, 0x47, 0x40  ;; mov [edi+0x40],eax
..@0x8052772: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8052776: db 0x01, 0xe8  ;; add eax,ebp
..@0x8052778: db 0x89, 0x47, 0xc0  ;; mov [edi-0x40],eax
..@0x805277b: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x805277f: db 0x29, 0xe8  ;; sub eax,ebp
..@0x8052781: db 0x89, 0x47, 0x20  ;; mov [edi+0x20],eax
..@0x8052784: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8052788: db 0x01, 0xd0  ;; add eax,edx
..@0x805278a: db 0x89, 0x07  ;; mov [edi],eax
..@0x805278c: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x8052790: db 0x29, 0xd0  ;; sub eax,edx
..@0x8052792: db 0x89, 0x47, 0xe0  ;; mov [edi-0x20],eax
..@0x8052795: add edi, strict byte 0x4
..@0x8052798: db 0x39, 0x7c, 0x24, 0x14  ;; cmp [esp+0x14],edi
..@0x805279c: db 0x0f, 0x87, 0x0e, 0xff, 0xff, 0xff  ;; ja near A.code+0x80526b0
..@0x80527a2: add esp, strict byte 0x20
..@0x80527a5: pop ebx
..@0x80527a6: pop esi
..@0x80527a7: pop edi
..@0x80527a8: pop ebp
..@0x80527a9: ret
..@0x80527aa: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
unknown_func1: equ $-B.code
..@0x80527b0: push ebp
..@0x80527b1: push edi
..@0x80527b2: push esi
..@0x80527b3: push ebx
..@0x80527b4: add esp, strict byte -0x80
..@0x80527b7: db 0x8b, 0x15, 0x44, 0x9e, 0x86, 0x09  ;; mov edx,[0x9869e44]
..@0x80527bd: db 0x8b, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x9c]
..@0x80527c4: db 0x8b, 0x9c, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x94]
..@0x80527cb: db 0x8d, 0x34, 0xd5, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[edx*8+0x0]
..@0x80527d2: db 0x05, 0x00, 0x0a, 0x00, 0x00  ;; add eax,0xa00
..@0x80527d7: db 0x85, 0xf6  ;; test esi,esi
..@0x80527d9: db 0x89, 0x74, 0x24, 0x5c  ;; mov [esp+0x5c],esi
..@0x80527dd: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80527e1: db 0x0f, 0x8e, 0xde, 0x04, 0x00, 0x00  ;; jng near A.code+0x8052cc5
..@0x80527e7: db 0xa1, 0x74, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e74]
..@0x80527ec: sub edx, strict byte 0x1
..@0x80527ef: db 0x8b, 0x35, 0x34, 0x9e, 0x86, 0x09  ;; mov esi,[0x9869e34]
..@0x80527f5: db 0x8b, 0x0d, 0x3c, 0xe1, 0x83, 0x09  ;; mov ecx,[0x983e13c]
..@0x80527fb: db 0x89, 0x44, 0x24, 0x60  ;; mov [esp+0x60],eax
..@0x80527ff: db 0xa1, 0x30, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e130]
..@0x8052804: db 0x89, 0x74, 0x24, 0x14  ;; mov [esp+0x14],esi
..@0x8052808: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x805280b: db 0x89, 0x74, 0x24, 0x74  ;; mov [esp+0x74],esi
..@0x805280f: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8052813: db 0x89, 0x44, 0x24, 0x24  ;; mov [esp+0x24],eax
..@0x8052817: db 0xa1, 0x70, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e70]
..@0x805281c: db 0xc1, 0xe6, 0x03  ;; shl esi,byte 0x3
..@0x805281f: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x8052823: db 0x8b, 0x35, 0x00, 0x9e, 0x86, 0x09  ;; mov esi,[0x9869e00]
..@0x8052829: db 0x89, 0x44, 0x24, 0x34  ;; mov [esp+0x34],eax
..@0x805282d: db 0xa1, 0x6c, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e6c]
..@0x8052832: db 0x89, 0x74, 0x24, 0x4c  ;; mov [esp+0x4c],esi
..@0x8052836: db 0x8b, 0x35, 0x68, 0x9e, 0x86, 0x09  ;; mov esi,[0x9869e68]
..@0x805283c: db 0xc1, 0xe0, 0x06  ;; shl eax,byte 0x6
..@0x805283f: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x8052843: db 0xa1, 0x64, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e64]
..@0x8052848: db 0x89, 0x74, 0x24, 0x78  ;; mov [esp+0x78],esi
..@0x805284c: db 0x8b, 0x74, 0x24, 0x24  ;; mov esi,[esp+0x24]
..@0x8052850: db 0x89, 0x44, 0x24, 0x58  ;; mov [esp+0x58],eax
..@0x8052854: db 0xa1, 0x40, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e140]
..@0x8052859: db 0xc1, 0xe6, 0x03  ;; shl esi,byte 0x3
..@0x805285c: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x8052860: db 0x8d, 0x34, 0x0b  ;; lea esi,[ebx+ecx]
..@0x8052863: db 0x03, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00  ;; add eax,[esp+0x98]
..@0x805286a: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x805286e: db 0x89, 0x44, 0x24, 0x64  ;; mov [esp+0x64],eax
..@0x8052872: db 0x0f, 0xaf, 0x44, 0x24, 0x24  ;; imul eax,[esp+0x24]
..@0x8052877: db 0x8d, 0x04, 0xb0  ;; lea eax,[eax+esi*4]
..@0x805287a: db 0x8b, 0x35, 0x2c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e12c]
..@0x8052880: db 0x01, 0xf0  ;; add eax,esi
..@0x8052882: db 0x8b, 0xb4, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x9c]
..@0x8052889: db 0x89, 0x44, 0x24, 0x3c  ;; mov [esp+0x3c],eax
..@0x805288d: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8052891: db 0x89, 0x74, 0x24, 0x50  ;; mov [esp+0x50],esi
..@0x8052895: db 0xc1, 0xe0, 0x05  ;; shl eax,byte 0x5
..@0x8052898: db 0x89, 0x44, 0x24, 0x7c  ;; mov [esp+0x7c],eax
..@0x805289c: db 0xc7, 0x44, 0x24, 0x44, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x0
..@0x80528a4: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x80528a8: db 0x8b, 0x35, 0x40, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e140]
..@0x80528ae: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x80528b2: db 0x29, 0xc8  ;; sub eax,ecx
..@0x80528b4: db 0x29, 0xd8  ;; sub eax,ebx
..@0x80528b6: db 0x8b, 0x5c, 0x24, 0x60  ;; mov ebx,[esp+0x60]
..@0x80528ba: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x80528be: db 0x2b, 0x9c, 0x24, 0x98, 0x00, 0x00, 0x00  ;; sub ebx,[esp+0x98]
..@0x80528c5: db 0x29, 0xf3  ;; sub ebx,esi
..@0x80528c7: db 0x89, 0x5c, 0x24, 0x70  ;; mov [esp+0x70],ebx
..@0x80528cb: db 0xeb, 0x23  ;; jmp short A.code+0x80528f0
..@0x80528cd: db 0x8b, 0x44, 0x24, 0x74  ;; mov eax,[esp+0x74]
..@0x80528d1: db 0x01, 0x44, 0x24, 0x50  ;; add [esp+0x50],eax
..@0x80528d5: db 0x83, 0x44, 0x24, 0x44, 0x08  ;; add dword [esp+0x44],byte +0x8
..@0x80528da: db 0x8b, 0x74, 0x24, 0x68  ;; mov esi,[esp+0x68]
..@0x80528de: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x80528e2: db 0x01, 0x74, 0x24, 0x3c  ;; add [esp+0x3c],esi
..@0x80528e6: db 0x39, 0x44, 0x24, 0x5c  ;; cmp [esp+0x5c],eax
..@0x80528ea: db 0x0f, 0x8e, 0xd5, 0x03, 0x00, 0x00  ;; jng near A.code+0x8052cc5
..@0x80528f0: db 0x8b, 0x44, 0x24, 0x64  ;; mov eax,[esp+0x64]
..@0x80528f4: db 0x03, 0x44, 0x24, 0x44  ;; add eax,[esp+0x44]
..@0x80528f8: db 0x3b, 0x44, 0x24, 0x60  ;; cmp eax,[esp+0x60]
..@0x80528fc: db 0x73, 0xcf  ;; jnc A.code+0x80528cd
..@0x80528fe: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8052902: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8052904: db 0x7e, 0xcf  ;; jng A.code+0x80528d5
..@0x8052906: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x805290a: db 0xc7, 0x44, 0x24, 0x20, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x20],0x0
..@0x8052912: db 0x0f, 0xb6, 0x4c, 0x24, 0x78  ;; movzx ecx,byte [esp+0x78]
..@0x8052917: db 0x8b, 0x5c, 0x24, 0x6c  ;; mov ebx,[esp+0x6c]
..@0x805291b: db 0x8b, 0x74, 0x24, 0x50  ;; mov esi,[esp+0x50]
..@0x805291f: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8052921: db 0x8d, 0x04, 0xc3  ;; lea eax,[ebx+eax*8]
..@0x8052924: db 0x89, 0x44, 0x24, 0x54  ;; mov [esp+0x54],eax
..@0x8052928: db 0x8b, 0x44, 0x24, 0x70  ;; mov eax,[esp+0x70]
..@0x805292c: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x8052930: db 0x2b, 0x44, 0x24, 0x44  ;; sub eax,[esp+0x44]
..@0x8052934: db 0x89, 0x44, 0x24, 0x40  ;; mov [esp+0x40],eax
..@0x8052938: nop
..@0x8052939: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052940: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8052944: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x8052948: db 0x3b, 0x44, 0x24, 0x34  ;; cmp eax,[esp+0x34]
..@0x805294c: db 0x0f, 0x83, 0x6b, 0x01, 0x00, 0x00  ;; jnc near A.code+0x8052abd
..@0x8052952: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8052956: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x805295a: db 0x83, 0x7c, 0x24, 0x4c, 0x01  ;; cmp dword [esp+0x4c],byte +0x1
..@0x805295f: db 0x8d, 0x14, 0x93  ;; lea edx,[ebx+edx*4]
..@0x8052962: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x8052966: db 0x7e, 0x1d  ;; jng A.code+0x8052985
..@0x8052968: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x805296c: db 0x0f, 0xb6, 0x4c, 0x24, 0x58  ;; movzx ecx,byte [esp+0x58]
..@0x8052971: db 0x8b, 0x9c, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x9c]
..@0x8052978: db 0xd3, 0xf8  ;; sar eax,cl
..@0x805297a: db 0x03, 0x44, 0x24, 0x54  ;; add eax,[esp+0x54]
..@0x805297e: db 0x8d, 0x04, 0x83  ;; lea eax,[ebx+eax*4]
..@0x8052981: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8052985: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x8052989: db 0xb8, 0x08, 0x00, 0x00, 0x00  ;; mov eax,0x8
..@0x805298e: db 0x2b, 0x74, 0x24, 0x20  ;; sub esi,[esp+0x20]
..@0x8052992: cmp esi, strict byte 0x8
..@0x8052995: db 0x0f, 0x4f, 0xf0  ;; cmovg esi,eax
..@0x8052998: db 0x83, 0x7c, 0x24, 0x40, 0x08  ;; cmp dword [esp+0x40],byte +0x8
..@0x805299d: db 0x89, 0x74, 0x24, 0x10  ;; mov [esp+0x10],esi
..@0x80529a1: db 0x0f, 0x4e, 0x44, 0x24, 0x40  ;; cmovng eax,[esp+0x40]
..@0x80529a6: db 0x83, 0x7c, 0x24, 0x14, 0x01  ;; cmp dword [esp+0x14],byte +0x1
..@0x80529ab: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x80529af: db 0x0f, 0x84, 0x30, 0x01, 0x00, 0x00  ;; jz near A.code+0x8052ae5
..@0x80529b5: db 0x83, 0x7c, 0x24, 0x14, 0x02  ;; cmp dword [esp+0x14],byte +0x2
..@0x80529ba: db 0x0f, 0x84, 0xf1, 0x01, 0x00, 0x00  ;; jz near A.code+0x8052bb1
..@0x80529c0: db 0x8b, 0x74, 0x24, 0x1c  ;; mov esi,[esp+0x1c]
..@0x80529c4: db 0xc7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x18],0x0
..@0x80529cc: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x80529d0: db 0x85, 0xf6  ;; test esi,esi
..@0x80529d2: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80529d6: db 0x0f, 0x8e, 0xe1, 0x00, 0x00, 0x00  ;; jng near A.code+0x8052abd
..@0x80529dc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80529e0: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x80529e4: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80529e6: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x80529eb: db 0xc7, 0x04, 0x24, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp],0x0
..@0x80529f2: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80529f4: db 0x0f, 0x8e, 0x8b, 0x00, 0x00, 0x00  ;; jng near A.code+0x8052a85
..@0x80529fa: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052a00: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8052a04: sub esi, strict byte 0x1
..@0x8052a07: db 0x8b, 0x1c, 0x88  ;; mov ebx,[eax+ecx*4]
..@0x8052a0a: db 0x75, 0x27  ;; jnz A.code+0x8052a33
..@0x8052a0c: db 0x8b, 0x14, 0x24  ;; mov edx,[esp]
..@0x8052a0f: db 0x8b, 0x74, 0x24, 0x04  ;; mov esi,[esp+0x4]
..@0x8052a13: db 0x8b, 0xbc, 0x96, 0x00, 0x01, 0x00, 0x00  ;; mov edi,[esi+edx*4+0x100]
..@0x8052a1a: db 0x8b, 0x2c, 0x96  ;; mov ebp,[esi+edx*4]
..@0x8052a1d: add edx, strict byte 0x1
..@0x8052a20: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8052a24: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8052a27: db 0xc1, 0xff, 0x13  ;; sar edi,byte 0x13
..@0x8052a2a: db 0xc1, 0xfd, 0x13  ;; sar ebp,byte 0x13
..@0x8052a2d: and edi, strict byte -0x2
..@0x8052a30: and ebp, strict byte -0x2
..@0x8052a33: db 0x8b, 0x04, 0xbd, 0xc0, 0xfb, 0x86, 0x09  ;; mov eax,[edi*4+0x986fbc0]
..@0x8052a3a: db 0x8b, 0x14, 0xbd, 0xc4, 0xfb, 0x86, 0x09  ;; mov edx,[edi*4+0x986fbc4]
..@0x8052a41: db 0x01, 0xd8  ;; add eax,ebx
..@0x8052a43: db 0x01, 0xda  ;; add edx,ebx
..@0x8052a45: db 0xc1, 0xe8, 0x16  ;; shr eax,byte 0x16
..@0x8052a48: db 0x03, 0x1c, 0xad, 0xc4, 0x3b, 0x87, 0x09  ;; add ebx,[ebp*4+0x9873bc4]
..@0x8052a4f: db 0x03, 0x14, 0xad, 0xc0, 0x3b, 0x87, 0x09  ;; add edx,[ebp*4+0x9873bc0]
..@0x8052a56: db 0x8b, 0x04, 0x85, 0xc0, 0xcb, 0x86, 0x09  ;; mov eax,[eax*4+0x986cbc0]
..@0x8052a5d: db 0xc1, 0xeb, 0x16  ;; shr ebx,byte 0x16
..@0x8052a60: db 0xc1, 0xea, 0x16  ;; shr edx,byte 0x16
..@0x8052a63: db 0x03, 0x04, 0x95, 0xc0, 0xbb, 0x86, 0x09  ;; add eax,[edx*4+0x986bbc0]
..@0x8052a6a: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x8052a6e: db 0x03, 0x04, 0x9d, 0xc0, 0xab, 0x86, 0x09  ;; add eax,[ebx*4+0x986abc0]
..@0x8052a75: db 0x89, 0x04, 0x8a  ;; mov [edx+ecx*4],eax
..@0x8052a78: add ecx, strict byte 0x1
..@0x8052a7b: db 0x3b, 0x4c, 0x24, 0x10  ;; cmp ecx,[esp+0x10]
..@0x8052a7f: db 0x0f, 0x85, 0x7b, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8052a00
..@0x8052a85: db 0x83, 0x44, 0x24, 0x18, 0x01  ;; add dword [esp+0x18],byte +0x1
..@0x8052a8a: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x8052a8e: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x8052a92: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x8052a96: db 0x83, 0x44, 0x24, 0x0c, 0x20  ;; add dword [esp+0xc],byte +0x20
..@0x8052a9b: add eax, strict byte 0x20
..@0x8052a9e: db 0x01, 0x5c, 0x24, 0x08  ;; add [esp+0x8],ebx
..@0x8052aa2: db 0x85, 0x74, 0x24, 0x18  ;; test [esp+0x18],esi
..@0x8052aa6: db 0x0f, 0x45, 0x44, 0x24, 0x04  ;; cmovnz eax,[esp+0x4]
..@0x8052aab: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8052aaf: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x8052ab3: db 0x39, 0x44, 0x24, 0x18  ;; cmp [esp+0x18],eax
..@0x8052ab7: db 0x0f, 0x85, 0x23, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80529e0
..@0x8052abd: db 0x83, 0x44, 0x24, 0x20, 0x08  ;; add dword [esp+0x20],byte +0x8
..@0x8052ac2: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8052ac6: db 0x81, 0x44, 0x24, 0x2c, 0x00, 0x01, 0x00, 0x00  ;; add dword [esp+0x2c],0x100
..@0x8052ace: db 0x39, 0x54, 0x24, 0x20  ;; cmp [esp+0x20],edx
..@0x8052ad2: db 0x0f, 0x8c, 0x68, 0xfe, 0xff, 0xff  ;; jl near A.code+0x8052940
..@0x8052ad8: db 0x8b, 0x5c, 0x24, 0x7c  ;; mov ebx,[esp+0x7c]
..@0x8052adc: db 0x01, 0x5c, 0x24, 0x50  ;; add [esp+0x50],ebx
..@0x8052ae0: jmp strict near R.code+0x80528d5
..@0x8052ae5: cmp esi, strict byte 0x8
..@0x8052ae8: db 0x0f, 0x85, 0xd2, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x80529c0
..@0x8052aee: db 0x85, 0xc0  ;; test eax,eax
..@0x8052af0: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x8052af4: db 0xc7, 0x44, 0x24, 0x0c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xc],0x0
..@0x8052afc: db 0x7e, 0xbf  ;; jng A.code+0x8052abd
..@0x8052afe: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8052b01: db 0x8b, 0x74, 0x24, 0x04  ;; mov esi,[esp+0x4]
..@0x8052b05: db 0x31, 0xc0  ;; xor eax,eax
..@0x8052b07: db 0x89, 0xf6  ;; mov esi,esi
..@0x8052b09: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052b10: db 0x8b, 0xbc, 0x86, 0x00, 0x01, 0x00, 0x00  ;; mov edi,[esi+eax*4+0x100]
..@0x8052b17: db 0x8b, 0x14, 0x24  ;; mov edx,[esp]
..@0x8052b1a: db 0x8b, 0x2c, 0x86  ;; mov ebp,[esi+eax*4]
..@0x8052b1d: db 0xc1, 0xff, 0x13  ;; sar edi,byte 0x13
..@0x8052b20: and edi, strict byte -0x2
..@0x8052b23: db 0x8b, 0x1c, 0x82  ;; mov ebx,[edx+eax*4]
..@0x8052b26: db 0x8b, 0x0c, 0xbd, 0xc4, 0xfb, 0x86, 0x09  ;; mov ecx,[edi*4+0x986fbc4]
..@0x8052b2d: db 0xc1, 0xfd, 0x13  ;; sar ebp,byte 0x13
..@0x8052b30: db 0x8b, 0x14, 0xbd, 0xc0, 0xfb, 0x86, 0x09  ;; mov edx,[edi*4+0x986fbc0]
..@0x8052b37: and ebp, strict byte -0x2
..@0x8052b3a: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8052b3c: db 0x01, 0xda  ;; add edx,ebx
..@0x8052b3e: db 0x03, 0x0c, 0xad, 0xc0, 0x3b, 0x87, 0x09  ;; add ecx,[ebp*4+0x9873bc0]
..@0x8052b45: db 0xc1, 0xea, 0x16  ;; shr edx,byte 0x16
..@0x8052b48: db 0x03, 0x1c, 0xad, 0xc4, 0x3b, 0x87, 0x09  ;; add ebx,[ebp*4+0x9873bc4]
..@0x8052b4f: db 0x8b, 0x14, 0x95, 0xc0, 0xcb, 0x86, 0x09  ;; mov edx,[edx*4+0x986cbc0]
..@0x8052b56: db 0xc1, 0xe9, 0x16  ;; shr ecx,byte 0x16
..@0x8052b59: db 0xc1, 0xeb, 0x16  ;; shr ebx,byte 0x16
..@0x8052b5c: db 0x03, 0x14, 0x8d, 0xc0, 0xbb, 0x86, 0x09  ;; add edx,[ecx*4+0x986bbc0]
..@0x8052b63: db 0x03, 0x14, 0x9d, 0xc0, 0xab, 0x86, 0x09  ;; add edx,[ebx*4+0x986abc0]
..@0x8052b6a: db 0x8b, 0x5c, 0x24, 0x08  ;; mov ebx,[esp+0x8]
..@0x8052b6e: db 0x89, 0x14, 0x83  ;; mov [ebx+eax*4],edx
..@0x8052b71: add eax, strict byte 0x1
..@0x8052b74: cmp eax, strict byte 0x8
..@0x8052b77: db 0x75, 0x97  ;; jnz A.code+0x8052b10
..@0x8052b79: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8052b7d: db 0x83, 0x44, 0x24, 0x0c, 0x01  ;; add dword [esp+0xc],byte +0x1
..@0x8052b82: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8052b86: db 0x83, 0x04, 0x24, 0x20  ;; add dword [esp],byte +0x20
..@0x8052b8a: db 0x01, 0xc3  ;; add ebx,eax
..@0x8052b8c: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x8052b90: db 0x8d, 0x46, 0x20  ;; lea eax,[esi+0x20]
..@0x8052b93: db 0x85, 0x54, 0x24, 0x0c  ;; test [esp+0xc],edx
..@0x8052b97: db 0x89, 0x5c, 0x24, 0x08  ;; mov [esp+0x8],ebx
..@0x8052b9b: db 0x0f, 0x44, 0xf0  ;; cmovz esi,eax
..@0x8052b9e: db 0x39, 0x4c, 0x24, 0x0c  ;; cmp [esp+0xc],ecx
..@0x8052ba2: db 0x0f, 0x85, 0x5d, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8052b05
..@0x8052ba8: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8052bac: jmp strict near R.code+0x8052abd
..@0x8052bb1: db 0x83, 0x7c, 0x24, 0x10, 0x08  ;; cmp dword [esp+0x10],byte +0x8
..@0x8052bb6: db 0x0f, 0x85, 0x04, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x80529c0
..@0x8052bbc: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8052bc0: db 0xc7, 0x44, 0x24, 0x0c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xc],0x0
..@0x8052bc8: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8052bcc: db 0x85, 0xd2  ;; test edx,edx
..@0x8052bce: db 0x0f, 0x8e, 0xe9, 0xfe, 0xff, 0xff  ;; jng near A.code+0x8052abd
..@0x8052bd4: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8052bd6: db 0x31, 0xc0  ;; xor eax,eax
..@0x8052bd8: db 0x8b, 0x4c, 0x24, 0x04  ;; mov ecx,[esp+0x4]
..@0x8052bdc: db 0x89, 0xc2  ;; mov edx,eax
..@0x8052bde: db 0xd1, 0xfa  ;; sar edx,1
..@0x8052be0: db 0x8b, 0x5c, 0x85, 0x00  ;; mov ebx,[ebp+eax*4+0x0]
..@0x8052be4: db 0x8b, 0xb4, 0x91, 0x00, 0x01, 0x00, 0x00  ;; mov esi,[ecx+edx*4+0x100]
..@0x8052beb: db 0x8b, 0x14, 0x91  ;; mov edx,[ecx+edx*4]
..@0x8052bee: db 0xc1, 0xfe, 0x13  ;; sar esi,byte 0x13
..@0x8052bf1: and esi, strict byte -0x2
..@0x8052bf4: db 0xc1, 0xfa, 0x13  ;; sar edx,byte 0x13
..@0x8052bf7: db 0x8b, 0x0c, 0xb5, 0xc4, 0xfb, 0x86, 0x09  ;; mov ecx,[esi*4+0x986fbc4]
..@0x8052bfe: and edx, strict byte -0x2
..@0x8052c01: db 0x8b, 0x3c, 0xb5, 0xc0, 0xfb, 0x86, 0x09  ;; mov edi,[esi*4+0x986fbc0]
..@0x8052c08: db 0x03, 0x0c, 0x95, 0xc0, 0x3b, 0x87, 0x09  ;; add ecx,[edx*4+0x9873bc0]
..@0x8052c0f: db 0x8b, 0x14, 0x95, 0xc4, 0x3b, 0x87, 0x09  ;; mov edx,[edx*4+0x9873bc4]
..@0x8052c16: db 0x8d, 0x34, 0x0b  ;; lea esi,[ebx+ecx]
..@0x8052c19: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8052c1c: db 0x8d, 0x14, 0x3b  ;; lea edx,[ebx+edi]
..@0x8052c1f: db 0xc1, 0xee, 0x16  ;; shr esi,byte 0x16
..@0x8052c22: db 0xc1, 0xea, 0x16  ;; shr edx,byte 0x16
..@0x8052c25: db 0x03, 0x1c, 0x24  ;; add ebx,[esp]
..@0x8052c28: db 0x8b, 0x14, 0x95, 0xc0, 0xcb, 0x86, 0x09  ;; mov edx,[edx*4+0x986cbc0]
..@0x8052c2f: db 0xc1, 0xeb, 0x16  ;; shr ebx,byte 0x16
..@0x8052c32: db 0x03, 0x14, 0xb5, 0xc0, 0xbb, 0x86, 0x09  ;; add edx,[esi*4+0x986bbc0]
..@0x8052c39: db 0x8b, 0x74, 0x24, 0x08  ;; mov esi,[esp+0x8]
..@0x8052c3d: db 0x03, 0x14, 0x9d, 0xc0, 0xab, 0x86, 0x09  ;; add edx,[ebx*4+0x986abc0]
..@0x8052c44: db 0x8b, 0x5c, 0x24, 0x08  ;; mov ebx,[esp+0x8]
..@0x8052c48: db 0x89, 0x14, 0x83  ;; mov [ebx+eax*4],edx
..@0x8052c4b: db 0x8b, 0x54, 0x85, 0x04  ;; mov edx,[ebp+eax*4+0x4]
..@0x8052c4f: db 0x8d, 0x1c, 0x3a  ;; lea ebx,[edx+edi]
..@0x8052c52: db 0x01, 0xd1  ;; add ecx,edx
..@0x8052c54: db 0x03, 0x14, 0x24  ;; add edx,[esp]
..@0x8052c57: db 0xc1, 0xeb, 0x16  ;; shr ebx,byte 0x16
..@0x8052c5a: db 0x8b, 0x1c, 0x9d, 0xc0, 0xcb, 0x86, 0x09  ;; mov ebx,[ebx*4+0x986cbc0]
..@0x8052c61: db 0xc1, 0xe9, 0x16  ;; shr ecx,byte 0x16
..@0x8052c64: db 0xc1, 0xea, 0x16  ;; shr edx,byte 0x16
..@0x8052c67: db 0x03, 0x1c, 0x8d, 0xc0, 0xbb, 0x86, 0x09  ;; add ebx,[ecx*4+0x986bbc0]
..@0x8052c6e: db 0x03, 0x1c, 0x95, 0xc0, 0xab, 0x86, 0x09  ;; add ebx,[edx*4+0x986abc0]
..@0x8052c75: db 0x89, 0x5c, 0x86, 0x04  ;; mov [esi+eax*4+0x4],ebx
..@0x8052c79: add eax, strict byte 0x2
..@0x8052c7c: cmp eax, strict byte 0x8
..@0x8052c7f: db 0x0f, 0x85, 0x53, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8052bd8
..@0x8052c85: db 0x8b, 0x44, 0x24, 0x24  ;; mov eax,[esp+0x24]
..@0x8052c89: add ebp, strict byte 0x20
..@0x8052c8c: db 0x83, 0x44, 0x24, 0x0c, 0x01  ;; add dword [esp+0xc],byte +0x1
..@0x8052c91: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8052c95: db 0x8b, 0x4c, 0x24, 0x1c  ;; mov ecx,[esp+0x1c]
..@0x8052c99: db 0x01, 0xc6  ;; add esi,eax
..@0x8052c9b: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x8052c9f: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x8052ca3: add eax, strict byte 0x20
..@0x8052ca6: db 0x85, 0x54, 0x24, 0x0c  ;; test [esp+0xc],edx
..@0x8052caa: db 0x0f, 0x45, 0x44, 0x24, 0x04  ;; cmovnz eax,[esp+0x4]
..@0x8052caf: db 0x39, 0x4c, 0x24, 0x0c  ;; cmp [esp+0xc],ecx
..@0x8052cb3: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8052cb7: db 0x0f, 0x85, 0x19, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8052bd6
..@0x8052cbd: db 0x8b, 0x2c, 0x24  ;; mov ebp,[esp]
..@0x8052cc0: jmp strict near R.code+0x8052abd
..@0x8052cc5: sub esp, strict byte -0x80
..@0x8052cc8: pop ebx
..@0x8052cc9: pop esi
..@0x8052cca: pop edi
..@0x8052ccb: pop ebp
..@0x8052ccc: ret
..@0x8052ccd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8052cd0: push ebx
..@0x8052cd1: sub esp, strict byte 0x18
..@0x8052cd4: db 0x8b, 0x1d, 0x20, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e120]
..@0x8052cda: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8052cdc: db 0x75, 0x3a  ;; jnz A.code+0x8052d18
..@0x8052cde: db 0xa1, 0x28, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e128]
..@0x8052ce3: db 0x85, 0xc0  ;; test eax,eax
..@0x8052ce5: db 0x0f, 0x84, 0x8d, 0x00, 0x00, 0x00  ;; jz near A.code+0x8052d78
..@0x8052ceb: db 0xa3, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],eax
..@0x8052cf0: db 0xa1, 0x40, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a40]
..@0x8052cf5: db 0xc7, 0x05, 0x28, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e128],0x0
..@0x8052cfd: db 0x00, 0x00
..@0x8052cff: db 0x8d, 0x04, 0xc5, 0xe0, 0xff, 0xff, 0xff  ;; lea eax,[eax*8-0x20]
..@0x8052d06: db 0x29, 0x05, 0x24, 0xe1, 0x83, 0x09  ;; sub [0x983e124],eax
..@0x8052d0c: add esp, strict byte 0x18
..@0x8052d0f: pop ebx
..@0x8052d10: ret
..@0x8052d11: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052d18: db 0x8b, 0x1d, 0x6c, 0x8a, 0x85, 0x09  ;; mov ebx,[0x9858a6c]
..@0x8052d1e: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8052d26: db 0xa1, 0x1c, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a1c]
..@0x8052d2b: db 0xc7, 0x04, 0x24, 0x24, 0x8a, 0x84, 0x09  ;; mov dword [esp],0x9848a24
..@0x8052d32: db 0x2b, 0x1d, 0x70, 0x8a, 0x85, 0x09  ;; sub ebx,[0x9858a70]
..@0x8052d38: db 0xa3, 0x20, 0x8a, 0x84, 0x09  ;; mov [0x9848a20],eax
..@0x8052d3d: db 0xb8, 0xfc, 0xff, 0x00, 0x00  ;; mov eax,0xfffc
..@0x8052d42: db 0x81, 0xfb, 0xfc, 0xff, 0x00, 0x00  ;; cmp ebx,0xfffc
..@0x8052d48: db 0x0f, 0x47, 0xd8  ;; cmova ebx,eax
..@0x8052d4b: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x8052d50: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x8052d54: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8052d58: call B.code+fread
..@0x8052d5d: db 0x01, 0x1d, 0x70, 0x8a, 0x85, 0x09  ;; add [0x9858a70],ebx
..@0x8052d63: db 0x81, 0x2d, 0x24, 0xe1, 0x83, 0x09, 0xe0, 0xff  ;; sub dword [0x983e124],0x7ffe0
..@0x8052d6b: db 0x07, 0x00
..@0x8052d6d: add esp, strict byte 0x18
..@0x8052d70: pop ebx
..@0x8052d71: ret
..@0x8052d72: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052d78: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x8052d7d: db 0x8b, 0x50, 0x08  ;; mov edx,[eax+0x8]
..@0x8052d80: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8052d82: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8052d84: db 0xc1, 0xe1, 0x18  ;; shl ecx,byte 0x18
..@0x8052d87: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8052d8a: db 0x01, 0xcb  ;; add ebx,ecx
..@0x8052d8c: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8052d8e: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8052d94: db 0xc1, 0xe9, 0x08  ;; shr ecx,byte 0x8
..@0x8052d97: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8052d9a: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8052da0: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8052da2: db 0x01, 0xca  ;; add edx,ecx
..@0x8052da4: db 0x81, 0x78, 0x0c, 0x49, 0x44, 0x41, 0x54  ;; cmp dword [eax+0xc],0x54414449
..@0x8052dab: db 0x89, 0x15, 0x40, 0x8a, 0x85, 0x09  ;; mov [0x9858a40],edx
..@0x8052db1: db 0x8d, 0x54, 0x10, 0x0c  ;; lea edx,[eax+edx+0xc]
..@0x8052db5: db 0x89, 0x15, 0x28, 0xe1, 0x83, 0x09  ;; mov [0x983e128],edx
..@0x8052dbb: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x8052dbd: db 0x89, 0x15, 0x44, 0x8a, 0x85, 0x09  ;; mov [0x9858a44],edx
..@0x8052dc3: db 0x75, 0x08  ;; jnz A.code+0x8052dcd
..@0x8052dc5: db 0x8b, 0x40, 0x10  ;; mov eax,[eax+0x10]
..@0x8052dc8: db 0xa3, 0x48, 0x8a, 0x85, 0x09  ;; mov [0x9858a48],eax
..@0x8052dcd: db 0xc7, 0x05, 0x0c, 0xe1, 0x83, 0x09, 0x48, 0x8a  ;; mov dword [0x983e10c],0x9858a48
..@0x8052dd5: db 0x85, 0x09
..@0x8052dd7: db 0x83, 0x2d, 0x24, 0xe1, 0x83, 0x09, 0x20  ;; sub dword [0x983e124],byte +0x20
..@0x8052dde: add esp, strict byte 0x18
..@0x8052de1: pop ebx
..@0x8052de2: ret
..@0x8052de3: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8052de9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052df0: sub esp, strict byte 0x1c
..@0x8052df3: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x8052df7: db 0x8b, 0x1d, 0x78, 0x8a, 0x85, 0x09  ;; mov ebx,[0x9858a78]
..@0x8052dfd: db 0x89, 0x74, 0x24, 0x14  ;; mov [esp+0x14],esi
..@0x8052e01: db 0x8b, 0x35, 0x7c, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a7c]
..@0x8052e07: db 0x89, 0x7c, 0x24, 0x18  ;; mov [esp+0x18],edi
..@0x8052e0b: db 0x39, 0xda  ;; cmp edx,ebx
..@0x8052e0d: db 0x0f, 0x4d, 0xda  ;; cmovnl ebx,edx
..@0x8052e10: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x8052e12: db 0x0f, 0x4e, 0xf1  ;; cmovng esi,ecx
..@0x8052e15: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8052e17: db 0x7d, 0x1e  ;; jnl A.code+0x8052e37
..@0x8052e19: db 0x8b, 0x3d, 0x70, 0xc5, 0x87, 0x09  ;; mov edi,[0x987c570]
..@0x8052e1f: db 0x29, 0xde  ;; sub esi,ebx
..@0x8052e21: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x8052e25: db 0x01, 0xdf  ;; add edi,ebx
..@0x8052e27: db 0x29, 0xd3  ;; sub ebx,edx
..@0x8052e29: db 0x01, 0xd8  ;; add eax,ebx
..@0x8052e2b: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x8052e2e: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8052e32: call B.code+memcpy
..@0x8052e37: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8052e3b: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8052e3f: db 0x8b, 0x7c, 0x24, 0x18  ;; mov edi,[esp+0x18]
..@0x8052e43: add esp, strict byte 0x1c
..@0x8052e46: ret
..@0x8052e47: db 0x89, 0xf6  ;; mov esi,esi
..@0x8052e49: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052e50: push ebp
..@0x8052e51: push edi
..@0x8052e52: db 0xbf, 0x10, 0x20, 0x40, 0x00  ;; mov edi,0x402010
..@0x8052e57: push esi
..@0x8052e58: push ebx
..@0x8052e59: sub esp, strict byte 0x3c
..@0x8052e5c: db 0xa1, 0x18, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e118]
..@0x8052e61: db 0x8b, 0x35, 0x14, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e114]
..@0x8052e67: db 0x8b, 0x15, 0x1c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e11c]
..@0x8052e6d: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x8052e71: db 0xb8, 0x00, 0x01, 0x02, 0x04  ;; mov eax,0x4020100
..@0x8052e76: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8052e79: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8052e80: db 0x8d, 0x0c, 0x95, 0x00, 0x00, 0x00, 0x00  ;; lea ecx,[edx*4+0x0]
..@0x8052e87: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8052e89: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8052e8b: db 0xd3, 0xfd  ;; sar ebp,cl
..@0x8052e8d: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8052e8f: and ebp, strict byte 0xf
..@0x8052e92: and ebx, strict byte 0xf
..@0x8052e95: db 0x39, 0xf5  ;; cmp ebp,esi
..@0x8052e97: db 0x0f, 0x8d, 0x13, 0x02, 0x00, 0x00  ;; jnl near A.code+0x80530b0
..@0x8052e9d: db 0x3b, 0x5c, 0x24, 0x1c  ;; cmp ebx,[esp+0x1c]
..@0x8052ea1: db 0x0f, 0x8d, 0x09, 0x02, 0x00, 0x00  ;; jnl near A.code+0x80530b0
..@0x8052ea7: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8052ea9: db 0x78, 0xd5  ;; js A.code+0x8052e80
..@0x8052eab: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x11, 0x22, 0x33  ;; mov dword [esp+0x1c],0x33221100
..@0x8052eb3: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8052eb5: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x8052eba: db 0xd3, 0x7c, 0x24, 0x1c  ;; sar dword [esp+0x1c],cl
..@0x8052ebe: db 0x89, 0x15, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],edx
..@0x8052ec4: db 0x89, 0xfa  ;; mov edx,edi
..@0x8052ec6: db 0x89, 0x2d, 0x00, 0x8a, 0x84, 0x09  ;; mov [0x9848a00],ebp
..@0x8052ecc: db 0x89, 0x1d, 0x04, 0x8a, 0x84, 0x09  ;; mov [0x9848a04],ebx
..@0x8052ed2: db 0x83, 0x64, 0x24, 0x1c, 0x0f  ;; and dword [esp+0x1c],byte +0xf
..@0x8052ed7: db 0x0f, 0xb6, 0x4c, 0x24, 0x1c  ;; movzx ecx,byte [esp+0x1c]
..@0x8052edc: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8052ede: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8052ee0: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8052ee4: db 0xba, 0x10, 0x21, 0x32, 0x33  ;; mov edx,0x33322110
..@0x8052ee9: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8052eeb: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8052eef: and edx, strict byte 0xf
..@0x8052ef2: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8052ef4: db 0xd3, 0xe7  ;; shl edi,cl
..@0x8052ef6: db 0x0f, 0xb6, 0x4c, 0x24, 0x1c  ;; movzx ecx,byte [esp+0x1c]
..@0x8052efb: db 0x8d, 0x74, 0x30, 0xff  ;; lea esi,[eax+esi-0x1]
..@0x8052eff: db 0xa1, 0x30, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e130]
..@0x8052f04: db 0x89, 0x7c, 0x24, 0x28  ;; mov [esp+0x28],edi
..@0x8052f08: db 0x29, 0xee  ;; sub esi,ebp
..@0x8052f0a: db 0x89, 0x3d, 0x0c, 0x8a, 0x84, 0x09  ;; mov [0x9848a0c],edi
..@0x8052f10: db 0xbf, 0x01, 0x13, 0x02, 0x04  ;; mov edi,0x4021301
..@0x8052f15: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8052f17: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8052f19: db 0x0f, 0xb6, 0x15, 0x4c, 0xca, 0x87, 0x09  ;; movzx edx,byte [0x987ca4c]
..@0x8052f20: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8052f24: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8052f26: db 0x89, 0x35, 0x10, 0x8a, 0x84, 0x09  ;; mov [0x9848a10],esi
..@0x8052f2c: db 0xa3, 0x14, 0x8a, 0x84, 0x09  ;; mov [0x9848a14],eax
..@0x8052f31: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8052f33: db 0x88, 0x54, 0x24, 0x26  ;; mov [esp+0x26],dl
..@0x8052f37: db 0x0f, 0xb6, 0x15, 0x20, 0xc6, 0x87, 0x09  ;; movzx edx,byte [0x987c620]
..@0x8052f3e: db 0xc1, 0xe1, 0x02  ;; shl ecx,byte 0x2
..@0x8052f41: db 0xd3, 0xff  ;; sar edi,cl
..@0x8052f43: and edi, strict byte 0xf
..@0x8052f46: db 0x0f, 0xaf, 0xfe  ;; imul edi,esi
..@0x8052f49: db 0x80, 0xfa, 0x02  ;; cmp dl,0x2
..@0x8052f4c: db 0x88, 0x54, 0x24, 0x27  ;; mov [esp+0x27],dl
..@0x8052f50: db 0x89, 0x3d, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],edi
..@0x8052f56: db 0x0f, 0x84, 0x94, 0x01, 0x00, 0x00  ;; jz near A.code+0x80530f0
..@0x8052f5c: db 0x80, 0xfa, 0x04  ;; cmp dl,0x4
..@0x8052f5f: db 0x0f, 0x84, 0x7b, 0x01, 0x00, 0x00  ;; jz near A.code+0x80530e0
..@0x8052f65: db 0x80, 0xfa, 0x01  ;; cmp dl,0x1
..@0x8052f68: db 0x0f, 0x84, 0x5a, 0x01, 0x00, 0x00  ;; jz near A.code+0x80530c8
..@0x8052f6e: db 0x8d, 0x47, 0x01  ;; lea eax,[edi+0x1]
..@0x8052f71: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x8052f79: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8052f7d: db 0xc7, 0x04, 0x24, 0x20, 0x8a, 0x84, 0x09  ;; mov dword [esp],0x9848a20
..@0x8052f84: call B.code+memset
..@0x8052f89: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x8052f8f: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8052f93: db 0xc7, 0x05, 0x20, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a20],0x0
..@0x8052f9b: db 0x00, 0x00
..@0x8052f9d: db 0x8b, 0x3d, 0x3c, 0xe1, 0x83, 0x09  ;; mov edi,[0x983e13c]
..@0x8052fa3: db 0xc7, 0x05, 0x24, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a24],0x0
..@0x8052fab: db 0x00, 0x00
..@0x8052fad: db 0x03, 0x1d, 0x40, 0xe1, 0x83, 0x09  ;; add ebx,[0x983e140]
..@0x8052fb3: db 0xc7, 0x05, 0x2c, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a2c],0x0
..@0x8052fbb: db 0x00, 0x00
..@0x8052fbd: db 0xc7, 0x05, 0x30, 0x8a, 0x85, 0x09, 0xff, 0xff  ;; mov dword [0x9858a30],0xffffffff
..@0x8052fc5: db 0xff, 0xff
..@0x8052fc7: sub eax, strict byte 0x1
..@0x8052fca: db 0x01, 0xef  ;; add edi,ebp
..@0x8052fcc: db 0x89, 0xfa  ;; mov edx,edi
..@0x8052fce: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8052fd0: db 0x89, 0x1d, 0x60, 0x61, 0x84, 0x09  ;; mov [0x9846160],ebx
..@0x8052fd6: db 0xf7, 0xd2  ;; not edx
..@0x8052fd8: db 0xf7, 0xd1  ;; not ecx
..@0x8052fda: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x8052fdd: db 0xc1, 0xf9, 0x1f  ;; sar ecx,byte 0x1f
..@0x8052fe0: db 0x09, 0xd0  ;; or eax,edx
..@0x8052fe2: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8052fe6: db 0x21, 0xf8  ;; and eax,edi
..@0x8052fe8: sub edx, strict byte 0x1
..@0x8052feb: db 0x09, 0xca  ;; or edx,ecx
..@0x8052fed: db 0x0f, 0xb6, 0x4c, 0x24, 0x1c  ;; movzx ecx,byte [esp+0x1c]
..@0x8052ff2: db 0x21, 0xda  ;; and edx,ebx
..@0x8052ff4: db 0x0f, 0xaf, 0x54, 0x24, 0x2c  ;; imul edx,[esp+0x2c]
..@0x8052ff9: db 0x8d, 0x04, 0x82  ;; lea eax,[edx+eax*4]
..@0x8052ffc: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8053000: db 0x03, 0x05, 0x2c, 0xe1, 0x83, 0x09  ;; add eax,[0x983e12c]
..@0x8053006: db 0xa3, 0x34, 0x8a, 0x85, 0x09  ;; mov [0x9858a34],eax
..@0x805300b: db 0xa1, 0x34, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e134]
..@0x8053010: db 0x2b, 0x05, 0x3c, 0xe1, 0x83, 0x09  ;; sub eax,[0x983e13c]
..@0x8053016: db 0x29, 0xe8  ;; sub eax,ebp
..@0x8053018: db 0x8d, 0x44, 0x02, 0xff  ;; lea eax,[edx+eax-0x1]
..@0x805301c: db 0xd3, 0xf8  ;; sar eax,cl
..@0x805301e: db 0x39, 0xc6  ;; cmp esi,eax
..@0x8053020: db 0x0f, 0x4e, 0xc6  ;; cmovng eax,esi
..@0x8053023: db 0x29, 0xea  ;; sub edx,ebp
..@0x8053025: db 0x2b, 0x15, 0x3c, 0xe1, 0x83, 0x09  ;; sub edx,[0x983e13c]
..@0x805302b: sub edx, strict byte 0x1
..@0x805302e: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8053030: db 0xb9, 0x00, 0x00, 0x00, 0x00  ;; mov ecx,0x0
..@0x8053035: db 0x85, 0xd2  ;; test edx,edx
..@0x8053037: db 0x0f, 0x48, 0xd1  ;; cmovs edx,ecx
..@0x805303a: db 0x89, 0xf1  ;; mov ecx,esi
..@0x805303c: db 0x29, 0xd1  ;; sub ecx,edx
..@0x805303e: db 0x89, 0xca  ;; mov edx,ecx
..@0x8053040: db 0x89, 0x0d, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],ecx
..@0x8053046: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8053048: db 0x29, 0xc1  ;; sub ecx,eax
..@0x805304a: db 0x80, 0x7c, 0x24, 0x26, 0x04  ;; cmp byte [esp+0x26],0x4
..@0x805304f: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8053051: db 0x89, 0x0d, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],ecx
..@0x8053057: db 0x0f, 0x84, 0xf3, 0x00, 0x00, 0x00  ;; jz near A.code+0x8053150
..@0x805305d: db 0x80, 0x7c, 0x24, 0x26, 0x02  ;; cmp byte [esp+0x26],0x2
..@0x8053062: db 0x0f, 0x84, 0x00, 0x01, 0x00, 0x00  ;; jz near A.code+0x8053168
..@0x8053068: db 0x80, 0x7c, 0x24, 0x26, 0x06  ;; cmp byte [esp+0x26],0x6
..@0x805306d: db 0x0f, 0x84, 0x35, 0x01, 0x00, 0x00  ;; jz near A.code+0x80531a8
..@0x8053073: db 0x80, 0x7c, 0x24, 0x27, 0x02  ;; cmp byte [esp+0x27],0x2
..@0x8053078: db 0x0f, 0x84, 0x8a, 0x00, 0x00, 0x00  ;; jz near A.code+0x8053108
..@0x805307e: db 0x80, 0x7c, 0x24, 0x27, 0x04  ;; cmp byte [esp+0x27],0x4
..@0x8053083: db 0x0f, 0x84, 0xf7, 0x00, 0x00, 0x00  ;; jz near A.code+0x8053180
..@0x8053089: db 0x80, 0x7c, 0x24, 0x27, 0x01  ;; cmp byte [esp+0x27],0x1
..@0x805308e: db 0x0f, 0x84, 0x9c, 0x00, 0x00, 0x00  ;; jz near A.code+0x8053130
..@0x8053094: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053098: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x805309c: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x805309f: db 0xa3, 0x08, 0x8a, 0x84, 0x09  ;; mov [0x9848a08],eax
..@0x80530a4: add esp, strict byte 0x3c
..@0x80530a7: db 0x31, 0xc0  ;; xor eax,eax
..@0x80530a9: pop ebx
..@0x80530aa: pop esi
..@0x80530ab: pop edi
..@0x80530ac: pop ebp
..@0x80530ad: ret
..@0x80530ae: dw 0x9066  ;; o16 nop
..@0x80530b0: cmp edx, strict byte 0x1
..@0x80530b3: db 0x0f, 0x8e, 0xee, 0xfd, 0xff, 0xff  ;; jng near A.code+0x8052ea7
..@0x80530b9: sub edx, strict byte 0x1
..@0x80530bc: jmp strict near R.code+0x8052e80
..@0x80530c1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80530c8: add edi, strict byte 0x7
..@0x80530cb: db 0xc1, 0xff, 0x03  ;; sar edi,byte 0x3
..@0x80530ce: db 0x89, 0x3d, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],edi
..@0x80530d4: jmp strict near R.code+0x8052f6e
..@0x80530d9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80530e0: add edi, strict byte 0x1
..@0x80530e3: db 0xd1, 0xff  ;; sar edi,1
..@0x80530e5: db 0x89, 0x3d, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],edi
..@0x80530eb: jmp strict near R.code+0x8052f6e
..@0x80530f0: add edi, strict byte 0x3
..@0x80530f3: db 0xc1, 0xff, 0x02  ;; sar edi,byte 0x2
..@0x80530f6: db 0x89, 0x3d, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],edi
..@0x80530fc: jmp strict near R.code+0x8052f6e
..@0x8053101: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053108: db 0xf7, 0xde  ;; neg esi
..@0x805310a: and esi, strict byte 0x3
..@0x805310d: db 0x8d, 0x54, 0x32, 0x03  ;; lea edx,[edx+esi+0x3]
..@0x8053111: db 0x8d, 0x44, 0x31, 0x03  ;; lea eax,[ecx+esi+0x3]
..@0x8053115: db 0x01, 0xd2  ;; add edx,edx
..@0x8053117: db 0x01, 0xc0  ;; add eax,eax
..@0x8053119: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x805311f: db 0xa3, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],eax
..@0x8053124: jmp strict near R.code+0x8053098
..@0x8053129: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053130: db 0xf7, 0xde  ;; neg esi
..@0x8053132: and esi, strict byte 0x7
..@0x8053135: add esi, strict byte 0x7
..@0x8053138: db 0x01, 0xf2  ;; add edx,esi
..@0x805313a: db 0x01, 0xce  ;; add esi,ecx
..@0x805313c: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x8053142: db 0x89, 0x35, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],esi
..@0x8053148: jmp strict near R.code+0x8053098
..@0x805314d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8053150: db 0x01, 0xd2  ;; add edx,edx
..@0x8053152: db 0x01, 0xc0  ;; add eax,eax
..@0x8053154: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x805315a: db 0xa3, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],eax
..@0x805315f: jmp strict near R.code+0x8053098
..@0x8053164: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053168: db 0x8d, 0x54, 0x52, 0xfe  ;; lea edx,[edx+edx*2-0x2]
..@0x805316c: db 0x8d, 0x44, 0x49, 0xfe  ;; lea eax,[ecx+ecx*2-0x2]
..@0x8053170: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x8053176: db 0xa3, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],eax
..@0x805317b: jmp strict near R.code+0x8053098
..@0x8053180: and esi, strict byte 0x1
..@0x8053183: db 0x8d, 0x54, 0x32, 0x01  ;; lea edx,[edx+esi+0x1]
..@0x8053187: db 0x8d, 0x44, 0x31, 0x01  ;; lea eax,[ecx+esi+0x1]
..@0x805318b: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x805318e: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x8053191: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x8053197: db 0xa3, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],eax
..@0x805319c: jmp strict near R.code+0x8053098
..@0x80531a1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80531a8: db 0x8d, 0x14, 0x95, 0xfe, 0xff, 0xff, 0xff  ;; lea edx,[edx*4-0x2]
..@0x80531af: db 0x8d, 0x04, 0x8d, 0xfe, 0xff, 0xff, 0xff  ;; lea eax,[ecx*4-0x2]
..@0x80531b6: db 0x89, 0x15, 0x38, 0x8a, 0x85, 0x09  ;; mov [0x9858a38],edx
..@0x80531bc: db 0xa3, 0x3c, 0x8a, 0x85, 0x09  ;; mov [0x9858a3c],eax
..@0x80531c1: jmp strict near R.code+0x8053098
..@0x80531c6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80531c9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80531d0: push ebp
..@0x80531d1: push edi
..@0x80531d2: push esi
..@0x80531d3: push ebx
..@0x80531d4: sub esp, strict byte 0x3c
..@0x80531d7: db 0x8b, 0x35, 0x30, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a30]
..@0x80531dd: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x80531e1: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x80531e5: db 0xc7, 0x44, 0x24, 0x0c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xc],0x0
..@0x80531ed: db 0x85, 0xf6  ;; test esi,esi
..@0x80531ef: db 0x0f, 0x88, 0xe5, 0x06, 0x00, 0x00  ;; js near A.code+0x80538da
..@0x80531f5: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80531f9: db 0x39, 0x44, 0x24, 0x18  ;; cmp [esp+0x18],eax
..@0x80531fd: db 0x0f, 0x8e, 0x37, 0x05, 0x00, 0x00  ;; jng near A.code+0x805373a
..@0x8053203: nop
..@0x8053204: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053208: db 0x8b, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov edi,[0x9858a28]
..@0x805320e: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8053212: db 0x01, 0xf8  ;; add eax,edi
..@0x8053214: db 0x3b, 0x44, 0x24, 0x18  ;; cmp eax,[esp+0x18]
..@0x8053218: db 0x0f, 0x4f, 0x44, 0x24, 0x18  ;; cmovg eax,[esp+0x18]
..@0x805321d: db 0x83, 0x3d, 0x30, 0x8a, 0x85, 0x09, 0x05  ;; cmp dword [0x9858a30],byte +0x5
..@0x8053224: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x8053228: db 0x0f, 0x87, 0x12, 0x01, 0x00, 0x00  ;; ja near A.code+0x8053340
..@0x805322e: db 0xa1, 0x30, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a30]
..@0x8053233: db 0xff, 0x24, 0x85, 0x60, 0xb7, 0x05, 0x08  ;; jmp [eax*4+code_ptr_0x805b760]
..@0x805323a: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x805323e: db 0x39, 0x54, 0x24, 0x20  ;; cmp [esp+0x20],edx
..@0x8053242: db 0x0f, 0x8e, 0xf8, 0x00, 0x00, 0x00  ;; jng near A.code+0x8053340
..@0x8053248: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x805324c: db 0x8d, 0x87, 0x20, 0x8a, 0x84, 0x09  ;; lea eax,[edi+0x9848a20]
..@0x8053252: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x8053256: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x805325a: db 0x89, 0xc7  ;; mov edi,eax
..@0x805325c: db 0x8b, 0x35, 0x2c, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a2c]
..@0x8053262: db 0x03, 0x54, 0x24, 0x0c  ;; add edx,[esp+0xc]
..@0x8053266: db 0x01, 0xc1  ;; add ecx,eax
..@0x8053268: db 0x89, 0x54, 0x24, 0x10  ;; mov [esp+0x10],edx
..@0x805326c: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8053270: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8053272: db 0x89, 0x4c, 0x24, 0x24  ;; mov [esp+0x24],ecx
..@0x8053276: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8053279: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8053280: db 0x0f, 0xb6, 0x07  ;; movzx eax,byte [edi]
..@0x8053283: db 0x0f, 0xb6, 0x8e, 0x24, 0x8a, 0x85, 0x09  ;; movzx ecx,byte [esi+0x9858a24]
..@0x805328a: db 0x0f, 0xb6, 0x9e, 0x20, 0x8a, 0x85, 0x09  ;; movzx ebx,byte [esi+0x9858a20]
..@0x8053291: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8053294: db 0x88, 0x44, 0x24, 0x17  ;; mov [esp+0x17],al
..@0x8053298: db 0x89, 0x4c, 0x24, 0x08  ;; mov [esp+0x8],ecx
..@0x805329c: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x80532a0: db 0x29, 0xca  ;; sub edx,ecx
..@0x80532a2: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x80532a4: db 0x2b, 0x4c, 0x24, 0x08  ;; sub ecx,[esp+0x8]
..@0x80532a8: db 0x8d, 0x04, 0x0a  ;; lea eax,[edx+ecx]
..@0x80532ab: db 0x89, 0xc5  ;; mov ebp,eax
..@0x80532ad: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x80532b0: db 0x31, 0xe8  ;; xor eax,ebp
..@0x80532b2: db 0x29, 0xe8  ;; sub eax,ebp
..@0x80532b4: db 0x89, 0xd5  ;; mov ebp,edx
..@0x80532b6: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x80532b9: db 0x31, 0xea  ;; xor edx,ebp
..@0x80532bb: db 0x29, 0xea  ;; sub edx,ebp
..@0x80532bd: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x80532bf: db 0xc1, 0xfd, 0x1f  ;; sar ebp,byte 0x1f
..@0x80532c2: db 0x31, 0xe9  ;; xor ecx,ebp
..@0x80532c4: db 0x29, 0xe9  ;; sub ecx,ebp
..@0x80532c6: db 0x39, 0xd0  ;; cmp eax,edx
..@0x80532c8: db 0x7c, 0x04  ;; jl A.code+0x80532ce
..@0x80532ca: db 0x39, 0xca  ;; cmp edx,ecx
..@0x80532cc: db 0x7e, 0x0b  ;; jng A.code+0x80532d9
..@0x80532ce: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x80532d2: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x80532d4: db 0x0f, 0x4c, 0x5c, 0x24, 0x08  ;; cmovl ebx,[esp+0x8]
..@0x80532d9: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x80532dd: db 0x0f, 0xb6, 0x44, 0x24, 0x17  ;; movzx eax,byte [esp+0x17]
..@0x80532e2: db 0x02, 0x19  ;; add bl,[ecx]
..@0x80532e4: add ecx, strict byte 0x1
..@0x80532e7: db 0x88, 0x86, 0x24, 0x8a, 0x85, 0x09  ;; mov [esi+0x9858a24],al
..@0x80532ed: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x80532f1: db 0x88, 0x1f  ;; mov [edi],bl
..@0x80532f3: sub edi, strict byte 0x1
..@0x80532f6: db 0x3b, 0x7c, 0x24, 0x24  ;; cmp edi,[esp+0x24]
..@0x80532fa: db 0x88, 0x9e, 0x20, 0x8a, 0x85, 0x09  ;; mov [esi+0x9858a20],bl
..@0x8053300: db 0x8b, 0x34, 0xb5, 0x44, 0xe1, 0x83, 0x09  ;; mov esi,[esi*4+0x983e144]
..@0x8053307: db 0x0f, 0x85, 0x73, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8053280
..@0x805330d: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8053311: db 0x89, 0x35, 0x2c, 0x8a, 0x85, 0x09  ;; mov [0x9858a2c],esi
..@0x8053317: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x805331b: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x805331f: db 0xf7, 0xd0  ;; not eax
..@0x8053321: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x8053325: sub edi, strict byte 0x1
..@0x8053328: db 0x8d, 0x54, 0x02, 0x01  ;; lea edx,[edx+eax+0x1]
..@0x805332c: db 0x29, 0xc7  ;; sub edi,eax
..@0x805332e: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x8053332: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x8053338: nop
..@0x8053339: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053340: db 0x85, 0xff  ;; test edi,edi
..@0x8053342: db 0x0f, 0x8f, 0xf2, 0x03, 0x00, 0x00  ;; jg near A.code+0x805373a
..@0x8053348: db 0x8b, 0x15, 0x60, 0x61, 0x84, 0x09  ;; mov edx,[0x9846160]
..@0x805334e: db 0x3b, 0x15, 0x38, 0xe1, 0x83, 0x09  ;; cmp edx,[0x983e138]
..@0x8053354: db 0x0f, 0x83, 0x98, 0x00, 0x00, 0x00  ;; jnc near A.code+0x80533f2
..@0x805335a: db 0x0f, 0xb6, 0x0d, 0x4c, 0xca, 0x87, 0x09  ;; movzx ecx,byte [0x987ca4c]
..@0x8053361: db 0xa1, 0x38, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a38]
..@0x8053366: db 0x8b, 0x2d, 0x34, 0x8a, 0x85, 0x09  ;; mov ebp,[0x9858a34]
..@0x805336c: db 0x80, 0xf9, 0x04  ;; cmp cl,0x4
..@0x805336f: db 0x0f, 0x84, 0xfb, 0x03, 0x00, 0x00  ;; jz near A.code+0x8053770
..@0x8053375: db 0x80, 0xf9, 0x06  ;; cmp cl,0x6
..@0x8053378: db 0x0f, 0x84, 0xb1, 0x04, 0x00, 0x00  ;; jz near A.code+0x805382f
..@0x805337e: db 0x80, 0xf9, 0x02  ;; cmp cl,0x2
..@0x8053381: db 0x0f, 0x84, 0x41, 0x04, 0x00, 0x00  ;; jz near A.code+0x80537c8
..@0x8053387: db 0x0f, 0xb6, 0x0d, 0x20, 0xc6, 0x87, 0x09  ;; movzx ecx,byte [0x987c620]
..@0x805338e: db 0x80, 0xf9, 0x02  ;; cmp cl,0x2
..@0x8053391: db 0x0f, 0x84, 0xdb, 0x05, 0x00, 0x00  ;; jz near A.code+0x8053972
..@0x8053397: db 0x0f, 0x8e, 0xeb, 0x04, 0x00, 0x00  ;; jng near A.code+0x8053888
..@0x805339d: db 0x80, 0xf9, 0x04  ;; cmp cl,0x4
..@0x80533a0: db 0x0f, 0x84, 0x85, 0x05, 0x00, 0x00  ;; jz near A.code+0x805392b
..@0x80533a6: db 0x80, 0xf9, 0x08  ;; cmp cl,0x8
..@0x80533a9: db 0x75, 0x3b  ;; jnz A.code+0x80533e6
..@0x80533ab: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80533ad: db 0x8b, 0x15, 0x3c, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a3c]
..@0x80533b3: db 0x89, 0xef  ;; mov edi,ebp
..@0x80533b5: db 0x8b, 0x1d, 0x08, 0x8a, 0x84, 0x09  ;; mov ebx,[0x9848a08]
..@0x80533bb: db 0x29, 0xd1  ;; sub ecx,edx
..@0x80533bd: db 0x7e, 0x1b  ;; jng A.code+0x80533da
..@0x80533bf: db 0x81, 0xc2, 0x20, 0x8a, 0x84, 0x09  ;; add edx,0x9848a20
..@0x80533c5: db 0x0f, 0xb6, 0x04, 0x11  ;; movzx eax,byte [ecx+edx]
..@0x80533c9: db 0x8b, 0x04, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov eax,[eax*4+0x987c640]
..@0x80533d0: sub ecx, strict byte 0x1
..@0x80533d3: db 0x89, 0x07  ;; mov [edi],eax
..@0x80533d5: db 0x8d, 0x3c, 0x1f  ;; lea edi,[edi+ebx]
..@0x80533d8: db 0x75, 0xeb  ;; jnz A.code+0x80533c5
..@0x80533da: db 0x8b, 0x2d, 0x34, 0x8a, 0x85, 0x09  ;; mov ebp,[0x9858a34]
..@0x80533e0: db 0x8b, 0x15, 0x60, 0x61, 0x84, 0x09  ;; mov edx,[0x9846160]
..@0x80533e6: db 0x03, 0x2d, 0x14, 0x8a, 0x84, 0x09  ;; add ebp,[0x9848a14]
..@0x80533ec: db 0x89, 0x2d, 0x34, 0x8a, 0x85, 0x09  ;; mov [0x9858a34],ebp
..@0x80533f2: db 0xc7, 0x05, 0x20, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a20],0x0
..@0x80533fa: db 0x00, 0x00
..@0x80533fc: db 0xa1, 0x54, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e154]
..@0x8053401: db 0xc7, 0x05, 0x24, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a24],0x0
..@0x8053409: db 0x00, 0x00
..@0x805340b: db 0x03, 0x15, 0x0c, 0x8a, 0x84, 0x09  ;; add edx,[0x9848a0c]
..@0x8053411: db 0xa3, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],eax
..@0x8053416: db 0xa1, 0x1c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e11c]
..@0x805341b: db 0x89, 0x15, 0x60, 0x61, 0x84, 0x09  ;; mov [0x9846160],edx
..@0x8053421: db 0x85, 0xc0  ;; test eax,eax
..@0x8053423: db 0x74, 0x14  ;; jz A.code+0x8053439
..@0x8053425: db 0x8b, 0x0d, 0x40, 0xe1, 0x83, 0x09  ;; mov ecx,[0x983e140]
..@0x805342b: db 0x03, 0x0d, 0x18, 0xe1, 0x83, 0x09  ;; add ecx,[0x983e118]
..@0x8053431: db 0x39, 0xca  ;; cmp edx,ecx
..@0x8053433: db 0x0f, 0x8d, 0x0f, 0x03, 0x00, 0x00  ;; jnl near A.code+0x8053748
..@0x8053439: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x805343d: db 0x39, 0x54, 0x24, 0x0c  ;; cmp [esp+0xc],edx
..@0x8053441: db 0x0f, 0x8d, 0xe9, 0x02, 0x00, 0x00  ;; jnl near A.code+0x8053730
..@0x8053447: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x805344b: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x805344f: db 0x83, 0x44, 0x24, 0x0c, 0x01  ;; add dword [esp+0xc],byte +0x1
..@0x8053454: db 0x0f, 0xb6, 0x0c, 0x02  ;; movzx ecx,byte [edx+eax]
..@0x8053458: db 0x8b, 0x15, 0x04, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e104]
..@0x805345e: db 0x0f, 0xb6, 0xc1  ;; movzx eax,cl
..@0x8053461: db 0x85, 0xd2  ;; test edx,edx
..@0x8053463: db 0xa3, 0x30, 0x8a, 0x85, 0x09  ;; mov [0x9858a30],eax
..@0x8053468: db 0x74, 0x11  ;; jz A.code+0x805347b
..@0x805346a: db 0x8b, 0x1d, 0x60, 0x61, 0x84, 0x09  ;; mov ebx,[0x9846160]
..@0x8053470: db 0x3b, 0x1d, 0x00, 0xe1, 0x83, 0x09  ;; cmp ebx,[0x983e100]
..@0x8053476: db 0x73, 0x03  ;; jnc A.code+0x805347b
..@0x8053478: db 0x88, 0x0c, 0x1a  ;; mov [edx+ebx],cl
..@0x805347b: db 0x3b, 0x05, 0xdc, 0xd1, 0x05, 0x08  ;; cmp eax,[0x805d1dc]
..@0x8053481: db 0x0f, 0x84, 0xd9, 0x02, 0x00, 0x00  ;; jz near A.code+0x8053760
..@0x8053487: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x805348b: db 0x39, 0x4c, 0x24, 0x18  ;; cmp [esp+0x18],ecx
..@0x805348f: db 0x0f, 0x8f, 0x73, 0xfd, 0xff, 0xff  ;; jg near A.code+0x8053208
..@0x8053495: jmp strict near R.code+0x805373a
..@0x805349a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80534a0: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x80534a4: db 0x39, 0x4c, 0x24, 0x20  ;; cmp [esp+0x20],ecx
..@0x80534a8: db 0x0f, 0x8e, 0x92, 0xfe, 0xff, 0xff  ;; jng near A.code+0x8053340
..@0x80534ae: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x80534b2: db 0x8d, 0x97, 0x20, 0x8a, 0x84, 0x09  ;; lea edx,[edi+0x9848a20]
..@0x80534b8: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x80534bc: db 0x03, 0x5c, 0x24, 0x20  ;; add ebx,[esp+0x20]
..@0x80534c0: db 0x01, 0xc8  ;; add eax,ecx
..@0x80534c2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80534c8: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x80534cb: add eax, strict byte 0x1
..@0x80534ce: db 0x88, 0x0a  ;; mov [edx],cl
..@0x80534d0: sub edx, strict byte 0x1
..@0x80534d3: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x80534d5: db 0x75, 0xf1  ;; jnz A.code+0x80534c8
..@0x80534d7: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80534db: sub edi, strict byte 0x1
..@0x80534de: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x80534e2: db 0xf7, 0xd0  ;; not eax
..@0x80534e4: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x80534e8: db 0x29, 0xc7  ;; sub edi,eax
..@0x80534ea: db 0x8d, 0x44, 0x10, 0x01  ;; lea eax,[eax+edx+0x1]
..@0x80534ee: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x80534f4: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x80534f8: jmp strict near R.code+0x8053340
..@0x80534fd: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8053501: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x8053505: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8053509: db 0x8b, 0x2d, 0x2c, 0x8a, 0x85, 0x09  ;; mov ebp,[0x9858a2c]
..@0x805350f: db 0x03, 0x54, 0x24, 0x0c  ;; add edx,[esp+0xc]
..@0x8053513: db 0x03, 0x4c, 0x24, 0x20  ;; add ecx,[esp+0x20]
..@0x8053517: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x805351b: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x805351f: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x8053523: db 0x0f, 0x8e, 0x17, 0xfe, 0xff, 0xff  ;; jng near A.code+0x8053340
..@0x8053529: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053530: db 0x0f, 0xb6, 0x85, 0x20, 0x8a, 0x85, 0x09  ;; movzx eax,byte [ebp+0x9858a20]
..@0x8053537: db 0x0f, 0xb6, 0x9f, 0x20, 0x8a, 0x84, 0x09  ;; movzx ebx,byte [edi+0x9848a20]
..@0x805353e: db 0x0f, 0xb6, 0x8d, 0x24, 0x8a, 0x85, 0x09  ;; movzx ecx,byte [ebp+0x9858a24]
..@0x8053545: db 0x89, 0xca  ;; mov edx,ecx
..@0x8053547: db 0x29, 0xc2  ;; sub edx,eax
..@0x8053549: db 0x29, 0xda  ;; sub edx,ebx
..@0x805354b: db 0x8d, 0x14, 0x95, 0x00, 0x82, 0x84, 0x09  ;; lea edx,[edx*4+0x9848200]
..@0x8053552: db 0x8b, 0x34, 0x9a  ;; mov esi,[edx+ebx*4]
..@0x8053555: db 0x8b, 0x3c, 0x8a  ;; mov edi,[edx+ecx*4]
..@0x8053558: db 0x39, 0xf7  ;; cmp edi,esi
..@0x805355a: db 0x0f, 0x4d, 0xfe  ;; cmovnl edi,esi
..@0x805355d: db 0x0f, 0x4d, 0xcb  ;; cmovnl ecx,ebx
..@0x8053560: db 0x3b, 0x3c, 0x82  ;; cmp edi,[edx+eax*4]
..@0x8053563: db 0x0f, 0x4d, 0xc8  ;; cmovnl ecx,eax
..@0x8053566: db 0x8b, 0x44, 0x24, 0x08  ;; mov eax,[esp+0x8]
..@0x805356a: db 0x8b, 0x15, 0x2c, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a2c]
..@0x8053570: db 0x83, 0x44, 0x24, 0x08, 0x01  ;; add dword [esp+0x8],byte +0x1
..@0x8053575: db 0x02, 0x08  ;; add cl,[eax]
..@0x8053577: db 0xa1, 0x28, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a28]
..@0x805357c: db 0x88, 0x8d, 0x20, 0x8a, 0x85, 0x09  ;; mov [ebp+0x9858a20],cl
..@0x8053582: db 0x8b, 0x2c, 0x95, 0x44, 0xe1, 0x83, 0x09  ;; mov ebp,[edx*4+0x983e144]
..@0x8053589: db 0x0f, 0xb6, 0x88, 0x20, 0x8a, 0x84, 0x09  ;; movzx ecx,byte [eax+0x9848a20]
..@0x8053590: db 0x8d, 0x78, 0xff  ;; lea edi,[eax-0x1]
..@0x8053593: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x8053599: db 0x89, 0x2d, 0x2c, 0x8a, 0x85, 0x09  ;; mov [0x9858a2c],ebp
..@0x805359f: db 0x88, 0x8a, 0x24, 0x8a, 0x85, 0x09  ;; mov [edx+0x9858a24],cl
..@0x80535a5: db 0x0f, 0xb6, 0x8a, 0x20, 0x8a, 0x85, 0x09  ;; movzx ecx,byte [edx+0x9858a20]
..@0x80535ac: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x80535b0: db 0x88, 0x88, 0x20, 0x8a, 0x84, 0x09  ;; mov [eax+0x9848a20],cl
..@0x80535b6: db 0x39, 0x54, 0x24, 0x08  ;; cmp [esp+0x8],edx
..@0x80535ba: db 0x0f, 0x85, 0x70, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8053530
..@0x80535c0: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x80535c4: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x80535c8: jmp strict near R.code+0x8053340
..@0x80535cd: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x80535d1: db 0x39, 0x44, 0x24, 0x20  ;; cmp [esp+0x20],eax
..@0x80535d5: db 0x0f, 0x8e, 0x65, 0xfd, 0xff, 0xff  ;; jng near A.code+0x8053340
..@0x80535db: db 0x8b, 0x5c, 0x24, 0x0c  ;; mov ebx,[esp+0xc]
..@0x80535df: db 0x8d, 0x87, 0x20, 0x8a, 0x84, 0x09  ;; lea eax,[edi+0x9848a20]
..@0x80535e5: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x80535e9: db 0x01, 0xc3  ;; add ebx,eax
..@0x80535eb: db 0x03, 0x54, 0x24, 0x0c  ;; add edx,[esp+0xc]
..@0x80535ef: db 0x2b, 0x5c, 0x24, 0x20  ;; sub ebx,[esp+0x20]
..@0x80535f3: nop
..@0x80535f4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80535f8: db 0x0f, 0xb6, 0x0a  ;; movzx ecx,byte [edx]
..@0x80535fb: add edx, strict byte 0x1
..@0x80535fe: db 0x00, 0x08  ;; add [eax],cl
..@0x8053600: sub eax, strict byte 0x1
..@0x8053603: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8053605: db 0x75, 0xf1  ;; jnz A.code+0x80535f8
..@0x8053607: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x805360b: sub edi, strict byte 0x1
..@0x805360e: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x8053612: db 0xf7, 0xd0  ;; not eax
..@0x8053614: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x8053618: db 0x8d, 0x54, 0x02, 0x01  ;; lea edx,[edx+eax+0x1]
..@0x805361c: db 0x29, 0xc7  ;; sub edi,eax
..@0x805361e: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x8053622: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x8053628: jmp strict near R.code+0x8053340
..@0x805362d: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8053631: db 0x39, 0x4c, 0x24, 0x20  ;; cmp [esp+0x20],ecx
..@0x8053635: db 0x0f, 0x8e, 0x05, 0xfd, 0xff, 0xff  ;; jng near A.code+0x8053340
..@0x805363b: db 0x8b, 0x6c, 0x24, 0x0c  ;; mov ebp,[esp+0xc]
..@0x805363f: db 0x8d, 0x87, 0x20, 0x8a, 0x84, 0x09  ;; lea eax,[edi+0x9848a20]
..@0x8053645: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x8053649: db 0x8b, 0x15, 0x2c, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a2c]
..@0x805364f: db 0x01, 0xc5  ;; add ebp,eax
..@0x8053651: db 0x03, 0x4c, 0x24, 0x0c  ;; add ecx,[esp+0xc]
..@0x8053655: db 0x2b, 0x6c, 0x24, 0x20  ;; sub ebp,[esp+0x20]
..@0x8053659: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053660: db 0x0f, 0xb6, 0xb2, 0x20, 0x8a, 0x85, 0x09  ;; movzx esi,byte [edx+0x9858a20]
..@0x8053667: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x805366a: db 0x01, 0xf3  ;; add ebx,esi
..@0x805366c: db 0xd1, 0xfb  ;; sar ebx,1
..@0x805366e: db 0x02, 0x19  ;; add bl,[ecx]
..@0x8053670: add ecx, strict byte 0x1
..@0x8053673: db 0x88, 0x18  ;; mov [eax],bl
..@0x8053675: sub eax, strict byte 0x1
..@0x8053678: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x805367a: db 0x88, 0x9a, 0x20, 0x8a, 0x85, 0x09  ;; mov [edx+0x9858a20],bl
..@0x8053680: db 0x8b, 0x14, 0x95, 0x44, 0xe1, 0x83, 0x09  ;; mov edx,[edx*4+0x983e144]
..@0x8053687: db 0x75, 0xd7  ;; jnz A.code+0x8053660
..@0x8053689: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x805368d: sub edi, strict byte 0x1
..@0x8053690: db 0x89, 0x15, 0x2c, 0x8a, 0x85, 0x09  ;; mov [0x9858a2c],edx
..@0x8053696: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x805369a: db 0xf7, 0xd0  ;; not eax
..@0x805369c: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x80536a0: db 0x8d, 0x4c, 0x01, 0x01  ;; lea ecx,[ecx+eax+0x1]
..@0x80536a4: db 0x29, 0xc7  ;; sub edi,eax
..@0x80536a6: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x80536aa: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x80536b0: jmp strict near R.code+0x8053340
..@0x80536b5: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x80536b9: db 0x39, 0x54, 0x24, 0x20  ;; cmp [esp+0x20],edx
..@0x80536bd: db 0x0f, 0x8e, 0x7d, 0xfc, 0xff, 0xff  ;; jng near A.code+0x8053340
..@0x80536c3: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x80536c7: db 0x8d, 0x9f, 0x20, 0x8a, 0x84, 0x09  ;; lea ebx,[edi+0x9848a20]
..@0x80536cd: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x80536d1: db 0x8b, 0x15, 0x2c, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a2c]
..@0x80536d7: db 0x03, 0x4c, 0x24, 0x0c  ;; add ecx,[esp+0xc]
..@0x80536db: db 0x03, 0x74, 0x24, 0x20  ;; add esi,[esp+0x20]
..@0x80536df: nop
..@0x80536e0: db 0x0f, 0xb6, 0x01  ;; movzx eax,byte [ecx]
..@0x80536e3: add ecx, strict byte 0x1
..@0x80536e6: db 0x02, 0x82, 0x20, 0x8a, 0x85, 0x09  ;; add al,[edx+0x9858a20]
..@0x80536ec: db 0x88, 0x03  ;; mov [ebx],al
..@0x80536ee: sub ebx, strict byte 0x1
..@0x80536f1: db 0x39, 0xf1  ;; cmp ecx,esi
..@0x80536f3: db 0x88, 0x82, 0x20, 0x8a, 0x85, 0x09  ;; mov [edx+0x9858a20],al
..@0x80536f9: db 0x8b, 0x14, 0x95, 0x44, 0xe1, 0x83, 0x09  ;; mov edx,[edx*4+0x983e144]
..@0x8053700: db 0x75, 0xde  ;; jnz A.code+0x80536e0
..@0x8053702: db 0x8b, 0x44, 0x24, 0x0c  ;; mov eax,[esp+0xc]
..@0x8053706: sub edi, strict byte 0x1
..@0x8053709: db 0x89, 0x15, 0x2c, 0x8a, 0x85, 0x09  ;; mov [0x9858a2c],edx
..@0x805370f: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8053713: db 0xf7, 0xd0  ;; not eax
..@0x8053715: db 0x03, 0x44, 0x24, 0x20  ;; add eax,[esp+0x20]
..@0x8053719: db 0x29, 0xc7  ;; sub edi,eax
..@0x805371b: db 0x8d, 0x44, 0x08, 0x01  ;; lea eax,[eax+ecx+0x1]
..@0x805371f: db 0x89, 0x3d, 0x28, 0x8a, 0x85, 0x09  ;; mov [0x9858a28],edi
..@0x8053725: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8053729: jmp strict near R.code+0x8053340
..@0x805372e: dw 0x9066  ;; o16 nop
..@0x8053730: db 0xc7, 0x05, 0x30, 0x8a, 0x85, 0x09, 0xff, 0xff  ;; mov dword [0x9858a30],0xffffffff
..@0x8053738: db 0xff, 0xff
..@0x805373a: add esp, strict byte 0x3c
..@0x805373d: pop ebx
..@0x805373e: pop esi
..@0x805373f: pop edi
..@0x8053740: pop ebp
..@0x8053741: ret
..@0x8053742: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053748: sub eax, strict byte 0x1
..@0x805374b: db 0xa3, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],eax
..@0x8053750: call R.code+0x8052e50
..@0x8053755: jmp strict near R.code+0x8053439
..@0x805375a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053760: db 0xc7, 0x05, 0x30, 0x8a, 0x85, 0x09, 0x05, 0x00  ;; mov dword [0x9858a30],0x5
..@0x8053768: db 0x00, 0x00
..@0x805376a: jmp strict near R.code+0x8053487
..@0x805376f: nop
..@0x8053770: db 0x8b, 0x0d, 0x3c, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a3c]
..@0x8053776: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8053778: db 0x0f, 0x8e, 0x68, 0xfc, 0xff, 0xff  ;; jng near A.code+0x80533e6
..@0x805377e: db 0x8d, 0xb0, 0x1e, 0x8a, 0x84, 0x09  ;; lea esi,[eax+0x9848a1e]
..@0x8053784: db 0x8b, 0x3d, 0x08, 0x8a, 0x84, 0x09  ;; mov edi,[0x9848a08]
..@0x805378a: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x805378c: db 0x8d, 0x90, 0x20, 0x8a, 0x84, 0x09  ;; lea edx,[eax+0x9848a20]
..@0x8053792: sub eax, strict byte 0x1
..@0x8053795: db 0x29, 0xc8  ;; sub eax,ecx
..@0x8053797: and eax, strict byte -0x2
..@0x805379a: db 0x29, 0xc6  ;; sub esi,eax
..@0x805379c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80537a0: db 0x0f, 0xb6, 0x02  ;; movzx eax,byte [edx]
..@0x80537a3: db 0x0f, 0xb6, 0x4a, 0xff  ;; movzx ecx,byte [edx-0x1]
..@0x80537a7: sub edx, strict byte 0x2
..@0x80537aa: db 0x8b, 0x04, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov eax,[eax*4+0x987c640]
..@0x80537b1: db 0xc1, 0xe1, 0x18  ;; shl ecx,byte 0x18
..@0x80537b4: db 0x25, 0xff, 0xff, 0xff, 0x00  ;; and eax,0xffffff
..@0x80537b9: db 0x09, 0xc8  ;; or eax,ecx
..@0x80537bb: db 0x89, 0x03  ;; mov [ebx],eax
..@0x80537bd: db 0x01, 0xfb  ;; add ebx,edi
..@0x80537bf: db 0x39, 0xf2  ;; cmp edx,esi
..@0x80537c1: db 0x75, 0xdd  ;; jnz A.code+0x80537a0
..@0x80537c3: jmp strict near R.code+0x80533e0
..@0x80537c8: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80537ca: db 0x8b, 0x15, 0x3c, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a3c]
..@0x80537d0: db 0x89, 0xef  ;; mov edi,ebp
..@0x80537d2: db 0x8b, 0x1d, 0x08, 0x8a, 0x84, 0x09  ;; mov ebx,[0x9848a08]
..@0x80537d8: db 0x29, 0xd1  ;; sub ecx,edx
..@0x80537da: db 0x7e, 0x42  ;; jng A.code+0x805381e
..@0x80537dc: db 0x81, 0xc2, 0x20, 0x8a, 0x84, 0x09  ;; add edx,0x9848a20
..@0x80537e2: db 0x83, 0x3d, 0x10, 0xe1, 0x83, 0x09, 0x00  ;; cmp dword [0x983e110],byte +0x0
..@0x80537e9: db 0x74, 0x21  ;; jz A.code+0x805380c
..@0x80537eb: db 0x8b, 0x04, 0x11  ;; mov eax,[ecx+edx]
..@0x80537ee: db 0x0d, 0x00, 0x00, 0x00, 0xff  ;; or eax,0xff000000
..@0x80537f3: db 0x3b, 0x05, 0x10, 0xe1, 0x83, 0x09  ;; cmp eax,[0x983e110]
..@0x80537f9: db 0x75, 0x05  ;; jnz A.code+0x8053800
..@0x80537fb: db 0x25, 0xff, 0xff, 0xff, 0x00  ;; and eax,0xffffff
..@0x8053800: sub ecx, strict byte 0x3
..@0x8053803: db 0x89, 0x07  ;; mov [edi],eax
..@0x8053805: db 0x8d, 0x3c, 0x1f  ;; lea edi,[edi+ebx]
..@0x8053808: db 0x75, 0xe1  ;; jnz A.code+0x80537eb
..@0x805380a: db 0xeb, 0x12  ;; jmp short A.code+0x805381e
..@0x805380c: db 0x8b, 0x04, 0x11  ;; mov eax,[ecx+edx]
..@0x805380f: db 0x0d, 0x00, 0x00, 0x00, 0xff  ;; or eax,0xff000000
..@0x8053814: sub ecx, strict byte 0x3
..@0x8053817: db 0x89, 0x07  ;; mov [edi],eax
..@0x8053819: db 0x8d, 0x3c, 0x1f  ;; lea edi,[edi+ebx]
..@0x805381c: db 0x75, 0xee  ;; jnz A.code+0x805380c
..@0x805381e: db 0x8b, 0x2d, 0x34, 0x8a, 0x85, 0x09  ;; mov ebp,[0x9858a34]
..@0x8053824: db 0x8b, 0x15, 0x60, 0x61, 0x84, 0x09  ;; mov edx,[0x9846160]
..@0x805382a: jmp strict near R.code+0x80533e6
..@0x805382f: db 0x8b, 0x35, 0x3c, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a3c]
..@0x8053835: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8053837: db 0x0f, 0x8e, 0xa9, 0xfb, 0xff, 0xff  ;; jng near A.code+0x80533e6
..@0x805383d: db 0x8d, 0x88, 0x1c, 0x8a, 0x84, 0x09  ;; lea ecx,[eax+0x9848a1c]
..@0x8053843: db 0x8b, 0x1d, 0x08, 0x8a, 0x84, 0x09  ;; mov ebx,[0x9848a08]
..@0x8053849: db 0x8d, 0x90, 0x20, 0x8a, 0x84, 0x09  ;; lea edx,[eax+0x9848a20]
..@0x805384f: sub eax, strict byte 0x1
..@0x8053852: db 0x29, 0xf0  ;; sub eax,esi
..@0x8053854: and eax, strict byte -0x4
..@0x8053857: db 0x29, 0xc1  ;; sub ecx,eax
..@0x8053859: db 0x89, 0xe8  ;; mov eax,ebp
..@0x805385b: db 0x89, 0xce  ;; mov esi,ecx
..@0x805385d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8053860: db 0x0f, 0xb6, 0x0a  ;; movzx ecx,byte [edx]
..@0x8053863: db 0x88, 0x08  ;; mov [eax],cl
..@0x8053865: db 0x0f, 0xb6, 0x4a, 0x01  ;; movzx ecx,byte [edx+0x1]
..@0x8053869: db 0x88, 0x48, 0x01  ;; mov [eax+0x1],cl
..@0x805386c: db 0x0f, 0xb6, 0x4a, 0x02  ;; movzx ecx,byte [edx+0x2]
..@0x8053870: db 0x88, 0x48, 0x02  ;; mov [eax+0x2],cl
..@0x8053873: db 0x0f, 0xb6, 0x4a, 0xff  ;; movzx ecx,byte [edx-0x1]
..@0x8053877: sub edx, strict byte 0x4
..@0x805387a: db 0x88, 0x48, 0x03  ;; mov [eax+0x3],cl
..@0x805387d: db 0x01, 0xd8  ;; add eax,ebx
..@0x805387f: db 0x39, 0xf2  ;; cmp edx,esi
..@0x8053881: db 0x75, 0xdd  ;; jnz A.code+0x8053860
..@0x8053883: jmp strict near R.code+0x80533e0
..@0x8053888: db 0x80, 0xf9, 0x01  ;; cmp cl,0x1
..@0x805388b: db 0x0f, 0x85, 0x55, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x80533e6
..@0x8053891: db 0x8b, 0x1d, 0x3c, 0x8a, 0x85, 0x09  ;; mov ebx,[0x9858a3c]
..@0x8053897: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8053899: db 0x0f, 0x8e, 0x47, 0xfb, 0xff, 0xff  ;; jng near A.code+0x80533e6
..@0x805389f: db 0x8b, 0x3d, 0x08, 0x8a, 0x84, 0x09  ;; mov edi,[0x9848a08]
..@0x80538a5: db 0x89, 0xee  ;; mov esi,ebp
..@0x80538a7: db 0x89, 0xf6  ;; mov esi,esi
..@0x80538a9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80538b0: db 0x89, 0xc2  ;; mov edx,eax
..@0x80538b2: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80538b4: sub eax, strict byte 0x1
..@0x80538b7: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x80538ba: and ecx, strict byte 0x7
..@0x80538bd: db 0x0f, 0xb6, 0x92, 0x20, 0x8a, 0x84, 0x09  ;; movzx edx,byte [edx+0x9848a20]
..@0x80538c4: db 0xd3, 0xfa  ;; sar edx,cl
..@0x80538c6: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x80538cd: db 0x89, 0x16  ;; mov [esi],edx
..@0x80538cf: db 0x01, 0xfe  ;; add esi,edi
..@0x80538d1: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x80538d3: db 0x75, 0xdb  ;; jnz A.code+0x80538b0
..@0x80538d5: jmp strict near R.code+0x80533e0
..@0x80538da: db 0x85, 0xd2  ;; test edx,edx
..@0x80538dc: db 0x0f, 0x8e, 0x58, 0xfe, 0xff, 0xff  ;; jng near A.code+0x805373a
..@0x80538e2: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x80538e5: db 0x8b, 0x0d, 0x04, 0xe1, 0x83, 0x09  ;; mov ecx,[0x983e104]
..@0x80538eb: db 0x0f, 0xb6, 0xc3  ;; movzx eax,bl
..@0x80538ee: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80538f0: db 0xa3, 0x30, 0x8a, 0x85, 0x09  ;; mov [0x9858a30],eax
..@0x80538f5: db 0x74, 0x11  ;; jz A.code+0x8053908
..@0x80538f7: db 0x8b, 0x15, 0x60, 0x61, 0x84, 0x09  ;; mov edx,[0x9846160]
..@0x80538fd: db 0x3b, 0x15, 0x00, 0xe1, 0x83, 0x09  ;; cmp edx,[0x983e100]
..@0x8053903: db 0x73, 0x03  ;; jnc A.code+0x8053908
..@0x8053905: db 0x88, 0x1c, 0x11  ;; mov [ecx+edx],bl
..@0x8053908: db 0x3b, 0x05, 0xdc, 0xd1, 0x05, 0x08  ;; cmp eax,[0x805d1dc]
..@0x805390e: db 0xc7, 0x44, 0x24, 0x0c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0xc],0x1
..@0x8053916: db 0x0f, 0x85, 0xd9, 0xf8, 0xff, 0xff  ;; jnz near A.code+0x80531f5
..@0x805391c: db 0xc7, 0x05, 0x30, 0x8a, 0x85, 0x09, 0x05, 0x00  ;; mov dword [0x9858a30],0x5
..@0x8053924: db 0x00, 0x00
..@0x8053926: jmp strict near R.code+0x80531f5
..@0x805392b: db 0x8b, 0x35, 0x3c, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a3c]
..@0x8053931: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8053933: db 0x8b, 0x3d, 0x08, 0x8a, 0x84, 0x09  ;; mov edi,[0x9848a08]
..@0x8053939: db 0x39, 0xf0  ;; cmp eax,esi
..@0x805393b: db 0x0f, 0x8e, 0xa5, 0xfa, 0xff, 0xff  ;; jng near A.code+0x80533e6
..@0x8053941: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053948: db 0x89, 0xc2  ;; mov edx,eax
..@0x805394a: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805394c: sub eax, strict byte 0x4
..@0x805394f: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8053952: and ecx, strict byte 0x4
..@0x8053955: db 0x0f, 0xb6, 0x92, 0x20, 0x8a, 0x84, 0x09  ;; movzx edx,byte [edx+0x9848a20]
..@0x805395c: db 0xd3, 0xfa  ;; sar edx,cl
..@0x805395e: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x8053965: db 0x89, 0x13  ;; mov [ebx],edx
..@0x8053967: db 0x01, 0xfb  ;; add ebx,edi
..@0x8053969: db 0x39, 0xf0  ;; cmp eax,esi
..@0x805396b: db 0x7f, 0xdb  ;; jg A.code+0x8053948
..@0x805396d: jmp strict near R.code+0x80533e0
..@0x8053972: db 0x8b, 0x35, 0x3c, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858a3c]
..@0x8053978: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x805397a: db 0x8b, 0x3d, 0x08, 0x8a, 0x84, 0x09  ;; mov edi,[0x9848a08]
..@0x8053980: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8053982: db 0x0f, 0x8e, 0x5e, 0xfa, 0xff, 0xff  ;; jng near A.code+0x80533e6
..@0x8053988: nop
..@0x8053989: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053990: db 0x89, 0xc2  ;; mov edx,eax
..@0x8053992: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8053994: sub eax, strict byte 0x2
..@0x8053997: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805399a: and ecx, strict byte 0x6
..@0x805399d: db 0x0f, 0xb6, 0x92, 0x20, 0x8a, 0x84, 0x09  ;; movzx edx,byte [edx+0x9848a20]
..@0x80539a4: db 0xd3, 0xfa  ;; sar edx,cl
..@0x80539a6: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x80539ad: db 0x89, 0x13  ;; mov [ebx],edx
..@0x80539af: db 0x01, 0xfb  ;; add ebx,edi
..@0x80539b1: db 0x39, 0xf0  ;; cmp eax,esi
..@0x80539b3: db 0x7f, 0xdb  ;; jg A.code+0x8053990
..@0x80539b5: jmp strict near R.code+0x80533e0
..@0x80539ba: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80539c0: sub esp, strict byte 0x1c
..@0x80539c3: db 0x89, 0x7c, 0x24, 0x18  ;; mov [esp+0x18],edi
..@0x80539c7: db 0x8b, 0x3d, 0x00, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf00]
..@0x80539cd: db 0x89, 0x74, 0x24, 0x14  ;; mov [esp+0x14],esi
..@0x80539d1: db 0x89, 0xc6  ;; mov esi,eax
..@0x80539d3: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x80539d7: db 0x85, 0xff  ;; test edi,edi
..@0x80539d9: db 0x74, 0x65  ;; jz A.code+0x8053a40
..@0x80539db: db 0x8b, 0x15, 0x04, 0xbf, 0x87, 0x09  ;; mov edx,[0x987bf04]
..@0x80539e1: db 0x8b, 0x1d, 0x08, 0xbf, 0x87, 0x09  ;; mov ebx,[0x987bf08]
..@0x80539e7: db 0x01, 0xf2  ;; add edx,esi
..@0x80539e9: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80539ee: db 0x39, 0xda  ;; cmp edx,ebx
..@0x80539f0: db 0x7e, 0x31  ;; jng A.code+0x8053a23
..@0x80539f2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80539f8: db 0x01, 0xdb  ;; add ebx,ebx
..@0x80539fa: db 0x39, 0xda  ;; cmp edx,ebx
..@0x80539fc: db 0x7f, 0xfa  ;; jg A.code+0x80539f8
..@0x80539fe: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8053a03: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x8053a07: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8053a0a: call B.code+prog_realloc
..@0x8053a0f: db 0x85, 0xc0  ;; test eax,eax
..@0x8053a11: db 0xa3, 0x00, 0xbf, 0x87, 0x09  ;; mov [0x987bf00],eax
..@0x8053a16: db 0x74, 0x20  ;; jz A.code+0x8053a38
..@0x8053a18: db 0x89, 0x1d, 0x08, 0xbf, 0x87, 0x09  ;; mov [0x987bf08],ebx
..@0x8053a1e: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8053a23: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8053a27: db 0x8b, 0x74, 0x24, 0x14  ;; mov esi,[esp+0x14]
..@0x8053a2b: db 0x8b, 0x7c, 0x24, 0x18  ;; mov edi,[esp+0x18]
..@0x8053a2f: add esp, strict byte 0x1c
..@0x8053a32: ret
..@0x8053a33: nop
..@0x8053a34: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053a38: db 0x31, 0xc0  ;; xor eax,eax
..@0x8053a3a: db 0xeb, 0xe7  ;; jmp short A.code+0x8053a23
..@0x8053a3c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053a40: db 0xba, 0x20, 0xbf, 0x87, 0x09  ;; mov edx,0x987bf20
..@0x8053a45: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8053a4a: db 0xb9, 0x00, 0x01, 0x00, 0x00  ;; mov ecx,0x100
..@0x8053a4f: db 0x89, 0xd7  ;; mov edi,edx
..@0x8053a51: db 0xf3, 0xab  ;; rep stosd
..@0x8053a53: db 0xc7, 0x04, 0x24, 0x00, 0x20, 0x00, 0x00  ;; mov dword [esp],0x2000
..@0x8053a5a: call B.code+prog_malloc
..@0x8053a5f: db 0x85, 0xc0  ;; test eax,eax
..@0x8053a61: db 0xa3, 0x00, 0xbf, 0x87, 0x09  ;; mov [0x987bf00],eax
..@0x8053a66: db 0x74, 0xd0  ;; jz A.code+0x8053a38
..@0x8053a68: db 0xc7, 0x05, 0x04, 0xbf, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987bf04],0x0
..@0x8053a70: db 0x00, 0x00
..@0x8053a72: db 0xbb, 0x00, 0x20, 0x00, 0x00  ;; mov ebx,0x2000
..@0x8053a77: db 0x31, 0xd2  ;; xor edx,edx
..@0x8053a79: db 0xc7, 0x05, 0xe4, 0xd1, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d1e4],0xffffffff
..@0x8053a81: db 0xff, 0xff
..@0x8053a83: db 0xc7, 0x05, 0x08, 0xbf, 0x87, 0x09, 0x00, 0x20  ;; mov dword [0x987bf08],0x2000
..@0x8053a8b: db 0x00, 0x00
..@0x8053a8d: db 0xc7, 0x05, 0xe0, 0xd1, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d1e0],0xffffffff
..@0x8053a95: db 0xff, 0xff
..@0x8053a97: jmp strict near R.code+0x80539e7
..@0x8053a9c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8053aa0: push ebp
..@0x8053aa1: push edi
..@0x8053aa2: push esi
..@0x8053aa3: push ebx
..@0x8053aa4: db 0x81, 0xec, 0xec, 0x01, 0x00, 0x00  ;; sub esp,0x1ec
..@0x8053aaa: db 0x89, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov [esp+0x94],eax
..@0x8053ab1: db 0xa1, 0x8c, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a8c]
..@0x8053ab6: db 0x89, 0x94, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; mov [esp+0xa8],edx
..@0x8053abd: db 0x89, 0x8c, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov [esp+0xbc],ecx
..@0x8053ac4: db 0x85, 0xc0  ;; test eax,eax
..@0x8053ac6: db 0x0f, 0x84, 0x82, 0x03, 0x00, 0x00  ;; jz near A.code+0x8053e4e
..@0x8053acc: db 0x8b, 0xb4, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x94]
..@0x8053ad3: db 0x8b, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x94]
..@0x8053ada: db 0x03, 0xb4, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; add esi,[esp+0xa8]
..@0x8053ae1: db 0x66, 0x81, 0x38, 0xff, 0xd8  ;; cmp word [eax],0xd8ff
..@0x8053ae6: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x8053aea: db 0x0f, 0x85, 0x37, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8054027
..@0x8053af0: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8053af2: db 0xc7, 0x05, 0x90, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a90],0x0
..@0x8053afa: db 0x00, 0x00
..@0x8053afc: add ebp, strict byte 0x2
..@0x8053aff: db 0xc7, 0x05, 0x94, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a94],0x0
..@0x8053b07: db 0x00, 0x00
..@0x8053b09: db 0xc7, 0x05, 0x98, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a98],0x0
..@0x8053b11: db 0x00, 0x00
..@0x8053b13: db 0xc7, 0x05, 0x9c, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a9c],0x0
..@0x8053b1b: db 0x00, 0x00
..@0x8053b1d: db 0xc7, 0x05, 0xa0, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858aa0],0x0
..@0x8053b25: db 0x00, 0x00
..@0x8053b27: db 0xc7, 0x05, 0xa4, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858aa4],0x0
..@0x8053b2f: db 0x00, 0x00
..@0x8053b31: db 0xc7, 0x05, 0xa8, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858aa8],0x0
..@0x8053b39: db 0x00, 0x00
..@0x8053b3b: db 0xc7, 0x05, 0xac, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858aac],0x0
..@0x8053b43: db 0x00, 0x00
..@0x8053b45: db 0xc7, 0x05, 0xb0, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858ab0],0x0
..@0x8053b4d: db 0x00, 0x00
..@0x8053b4f: db 0xc7, 0x05, 0xb4, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858ab4],0x0
..@0x8053b57: db 0x00, 0x00
..@0x8053b59: db 0xc7, 0x05, 0xb8, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858ab8],0x0
..@0x8053b61: db 0x00, 0x00
..@0x8053b63: db 0xc7, 0x05, 0xbc, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858abc],0x0
..@0x8053b6b: db 0x00, 0x00
..@0x8053b6d: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x00  ;; mov byte [0x987ca4c],0x0
..@0x8053b74: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x8053b7b: db 0xc7, 0x44, 0x24, 0x48, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x48],0x0
..@0x8053b83: db 0xc7, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xa0],0x0
..@0x8053b8b: db 0x00, 0x00, 0x00
..@0x8053b8e: db 0xc7, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x9c],0x0
..@0x8053b96: db 0x00, 0x00, 0x00
..@0x8053b99: db 0x0f, 0xb6, 0x45, 0x00  ;; movzx eax,byte [ebp+0x0]
..@0x8053b9d: add ebp, strict byte 0x1
..@0x8053ba0: db 0x3c, 0xff  ;; cmp al,0xff
..@0x8053ba2: db 0x0f, 0x84, 0x40, 0x04, 0x00, 0x00  ;; jz near A.code+0x8053fe8
..@0x8053ba8: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8053baa: db 0x2b, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00  ;; sub eax,[esp+0x94]
..@0x8053bb1: db 0x39, 0x84, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; cmp [esp+0xa8],eax
..@0x8053bb8: db 0x7f, 0xdf  ;; jg A.code+0x8053b99
..@0x8053bba: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8053bbe: db 0x85, 0xc0  ;; test eax,eax
..@0x8053bc0: db 0x0f, 0x84, 0x6b, 0x04, 0x00, 0x00  ;; jz near A.code+0x8054031
..@0x8053bc6: db 0x0f, 0xb6, 0x15, 0xc0, 0x8a, 0x85, 0x09  ;; movzx edx,byte [0x9858ac0]
..@0x8053bcd: db 0x85, 0xd2  ;; test edx,edx
..@0x8053bcf: db 0x89, 0x15, 0x00, 0x9e, 0x86, 0x09  ;; mov [0x9869e00],edx
..@0x8053bd5: db 0x74, 0x63  ;; jz A.code+0x8053c3a
..@0x8053bd7: db 0x31, 0xc0  ;; xor eax,eax
..@0x8053bd9: db 0x8b, 0x0c, 0x85, 0xd4, 0x8a, 0x85, 0x09  ;; mov ecx,[eax*4+0x9858ad4]
..@0x8053be0: db 0x89, 0x0c, 0x85, 0x34, 0x9e, 0x86, 0x09  ;; mov [eax*4+0x9869e34],ecx
..@0x8053be7: db 0xc1, 0xe1, 0x03  ;; shl ecx,byte 0x3
..@0x8053bea: db 0x89, 0x0c, 0x85, 0xd4, 0x8a, 0x85, 0x09  ;; mov [eax*4+0x9858ad4],ecx
..@0x8053bf1: db 0x8b, 0x0c, 0x85, 0xe4, 0x8a, 0x85, 0x09  ;; mov ecx,[eax*4+0x9858ae4]
..@0x8053bf8: db 0x89, 0x0c, 0x85, 0x44, 0x9e, 0x86, 0x09  ;; mov [eax*4+0x9869e44],ecx
..@0x8053bff: db 0xc1, 0xe1, 0x03  ;; shl ecx,byte 0x3
..@0x8053c02: db 0x89, 0x0c, 0x85, 0xe4, 0x8a, 0x85, 0x09  ;; mov [eax*4+0x9858ae4],ecx
..@0x8053c09: db 0x8b, 0x4c, 0x24, 0x70  ;; mov ecx,[esp+0x70]
..@0x8053c0d: db 0x2b, 0x0c, 0x85, 0x04, 0x8b, 0x85, 0x09  ;; sub ecx,[eax*4+0x9858b04]
..@0x8053c14: add ecx, strict byte 0x3
..@0x8053c17: db 0x89, 0x8c, 0x84, 0xd0, 0x00, 0x00, 0x00  ;; mov [esp+eax*4+0xd0],ecx
..@0x8053c1e: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x8053c22: db 0x2b, 0x0c, 0x85, 0x14, 0x8b, 0x85, 0x09  ;; sub ecx,[eax*4+0x9858b14]
..@0x8053c29: add ecx, strict byte 0x3
..@0x8053c2c: db 0x89, 0x8c, 0x84, 0xe0, 0x00, 0x00, 0x00  ;; mov [esp+eax*4+0xe0],ecx
..@0x8053c33: add eax, strict byte 0x1
..@0x8053c36: db 0x39, 0xc2  ;; cmp edx,eax
..@0x8053c38: db 0x7f, 0x9f  ;; jg A.code+0x8053bd9
..@0x8053c3a: db 0xa1, 0x04, 0x8b, 0x85, 0x09  ;; mov eax,[0x9858b04]
..@0x8053c3f: db 0xc7, 0x44, 0x24, 0x3c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x3c],0x0
..@0x8053c47: db 0x8b, 0x0d, 0x14, 0x8b, 0x85, 0x09  ;; mov ecx,[0x9858b14]
..@0x8053c4d: db 0xa3, 0x64, 0x9e, 0x86, 0x09  ;; mov [0x9869e64],eax
..@0x8053c52: db 0xa1, 0x34, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e34]
..@0x8053c57: db 0x89, 0x0d, 0x68, 0x9e, 0x86, 0x09  ;; mov [0x9869e68],ecx
..@0x8053c5d: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8053c5f: db 0xa3, 0x6c, 0x9e, 0x86, 0x09  ;; mov [0x9869e6c],eax
..@0x8053c64: db 0x8b, 0x44, 0x24, 0x7c  ;; mov eax,[esp+0x7c]
..@0x8053c68: db 0x85, 0xc0  ;; test eax,eax
..@0x8053c6a: db 0x0f, 0x84, 0xc3, 0x01, 0x00, 0x00  ;; jz near A.code+0x8053e33
..@0x8053c70: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8053c74: db 0xc7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x40],0x0
..@0x8053c7c: db 0x8b, 0x6c, 0x24, 0x78  ;; mov ebp,[esp+0x78]
..@0x8053c80: add esi, strict byte 0x8
..@0x8053c83: db 0x85, 0xed  ;; test ebp,ebp
..@0x8053c85: db 0x89, 0x74, 0x24, 0x74  ;; mov [esp+0x74],esi
..@0x8053c89: db 0x0f, 0x84, 0x8d, 0x01, 0x00, 0x00  ;; jz near A.code+0x8053e1c
..@0x8053c8f: db 0x0f, 0xb6, 0x05, 0xc0, 0x8a, 0x85, 0x09  ;; movzx eax,byte [0x9858ac0]
..@0x8053c96: db 0x84, 0xc0  ;; test al,al
..@0x8053c98: db 0x0f, 0x84, 0x49, 0x01, 0x00, 0x00  ;; jz near A.code+0x8053de7
..@0x8053c9e: db 0x8b, 0x7c, 0x24, 0x40  ;; mov edi,[esp+0x40]
..@0x8053ca2: add eax, strict byte 0x1
..@0x8053ca5: db 0xc7, 0x44, 0x24, 0x34, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x34],0x1
..@0x8053cad: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x8053cb1: db 0xc7, 0x44, 0x24, 0x54, 0x80, 0x9e, 0x86, 0x09  ;; mov dword [esp+0x54],0x9869e80
..@0x8053cb9: add edi, strict byte 0x8
..@0x8053cbc: db 0x89, 0x7c, 0x24, 0x70  ;; mov [esp+0x70],edi
..@0x8053cc0: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x8053cc4: db 0x8b, 0x04, 0xb5, 0xe0, 0x8a, 0x85, 0x09  ;; mov eax,[esi*4+0x9858ae0]
..@0x8053ccb: db 0x85, 0xc0  ;; test eax,eax
..@0x8053ccd: db 0x0f, 0x8e, 0x01, 0x01, 0x00, 0x00  ;; jng near A.code+0x8053dd4
..@0x8053cd3: sub eax, strict byte 0x1
..@0x8053cd6: db 0x8b, 0x3c, 0xb5, 0xd0, 0x8a, 0x85, 0x09  ;; mov edi,[esi*4+0x9858ad0]
..@0x8053cdd: and eax, strict byte -0x8
..@0x8053ce0: db 0x8b, 0x74, 0x24, 0x70  ;; mov esi,[esp+0x70]
..@0x8053ce4: db 0x03, 0x44, 0x24, 0x74  ;; add eax,[esp+0x74]
..@0x8053ce8: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8053cec: db 0x89, 0x7c, 0x24, 0x50  ;; mov [esp+0x50],edi
..@0x8053cf0: db 0x89, 0x44, 0x24, 0x6c  ;; mov [esp+0x6c],eax
..@0x8053cf4: db 0x89, 0xf8  ;; mov eax,edi
..@0x8053cf6: sub eax, strict byte 0x1
..@0x8053cf9: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x8053cfd: db 0xc1, 0xe8, 0x03  ;; shr eax,byte 0x3
..@0x8053d00: db 0x8d, 0x34, 0xc6  ;; lea esi,[esi+eax*8]
..@0x8053d03: add eax, strict byte 0x1
..@0x8053d06: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8053d09: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x8053d0d: db 0x89, 0x44, 0x24, 0x4c  ;; mov [esp+0x4c],eax
..@0x8053d11: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x8053d15: db 0x85, 0xc0  ;; test eax,eax
..@0x8053d17: db 0x0f, 0x8e, 0xa4, 0x00, 0x00, 0x00  ;; jng near A.code+0x8053dc1
..@0x8053d1d: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8053d21: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x8053d25: db 0x8b, 0x6c, 0x24, 0x44  ;; mov ebp,[esp+0x44]
..@0x8053d29: db 0x8b, 0x8c, 0x9c, 0xdc, 0x00, 0x00, 0x00  ;; mov ecx,[esp+ebx*4+0xdc]
..@0x8053d30: db 0x8b, 0xbc, 0xbc, 0x7c, 0x01, 0x00, 0x00  ;; mov edi,[esp+edi*4+0x17c]
..@0x8053d37: db 0x8b, 0x34, 0x9d, 0xf0, 0x8a, 0x85, 0x09  ;; mov esi,[ebx*4+0x9858af0]
..@0x8053d3e: db 0xd3, 0xfd  ;; sar ebp,cl
..@0x8053d40: db 0x8b, 0x8c, 0x9c, 0xcc, 0x00, 0x00, 0x00  ;; mov ecx,[esp+ebx*4+0xcc]
..@0x8053d47: db 0x0f, 0xaf, 0xac, 0x9c, 0xec, 0x00, 0x00, 0x00  ;; imul ebp,[esp+ebx*4+0xec]
..@0x8053d4f: db 0x89, 0x7c, 0x24, 0x30  ;; mov [esp+0x30],edi
..@0x8053d53: db 0x8b, 0x5c, 0x24, 0x54  ;; mov ebx,[esp+0x54]
..@0x8053d57: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8053d5a: db 0x8b, 0x7c, 0x24, 0x40  ;; mov edi,[esp+0x40]
..@0x8053d5e: db 0x89, 0x4c, 0x24, 0x38  ;; mov [esp+0x38],ecx
..@0x8053d62: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8053d68: db 0x0f, 0xb6, 0x4c, 0x24, 0x38  ;; movzx ecx,byte [esp+0x38]
..@0x8053d6d: db 0x89, 0xf8  ;; mov eax,edi
..@0x8053d6f: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8053d71: db 0x8d, 0x0c, 0x28  ;; lea ecx,[eax+ebp]
..@0x8053d74: db 0x31, 0xc0  ;; xor eax,eax
..@0x8053d76: db 0xc1, 0xe1, 0x07  ;; shl ecx,byte 0x7
..@0x8053d79: db 0x03, 0x4c, 0x24, 0x30  ;; add ecx,[esp+0x30]
..@0x8053d7d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8053d80: db 0x8b, 0x14, 0x85, 0xc0, 0xaa, 0x86, 0x09  ;; mov edx,[eax*4+0x986aac0]
..@0x8053d87: db 0x0f, 0xbf, 0x14, 0x51  ;; movsx edx,word [ecx+edx*2]
..@0x8053d8b: db 0x0f, 0xaf, 0x94, 0x86, 0x00, 0x9a, 0x86, 0x09  ;; imul edx,[esi+eax*4+0x9869a00]
..@0x8053d93: db 0x89, 0x14, 0x83  ;; mov [ebx+eax*4],edx
..@0x8053d96: add eax, strict byte 0x1
..@0x8053d99: cmp eax, strict byte 0x40
..@0x8053d9c: db 0x75, 0xe2  ;; jnz A.code+0x8053d80
..@0x8053d9e: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8053da0: db 0xba, 0xff, 0x00, 0x00, 0x00  ;; mov edx,0xff
..@0x8053da5: add edi, strict byte 0x8
..@0x8053da8: call R.code+0x8052570
..@0x8053dad: db 0x81, 0xc3, 0x00, 0x01, 0x00, 0x00  ;; add ebx,0x100
..@0x8053db3: db 0x3b, 0x7c, 0x24, 0x2c  ;; cmp edi,[esp+0x2c]
..@0x8053db7: db 0x75, 0xaf  ;; jnz A.code+0x8053d68
..@0x8053db9: db 0x8b, 0x5c, 0x24, 0x4c  ;; mov ebx,[esp+0x4c]
..@0x8053dbd: db 0x01, 0x5c, 0x24, 0x54  ;; add [esp+0x54],ebx
..@0x8053dc1: db 0x83, 0x44, 0x24, 0x44, 0x08  ;; add dword [esp+0x44],byte +0x8
..@0x8053dc6: db 0x8b, 0x74, 0x24, 0x6c  ;; mov esi,[esp+0x6c]
..@0x8053dca: db 0x39, 0x74, 0x24, 0x44  ;; cmp [esp+0x44],esi
..@0x8053dce: db 0x0f, 0x85, 0x3d, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8053d11
..@0x8053dd4: db 0x83, 0x44, 0x24, 0x34, 0x01  ;; add dword [esp+0x34],byte +0x1
..@0x8053dd9: db 0x8b, 0x5c, 0x24, 0x68  ;; mov ebx,[esp+0x68]
..@0x8053ddd: db 0x39, 0x5c, 0x24, 0x34  ;; cmp [esp+0x34],ebx
..@0x8053de1: db 0x0f, 0x85, 0xd9, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8053cc0
..@0x8053de7: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x8053deb: db 0xc7, 0x44, 0x24, 0x08, 0x80, 0x9e, 0x86, 0x09  ;; mov dword [esp+0x8],0x9869e80
..@0x8053df3: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8053df7: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8053dfa: db 0x89, 0x7c, 0x24, 0x04  ;; mov [esp+0x4],edi
..@0x8053dfe: call [code_ptr_0x805d1cc]
..@0x8053e04: db 0x8b, 0x35, 0xd4, 0x8a, 0x85, 0x09  ;; mov esi,[0x9858ad4]
..@0x8053e0a: db 0x01, 0xf3  ;; add ebx,esi
..@0x8053e0c: db 0x8b, 0x74, 0x24, 0x78  ;; mov esi,[esp+0x78]
..@0x8053e10: db 0x89, 0x5c, 0x24, 0x40  ;; mov [esp+0x40],ebx
..@0x8053e14: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8053e16: db 0x0f, 0x8c, 0x73, 0xfe, 0xff, 0xff  ;; jl near A.code+0x8053c8f
..@0x8053e1c: db 0xa1, 0xe4, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858ae4]
..@0x8053e21: db 0x8b, 0x5c, 0x24, 0x7c  ;; mov ebx,[esp+0x7c]
..@0x8053e25: db 0x01, 0x44, 0x24, 0x3c  ;; add [esp+0x3c],eax
..@0x8053e29: db 0x39, 0x5c, 0x24, 0x3c  ;; cmp [esp+0x3c],ebx
..@0x8053e2d: db 0x0f, 0x8c, 0x3d, 0xfe, 0xff, 0xff  ;; jl near A.code+0x8053c70
..@0x8053e33: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8053e37: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8053e39: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8053e3c: call B.code+prog_free
..@0x8053e41: db 0x81, 0xc4, 0xec, 0x01, 0x00, 0x00  ;; add esp,0x1ec
..@0x8053e47: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8053e49: pop ebx
..@0x8053e4a: pop esi
..@0x8053e4b: pop edi
..@0x8053e4c: pop ebp
..@0x8053e4d: ret
..@0x8053e4e: db 0xc7, 0x05, 0x8c, 0x8a, 0x85, 0x09, 0x01, 0x00  ;; mov dword [0x9858a8c],0x1
..@0x8053e56: db 0x00, 0x00
..@0x8053e58: db 0x31, 0xc0  ;; xor eax,eax
..@0x8053e5a: db 0x31, 0xf6  ;; xor esi,esi
..@0x8053e5c: db 0xba, 0x07, 0x00, 0x00, 0x00  ;; mov edx,0x7
..@0x8053e61: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8053e63: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8053e65: cmp ecx, strict byte 0x7
..@0x8053e68: db 0x77, 0x0f  ;; ja A.code+0x8053e79
..@0x8053e6a: db 0x8d, 0x0c, 0xd0  ;; lea ecx,[eax+edx*8]
..@0x8053e6d: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8053e6f: db 0x89, 0x0c, 0xb5, 0x00, 0x99, 0x86, 0x09  ;; mov [esi*4+0x9869900],ecx
..@0x8053e76: add esi, strict byte 0x1
..@0x8053e79: sub edx, strict byte 0x1
..@0x8053e7c: cmp edx, strict byte -0x1
..@0x8053e7f: db 0x75, 0xe0  ;; jnz A.code+0x8053e61
..@0x8053e81: db 0x8d, 0x58, 0x01  ;; lea ebx,[eax+0x1]
..@0x8053e84: db 0x31, 0xd2  ;; xor edx,edx
..@0x8053e86: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8053e88: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8053e8a: cmp ecx, strict byte 0x7
..@0x8053e8d: db 0x77, 0x10  ;; ja A.code+0x8053e9f
..@0x8053e8f: db 0x8d, 0x4c, 0xd0, 0x01  ;; lea ecx,[eax+edx*8+0x1]
..@0x8053e93: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8053e95: db 0x89, 0x0c, 0xb5, 0x00, 0x99, 0x86, 0x09  ;; mov [esi*4+0x9869900],ecx
..@0x8053e9c: add esi, strict byte 0x1
..@0x8053e9f: add edx, strict byte 0x1
..@0x8053ea2: cmp edx, strict byte 0x8
..@0x8053ea5: db 0x75, 0xdf  ;; jnz A.code+0x8053e86
..@0x8053ea7: add eax, strict byte 0x2
..@0x8053eaa: cmp eax, strict byte 0x10
..@0x8053ead: db 0x75, 0xad  ;; jnz A.code+0x8053e5c
..@0x8053eaf: db 0xb8, 0x3f, 0x00, 0x00, 0x00  ;; mov eax,0x3f
..@0x8053eb4: db 0x8b, 0x14, 0x85, 0x00, 0x99, 0x86, 0x09  ;; mov edx,[eax*4+0x9869900]
..@0x8053ebb: db 0x89, 0x04, 0x95, 0xc0, 0xaa, 0x86, 0x09  ;; mov [edx*4+0x986aac0],eax
..@0x8053ec2: sub eax, strict byte 0x1
..@0x8053ec5: cmp eax, strict byte -0x1
..@0x8053ec8: db 0x75, 0xea  ;; jnz A.code+0x8053eb4
..@0x8053eca: db 0xb8, 0x3f, 0x00, 0x00, 0x00  ;; mov eax,0x3f
..@0x8053ecf: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8053ed4: db 0x8b, 0x0c, 0x85, 0x00, 0x99, 0x86, 0x09  ;; mov ecx,[eax*4+0x9869900]
..@0x8053edb: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8053edd: db 0xc1, 0xf9, 0x03  ;; sar ecx,byte 0x3
..@0x8053ee0: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x8053ee2: db 0x88, 0x98, 0x80, 0xaa, 0x86, 0x09  ;; mov [eax+0x986aa80],bl
..@0x8053ee8: sub eax, strict byte 0x1
..@0x8053eeb: cmp eax, strict byte -0x1
..@0x8053eee: db 0x75, 0xe4  ;; jnz A.code+0x8053ed4
..@0x8053ef0: db 0xb8, 0x80, 0x00, 0x00, 0x00  ;; mov eax,0x80
..@0x8053ef5: db 0x89, 0x04, 0x85, 0xc0, 0xa9, 0x86, 0x09  ;; mov [eax*4+0x986a9c0],eax
..@0x8053efc: add eax, strict byte 0x1
..@0x8053eff: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x8053f04: db 0x75, 0xef  ;; jnz A.code+0x8053ef5
..@0x8053f06: db 0x66, 0xb8, 0x80, 0x00  ;; mov ax,0x80
..@0x8053f0a: db 0xc7, 0x04, 0x85, 0xc0, 0xab, 0x86, 0x09, 0xff  ;; mov dword [eax*4+0x986abc0],0xff
..@0x8053f12: db 0x00, 0x00, 0x00
..@0x8053f15: add eax, strict byte 0x1
..@0x8053f18: db 0x3d, 0x00, 0x02, 0x00, 0x00  ;; cmp eax,0x200
..@0x8053f1d: db 0x75, 0xeb  ;; jnz A.code+0x8053f0a
..@0x8053f1f: db 0xc7, 0x04, 0x85, 0xc0, 0xab, 0x86, 0x09, 0x00  ;; mov dword [eax*4+0x986abc0],0x0
..@0x8053f27: db 0x00, 0x00, 0x00
..@0x8053f2a: add eax, strict byte 0x1
..@0x8053f2d: db 0x3d, 0x80, 0x03, 0x00, 0x00  ;; cmp eax,0x380
..@0x8053f32: db 0x75, 0xeb  ;; jnz A.code+0x8053f1f
..@0x8053f34: db 0x66, 0x31, 0xc0  ;; xor ax,ax
..@0x8053f37: db 0x89, 0x04, 0x85, 0xc0, 0xb9, 0x86, 0x09  ;; mov [eax*4+0x986b9c0],eax
..@0x8053f3e: add eax, strict byte 0x1
..@0x8053f41: db 0x3d, 0x80, 0x00, 0x00, 0x00  ;; cmp eax,0x80
..@0x8053f46: db 0x75, 0xef  ;; jnz A.code+0x8053f37
..@0x8053f48: db 0x30, 0xc0  ;; xor al,al
..@0x8053f4a: db 0x8b, 0x14, 0x85, 0xc0, 0xab, 0x86, 0x09  ;; mov edx,[eax*4+0x986abc0]
..@0x8053f51: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8053f53: db 0xc1, 0xe2, 0x10  ;; shl edx,byte 0x10
..@0x8053f56: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x8053f59: db 0x81, 0xea, 0x00, 0x00, 0x00, 0x01  ;; sub edx,0x1000000
..@0x8053f5f: db 0x89, 0x0c, 0x85, 0xc0, 0xbb, 0x86, 0x09  ;; mov [eax*4+0x986bbc0],ecx
..@0x8053f66: db 0x89, 0x14, 0x85, 0xc0, 0xcb, 0x86, 0x09  ;; mov [eax*4+0x986cbc0],edx
..@0x8053f6d: add eax, strict byte 0x1
..@0x8053f70: db 0x3d, 0x00, 0x04, 0x00, 0x00  ;; cmp eax,0x400
..@0x8053f75: db 0x75, 0xd3  ;; jnz A.code+0x8053f4a
..@0x8053f77: db 0xba, 0x00, 0x8c, 0x97, 0x8e  ;; mov edx,0x8e978c00
..@0x8053f7c: db 0xbe, 0x00, 0x64, 0x06, 0x16  ;; mov esi,0x16066400
..@0x8053f81: db 0xbf, 0x00, 0x78, 0xb4, 0x2d  ;; mov edi,0x2db47800
..@0x8053f86: db 0xbd, 0x00, 0xa0, 0x45, 0xa6  ;; mov ebp,0xa645a000
..@0x8053f8b: db 0x66, 0x31, 0xc0  ;; xor ax,ax
..@0x8053f8e: db 0x8d, 0x0c, 0x00  ;; lea ecx,[eax+eax]
..@0x8053f91: add eax, strict byte 0x1
..@0x8053f94: db 0x8d, 0x59, 0x01  ;; lea ebx,[ecx+0x1]
..@0x8053f97: db 0x89, 0x2c, 0x8d, 0xc0, 0xdb, 0x86, 0x09  ;; mov [ecx*4+0x986dbc0],ebp
..@0x8053f9e: db 0x81, 0xc5, 0x98, 0x6e, 0x16, 0x00  ;; add ebp,0x166e98
..@0x8053fa4: db 0x89, 0x34, 0x8d, 0xc0, 0x1b, 0x87, 0x09  ;; mov [ecx*4+0x9871bc0],esi
..@0x8053fab: db 0x81, 0xee, 0x99, 0x81, 0x05, 0x00  ;; sub esi,0x58199
..@0x8053fb1: db 0x89, 0x3c, 0x9d, 0xc0, 0xdb, 0x86, 0x09  ;; mov [ebx*4+0x986dbc0],edi
..@0x8053fb8: db 0x81, 0xef, 0x1e, 0x6d, 0x0b, 0x00  ;; sub edi,0xb6d1e
..@0x8053fbe: db 0x89, 0x14, 0x9d, 0xc0, 0x1b, 0x87, 0x09  ;; mov [ebx*4+0x9871bc0],edx
..@0x8053fc5: db 0x81, 0xc2, 0x1d, 0x5a, 0x1c, 0x00  ;; add edx,0x1c5a1d
..@0x8053fcb: db 0x3d, 0x00, 0x08, 0x00, 0x00  ;; cmp eax,0x800
..@0x8053fd0: db 0x75, 0xbc  ;; jnz A.code+0x8053f8e
..@0x8053fd2: db 0xba, 0x80, 0xa8, 0x86, 0x09  ;; mov edx,0x986a880
..@0x8053fd7: db 0xb9, 0x80, 0x00, 0x00, 0x00  ;; mov ecx,0x80
..@0x8053fdc: db 0x66, 0x31, 0xc0  ;; xor ax,ax
..@0x8053fdf: db 0x89, 0xd7  ;; mov edi,edx
..@0x8053fe1: db 0xf3, 0xab  ;; rep stosd
..@0x8053fe3: jmp strict near R.code+0x8053acc
..@0x8053fe8: db 0x0f, 0xb6, 0x5d, 0x00  ;; movzx ebx,byte [ebp+0x0]
..@0x8053fec: add ebp, strict byte 0x1
..@0x8053fef: db 0x80, 0xfb, 0xff  ;; cmp bl,0xff
..@0x8053ff2: db 0x74, 0xf4  ;; jz A.code+0x8053fe8
..@0x8053ff4: db 0x80, 0xfb, 0xd9  ;; cmp bl,0xd9
..@0x8053ff7: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8053ff9: db 0x0f, 0x84, 0xa9, 0xfb, 0xff, 0xff  ;; jz near A.code+0x8053ba8
..@0x8053fff: db 0x0f, 0xb6, 0x55, 0x00  ;; movzx edx,byte [ebp+0x0]
..@0x8054003: add ebx, strict byte 0x40
..@0x8054006: db 0x0f, 0xb6, 0x4d, 0x01  ;; movzx ecx,byte [ebp+0x1]
..@0x805400a: add ebp, strict byte 0x2
..@0x805400d: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8054010: db 0x80, 0xfb, 0x1d  ;; cmp bl,0x1d
..@0x8054013: db 0x8d, 0x7c, 0x0a, 0xfe  ;; lea edi,[edx+ecx-0x2]
..@0x8054017: db 0x0f, 0x87, 0xf3, 0x0f, 0x00, 0x00  ;; ja near A.code+0x8055010
..@0x805401d: db 0x0f, 0xb6, 0xdb  ;; movzx ebx,bl
..@0x8054020: db 0xff, 0x24, 0x9d, 0x78, 0xb7, 0x05, 0x08  ;; jmp [ebx*4+code_ptr_0x805b778]
..@0x8054027: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x805402c: jmp strict near R.code+0x8053e41
..@0x8054031: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8054033: jmp strict near R.code+0x8053e41
..@0x8054038: db 0x0f, 0xb7, 0x40, 0x02  ;; movzx eax,word [eax+0x2]
..@0x805403c: db 0x01, 0xfd  ;; add ebp,edi
..@0x805403e: db 0x66, 0xc1, 0xc8, 0x08  ;; ror ax,byte 0x8
..@0x8054042: db 0x0f, 0xb7, 0xc0  ;; movzx eax,ax
..@0x8054045: db 0x89, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov [esp+0x9c],eax
..@0x805404c: jmp strict near R.code+0x8053ba8
..@0x8054051: db 0x89, 0xf8  ;; mov eax,edi
..@0x8054053: db 0x0f, 0xb6, 0x4d, 0x00  ;; movzx ecx,byte [ebp+0x0]
..@0x8054057: db 0xbe, 0x0f, 0x00, 0x00, 0x00  ;; mov esi,0xf
..@0x805405c: sub eax, strict byte 0x1
..@0x805405f: db 0x8d, 0x55, 0x01  ;; lea edx,[ebp+0x1]
..@0x8054062: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8054066: db 0x21, 0xce  ;; and esi,ecx
..@0x8054068: db 0xc0, 0xe9, 0x04  ;; shr cl,byte 0x4
..@0x805406b: db 0x0f, 0xb6, 0xf9  ;; movzx edi,cl
..@0x805406e: db 0xc1, 0xe6, 0x06  ;; shl esi,byte 0x6
..@0x8054071: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8054073: db 0xeb, 0x05  ;; jmp short A.code+0x805407a
..@0x8054075: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8054078: db 0x89, 0xea  ;; mov edx,ebp
..@0x805407a: db 0x0f, 0xb6, 0x02  ;; movzx eax,byte [edx]
..@0x805407d: db 0x8d, 0x6a, 0x01  ;; lea ebp,[edx+0x1]
..@0x8054080: db 0x85, 0xff  ;; test edi,edi
..@0x8054082: db 0x74, 0x0c  ;; jz A.code+0x8054090
..@0x8054084: db 0x0f, 0xb6, 0x5a, 0x01  ;; movzx ebx,byte [edx+0x1]
..@0x8054088: db 0x8d, 0x6a, 0x02  ;; lea ebp,[edx+0x2]
..@0x805408b: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x805408e: db 0x01, 0xd8  ;; add eax,ebx
..@0x8054090: db 0x8b, 0x1c, 0x8d, 0x00, 0x99, 0x86, 0x09  ;; mov ebx,[ecx*4+0x9869900]
..@0x8054097: db 0xc1, 0xe0, 0x13  ;; shl eax,byte 0x13
..@0x805409a: db 0x89, 0xda  ;; mov edx,ebx
..@0x805409c: and edx, strict byte 0x7
..@0x805409f: db 0x74, 0x0d  ;; jz A.code+0x80540ae
..@0x80540a1: db 0x8b, 0x14, 0x95, 0x00, 0xba, 0x05, 0x08  ;; mov edx,[edx*4+0x805ba00]
..@0x80540a8: db 0xf7, 0xea  ;; imul edx
..@0x80540aa: db 0x0f, 0xac, 0xd0, 0x18  ;; shrd eax,edx,0x18
..@0x80540ae: db 0x89, 0xda  ;; mov edx,ebx
..@0x80540b0: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x80540b3: db 0x85, 0xd2  ;; test edx,edx
..@0x80540b5: db 0x74, 0x0d  ;; jz A.code+0x80540c4
..@0x80540b7: db 0x8b, 0x14, 0x95, 0x00, 0xba, 0x05, 0x08  ;; mov edx,[edx*4+0x805ba00]
..@0x80540be: db 0xf7, 0xea  ;; imul edx
..@0x80540c0: db 0x0f, 0xac, 0xd0, 0x18  ;; shrd eax,edx,0x18
..@0x80540c4: add ecx, strict byte 0x1
..@0x80540c7: db 0x01, 0xf3  ;; add ebx,esi
..@0x80540c9: cmp ecx, strict byte 0x40
..@0x80540cc: db 0x89, 0x04, 0x9d, 0x00, 0x9a, 0x86, 0x09  ;; mov [ebx*4+0x9869a00],eax
..@0x80540d3: db 0x75, 0xa3  ;; jnz A.code+0x8054078
..@0x80540d5: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x80540d9: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x80540dd: add eax, strict byte -0x80
..@0x80540e0: sub edx, strict byte 0x40
..@0x80540e3: db 0x85, 0xff  ;; test edi,edi
..@0x80540e5: db 0x0f, 0x44, 0xc2  ;; cmovz eax,edx
..@0x80540e8: db 0x85, 0xc0  ;; test eax,eax
..@0x80540ea: db 0x0f, 0x8f, 0x63, 0xff, 0xff, 0xff  ;; jg near A.code+0x8054053
..@0x80540f0: jmp strict near R.code+0x8053ba8
..@0x80540f5: db 0x8b, 0x74, 0x24, 0x7c  ;; mov esi,[esp+0x7c]
..@0x80540f9: db 0x85, 0xf6  ;; test esi,esi
..@0x80540fb: db 0x0f, 0x8e, 0xe9, 0x05, 0x00, 0x00  ;; jng near A.code+0x80546ea
..@0x8054101: db 0x8b, 0x5c, 0x24, 0x78  ;; mov ebx,[esp+0x78]
..@0x8054105: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8054107: db 0x0f, 0x8e, 0xdd, 0x05, 0x00, 0x00  ;; jng near A.code+0x80546ea
..@0x805410d: db 0x0f, 0xb6, 0x78, 0x02  ;; movzx edi,byte [eax+0x2]
..@0x8054111: db 0x8d, 0x68, 0x03  ;; lea ebp,[eax+0x3]
..@0x8054114: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8054116: db 0x0f, 0xb6, 0xd1  ;; movzx edx,cl
..@0x8054119: db 0x85, 0xd2  ;; test edx,edx
..@0x805411b: db 0x89, 0x15, 0x00, 0x9e, 0x86, 0x09  ;; mov [0x9869e00],edx
..@0x8054121: db 0x0f, 0x84, 0xc3, 0x05, 0x00, 0x00  ;; jz near A.code+0x80546ea
..@0x8054127: cmp edx, strict byte 0x1
..@0x805412a: db 0x74, 0x07  ;; jz A.code+0x8054133
..@0x805412c: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x8054133: db 0x89, 0xee  ;; mov esi,ebp
..@0x8054135: db 0x31, 0xc0  ;; xor eax,eax
..@0x8054137: db 0x0f, 0xb6, 0x0e  ;; movzx ecx,byte [esi]
..@0x805413a: db 0x89, 0x0c, 0x85, 0x04, 0x9e, 0x86, 0x09  ;; mov [eax*4+0x9869e04],ecx
..@0x8054141: db 0x0f, 0xb6, 0x4e, 0x01  ;; movzx ecx,byte [esi+0x1]
..@0x8054145: add esi, strict byte 0x2
..@0x8054148: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x805414a: and ecx, strict byte 0xf
..@0x805414d: db 0xc0, 0xeb, 0x04  ;; shr bl,byte 0x4
..@0x8054150: db 0x89, 0x0c, 0x85, 0x24, 0x9e, 0x86, 0x09  ;; mov [eax*4+0x9869e24],ecx
..@0x8054157: db 0x0f, 0xb6, 0xdb  ;; movzx ebx,bl
..@0x805415a: db 0x89, 0x1c, 0x85, 0x14, 0x9e, 0x86, 0x09  ;; mov [eax*4+0x9869e14],ebx
..@0x8054161: add eax, strict byte 0x1
..@0x8054164: db 0x39, 0xc2  ;; cmp edx,eax
..@0x8054166: db 0x7f, 0xcf  ;; jg A.code+0x8054137
..@0x8054168: db 0x89, 0xfa  ;; mov edx,edi
..@0x805416a: db 0x0f, 0xb6, 0xfa  ;; movzx edi,dl
..@0x805416d: db 0x8d, 0x44, 0x7d, 0x00  ;; lea eax,[ebp+edi*2+0x0]
..@0x8054171: db 0x89, 0x7c, 0x24, 0x4c  ;; mov [esp+0x4c],edi
..@0x8054175: db 0x0f, 0xb6, 0x50, 0x01  ;; movzx edx,byte [eax+0x1]
..@0x8054179: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x805417c: db 0x88, 0x54, 0x24, 0x50  ;; mov [esp+0x50],dl
..@0x8054180: db 0x89, 0x9c, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],ebx
..@0x8054187: db 0x0f, 0xb6, 0xda  ;; movzx ebx,dl
..@0x805418a: db 0x0f, 0xb6, 0x50, 0x02  ;; movzx edx,byte [eax+0x2]
..@0x805418e: db 0x89, 0x5c, 0x24, 0x40  ;; mov [esp+0x40],ebx
..@0x8054192: db 0x8d, 0x58, 0x03  ;; lea ebx,[eax+0x3]
..@0x8054195: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8054197: and edx, strict byte 0xf
..@0x805419a: db 0x0f, 0xb6, 0xfa  ;; movzx edi,dl
..@0x805419d: db 0x88, 0x54, 0x24, 0x34  ;; mov [esp+0x34],dl
..@0x80541a1: db 0x8b, 0x94, 0x24, 0xa0, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xa0]
..@0x80541a8: db 0xc0, 0xe9, 0x04  ;; shr cl,byte 0x4
..@0x80541ab: db 0x89, 0xbc, 0x24, 0xac, 0x00, 0x00, 0x00  ;; mov [esp+0xac],edi
..@0x80541b2: db 0x0f, 0xb6, 0xf1  ;; movzx esi,cl
..@0x80541b5: db 0x89, 0x74, 0x24, 0x60  ;; mov [esp+0x60],esi
..@0x80541b9: db 0x85, 0xd2  ;; test edx,edx
..@0x80541bb: db 0x75, 0x24  ;; jnz A.code+0x80541e1
..@0x80541bd: db 0x83, 0x7c, 0x24, 0x40, 0x3f  ;; cmp dword [esp+0x40],byte +0x3f
..@0x80541c2: db 0x0f, 0x85, 0x44, 0x05, 0x00, 0x00  ;; jnz near A.code+0x805470c
..@0x80541c8: db 0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x84]
..@0x80541cf: db 0x85, 0xc0  ;; test eax,eax
..@0x80541d1: db 0x0f, 0x85, 0x35, 0x05, 0x00, 0x00  ;; jnz near A.code+0x805470c
..@0x80541d7: db 0x0a, 0x4c, 0x24, 0x34  ;; or cl,[esp+0x34]
..@0x80541db: db 0x0f, 0x85, 0x2b, 0x05, 0x00, 0x00  ;; jnz near A.code+0x805470c
..@0x80541e1: db 0x0f, 0xb6, 0x2d, 0xc0, 0x8a, 0x85, 0x09  ;; movzx ebp,byte [0x9858ac0]
..@0x80541e8: db 0x8b, 0x54, 0x24, 0x4c  ;; mov edx,[esp+0x4c]
..@0x80541ec: db 0xb9, 0xff, 0xff, 0xff, 0x7f  ;; mov ecx,0x7fffffff
..@0x80541f1: db 0x89, 0x5c, 0x24, 0x5c  ;; mov [esp+0x5c],ebx
..@0x80541f5: db 0x8b, 0x3d, 0x68, 0x9e, 0x86, 0x09  ;; mov edi,[0x9869e68]
..@0x80541fb: db 0xc7, 0x44, 0x24, 0x2c, 0xff, 0xff, 0xff, 0x7f  ;; mov dword [esp+0x2c],0x7fffffff
..@0x8054203: db 0x8b, 0x35, 0x64, 0x9e, 0x86, 0x09  ;; mov esi,[0x9869e64]
..@0x8054209: add edx, strict byte 0x1
..@0x805420c: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x8054210: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x8054215: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x8054219: db 0x89, 0x54, 0x24, 0x58  ;; mov [esp+0x58],edx
..@0x805421d: db 0x85, 0xed  ;; test ebp,ebp
..@0x805421f: db 0x74, 0x25  ;; jz A.code+0x8054246
..@0x8054221: db 0x8b, 0x1c, 0xbd, 0x00, 0x9e, 0x86, 0x09  ;; mov ebx,[edi*4+0x9869e00]
..@0x8054228: db 0x31, 0xc0  ;; xor eax,eax
..@0x805422a: db 0x89, 0x5c, 0x24, 0x4c  ;; mov [esp+0x4c],ebx
..@0x805422e: db 0x8b, 0x5c, 0x24, 0x4c  ;; mov ebx,[esp+0x4c]
..@0x8054232: db 0x39, 0x1c, 0x85, 0xc4, 0x8a, 0x85, 0x09  ;; cmp [eax*4+0x9858ac4],ebx
..@0x8054239: db 0x0f, 0x84, 0xd6, 0x05, 0x00, 0x00  ;; jz near A.code+0x8054815
..@0x805423f: add eax, strict byte 0x1
..@0x8054242: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x8054244: db 0x75, 0xe8  ;; jnz A.code+0x805422e
..@0x8054246: add edi, strict byte 0x1
..@0x8054249: db 0x3b, 0x7c, 0x24, 0x58  ;; cmp edi,[esp+0x58]
..@0x805424d: db 0x75, 0xce  ;; jnz A.code+0x805421d
..@0x805424f: db 0x8b, 0x54, 0x24, 0x68  ;; mov edx,[esp+0x68]
..@0x8054253: db 0xa1, 0x34, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e34]
..@0x8054258: db 0x8b, 0x2d, 0x3c, 0xe1, 0x83, 0x09  ;; mov ebp,[0x983e13c]
..@0x805425e: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8054262: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8054264: db 0x0f, 0xb6, 0x4c, 0x24, 0x2c  ;; movzx ecx,byte [esp+0x2c]
..@0x8054269: db 0x39, 0xc2  ;; cmp edx,eax
..@0x805426b: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x805426f: db 0x0f, 0x4e, 0xc2  ;; cmovng eax,edx
..@0x8054272: db 0xc1, 0xe2, 0x03  ;; shl edx,byte 0x3
..@0x8054275: db 0x8b, 0x5c, 0x24, 0x5c  ;; mov ebx,[esp+0x5c]
..@0x8054279: db 0x89, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov [esp+0xb4],edx
..@0x8054280: db 0x8b, 0x54, 0x24, 0x6c  ;; mov edx,[esp+0x6c]
..@0x8054284: db 0xa3, 0x34, 0x9e, 0x86, 0x09  ;; mov [0x9869e34],eax
..@0x8054289: db 0x89, 0x35, 0x64, 0x9e, 0x86, 0x09  ;; mov [0x9869e64],esi
..@0x805428f: db 0x8b, 0x74, 0x24, 0x7c  ;; mov esi,[esp+0x7c]
..@0x8054293: db 0x89, 0x3d, 0x68, 0x9e, 0x86, 0x09  ;; mov [0x9869e68],edi
..@0x8054299: db 0xd3, 0xfa  ;; sar edx,cl
..@0x805429b: db 0x8b, 0x0d, 0x44, 0x9e, 0x86, 0x09  ;; mov ecx,[0x9869e44]
..@0x80542a1: db 0x39, 0xca  ;; cmp edx,ecx
..@0x80542a3: db 0x0f, 0x4e, 0xca  ;; cmovng ecx,edx
..@0x80542a6: db 0xc1, 0xe2, 0x03  ;; shl edx,byte 0x3
..@0x80542a9: db 0x89, 0x94, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov [esp+0xb8],edx
..@0x80542b0: db 0x8b, 0x15, 0x40, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e140]
..@0x80542b6: db 0x0f, 0xaf, 0xc1  ;; imul eax,ecx
..@0x80542b9: db 0x89, 0x0d, 0x44, 0x9e, 0x86, 0x09  ;; mov [0x9869e44],ecx
..@0x80542bf: db 0x8b, 0x4c, 0x24, 0x78  ;; mov ecx,[esp+0x78]
..@0x80542c3: db 0xa3, 0x6c, 0x9e, 0x86, 0x09  ;; mov [0x9869e6c],eax
..@0x80542c8: db 0xa1, 0x38, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e138]
..@0x80542cd: db 0x01, 0xe9  ;; add ecx,ebp
..@0x80542cf: db 0x3b, 0x0d, 0x34, 0xe1, 0x83, 0x09  ;; cmp ecx,[0x983e134]
..@0x80542d5: db 0x0f, 0x4f, 0x0d, 0x34, 0xe1, 0x83, 0x09  ;; cmovg ecx,[0x983e134]
..@0x80542dc: db 0x01, 0xd6  ;; add esi,edx
..@0x80542de: db 0x39, 0xc6  ;; cmp esi,eax
..@0x80542e0: db 0x0f, 0x4f, 0xf0  ;; cmovg esi,eax
..@0x80542e3: db 0x31, 0xff  ;; xor edi,edi
..@0x80542e5: db 0x89, 0x0d, 0x70, 0x9e, 0x86, 0x09  ;; mov [0x9869e70],ecx
..@0x80542eb: db 0x85, 0xed  ;; test ebp,ebp
..@0x80542ed: db 0x0f, 0x48, 0xef  ;; cmovs ebp,edi
..@0x80542f0: db 0x89, 0x35, 0x74, 0x9e, 0x86, 0x09  ;; mov [0x9869e74],esi
..@0x80542f6: db 0x39, 0x2d, 0x34, 0xe1, 0x83, 0x09  ;; cmp [0x983e134],ebp
..@0x80542fc: db 0x0f, 0x8e, 0x45, 0x0d, 0x00, 0x00  ;; jng near A.code+0x8055047
..@0x8054302: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8054304: db 0x0f, 0x8e, 0x3d, 0x0d, 0x00, 0x00  ;; jng near A.code+0x8055047
..@0x805430a: db 0x85, 0xd2  ;; test edx,edx
..@0x805430c: db 0x0f, 0x48, 0xd7  ;; cmovs edx,edi
..@0x805430f: db 0x39, 0xd0  ;; cmp eax,edx
..@0x8054311: db 0x0f, 0x8e, 0x30, 0x0d, 0x00, 0x00  ;; jng near A.code+0x8055047
..@0x8054317: db 0x85, 0xf6  ;; test esi,esi
..@0x8054319: db 0x0f, 0x8e, 0x28, 0x0d, 0x00, 0x00  ;; jng near A.code+0x8055047
..@0x805431f: db 0x0f, 0xb6, 0x4c, 0x24, 0x34  ;; movzx ecx,byte [esp+0x34]
..@0x8054324: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8054329: db 0xc6, 0x44, 0x24, 0x4c, 0xd0  ;; mov byte [esp+0x4c],0xd0
..@0x805432e: db 0x8b, 0xb4, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x9c]
..@0x8054335: db 0xc7, 0x44, 0x24, 0x64, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x64],0x0
..@0x805433d: db 0x31, 0xed  ;; xor ebp,ebp
..@0x805433f: db 0xc7, 0x44, 0x24, 0x44, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x0
..@0x8054347: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8054349: db 0x89, 0x84, 0x24, 0xc8, 0x00, 0x00, 0x00  ;; mov [esp+0xc8],eax
..@0x8054350: db 0xf7, 0xd8  ;; neg eax
..@0x8054352: db 0x89, 0x84, 0x24, 0xcc, 0x00, 0x00, 0x00  ;; mov [esp+0xcc],eax
..@0x8054359: db 0x0f, 0xb6, 0x44, 0x24, 0x50  ;; movzx eax,byte [esp+0x50]
..@0x805435e: db 0x89, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],esi
..@0x8054365: db 0x31, 0xf6  ;; xor esi,esi
..@0x8054367: add eax, strict byte 0x2
..@0x805436a: db 0x89, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00  ;; mov [esp+0x90],eax
..@0x8054371: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8054373: db 0xc7, 0x44, 0x24, 0x5c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x5c],0x0
..@0x805437b: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x805437d: db 0x89, 0xf3  ;; mov ebx,esi
..@0x805437f: db 0x89, 0xc6  ;; mov esi,eax
..@0x8054381: db 0x8d, 0x45, 0xfc  ;; lea eax,[ebp-0x4]
..@0x8054384: db 0x2b, 0x84, 0x24, 0x94, 0x00, 0x00, 0x00  ;; sub eax,[esp+0x94]
..@0x805438b: db 0x39, 0x84, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; cmp [esp+0xa8],eax
..@0x8054392: db 0x0f, 0x8e, 0x15, 0x0b, 0x00, 0x00  ;; jng near A.code+0x8054ead
..@0x8054398: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x805439c: db 0x85, 0xc0  ;; test eax,eax
..@0x805439e: db 0xb8, 0x80, 0x9e, 0x86, 0x09  ;; mov eax,0x9869e80
..@0x80543a3: db 0x0f, 0x45, 0x44, 0x24, 0x54  ;; cmovnz eax,[esp+0x54]
..@0x80543a8: db 0x89, 0x44, 0x24, 0x54  ;; mov [esp+0x54],eax
..@0x80543ac: db 0xa1, 0x00, 0x9e, 0x86, 0x09  ;; mov eax,[0x9869e00]
..@0x80543b1: db 0x85, 0xc0  ;; test eax,eax
..@0x80543b3: db 0x0f, 0x8e, 0xf3, 0x09, 0x00, 0x00  ;; jng near A.code+0x8054dac
..@0x80543b9: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80543bb: db 0xc7, 0x44, 0x24, 0x3c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x3c],0x0
..@0x80543c3: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x80543c5: db 0x89, 0xc5  ;; mov ebp,eax
..@0x80543c7: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x80543cb: db 0x8b, 0x3c, 0xbd, 0x24, 0x9e, 0x86, 0x09  ;; mov edi,[edi*4+0x9869e24]
..@0x80543d2: add edi, strict byte 0x4
..@0x80543d5: db 0x8b, 0x04, 0xbd, 0xe0, 0x8b, 0x85, 0x09  ;; mov eax,[edi*4+0x9858be0]
..@0x80543dc: db 0x89, 0xbc, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov [esp+0x98],edi
..@0x80543e3: db 0x89, 0x84, 0x24, 0xa4, 0x00, 0x00, 0x00  ;; mov [esp+0xa4],eax
..@0x80543ea: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x80543ee: db 0x85, 0xc0  ;; test eax,eax
..@0x80543f0: db 0x75, 0x1a  ;; jnz A.code+0x805440c
..@0x80543f2: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x80543f6: db 0x8b, 0x04, 0x95, 0x54, 0x9e, 0x86, 0x09  ;; mov eax,[edx*4+0x9869e54]
..@0x80543fd: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8054400: db 0x05, 0x00, 0x9a, 0x86, 0x09  ;; add eax,0x9869a00
..@0x8054405: db 0x89, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov [esp+0xb0],eax
..@0x805440c: db 0xc7, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8c],0x0
..@0x8054414: db 0x00, 0x00, 0x00
..@0x8054417: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x805441b: db 0x8b, 0x0c, 0x8d, 0x44, 0x9e, 0x86, 0x09  ;; mov ecx,[ecx*4+0x9869e44]
..@0x8054422: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8054424: db 0xc1, 0xe0, 0x03  ;; shl eax,byte 0x3
..@0x8054427: db 0x85, 0xc0  ;; test eax,eax
..@0x8054429: db 0x0f, 0x8e, 0x62, 0x09, 0x00, 0x00  ;; jng near A.code+0x8054d91
..@0x805442f: db 0xc7, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x88],0x0
..@0x8054437: db 0x00, 0x00, 0x00
..@0x805443a: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x805443e: db 0x8b, 0x0c, 0x8d, 0x34, 0x9e, 0x86, 0x09  ;; mov ecx,[ecx*4+0x9869e34]
..@0x8054445: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8054447: db 0xc1, 0xe0, 0x03  ;; shl eax,byte 0x3
..@0x805444a: db 0x85, 0xc0  ;; test eax,eax
..@0x805444c: db 0x0f, 0x8f, 0x89, 0x00, 0x00, 0x00  ;; jg near A.code+0x80544db
..@0x8054452: jmp strict near R.code+0x8054d6c
..@0x8054457: db 0x89, 0xf6  ;; mov esi,esi
..@0x8054459: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8054460: db 0x8b, 0x4c, 0x24, 0x48  ;; mov ecx,[esp+0x48]
..@0x8054464: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8054466: db 0x0f, 0x84, 0xcb, 0x04, 0x00, 0x00  ;; jz near A.code+0x8054937
..@0x805446c: db 0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x84]
..@0x8054473: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x8054478: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x805447c: db 0x85, 0xc0  ;; test eax,eax
..@0x805447e: db 0x0f, 0x4f, 0xbc, 0x24, 0x84, 0x00, 0x00, 0x00  ;; cmovg edi,[esp+0x84]
..@0x8054486: db 0x85, 0xd2  ;; test edx,edx
..@0x8054488: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x805448c: db 0x0f, 0x8e, 0x5c, 0x01, 0x00, 0x00  ;; jng near A.code+0x80545ee
..@0x8054492: db 0x8b, 0x4c, 0x24, 0x60  ;; mov ecx,[esp+0x60]
..@0x8054496: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8054498: db 0x0f, 0x85, 0x20, 0x07, 0x00, 0x00  ;; jnz near A.code+0x8054bbe
..@0x805449e: db 0x83, 0x6c, 0x24, 0x44, 0x01  ;; sub dword [esp+0x44],byte +0x1
..@0x80544a3: db 0xc6, 0x44, 0x24, 0x58, 0x01  ;; mov byte [esp+0x58],0x1
..@0x80544a8: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x80544ac: db 0x85, 0xc0  ;; test eax,eax
..@0x80544ae: db 0x0f, 0x84, 0xb2, 0x05, 0x00, 0x00  ;; jz near A.code+0x8054a66
..@0x80544b4: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x80544b8: db 0x83, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00, 0x08  ;; add dword [esp+0x88],byte +0x8
..@0x80544c0: db 0x8b, 0x04, 0x85, 0x34, 0x9e, 0x86, 0x09  ;; mov eax,[eax*4+0x9869e34]
..@0x80544c7: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x80544cb: db 0xc1, 0xe0, 0x03  ;; shl eax,byte 0x3
..@0x80544ce: db 0x3b, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00  ;; cmp eax,[esp+0x88]
..@0x80544d5: db 0x0f, 0x8e, 0x91, 0x08, 0x00, 0x00  ;; jng near A.code+0x8054d6c
..@0x80544db: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x80544df: db 0x85, 0xc0  ;; test eax,eax
..@0x80544e1: db 0x74, 0x46  ;; jz A.code+0x8054529
..@0x80544e3: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x80544e7: db 0x8b, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x8c]
..@0x80544ee: db 0x8b, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x88]
..@0x80544f5: db 0x8b, 0x8c, 0xbc, 0xe0, 0x00, 0x00, 0x00  ;; mov ecx,[esp+edi*4+0xe0]
..@0x80544fc: db 0x03, 0x44, 0x24, 0x64  ;; add eax,[esp+0x64]
..@0x8054500: db 0x03, 0x54, 0x24, 0x5c  ;; add edx,[esp+0x5c]
..@0x8054504: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8054506: db 0x8b, 0x8c, 0xbc, 0xd0, 0x00, 0x00, 0x00  ;; mov ecx,[esp+edi*4+0xd0]
..@0x805450d: db 0x0f, 0xaf, 0x84, 0xbc, 0x50, 0x01, 0x00, 0x00  ;; imul eax,[esp+edi*4+0x150]
..@0x8054515: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8054517: db 0x01, 0xc2  ;; add edx,eax
..@0x8054519: db 0x8b, 0x84, 0xbc, 0xb0, 0x01, 0x00, 0x00  ;; mov eax,[esp+edi*4+0x1b0]
..@0x8054520: db 0xc1, 0xe2, 0x07  ;; shl edx,byte 0x7
..@0x8054523: db 0x01, 0xc2  ;; add edx,eax
..@0x8054525: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8054529: db 0x8b, 0xbc, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov edi,[esp+0x84]
..@0x8054530: db 0x85, 0xff  ;; test edi,edi
..@0x8054532: db 0x0f, 0x85, 0x28, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8054460
..@0x8054538: cmp ebp, strict byte 0xf
..@0x805453b: db 0x7f, 0x22  ;; jg A.code+0x805455f
..@0x805453d: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x8054540: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x8054543: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054546: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8054549: db 0x01, 0xd6  ;; add esi,edx
..@0x805454b: db 0x3c, 0xff  ;; cmp al,0xff
..@0x805454d: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x8054550: db 0x0f, 0x84, 0xf1, 0x05, 0x00, 0x00  ;; jz near A.code+0x8054b47
..@0x8054556: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054558: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x805455a: cmp ebp, strict byte 0xf
..@0x805455d: db 0x7e, 0xde  ;; jng A.code+0x805453d
..@0x805455f: db 0x8b, 0x4c, 0x24, 0x60  ;; mov ecx,[esp+0x60]
..@0x8054563: db 0x85, 0xc9  ;; test ecx,ecx
..@0x8054565: db 0x0f, 0x85, 0x12, 0x07, 0x00, 0x00  ;; jnz near A.code+0x8054c7d
..@0x805456b: db 0x8d, 0x4d, 0xf6  ;; lea ecx,[ebp-0xa]
..@0x805456e: db 0x89, 0xf2  ;; mov edx,esi
..@0x8054570: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8054572: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x8054576: db 0x81, 0xe2, 0xff, 0x03, 0x00, 0x00  ;; and edx,0x3ff
..@0x805457c: db 0x8b, 0x04, 0x8d, 0x14, 0x9e, 0x86, 0x09  ;; mov eax,[ecx*4+0x9869e14]
..@0x8054583: db 0x3b, 0x14, 0x85, 0xe0, 0x8b, 0x85, 0x09  ;; cmp edx,[eax*4+0x9858be0]
..@0x805458a: db 0x0f, 0x8d, 0x17, 0x07, 0x00, 0x00  ;; jnl near A.code+0x8054ca7
..@0x8054590: db 0xc1, 0xe0, 0x0a  ;; shl eax,byte 0xa
..@0x8054593: db 0x01, 0xc2  ;; add edx,eax
..@0x8054595: db 0x8b, 0x3c, 0x95, 0x00, 0x99, 0x85, 0x09  ;; mov edi,[edx*4+0x9859900]
..@0x805459c: db 0x2b, 0x2c, 0x95, 0x00, 0x19, 0x86, 0x09  ;; sub ebp,[edx*4+0x9861900]
..@0x80545a3: db 0x89, 0xbc, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov [esp+0xc0],edi
..@0x80545aa: db 0x85, 0xff  ;; test edi,edi
..@0x80545ac: db 0x0f, 0x85, 0x21, 0x03, 0x00, 0x00  ;; jnz near A.code+0x80548d3
..@0x80545b2: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x80545b6: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x80545ba: db 0x85, 0xd2  ;; test edx,edx
..@0x80545bc: db 0x8b, 0x04, 0x8d, 0x90, 0x8a, 0x85, 0x09  ;; mov eax,[ecx*4+0x9858a90]
..@0x80545c3: db 0x0f, 0x84, 0x68, 0x03, 0x00, 0x00  ;; jz near A.code+0x8054931
..@0x80545c9: db 0x0f, 0xb6, 0x8c, 0x24, 0xac, 0x00, 0x00, 0x00  ;; movzx ecx,byte [esp+0xac]
..@0x80545d1: db 0x8b, 0x7c, 0x24, 0x38  ;; mov edi,[esp+0x38]
..@0x80545d5: db 0xd3, 0xe0  ;; shl eax,cl
..@0x80545d7: db 0x66, 0x89, 0x07  ;; mov [edi],ax
..@0x80545da: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x80545de: db 0x85, 0xff  ;; test edi,edi
..@0x80545e0: db 0x0f, 0x8f, 0xb8, 0xfe, 0xff, 0xff  ;; jg near A.code+0x805449e
..@0x80545e6: db 0xc7, 0x44, 0x24, 0x2c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x1
..@0x80545ee: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x80545f2: db 0xc6, 0x44, 0x24, 0x58, 0x01  ;; mov byte [esp+0x58],0x1
..@0x80545f7: db 0x39, 0x44, 0x24, 0x2c  ;; cmp [esp+0x2c],eax
..@0x80545fb: db 0x0f, 0x8f, 0xa7, 0xfe, 0xff, 0xff  ;; jg near A.code+0x80544a8
..@0x8054601: cmp ebp, strict byte 0xf
..@0x8054604: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8054608: db 0x7e, 0x0f  ;; jng A.code+0x8054619
..@0x805460a: db 0xeb, 0x38  ;; jmp short A.code+0x8054644
..@0x805460c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8054610: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8054612: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054614: cmp ebp, strict byte 0xf
..@0x8054617: db 0x7f, 0x2b  ;; jg A.code+0x8054644
..@0x8054619: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x805461c: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x805461f: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054622: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8054625: db 0x01, 0xd6  ;; add esi,edx
..@0x8054627: db 0x3c, 0xff  ;; cmp al,0xff
..@0x8054629: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x805462c: db 0x75, 0xe2  ;; jnz A.code+0x8054610
..@0x805462e: add ebx, strict byte 0x2
..@0x8054631: db 0x39, 0xdf  ;; cmp edi,ebx
..@0x8054633: db 0x0f, 0x87, 0x15, 0x03, 0x00, 0x00  ;; ja near A.code+0x805494e
..@0x8054639: add ebp, strict byte 0x10
..@0x805463c: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x805463f: cmp ebp, strict byte 0xf
..@0x8054642: db 0x7e, 0xd5  ;; jng A.code+0x8054619
..@0x8054644: db 0x8d, 0x4d, 0xf6  ;; lea ecx,[ebp-0xa]
..@0x8054647: db 0x89, 0xf0  ;; mov eax,esi
..@0x8054649: db 0xd3, 0xf8  ;; sar eax,cl
..@0x805464b: db 0x25, 0xff, 0x03, 0x00, 0x00  ;; and eax,0x3ff
..@0x8054650: db 0x39, 0x84, 0x24, 0xa4, 0x00, 0x00, 0x00  ;; cmp [esp+0xa4],eax
..@0x8054657: db 0x0f, 0x8e, 0xfe, 0x04, 0x00, 0x00  ;; jng near A.code+0x8054b5b
..@0x805465d: db 0x8b, 0x94, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x98]
..@0x8054664: db 0xc1, 0xe2, 0x0a  ;; shl edx,byte 0xa
..@0x8054667: db 0x01, 0xd0  ;; add eax,edx
..@0x8054669: db 0x8b, 0x3c, 0x85, 0x00, 0x99, 0x85, 0x09  ;; mov edi,[eax*4+0x9859900]
..@0x8054670: db 0x2b, 0x2c, 0x85, 0x00, 0x19, 0x86, 0x09  ;; sub ebp,[eax*4+0x9861900]
..@0x8054677: db 0x89, 0xf8  ;; mov eax,edi
..@0x8054679: and edi, strict byte 0xf
..@0x805467c: db 0xc1, 0xf8, 0x04  ;; sar eax,byte 0x4
..@0x805467f: db 0x85, 0xff  ;; test edi,edi
..@0x8054681: db 0x89, 0xbc, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov [esp+0xc0],edi
..@0x8054688: db 0x89, 0x44, 0x24, 0x34  ;; mov [esp+0x34],eax
..@0x805468c: db 0x0f, 0x84, 0x31, 0x04, 0x00, 0x00  ;; jz near A.code+0x8054ac3
..@0x8054692: db 0x8b, 0x44, 0x24, 0x60  ;; mov eax,[esp+0x60]
..@0x8054696: db 0x85, 0xc0  ;; test eax,eax
..@0x8054698: db 0x0f, 0x85, 0xca, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8054968
..@0x805469e: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x80546a2: db 0x01, 0x54, 0x24, 0x2c  ;; add [esp+0x2c],edx
..@0x80546a6: db 0x8b, 0x4c, 0x24, 0x2c  ;; mov ecx,[esp+0x2c]
..@0x80546aa: db 0x39, 0x4c, 0x24, 0x40  ;; cmp [esp+0x40],ecx
..@0x80546ae: db 0x7d, 0x0c  ;; jnl A.code+0x80546bc
..@0x80546b0: jmp strict near R.code+0x80544a8
..@0x80546b5: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80546b8: db 0x89, 0xd3  ;; mov ebx,edx
..@0x80546ba: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x80546bc: db 0x39, 0xfd  ;; cmp ebp,edi
..@0x80546be: db 0x0f, 0x8d, 0x27, 0x04, 0x00, 0x00  ;; jnl near A.code+0x8054aeb
..@0x80546c4: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x80546c7: db 0x8d, 0x53, 0x01  ;; lea edx,[ebx+0x1]
..@0x80546ca: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x80546cd: db 0x0f, 0xb6, 0xc8  ;; movzx ecx,al
..@0x80546d0: db 0x01, 0xce  ;; add esi,ecx
..@0x80546d2: db 0x3c, 0xff  ;; cmp al,0xff
..@0x80546d4: db 0x8d, 0x4d, 0x08  ;; lea ecx,[ebp+0x8]
..@0x80546d7: db 0x75, 0xdf  ;; jnz A.code+0x80546b8
..@0x80546d9: db 0x8d, 0x53, 0x02  ;; lea edx,[ebx+0x2]
..@0x80546dc: db 0x39, 0x54, 0x24, 0x30  ;; cmp [esp+0x30],edx
..@0x80546e0: db 0x77, 0xd6  ;; ja A.code+0x80546b8
..@0x80546e2: db 0x8d, 0x4d, 0x10  ;; lea ecx,[ebp+0x10]
..@0x80546e5: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x80546e8: db 0xeb, 0xce  ;; jmp short A.code+0x80546b8
..@0x80546ea: db 0x8b, 0x4c, 0x24, 0x48  ;; mov ecx,[esp+0x48]
..@0x80546ee: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x80546f3: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80546f5: db 0x0f, 0x84, 0x46, 0xf7, 0xff, 0xff  ;; jz near A.code+0x8053e41
..@0x80546fb: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x80546ff: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8054702: call B.code+prog_free
..@0x8054707: jmp strict near R.code+0x8053e41
..@0x805470c: db 0x0f, 0xb6, 0x2d, 0xc0, 0x8a, 0x85, 0x09  ;; movzx ebp,byte [0x9858ac0]
..@0x8054713: db 0x85, 0xed  ;; test ebp,ebp
..@0x8054715: db 0x0f, 0x84, 0x3f, 0x09, 0x00, 0x00  ;; jz near A.code+0x805505a
..@0x805471b: db 0x8b, 0x7c, 0x24, 0x78  ;; mov edi,[esp+0x78]
..@0x805471f: db 0x31, 0xc0  ;; xor eax,eax
..@0x8054721: db 0xc7, 0x44, 0x24, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x0
..@0x8054729: db 0x8b, 0x74, 0x24, 0x68  ;; mov esi,[esp+0x68]
..@0x805472d: db 0x89, 0x5c, 0x24, 0x5c  ;; mov [esp+0x5c],ebx
..@0x8054731: db 0x8b, 0x4c, 0x24, 0x70  ;; mov ecx,[esp+0x70]
..@0x8054735: db 0x8d, 0x74, 0xf7, 0xff  ;; lea esi,[edi+esi*8-0x1]
..@0x8054739: db 0x8b, 0x7c, 0x24, 0x7c  ;; mov edi,[esp+0x7c]
..@0x805473d: add ecx, strict byte 0x3
..@0x8054740: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8054742: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x8054746: db 0x89, 0x74, 0x24, 0x48  ;; mov [esp+0x48],esi
..@0x805474a: db 0x8b, 0x74, 0x24, 0x6c  ;; mov esi,[esp+0x6c]
..@0x805474e: add ecx, strict byte 0x3
..@0x8054751: db 0x8d, 0x74, 0xf7, 0xff  ;; lea esi,[edi+esi*8-0x1]
..@0x8054755: db 0x8d, 0x3c, 0xad, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[ebp*4+0x0]
..@0x805475c: db 0xd3, 0xfe  ;; sar esi,cl
..@0x805475e: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x8054762: db 0x8d, 0xb4, 0x24, 0x20, 0x01, 0x00, 0x00  ;; lea esi,[esp+0x120]
..@0x8054769: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x805476d: db 0x8d, 0xbc, 0x24, 0xf0, 0x00, 0x00, 0x00  ;; lea edi,[esp+0xf0]
..@0x8054774: db 0x8b, 0x88, 0x04, 0x8b, 0x85, 0x09  ;; mov ecx,[eax+0x9858b04]
..@0x805477a: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x805477e: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8054782: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8054784: db 0x0f, 0xb6, 0x88, 0x14, 0x8b, 0x85, 0x09  ;; movzx ecx,byte [eax+0x9858b14]
..@0x805478b: db 0x89, 0x14, 0x07  ;; mov [edi+eax],edx
..@0x805478e: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x8054790: db 0x0f, 0xaf, 0xd3  ;; imul edx,ebx
..@0x8054793: db 0x89, 0x1c, 0x06  ;; mov [esi+eax],ebx
..@0x8054796: add eax, strict byte 0x4
..@0x8054799: db 0x01, 0x54, 0x24, 0x2c  ;; add [esp+0x2c],edx
..@0x805479d: db 0x3b, 0x44, 0x24, 0x44  ;; cmp eax,[esp+0x44]
..@0x80547a1: db 0x75, 0xd1  ;; jnz A.code+0x8054774
..@0x80547a3: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x80547a7: db 0x8b, 0x5c, 0x24, 0x5c  ;; mov ebx,[esp+0x5c]
..@0x80547ab: db 0xc1, 0xe6, 0x07  ;; shl esi,byte 0x7
..@0x80547ae: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x80547b1: call B.code+prog_malloc
..@0x80547b6: db 0x85, 0xc0  ;; test eax,eax
..@0x80547b8: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x80547bc: db 0x0f, 0x84, 0x65, 0xf8, 0xff, 0xff  ;; jz near A.code+0x8054027
..@0x80547c2: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x80547c6: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x80547ce: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80547d1: call B.code+memset
..@0x80547d6: db 0x85, 0xed  ;; test ebp,ebp
..@0x80547d8: db 0x0f, 0x84, 0x0a, 0xfa, 0xff, 0xff  ;; jz near A.code+0x80541e8
..@0x80547de: db 0x8d, 0xbc, 0x24, 0xf0, 0x00, 0x00, 0x00  ;; lea edi,[esp+0xf0]
..@0x80547e5: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80547e7: db 0x31, 0xc0  ;; xor eax,eax
..@0x80547e9: db 0x8d, 0xb4, 0x24, 0x20, 0x01, 0x00, 0x00  ;; lea esi,[esp+0x120]
..@0x80547f0: db 0x89, 0xca  ;; mov edx,ecx
..@0x80547f2: db 0xc1, 0xe2, 0x07  ;; shl edx,byte 0x7
..@0x80547f5: db 0x03, 0x54, 0x24, 0x48  ;; add edx,[esp+0x48]
..@0x80547f9: db 0x89, 0x94, 0x84, 0x80, 0x01, 0x00, 0x00  ;; mov [esp+eax*4+0x180],edx
..@0x8054800: db 0x8b, 0x14, 0x87  ;; mov edx,[edi+eax*4]
..@0x8054803: db 0x0f, 0xaf, 0x14, 0x86  ;; imul edx,[esi+eax*4]
..@0x8054807: add eax, strict byte 0x1
..@0x805480a: db 0x01, 0xd1  ;; add ecx,edx
..@0x805480c: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x805480e: db 0x7c, 0xe0  ;; jl A.code+0x80547f0
..@0x8054810: jmp strict near R.code+0x80541e8
..@0x8054815: db 0x8b, 0x94, 0x84, 0x80, 0x01, 0x00, 0x00  ;; mov edx,[esp+eax*4+0x180]
..@0x805481c: cmp edi, strict byte 0x1
..@0x805481f: db 0x89, 0x94, 0xbc, 0xac, 0x01, 0x00, 0x00  ;; mov [esp+edi*4+0x1ac],edx
..@0x8054826: db 0x8b, 0x94, 0x84, 0xf0, 0x00, 0x00, 0x00  ;; mov edx,[esp+eax*4+0xf0]
..@0x805482d: db 0x89, 0x94, 0xbc, 0x4c, 0x01, 0x00, 0x00  ;; mov [esp+edi*4+0x14c],edx
..@0x8054834: db 0x8b, 0x14, 0x85, 0xd4, 0x8a, 0x85, 0x09  ;; mov edx,[eax*4+0x9858ad4]
..@0x805483b: db 0x89, 0x14, 0xbd, 0x30, 0x9e, 0x86, 0x09  ;; mov [edi*4+0x9869e30],edx
..@0x8054842: db 0x8b, 0x14, 0x85, 0xe4, 0x8a, 0x85, 0x09  ;; mov edx,[eax*4+0x9858ae4]
..@0x8054849: db 0x89, 0x14, 0xbd, 0x40, 0x9e, 0x86, 0x09  ;; mov [edi*4+0x9869e40],edx
..@0x8054850: db 0x8b, 0x14, 0x85, 0xf4, 0x8a, 0x85, 0x09  ;; mov edx,[eax*4+0x9858af4]
..@0x8054857: db 0x89, 0x14, 0xbd, 0x50, 0x9e, 0x86, 0x09  ;; mov [edi*4+0x9869e50],edx
..@0x805485e: db 0x74, 0x45  ;; jz A.code+0x80548a5
..@0x8054860: db 0x8b, 0x1c, 0x85, 0x04, 0x8b, 0x85, 0x09  ;; mov ebx,[eax*4+0x9858b04]
..@0x8054867: db 0x8b, 0x14, 0x85, 0x14, 0x8b, 0x85, 0x09  ;; mov edx,[eax*4+0x9858b14]
..@0x805486e: db 0x8b, 0x74, 0x24, 0x70  ;; mov esi,[esp+0x70]
..@0x8054872: db 0x29, 0xde  ;; sub esi,ebx
..@0x8054874: add esi, strict byte 0x3
..@0x8054877: db 0x89, 0xb4, 0xbc, 0xcc, 0x00, 0x00, 0x00  ;; mov [esp+edi*4+0xcc],esi
..@0x805487e: db 0x8b, 0x74, 0x24, 0x74  ;; mov esi,[esp+0x74]
..@0x8054882: db 0x29, 0xd6  ;; sub esi,edx
..@0x8054884: add esi, strict byte 0x3
..@0x8054887: db 0x39, 0xd9  ;; cmp ecx,ebx
..@0x8054889: db 0x0f, 0x4f, 0xcb  ;; cmovg ecx,ebx
..@0x805488c: db 0x39, 0x54, 0x24, 0x2c  ;; cmp [esp+0x2c],edx
..@0x8054890: db 0x89, 0xb4, 0xbc, 0xdc, 0x00, 0x00, 0x00  ;; mov [esp+edi*4+0xdc],esi
..@0x8054897: db 0x0f, 0x4e, 0x54, 0x24, 0x2c  ;; cmovng edx,[esp+0x2c]
..@0x805489c: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x80548a0: jmp strict near R.code+0x805423f
..@0x80548a5: db 0x8b, 0x34, 0x85, 0x04, 0x8b, 0x85, 0x09  ;; mov esi,[eax*4+0x9858b04]
..@0x80548ac: db 0x8b, 0x14, 0x85, 0x14, 0x8b, 0x85, 0x09  ;; mov edx,[eax*4+0x9858b14]
..@0x80548b3: db 0x89, 0x74, 0x24, 0x3c  ;; mov [esp+0x3c],esi
..@0x80548b7: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80548b9: db 0x89, 0x54, 0x24, 0x44  ;; mov [esp+0x44],edx
..@0x80548bd: db 0xeb, 0xaf  ;; jmp short A.code+0x805486e
..@0x80548bf: nop
..@0x80548c0: add ebx, strict byte 0x2
..@0x80548c3: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x80548c7: db 0x0f, 0x87, 0xd3, 0x03, 0x00, 0x00  ;; ja near A.code+0x8054ca0
..@0x80548cd: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x80548d0: add ebp, strict byte 0x10
..@0x80548d3: db 0x39, 0xfd  ;; cmp ebp,edi
..@0x80548d5: db 0x7d, 0x1d  ;; jnl A.code+0x80548f4
..@0x80548d7: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x80548da: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x80548dd: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x80548e0: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x80548e3: db 0x01, 0xd6  ;; add esi,edx
..@0x80548e5: db 0x3c, 0xff  ;; cmp al,0xff
..@0x80548e7: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x80548ea: db 0x74, 0xd4  ;; jz A.code+0x80548c0
..@0x80548ec: db 0x89, 0xd5  ;; mov ebp,edx
..@0x80548ee: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x80548f0: db 0x39, 0xfd  ;; cmp ebp,edi
..@0x80548f2: db 0x7c, 0xe3  ;; jl A.code+0x80548d7
..@0x80548f4: db 0x8b, 0x14, 0xbd, 0x00, 0xb9, 0x05, 0x08  ;; mov edx,[edi*4+0x805b900]
..@0x80548fb: db 0x29, 0xfd  ;; sub ebp,edi
..@0x80548fd: db 0x89, 0xf0  ;; mov eax,esi
..@0x80548ff: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8054901: db 0xd3, 0xe8  ;; shr eax,cl
..@0x8054903: db 0x21, 0xd0  ;; and eax,edx
..@0x8054905: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8054907: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8054909: db 0x3b, 0x04, 0xbd, 0xfc, 0xb8, 0x05, 0x08  ;; cmp eax,[edi*4+0x805b8fc]
..@0x8054910: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8054914: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x8054918: db 0x0f, 0x4e, 0xc1  ;; cmovng eax,ecx
..@0x805491b: db 0x03, 0x04, 0xbd, 0x90, 0x8a, 0x85, 0x09  ;; add eax,[edi*4+0x9858a90]
..@0x8054922: db 0x85, 0xd2  ;; test edx,edx
..@0x8054924: db 0x89, 0x04, 0xbd, 0x90, 0x8a, 0x85, 0x09  ;; mov [edi*4+0x9858a90],eax
..@0x805492b: db 0x0f, 0x85, 0x98, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x80545c9
..@0x8054931: db 0x8b, 0x54, 0x24, 0x54  ;; mov edx,[esp+0x54]
..@0x8054935: db 0x89, 0x02  ;; mov [edx],eax
..@0x8054937: db 0x8b, 0x54, 0x24, 0x54  ;; mov edx,[esp+0x54]
..@0x805493b: db 0xb9, 0x3f, 0x00, 0x00, 0x00  ;; mov ecx,0x3f
..@0x8054940: db 0x31, 0xc0  ;; xor eax,eax
..@0x8054942: add edx, strict byte 0x4
..@0x8054945: db 0x89, 0xd7  ;; mov edi,edx
..@0x8054947: db 0xf3, 0xab  ;; rep stosd
..@0x8054949: jmp strict near R.code+0x805446c
..@0x805494e: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054950: jmp strict near R.code+0x8054614
..@0x8054955: add ebx, strict byte 0x2
..@0x8054958: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x805495c: db 0x0f, 0x87, 0xde, 0x01, 0x00, 0x00  ;; ja near A.code+0x8054b40
..@0x8054962: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054965: add ebp, strict byte 0x10
..@0x8054968: cmp ebp, strict byte 0x7
..@0x805496b: db 0x7f, 0x1e  ;; jg A.code+0x805498b
..@0x805496d: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x8054970: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x8054973: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054976: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8054979: db 0x01, 0xd6  ;; add esi,edx
..@0x805497b: db 0x3c, 0xff  ;; cmp al,0xff
..@0x805497d: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x8054980: db 0x74, 0xd3  ;; jz A.code+0x8054955
..@0x8054982: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054984: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8054986: cmp ebp, strict byte 0x7
..@0x8054989: db 0x7e, 0xe2  ;; jng A.code+0x805496d
..@0x805498b: sub ebp, strict byte 0x1
..@0x805498e: db 0x85, 0x34, 0xad, 0x80, 0xb9, 0x05, 0x08  ;; test [ebp*4+0x805b980],esi
..@0x8054995: db 0x0f, 0x84, 0x08, 0x02, 0x00, 0x00  ;; jz near A.code+0x8054ba3
..@0x805499b: db 0x8b, 0x94, 0x24, 0xc8, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xc8]
..@0x80549a2: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x80549a6: db 0x89, 0x54, 0x24, 0x50  ;; mov [esp+0x50],edx
..@0x80549aa: db 0x89, 0x94, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov [esp+0xc0],edx
..@0x80549b1: db 0xeb, 0x10  ;; jmp short A.code+0x80549c3
..@0x80549b3: db 0x83, 0x6c, 0x24, 0x34, 0x01  ;; sub dword [esp+0x34],byte +0x1
..@0x80549b8: db 0x78, 0x74  ;; js A.code+0x8054a2e
..@0x80549ba: add edi, strict byte 0x1
..@0x80549bd: db 0x39, 0x7c, 0x24, 0x40  ;; cmp [esp+0x40],edi
..@0x80549c1: db 0x7c, 0x6b  ;; jl A.code+0x8054a2e
..@0x80549c3: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x80549c7: db 0x0f, 0xb7, 0x04, 0x78  ;; movzx eax,word [eax+edi*2]
..@0x80549cb: db 0x66, 0x85, 0xc0  ;; test ax,ax
..@0x80549ce: db 0x66, 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],ax
..@0x80549d3: db 0x74, 0xde  ;; jz A.code+0x80549b3
..@0x80549d5: cmp ebp, strict byte 0x7
..@0x80549d8: db 0x7f, 0x22  ;; jg A.code+0x80549fc
..@0x80549da: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x80549dd: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x80549e0: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x80549e3: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x80549e6: db 0x01, 0xd6  ;; add esi,edx
..@0x80549e8: db 0x3c, 0xff  ;; cmp al,0xff
..@0x80549ea: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x80549ed: db 0x0f, 0x84, 0xb5, 0x00, 0x00, 0x00  ;; jz near A.code+0x8054aa8
..@0x80549f3: db 0x89, 0xd5  ;; mov ebp,edx
..@0x80549f5: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x80549f7: cmp ebp, strict byte 0x7
..@0x80549fa: db 0x7e, 0xde  ;; jng A.code+0x80549da
..@0x80549fc: sub ebp, strict byte 0x1
..@0x80549ff: db 0x85, 0x34, 0xad, 0x80, 0xb9, 0x05, 0x08  ;; test [ebp*4+0x805b980],esi
..@0x8054a06: db 0x74, 0xb2  ;; jz A.code+0x80549ba
..@0x8054a08: db 0x0f, 0xbf, 0x44, 0x24, 0x2c  ;; movsx eax,word [esp+0x2c]
..@0x8054a0d: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8054a11: db 0xc1, 0xe8, 0x1f  ;; shr eax,byte 0x1f
..@0x8054a14: db 0x0f, 0xb7, 0x84, 0x84, 0xc8, 0x00, 0x00, 0x00  ;; movzx eax,word [esp+eax*4+0xc8]
..@0x8054a1c: db 0x66, 0x03, 0x44, 0x24, 0x2c  ;; add ax,[esp+0x2c]
..@0x8054a21: db 0x66, 0x89, 0x04, 0x7a  ;; mov [edx+edi*2],ax
..@0x8054a25: add edi, strict byte 0x1
..@0x8054a28: db 0x39, 0x7c, 0x24, 0x40  ;; cmp [esp+0x40],edi
..@0x8054a2c: db 0x7d, 0x95  ;; jnl A.code+0x80549c3
..@0x8054a2e: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x8054a32: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x8054a36: db 0x85, 0xc0  ;; test eax,eax
..@0x8054a38: db 0x74, 0x0d  ;; jz A.code+0x8054a47
..@0x8054a3a: db 0x0f, 0xb7, 0x44, 0x24, 0x50  ;; movzx eax,word [esp+0x50]
..@0x8054a3f: db 0x8b, 0x4c, 0x24, 0x38  ;; mov ecx,[esp+0x38]
..@0x8054a43: db 0x66, 0x89, 0x04, 0x79  ;; mov [ecx+edi*2],ax
..@0x8054a47: db 0x83, 0x44, 0x24, 0x2c, 0x01  ;; add dword [esp+0x2c],byte +0x1
..@0x8054a4c: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8054a50: db 0x39, 0x7c, 0x24, 0x40  ;; cmp [esp+0x40],edi
..@0x8054a54: db 0x0f, 0x8d, 0xa7, 0xfb, 0xff, 0xff  ;; jnl near A.code+0x8054601
..@0x8054a5a: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8054a5e: db 0x85, 0xc0  ;; test eax,eax
..@0x8054a60: db 0x0f, 0x85, 0x4e, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x80544b4
..@0x8054a66: db 0x8b, 0x4c, 0x24, 0x54  ;; mov ecx,[esp+0x54]
..@0x8054a6a: db 0xb8, 0x3f, 0x00, 0x00, 0x00  ;; mov eax,0x3f
..@0x8054a6f: db 0x8b, 0xbc, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xb0]
..@0x8054a76: db 0x8b, 0x14, 0x81  ;; mov edx,[ecx+eax*4]
..@0x8054a79: db 0x0f, 0xaf, 0x14, 0x87  ;; imul edx,[edi+eax*4]
..@0x8054a7d: db 0x89, 0x14, 0x81  ;; mov [ecx+eax*4],edx
..@0x8054a80: sub eax, strict byte 0x1
..@0x8054a83: cmp eax, strict byte -0x1
..@0x8054a86: db 0x75, 0xee  ;; jnz A.code+0x8054a76
..@0x8054a88: db 0x0f, 0xb6, 0x54, 0x24, 0x58  ;; movzx edx,byte [esp+0x58]
..@0x8054a8d: db 0x8b, 0x44, 0x24, 0x54  ;; mov eax,[esp+0x54]
..@0x8054a91: call R.code+0x8052570
..@0x8054a96: db 0x81, 0x44, 0x24, 0x54, 0x00, 0x01, 0x00, 0x00  ;; add dword [esp+0x54],0x100
..@0x8054a9e: jmp strict near R.code+0x80544b4
..@0x8054aa3: nop
..@0x8054aa4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8054aa8: add ebx, strict byte 0x2
..@0x8054aab: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x8054aaf: db 0x77, 0x0b  ;; ja A.code+0x8054abc
..@0x8054ab1: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054ab4: add ebp, strict byte 0x10
..@0x8054ab7: jmp strict near R.code+0x80549d5
..@0x8054abc: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054abe: jmp strict near R.code+0x80549d5
..@0x8054ac3: db 0x83, 0x7c, 0x24, 0x34, 0x0e  ;; cmp dword [esp+0x34],byte +0xe
..@0x8054ac8: db 0x0f, 0x8e, 0x0a, 0x02, 0x00, 0x00  ;; jng near A.code+0x8054cd8
..@0x8054ace: db 0x8b, 0x44, 0x24, 0x60  ;; mov eax,[esp+0x60]
..@0x8054ad2: db 0x85, 0xc0  ;; test eax,eax
..@0x8054ad4: db 0x0f, 0x84, 0xc4, 0xfb, 0xff, 0xff  ;; jz near A.code+0x805469e
..@0x8054ada: db 0xc7, 0x44, 0x24, 0x50, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x0
..@0x8054ae2: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8054ae6: jmp strict near R.code+0x80549c3
..@0x8054aeb: db 0x8b, 0x14, 0xbd, 0x00, 0xb9, 0x05, 0x08  ;; mov edx,[edi*4+0x805b900]
..@0x8054af2: db 0x29, 0xfd  ;; sub ebp,edi
..@0x8054af4: db 0x89, 0xf0  ;; mov eax,esi
..@0x8054af6: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8054af8: db 0xd3, 0xe8  ;; shr eax,cl
..@0x8054afa: db 0x21, 0xd0  ;; and eax,edx
..@0x8054afc: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8054afe: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8054b00: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8054b04: db 0x3b, 0x04, 0xbd, 0xfc, 0xb8, 0x05, 0x08  ;; cmp eax,[edi*4+0x805b8fc]
..@0x8054b0b: db 0x8b, 0x7c, 0x24, 0x48  ;; mov edi,[esp+0x48]
..@0x8054b0f: db 0x0f, 0xb6, 0x92, 0x80, 0xaa, 0x86, 0x09  ;; movzx edx,byte [edx+0x986aa80]
..@0x8054b16: db 0x0f, 0x4e, 0xc1  ;; cmovng eax,ecx
..@0x8054b19: db 0x08, 0x54, 0x24, 0x58  ;; or [esp+0x58],dl
..@0x8054b1d: db 0x85, 0xff  ;; test edi,edi
..@0x8054b1f: db 0x0f, 0x84, 0x41, 0x01, 0x00, 0x00  ;; jz near A.code+0x8054c66
..@0x8054b25: db 0x0f, 0xb6, 0x8c, 0x24, 0xac, 0x00, 0x00, 0x00  ;; movzx ecx,byte [esp+0xac]
..@0x8054b2d: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8054b31: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8054b35: db 0xd3, 0xe0  ;; shl eax,cl
..@0x8054b37: db 0x66, 0x89, 0x04, 0x7a  ;; mov [edx+edi*2],ax
..@0x8054b3b: jmp strict near R.code+0x8054a47
..@0x8054b40: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054b42: jmp strict near R.code+0x8054968
..@0x8054b47: add ebx, strict byte 0x2
..@0x8054b4a: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x8054b4e: db 0x77, 0x4c  ;; ja A.code+0x8054b9c
..@0x8054b50: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054b53: add ebp, strict byte 0x10
..@0x8054b56: jmp strict near R.code+0x8054538
..@0x8054b5b: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x8054b5f: db 0x8d, 0x8c, 0x24, 0xc4, 0x00, 0x00, 0x00  ;; lea ecx,[esp+0xc4]
..@0x8054b66: db 0x8d, 0xbc, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; lea edi,[esp+0xc0]
..@0x8054b6d: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x8054b71: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8054b73: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x8054b76: db 0x8b, 0x14, 0x95, 0x24, 0x9e, 0x86, 0x09  ;; mov edx,[edx*4+0x9869e24]
..@0x8054b7d: db 0x89, 0xd0  ;; mov eax,edx
..@0x8054b7f: db 0x89, 0xea  ;; mov edx,ebp
..@0x8054b81: add eax, strict byte 0x4
..@0x8054b84: call R.code+0x80524e0
..@0x8054b89: db 0x2b, 0xac, 0x24, 0xc4, 0x00, 0x00, 0x00  ;; sub ebp,[esp+0xc4]
..@0x8054b90: db 0x8b, 0xbc, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xc0]
..@0x8054b97: jmp strict near R.code+0x8054677
..@0x8054b9c: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054b9e: jmp strict near R.code+0x8054538
..@0x8054ba3: db 0x8b, 0x8c, 0x24, 0xcc, 0x00, 0x00, 0x00  ;; mov ecx,[esp+0xcc]
..@0x8054baa: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8054bae: db 0x89, 0x4c, 0x24, 0x50  ;; mov [esp+0x50],ecx
..@0x8054bb2: db 0x89, 0x8c, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov [esp+0xc0],ecx
..@0x8054bb9: jmp strict near R.code+0x80549c3
..@0x8054bbe: db 0xc6, 0x44, 0x24, 0x58, 0x01  ;; mov byte [esp+0x58],0x1
..@0x8054bc3: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x8054bc7: db 0x83, 0x6c, 0x24, 0x44, 0x01  ;; sub dword [esp+0x44],byte +0x1
..@0x8054bcc: db 0x39, 0x44, 0x24, 0x2c  ;; cmp [esp+0x2c],eax
..@0x8054bd0: db 0x0f, 0x8f, 0xd2, 0xf8, 0xff, 0xff  ;; jg near A.code+0x80544a8
..@0x8054bd6: db 0x8b, 0x4c, 0x24, 0x2c  ;; mov ecx,[esp+0x2c]
..@0x8054bda: add ecx, strict byte 0x1
..@0x8054bdd: db 0xeb, 0x10  ;; jmp short A.code+0x8054bef
..@0x8054bdf: add ecx, strict byte 0x1
..@0x8054be2: db 0x3b, 0x8c, 0x24, 0x90, 0x00, 0x00, 0x00  ;; cmp ecx,[esp+0x90]
..@0x8054be9: db 0x0f, 0x84, 0xb9, 0xf8, 0xff, 0xff  ;; jz near A.code+0x80544a8
..@0x8054bef: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8054bf3: db 0x0f, 0xb7, 0x54, 0x4a, 0xfe  ;; movzx edx,word [edx+ecx*2-0x2]
..@0x8054bf8: db 0x66, 0x85, 0xd2  ;; test dx,dx
..@0x8054bfb: db 0x66, 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],dx
..@0x8054c00: db 0x74, 0xdd  ;; jz A.code+0x8054bdf
..@0x8054c02: cmp ebp, strict byte 0x7
..@0x8054c05: db 0x7f, 0x1e  ;; jg A.code+0x8054c25
..@0x8054c07: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x8054c0a: db 0x8d, 0x7b, 0x01  ;; lea edi,[ebx+0x1]
..@0x8054c0d: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054c10: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8054c13: db 0x01, 0xd6  ;; add esi,edx
..@0x8054c15: db 0x3c, 0xff  ;; cmp al,0xff
..@0x8054c17: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x8054c1a: db 0x74, 0x35  ;; jz A.code+0x8054c51
..@0x8054c1c: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054c1e: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8054c20: cmp ebp, strict byte 0x7
..@0x8054c23: db 0x7e, 0xe2  ;; jng A.code+0x8054c07
..@0x8054c25: sub ebp, strict byte 0x1
..@0x8054c28: db 0x85, 0x34, 0xad, 0x80, 0xb9, 0x05, 0x08  ;; test [ebp*4+0x805b980],esi
..@0x8054c2f: db 0x74, 0xae  ;; jz A.code+0x8054bdf
..@0x8054c31: db 0x0f, 0xbf, 0x44, 0x24, 0x2c  ;; movsx eax,word [esp+0x2c]
..@0x8054c36: db 0x8b, 0x7c, 0x24, 0x38  ;; mov edi,[esp+0x38]
..@0x8054c3a: db 0xc1, 0xe8, 0x1f  ;; shr eax,byte 0x1f
..@0x8054c3d: db 0x0f, 0xb7, 0x84, 0x84, 0xc8, 0x00, 0x00, 0x00  ;; movzx eax,word [esp+eax*4+0xc8]
..@0x8054c45: db 0x66, 0x03, 0x44, 0x24, 0x2c  ;; add ax,[esp+0x2c]
..@0x8054c4a: db 0x66, 0x89, 0x44, 0x4f, 0xfe  ;; mov [edi+ecx*2-0x2],ax
..@0x8054c4f: db 0xeb, 0x8e  ;; jmp short A.code+0x8054bdf
..@0x8054c51: add ebx, strict byte 0x2
..@0x8054c54: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x8054c58: db 0x77, 0x08  ;; ja A.code+0x8054c62
..@0x8054c5a: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054c5d: add ebp, strict byte 0x10
..@0x8054c60: db 0xeb, 0xa0  ;; jmp short A.code+0x8054c02
..@0x8054c62: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054c64: db 0xeb, 0x9c  ;; jmp short A.code+0x8054c02
..@0x8054c66: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8054c6a: db 0x8b, 0x4c, 0x24, 0x54  ;; mov ecx,[esp+0x54]
..@0x8054c6e: db 0x8b, 0x14, 0xbd, 0x00, 0x99, 0x86, 0x09  ;; mov edx,[edi*4+0x9869900]
..@0x8054c75: db 0x89, 0x04, 0x91  ;; mov [ecx+edx*4],eax
..@0x8054c78: jmp strict near R.code+0x8054a47
..@0x8054c7d: sub ebp, strict byte 0x1
..@0x8054c80: db 0x85, 0x34, 0xad, 0x80, 0xb9, 0x05, 0x08  ;; test [ebp*4+0x805b980],esi
..@0x8054c87: db 0x0f, 0x84, 0xd3, 0xf7, 0xff, 0xff  ;; jz near A.code+0x8054460
..@0x8054c8d: db 0x8b, 0x84, 0x24, 0xc8, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xc8]
..@0x8054c94: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8054c98: db 0x66, 0x09, 0x02  ;; or [edx],ax
..@0x8054c9b: jmp strict near R.code+0x8054460
..@0x8054ca0: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054ca2: jmp strict near R.code+0x80548d3
..@0x8054ca7: db 0x8d, 0xbc, 0x24, 0xc4, 0x00, 0x00, 0x00  ;; lea edi,[esp+0xc4]
..@0x8054cae: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8054cb0: db 0x8d, 0x94, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; lea edx,[esp+0xc0]
..@0x8054cb7: db 0x89, 0x7c, 0x24, 0x04  ;; mov [esp+0x4],edi
..@0x8054cbb: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8054cbe: db 0x89, 0xea  ;; mov edx,ebp
..@0x8054cc0: call R.code+0x80524e0
..@0x8054cc5: db 0x2b, 0xac, 0x24, 0xc4, 0x00, 0x00, 0x00  ;; sub ebp,[esp+0xc4]
..@0x8054ccc: db 0x8b, 0xbc, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xc0]
..@0x8054cd3: jmp strict near R.code+0x80545aa
..@0x8054cd8: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x8054cdc: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8054ce0: db 0x8b, 0x3c, 0xbd, 0x80, 0xb9, 0x05, 0x08  ;; mov edi,[edi*4+0x805b980]
..@0x8054ce7: db 0x85, 0xc0  ;; test eax,eax
..@0x8054ce9: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x8054ced: db 0x74, 0x5e  ;; jz A.code+0x8054d4d
..@0x8054cef: db 0x39, 0x6c, 0x24, 0x34  ;; cmp [esp+0x34],ebp
..@0x8054cf3: db 0x7f, 0x15  ;; jg A.code+0x8054d0a
..@0x8054cf5: db 0xeb, 0x3d  ;; jmp short A.code+0x8054d34
..@0x8054cf7: db 0x89, 0xf6  ;; mov esi,esi
..@0x8054cf9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8054d00: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8054d02: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054d04: db 0x3b, 0x6c, 0x24, 0x34  ;; cmp ebp,[esp+0x34]
..@0x8054d08: db 0x7d, 0x2a  ;; jnl A.code+0x8054d34
..@0x8054d0a: db 0x0f, 0xb6, 0x03  ;; movzx eax,byte [ebx]
..@0x8054d0d: db 0x8d, 0x4b, 0x01  ;; lea ecx,[ebx+0x1]
..@0x8054d10: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054d13: db 0x0f, 0xb6, 0xd0  ;; movzx edx,al
..@0x8054d16: db 0x01, 0xd6  ;; add esi,edx
..@0x8054d18: db 0x3c, 0xff  ;; cmp al,0xff
..@0x8054d1a: db 0x8d, 0x55, 0x08  ;; lea edx,[ebp+0x8]
..@0x8054d1d: db 0x75, 0xe1  ;; jnz A.code+0x8054d00
..@0x8054d1f: add ebx, strict byte 0x2
..@0x8054d22: db 0x39, 0x5c, 0x24, 0x30  ;; cmp [esp+0x30],ebx
..@0x8054d26: db 0x77, 0x40  ;; ja A.code+0x8054d68
..@0x8054d28: add ebp, strict byte 0x10
..@0x8054d2b: db 0xc1, 0xe6, 0x08  ;; shl esi,byte 0x8
..@0x8054d2e: db 0x3b, 0x6c, 0x24, 0x34  ;; cmp ebp,[esp+0x34]
..@0x8054d32: db 0x7c, 0xd6  ;; jl A.code+0x8054d0a
..@0x8054d34: db 0x2b, 0x6c, 0x24, 0x34  ;; sub ebp,[esp+0x34]
..@0x8054d38: db 0x89, 0xf0  ;; mov eax,esi
..@0x8054d3a: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x8054d3e: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8054d40: db 0xd3, 0xe8  ;; shr eax,cl
..@0x8054d42: db 0x23, 0x04, 0xbd, 0x00, 0xb9, 0x05, 0x08  ;; and eax,[edi*4+0x805b900]
..@0x8054d49: db 0x01, 0x44, 0x24, 0x44  ;; add [esp+0x44],eax
..@0x8054d4d: db 0x8b, 0x44, 0x24, 0x60  ;; mov eax,[esp+0x60]
..@0x8054d51: db 0x85, 0xc0  ;; test eax,eax
..@0x8054d53: db 0x0f, 0x85, 0x30, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8054e89
..@0x8054d59: db 0x83, 0x6c, 0x24, 0x44, 0x01  ;; sub dword [esp+0x44],byte +0x1
..@0x8054d5e: jmp strict near R.code+0x80544a8
..@0x8054d63: nop
..@0x8054d64: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8054d68: db 0x89, 0xd5  ;; mov ebp,edx
..@0x8054d6a: db 0xeb, 0x98  ;; jmp short A.code+0x8054d04
..@0x8054d6c: db 0x8b, 0x54, 0x24, 0x3c  ;; mov edx,[esp+0x3c]
..@0x8054d70: db 0x83, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, 0x08  ;; add dword [esp+0x8c],byte +0x8
..@0x8054d78: db 0x8b, 0x14, 0x95, 0x44, 0x9e, 0x86, 0x09  ;; mov edx,[edx*4+0x9869e44]
..@0x8054d7f: db 0x89, 0xd0  ;; mov eax,edx
..@0x8054d81: db 0xc1, 0xe0, 0x03  ;; shl eax,byte 0x3
..@0x8054d84: db 0x3b, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; cmp eax,[esp+0x8c]
..@0x8054d8b: db 0x0f, 0x8f, 0x9e, 0xf6, 0xff, 0xff  ;; jg near A.code+0x805442f
..@0x8054d91: db 0x83, 0x44, 0x24, 0x3c, 0x01  ;; add dword [esp+0x3c],byte +0x1
..@0x8054d96: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8054d9a: db 0x39, 0x3d, 0x00, 0x9e, 0x86, 0x09  ;; cmp [0x9869e00],edi
..@0x8054da0: db 0x0f, 0x8f, 0x21, 0xf6, 0xff, 0xff  ;; jg near A.code+0x80543c7
..@0x8054da6: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8054da8: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x8054daa: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8054dac: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8054db0: db 0x85, 0xc0  ;; test eax,eax
..@0x8054db2: db 0x75, 0x1d  ;; jnz A.code+0x8054dd1
..@0x8054db4: db 0x8b, 0x44, 0x24, 0x64  ;; mov eax,[esp+0x64]
..@0x8054db8: db 0xc7, 0x44, 0x24, 0x08, 0x80, 0x9e, 0x86, 0x09  ;; mov dword [esp+0x8],0x9869e80
..@0x8054dc0: db 0x8b, 0x54, 0x24, 0x5c  ;; mov edx,[esp+0x5c]
..@0x8054dc4: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8054dc8: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8054dcb: call [code_ptr_0x805d1cc]
..@0x8054dd1: db 0x83, 0xac, 0x24, 0x80, 0x00, 0x00, 0x00, 0x01  ;; sub dword [esp+0x80],byte +0x1
..@0x8054dd9: db 0x75, 0x72  ;; jnz A.code+0x8054e4d
..@0x8054ddb: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8054ddd: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8054de0: db 0x29, 0xc5  ;; sub ebp,eax
..@0x8054de2: db 0x8d, 0x6d, 0x01  ;; lea ebp,[ebp+0x1]
..@0x8054de5: db 0x80, 0x7d, 0xfe, 0xff  ;; cmp byte [ebp-0x2],0xff
..@0x8054de9: db 0x0f, 0x84, 0xab, 0x00, 0x00, 0x00  ;; jz near A.code+0x8054e9a
..@0x8054def: sub ebp, strict byte 0x1
..@0x8054df2: db 0x80, 0x44, 0x24, 0x4c, 0x01  ;; add byte [esp+0x4c],0x1
..@0x8054df7: db 0xb8, 0xd0, 0xff, 0xff, 0xff  ;; mov eax,0xffffffd0
..@0x8054dfc: db 0xc7, 0x05, 0x90, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a90],0x0
..@0x8054e04: db 0x00, 0x00
..@0x8054e06: db 0xc7, 0x05, 0x94, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a94],0x0
..@0x8054e0e: db 0x00, 0x00
..@0x8054e10: db 0xc7, 0x05, 0x98, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a98],0x0
..@0x8054e18: db 0x00, 0x00
..@0x8054e1a: db 0x80, 0x7c, 0x24, 0x4c, 0xd7  ;; cmp byte [esp+0x4c],0xd7
..@0x8054e1f: db 0xc7, 0x05, 0x9c, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a9c],0x0
..@0x8054e27: db 0x00, 0x00
..@0x8054e29: db 0x0f, 0xb6, 0x5c, 0x24, 0x4c  ;; movzx ebx,byte [esp+0x4c]
..@0x8054e2e: db 0xc7, 0x44, 0x24, 0x44, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x44],0x0
..@0x8054e36: db 0x0f, 0x47, 0xd8  ;; cmova ebx,eax
..@0x8054e39: db 0x88, 0x5c, 0x24, 0x4c  ;; mov [esp+0x4c],bl
..@0x8054e3d: db 0x8b, 0x9c, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x9c]
..@0x8054e44: db 0x89, 0x9c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],ebx
..@0x8054e4b: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8054e4d: db 0x8b, 0xbc, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xb4]
..@0x8054e54: db 0x01, 0x7c, 0x24, 0x5c  ;; add [esp+0x5c],edi
..@0x8054e58: db 0x8b, 0x44, 0x24, 0x5c  ;; mov eax,[esp+0x5c]
..@0x8054e5c: db 0x39, 0x44, 0x24, 0x78  ;; cmp [esp+0x78],eax
..@0x8054e60: db 0x0f, 0x8f, 0x1b, 0xf5, 0xff, 0xff  ;; jg near A.code+0x8054381
..@0x8054e66: db 0x8b, 0x94, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb8]
..@0x8054e6d: db 0x89, 0xf0  ;; mov eax,esi
..@0x8054e6f: db 0x89, 0xde  ;; mov esi,ebx
..@0x8054e71: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8054e73: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8054e75: db 0x01, 0x54, 0x24, 0x64  ;; add [esp+0x64],edx
..@0x8054e79: db 0x8b, 0x4c, 0x24, 0x64  ;; mov ecx,[esp+0x64]
..@0x8054e7d: db 0x39, 0x4c, 0x24, 0x7c  ;; cmp [esp+0x7c],ecx
..@0x8054e81: db 0x0f, 0x8f, 0xea, 0xf4, 0xff, 0xff  ;; jg near A.code+0x8054371
..@0x8054e87: db 0xeb, 0x28  ;; jmp short A.code+0x8054eb1
..@0x8054e89: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8054e8d: db 0x85, 0xd2  ;; test edx,edx
..@0x8054e8f: db 0x0f, 0x8f, 0x2e, 0xfd, 0xff, 0xff  ;; jg near A.code+0x8054bc3
..@0x8054e95: jmp strict near R.code+0x80544a8
..@0x8054e9a: db 0x0f, 0xb6, 0x5c, 0x24, 0x4c  ;; movzx ebx,byte [esp+0x4c]
..@0x8054e9f: db 0x38, 0x5d, 0xff  ;; cmp [ebp-0x1],bl
..@0x8054ea2: db 0x0f, 0x85, 0x47, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8054def
..@0x8054ea8: jmp strict near R.code+0x8054df2
..@0x8054ead: db 0x89, 0xde  ;; mov esi,ebx
..@0x8054eaf: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x8054eb1: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x8054eb5: db 0x85, 0xc0  ;; test eax,eax
..@0x8054eb7: db 0x0f, 0x84, 0x74, 0xf1, 0xff, 0xff  ;; jz near A.code+0x8054031
..@0x8054ebd: db 0x83, 0x84, 0x24, 0xa0, 0x00, 0x00, 0x00, 0x01  ;; add dword [esp+0xa0],byte +0x1
..@0x8054ec5: db 0x89, 0xf0  ;; mov eax,esi
..@0x8054ec7: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8054eca: db 0xf7, 0xd0  ;; not eax
..@0x8054ecc: db 0x8d, 0x2c, 0x03  ;; lea ebp,[ebx+eax]
..@0x8054ecf: jmp strict near R.code+0x8053ba8
..@0x8054ed4: db 0x0f, 0xb7, 0x50, 0x03  ;; movzx edx,word [eax+0x3]
..@0x8054ed8: db 0x8d, 0x68, 0x08  ;; lea ebp,[eax+0x8]
..@0x8054edb: db 0x8b, 0x9c, 0x24, 0x00, 0x02, 0x00, 0x00  ;; mov ebx,[esp+0x200]
..@0x8054ee2: db 0x8b, 0xb4, 0x24, 0x04, 0x02, 0x00, 0x00  ;; mov esi,[esp+0x204]
..@0x8054ee9: db 0x8b, 0x8c, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov ecx,[esp+0xbc]
..@0x8054ef0: db 0x66, 0xc1, 0xca, 0x08  ;; ror dx,byte 0x8
..@0x8054ef4: db 0x0f, 0xb7, 0xd2  ;; movzx edx,dx
..@0x8054ef7: db 0x89, 0x1d, 0x30, 0xe1, 0x83, 0x09  ;; mov [0x983e130],ebx
..@0x8054efd: db 0x8b, 0x9c, 0x24, 0x08, 0x02, 0x00, 0x00  ;; mov ebx,[esp+0x208]
..@0x8054f04: db 0x89, 0x54, 0x24, 0x7c  ;; mov [esp+0x7c],edx
..@0x8054f08: db 0x0f, 0xb7, 0x50, 0x05  ;; movzx edx,word [eax+0x5]
..@0x8054f0c: db 0x89, 0x35, 0x34, 0xe1, 0x83, 0x09  ;; mov [0x983e134],esi
..@0x8054f12: db 0x8b, 0xb4, 0x24, 0x0c, 0x02, 0x00, 0x00  ;; mov esi,[esp+0x20c]
..@0x8054f19: db 0x89, 0x0d, 0x2c, 0xe1, 0x83, 0x09  ;; mov [0x983e12c],ecx
..@0x8054f1f: db 0x89, 0x1d, 0x38, 0xe1, 0x83, 0x09  ;; mov [0x983e138],ebx
..@0x8054f25: db 0x8b, 0x9c, 0x24, 0x10, 0x02, 0x00, 0x00  ;; mov ebx,[esp+0x210]
..@0x8054f2c: db 0x66, 0xc1, 0xca, 0x08  ;; ror dx,byte 0x8
..@0x8054f30: db 0x0f, 0xb7, 0xd2  ;; movzx edx,dx
..@0x8054f33: db 0x89, 0x35, 0x3c, 0xe1, 0x83, 0x09  ;; mov [0x983e13c],esi
..@0x8054f39: db 0x89, 0x54, 0x24, 0x78  ;; mov [esp+0x78],edx
..@0x8054f3d: db 0x0f, 0xb6, 0x50, 0x07  ;; movzx edx,byte [eax+0x7]
..@0x8054f41: db 0x89, 0x1d, 0x40, 0xe1, 0x83, 0x09  ;; mov [0x983e140],ebx
..@0x8054f47: db 0x84, 0xd2  ;; test dl,dl
..@0x8054f49: db 0x88, 0x15, 0xc0, 0x8a, 0x85, 0x09  ;; mov [0x9858ac0],dl
..@0x8054f4f: db 0x0f, 0x84, 0xcd, 0x00, 0x00, 0x00  ;; jz near A.code+0x8055022
..@0x8054f55: db 0x8d, 0x34, 0x52  ;; lea esi,[edx+edx*2]
..@0x8054f58: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8054f5a: db 0xc7, 0x44, 0x24, 0x74, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x74],0x0
..@0x8054f62: db 0x01, 0xee  ;; add esi,ebp
..@0x8054f64: db 0xc7, 0x44, 0x24, 0x70, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x70],0x0
..@0x8054f6c: db 0xc7, 0x44, 0x24, 0x6c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x0
..@0x8054f74: db 0xc7, 0x44, 0x24, 0x68, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x68],0x0
..@0x8054f7c: db 0x0f, 0xb6, 0x45, 0x00  ;; movzx eax,byte [ebp+0x0]
..@0x8054f80: db 0x89, 0x83, 0xc4, 0x8a, 0x85, 0x09  ;; mov [ebx+0x9858ac4],eax
..@0x8054f86: db 0x0f, 0xb6, 0x55, 0x01  ;; movzx edx,byte [ebp+0x1]
..@0x8054f8a: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8054f8c: and edx, strict byte 0xf
..@0x8054f8f: db 0xc0, 0xe9, 0x04  ;; shr cl,byte 0x4
..@0x8054f92: db 0x89, 0x93, 0xe4, 0x8a, 0x85, 0x09  ;; mov [ebx+0x9858ae4],edx
..@0x8054f98: db 0x0f, 0xb6, 0xc9  ;; movzx ecx,cl
..@0x8054f9b: db 0x89, 0x8b, 0xd4, 0x8a, 0x85, 0x09  ;; mov [ebx+0x9858ad4],ecx
..@0x8054fa1: db 0x0f, 0xb6, 0x45, 0x02  ;; movzx eax,byte [ebp+0x2]
..@0x8054fa5: db 0x89, 0x83, 0xf4, 0x8a, 0x85, 0x09  ;; mov [ebx+0x9858af4],eax
..@0x8054fab: db 0x31, 0xc0  ;; xor eax,eax
..@0x8054fad: db 0x3b, 0x0c, 0x85, 0x80, 0xb9, 0x05, 0x08  ;; cmp ecx,[eax*4+0x805b980]
..@0x8054fb4: db 0x74, 0x61  ;; jz A.code+0x8055017
..@0x8054fb6: add eax, strict byte 0x1
..@0x8054fb9: cmp eax, strict byte 0x8
..@0x8054fbc: db 0x75, 0xef  ;; jnz A.code+0x8054fad
..@0x8054fbe: db 0x31, 0xc0  ;; xor eax,eax
..@0x8054fc0: db 0x3b, 0x14, 0x85, 0x80, 0xb9, 0x05, 0x08  ;; cmp edx,[eax*4+0x805b980]
..@0x8054fc7: db 0x0f, 0x84, 0xbb, 0x02, 0x00, 0x00  ;; jz near A.code+0x8055288
..@0x8054fcd: add eax, strict byte 0x1
..@0x8054fd0: cmp eax, strict byte 0x8
..@0x8054fd3: db 0x75, 0xeb  ;; jnz A.code+0x8054fc0
..@0x8054fd5: db 0x3b, 0x4c, 0x24, 0x68  ;; cmp ecx,[esp+0x68]
..@0x8054fd9: db 0x7e, 0x0e  ;; jng A.code+0x8054fe9
..@0x8054fdb: db 0x8b, 0xbb, 0x04, 0x8b, 0x85, 0x09  ;; mov edi,[ebx+0x9858b04]
..@0x8054fe1: db 0x89, 0x4c, 0x24, 0x68  ;; mov [esp+0x68],ecx
..@0x8054fe5: db 0x89, 0x7c, 0x24, 0x70  ;; mov [esp+0x70],edi
..@0x8054fe9: db 0x3b, 0x54, 0x24, 0x6c  ;; cmp edx,[esp+0x6c]
..@0x8054fed: db 0x7e, 0x0e  ;; jng A.code+0x8054ffd
..@0x8054fef: db 0x8b, 0x83, 0x14, 0x8b, 0x85, 0x09  ;; mov eax,[ebx+0x9858b14]
..@0x8054ff5: db 0x89, 0x54, 0x24, 0x6c  ;; mov [esp+0x6c],edx
..@0x8054ff9: db 0x89, 0x44, 0x24, 0x74  ;; mov [esp+0x74],eax
..@0x8054ffd: add ebp, strict byte 0x3
..@0x8055000: add ebx, strict byte 0x4
..@0x8055003: db 0x39, 0xf5  ;; cmp ebp,esi
..@0x8055005: db 0x0f, 0x85, 0x71, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8054f7c
..@0x805500b: jmp strict near R.code+0x8053ba8
..@0x8055010: db 0x01, 0xfd  ;; add ebp,edi
..@0x8055012: jmp strict near R.code+0x8053ba8
..@0x8055017: db 0x89, 0x83, 0x04, 0x8b, 0x85, 0x09  ;; mov [ebx+0x9858b04],eax
..@0x805501d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8055020: db 0xeb, 0x9c  ;; jmp short A.code+0x8054fbe
..@0x8055022: db 0xc7, 0x44, 0x24, 0x74, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x74],0x0
..@0x805502a: db 0xc7, 0x44, 0x24, 0x70, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x70],0x0
..@0x8055032: db 0xc7, 0x44, 0x24, 0x6c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x6c],0x0
..@0x805503a: db 0xc7, 0x44, 0x24, 0x68, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x68],0x0
..@0x8055042: jmp strict near R.code+0x8053ba8
..@0x8055047: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x805504b: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805504d: db 0x85, 0xc0  ;; test eax,eax
..@0x805504f: db 0x0f, 0x85, 0xa6, 0xf6, 0xff, 0xff  ;; jnz near A.code+0x80546fb
..@0x8055055: jmp strict near R.code+0x8053e41
..@0x805505a: db 0x31, 0xf6  ;; xor esi,esi
..@0x805505c: jmp strict near R.code+0x80547ae
..@0x8055061: db 0x89, 0x7c, 0x24, 0x34  ;; mov [esp+0x34],edi
..@0x8055065: db 0x89, 0xef  ;; mov edi,ebp
..@0x8055067: db 0x0f, 0xb6, 0x17  ;; movzx edx,byte [edi]
..@0x805506a: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x805506e: db 0x0f, 0xb6, 0xea  ;; movzx ebp,dl
..@0x8055071: db 0x8d, 0x4d, 0xf4  ;; lea ecx,[ebp-0xc]
..@0x8055074: sub ebx, strict byte 0x1
..@0x8055077: db 0x80, 0xfa, 0x10  ;; cmp dl,0x10
..@0x805507a: db 0x0f, 0x43, 0xe9  ;; cmovnc ebp,ecx
..@0x805507d: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8055081: db 0x8d, 0x4c, 0xad, 0x00  ;; lea ecx,[ebp+ebp*4+0x0]
..@0x8055085: db 0x8d, 0x34, 0x8d, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[ecx*4+0x0]
..@0x805508c: db 0xc1, 0xe1, 0x04  ;; shl ecx,byte 0x4
..@0x805508f: db 0x89, 0x74, 0x24, 0x60  ;; mov [esp+0x60],esi
..@0x8055093: db 0x8d, 0x96, 0x41, 0x8b, 0x85, 0x09  ;; lea edx,[esi+0x9858b41]
..@0x8055099: db 0x89, 0xf3  ;; mov ebx,esi
..@0x805509b: db 0x8b, 0x77, 0x01  ;; mov esi,[edi+0x1]
..@0x805509e: db 0x89, 0xb3, 0x41, 0x8b, 0x85, 0x09  ;; mov [ebx+0x9858b41],esi
..@0x80550a4: db 0x89, 0xee  ;; mov esi,ebp
..@0x80550a6: db 0x8b, 0x5f, 0x05  ;; mov ebx,[edi+0x5]
..@0x80550a9: db 0xc1, 0xe6, 0x0c  ;; shl esi,byte 0xc
..@0x80550ac: db 0x89, 0x5a, 0x04  ;; mov [edx+0x4],ebx
..@0x80550af: db 0x8b, 0x5f, 0x09  ;; mov ebx,[edi+0x9]
..@0x80550b2: db 0x89, 0x5a, 0x08  ;; mov [edx+0x8],ebx
..@0x80550b5: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x80550b7: db 0x8b, 0x47, 0x0d  ;; mov eax,[edi+0xd]
..@0x80550ba: db 0xc1, 0xe3, 0x08  ;; shl ebx,byte 0x8
..@0x80550bd: db 0x89, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],esi
..@0x80550c4: db 0x89, 0x5c, 0x24, 0x58  ;; mov [esp+0x58],ebx
..@0x80550c8: db 0x89, 0xee  ;; mov esi,ebp
..@0x80550ca: add edi, strict byte 0x11
..@0x80550cd: db 0xc1, 0xe6, 0x0a  ;; shl esi,byte 0xa
..@0x80550d0: db 0x89, 0x4c, 0x24, 0x5c  ;; mov [esp+0x5c],ecx
..@0x80550d4: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x80550d9: db 0xc7, 0x04, 0xad, 0xa0, 0x8a, 0x85, 0x09, 0x00  ;; mov dword [ebp*4+0x9858aa0],0x0
..@0x80550e1: db 0x00, 0x00, 0x00
..@0x80550e4: db 0x89, 0x42, 0x0c  ;; mov [edx+0xc],eax
..@0x80550e7: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x80550eb: db 0x31, 0xc0  ;; xor eax,eax
..@0x80550ed: db 0xc7, 0x04, 0xad, 0xe0, 0x8b, 0x85, 0x09, 0x00  ;; mov dword [ebp*4+0x9858be0],0x0
..@0x80550f5: db 0x00, 0x00, 0x00
..@0x80550f8: db 0xc7, 0x44, 0x24, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x0
..@0x8055100: db 0x89, 0xb4, 0x24, 0x90, 0x00, 0x00, 0x00  ;; mov [esp+0x90],esi
..@0x8055107: sub edx, strict byte 0x10
..@0x805510a: db 0x89, 0x6c, 0x24, 0x4c  ;; mov [esp+0x4c],ebp
..@0x805510e: db 0x89, 0x54, 0x24, 0x34  ;; mov [esp+0x34],edx
..@0x8055112: db 0x8b, 0x54, 0x24, 0x58  ;; mov edx,[esp+0x58]
..@0x8055116: db 0x89, 0x7c, 0x24, 0x3c  ;; mov [esp+0x3c],edi
..@0x805511a: db 0x89, 0x94, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov [esp+0x8c],edx
..@0x8055121: db 0x8b, 0x7c, 0x24, 0x60  ;; mov edi,[esp+0x60]
..@0x8055125: db 0x0f, 0xb6, 0xb4, 0x3b, 0x40, 0x8b, 0x85, 0x09  ;; movzx esi,byte [ebx+edi+0x9858b40]
..@0x805512d: db 0x8b, 0x7c, 0x24, 0x5c  ;; mov edi,[esp+0x5c]
..@0x8055131: db 0x8d, 0x14, 0x06  ;; lea edx,[esi+eax]
..@0x8055134: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x8055138: db 0x89, 0x94, 0x9f, 0x00, 0x8c, 0x85, 0x09  ;; mov [edi+ebx*4+0x9858c00],edx
..@0x805513f: db 0x89, 0x54, 0x24, 0x50  ;; mov [esp+0x50],edx
..@0x8055143: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8055147: db 0x29, 0xc2  ;; sub edx,eax
..@0x8055149: db 0x89, 0x94, 0x9f, 0x80, 0x8e, 0x85, 0x09  ;; mov [edi+ebx*4+0x9858e80],edx
..@0x8055150: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8055154: db 0x8b, 0x94, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x8c]
..@0x805515b: db 0x89, 0x7c, 0x24, 0x04  ;; mov [esp+0x4],edi
..@0x805515f: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8055163: db 0x8d, 0x84, 0x17, 0x00, 0x91, 0x85, 0x09  ;; lea eax,[edi+edx+0x9859100]
..@0x805516a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805516d: call B.code+memmove
..@0x8055172: cmp ebx, strict byte 0xa
..@0x8055175: db 0x0f, 0x8f, 0xc9, 0x00, 0x00, 0x00  ;; jg near A.code+0x8055244
..@0x805517b: db 0x85, 0xf6  ;; test esi,esi
..@0x805517d: db 0x0f, 0x84, 0xc1, 0x00, 0x00, 0x00  ;; jz near A.code+0x8055244
..@0x8055183: db 0xb9, 0x0a, 0x00, 0x00, 0x00  ;; mov ecx,0xa
..@0x8055188: db 0x03, 0x7c, 0x24, 0x58  ;; add edi,[esp+0x58]
..@0x805518c: db 0xbd, 0x01, 0x00, 0x00, 0x00  ;; mov ebp,0x1
..@0x8055191: db 0x29, 0xd9  ;; sub ecx,ebx
..@0x8055193: db 0x89, 0x74, 0x24, 0x64  ;; mov [esp+0x64],esi
..@0x8055197: db 0x8b, 0xb4, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x80]
..@0x805519e: db 0xd3, 0xe5  ;; shl ebp,cl
..@0x80551a0: db 0xc7, 0x44, 0x24, 0x40, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x40],0x0
..@0x80551a8: db 0x8d, 0x45, 0xff  ;; lea eax,[ebp-0x1]
..@0x80551ab: db 0x89, 0xbc, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],edi
..@0x80551b2: db 0x89, 0x84, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov [esp+0x88],eax
..@0x80551b9: db 0x85, 0xed  ;; test ebp,ebp
..@0x80551bb: db 0x7e, 0x70  ;; jng A.code+0x805522d
..@0x80551bd: db 0x8b, 0x54, 0x24, 0x4c  ;; mov edx,[esp+0x4c]
..@0x80551c1: db 0x89, 0xac, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov [esp+0x98],ebp
..@0x80551c8: db 0x8b, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x84]
..@0x80551cf: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x80551d3: db 0x8b, 0x14, 0x95, 0xe0, 0x8b, 0x85, 0x09  ;; mov edx,[edx*4+0x9858be0]
..@0x80551da: db 0x0f, 0xb6, 0xbc, 0x08, 0x00, 0x91, 0x85, 0x09  ;; movzx edi,byte [eax+ecx+0x9859100]
..@0x80551e2: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80551e4: db 0x89, 0x54, 0x24, 0x44  ;; mov [esp+0x44],edx
..@0x80551e8: db 0x89, 0xd0  ;; mov eax,edx
..@0x80551ea: db 0x01, 0xe9  ;; add ecx,ebp
..@0x80551ec: db 0x8b, 0xac, 0x24, 0x90, 0x00, 0x00, 0x00  ;; mov ebp,[esp+0x90]
..@0x80551f3: db 0x8d, 0x54, 0x05, 0x00  ;; lea edx,[ebp+eax+0x0]
..@0x80551f7: db 0x89, 0xbc, 0x86, 0x00, 0x99, 0x85, 0x09  ;; mov [esi+eax*4+0x9859900],edi
..@0x80551fe: add eax, strict byte 0x1
..@0x8055201: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8055203: db 0x89, 0x1c, 0x95, 0x00, 0x19, 0x86, 0x09  ;; mov [edx*4+0x9861900],ebx
..@0x805520a: db 0x75, 0xe7  ;; jnz A.code+0x80551f3
..@0x805520c: db 0x8b, 0x4c, 0x24, 0x44  ;; mov ecx,[esp+0x44]
..@0x8055210: db 0x8b, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov edx,[esp+0x88]
..@0x8055217: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x805521b: db 0x8b, 0xac, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov ebp,[esp+0x98]
..@0x8055222: db 0x8d, 0x44, 0x11, 0x01  ;; lea eax,[ecx+edx+0x1]
..@0x8055226: db 0x89, 0x04, 0xbd, 0xe0, 0x8b, 0x85, 0x09  ;; mov [edi*4+0x9858be0],eax
..@0x805522d: db 0x83, 0x44, 0x24, 0x40, 0x01  ;; add dword [esp+0x40],byte +0x1
..@0x8055232: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x8055236: db 0x39, 0x44, 0x24, 0x64  ;; cmp [esp+0x64],eax
..@0x805523a: db 0x0f, 0x85, 0x79, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80551b9
..@0x8055240: db 0x8b, 0x74, 0x24, 0x64  ;; mov esi,[esp+0x64]
..@0x8055244: db 0x01, 0x74, 0x24, 0x2c  ;; add [esp+0x2c],esi
..@0x8055248: add ebx, strict byte 0x1
..@0x805524b: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x805524f: db 0x01, 0x74, 0x24, 0x3c  ;; add [esp+0x3c],esi
..@0x8055253: db 0x29, 0x74, 0x24, 0x34  ;; sub [esp+0x34],esi
..@0x8055257: db 0x8b, 0x54, 0x24, 0x4c  ;; mov edx,[esp+0x4c]
..@0x805525b: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x805525f: db 0x01, 0xc0  ;; add eax,eax
..@0x8055261: cmp ebx, strict byte 0x11
..@0x8055264: db 0x89, 0x34, 0x95, 0xa0, 0x8a, 0x85, 0x09  ;; mov [edx*4+0x9858aa0],esi
..@0x805526b: db 0x0f, 0x85, 0xb0, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8055121
..@0x8055271: db 0x8b, 0x6c, 0x24, 0x34  ;; mov ebp,[esp+0x34]
..@0x8055275: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8055279: db 0x85, 0xed  ;; test ebp,ebp
..@0x805527b: db 0x0f, 0x8f, 0xe6, 0xfd, 0xff, 0xff  ;; jg near A.code+0x8055067
..@0x8055281: db 0x89, 0xfd  ;; mov ebp,edi
..@0x8055283: jmp strict near R.code+0x8053ba8
..@0x8055288: db 0x89, 0x83, 0x14, 0x8b, 0x85, 0x09  ;; mov [ebx+0x9858b14],eax
..@0x805528e: jmp strict near R.code+0x8054fd5
..@0x8055293: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055299: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80552a0: push esi
..@0x80552a1: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80552a3: db 0x31, 0xc0  ;; xor eax,eax
..@0x80552a5: push ebx
..@0x80552a6: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x80552ab: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80552ad: sub esp, strict byte 0x20
..@0x80552b0: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x80552b5: db 0xc7, 0x05, 0x24, 0x78, 0x84, 0x09, 0x01, 0x00  ;; mov dword [0x9847824],0x1
..@0x80552bd: db 0x00, 0x00
..@0x80552bf: db 0xc7, 0x05, 0x20, 0x78, 0x84, 0x09, 0x00, 0x00  ;; mov dword [0x9847820],0x0
..@0x80552c7: db 0x00, 0x00
..@0x80552c9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80552d0: add eax, strict byte 0x1
..@0x80552d3: db 0x01, 0xd9  ;; add ecx,ebx
..@0x80552d5: cmp eax, strict byte 0x1e
..@0x80552d8: db 0x74, 0x2c  ;; jz A.code+0x8055306
..@0x80552da: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80552dc: db 0x89, 0x14, 0xc5, 0x24, 0x78, 0x84, 0x09  ;; mov [eax*8+0x9847824],edx
..@0x80552e3: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x80552e5: db 0x89, 0x0c, 0xc5, 0x20, 0x78, 0x84, 0x09  ;; mov [eax*8+0x9847820],ecx
..@0x80552ec: db 0x01, 0xda  ;; add edx,ebx
..@0x80552ee: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80552f0: db 0xa8, 0x01  ;; test al,0x1
..@0x80552f2: db 0x74, 0xdc  ;; jz A.code+0x80552d0
..@0x80552f4: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80552f6: cmp eax, strict byte 0x1
..@0x80552f9: db 0x0f, 0x95, 0xc3  ;; setnz bl
..@0x80552fc: add eax, strict byte 0x1
..@0x80552ff: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8055301: cmp eax, strict byte 0x1e
..@0x8055304: db 0x75, 0xd4  ;; jnz A.code+0x80552da
..@0x8055306: db 0xc7, 0x05, 0x14, 0x79, 0x84, 0x09, 0x03, 0x00  ;; mov dword [0x9847914],0x3
..@0x805530e: db 0x00, 0x00
..@0x8055310: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8055312: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8055314: db 0xb8, 0x01, 0x01, 0x00, 0x00  ;; mov eax,0x101
..@0x8055319: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x805531e: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x8055323: db 0xc7, 0x05, 0x10, 0x79, 0x84, 0x09, 0x00, 0x00  ;; mov dword [0x9847910],0x0
..@0x805532b: db 0x00, 0x00
..@0x805532d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8055330: add eax, strict byte 0x1
..@0x8055333: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8055335: db 0x3d, 0x1d, 0x01, 0x00, 0x00  ;; cmp eax,0x11d
..@0x805533a: db 0x74, 0x30  ;; jz A.code+0x805536c
..@0x805533c: db 0x89, 0xf3  ;; mov ebx,esi
..@0x805533e: db 0x89, 0x14, 0xc5, 0x0c, 0x71, 0x84, 0x09  ;; mov [eax*8+0x984710c],edx
..@0x8055345: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x8055347: db 0x89, 0x0c, 0xc5, 0x08, 0x71, 0x84, 0x09  ;; mov [eax*8+0x9847108],ecx
..@0x805534e: db 0x01, 0xda  ;; add edx,ebx
..@0x8055350: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8055352: db 0xa8, 0x03  ;; test al,0x3
..@0x8055354: db 0x75, 0xda  ;; jnz A.code+0x8055330
..@0x8055356: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8055358: db 0x3d, 0x07, 0x01, 0x00, 0x00  ;; cmp eax,0x107
..@0x805535d: db 0x0f, 0x9f, 0xc3  ;; setg bl
..@0x8055360: add eax, strict byte 0x1
..@0x8055363: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8055365: db 0x3d, 0x1d, 0x01, 0x00, 0x00  ;; cmp eax,0x11d
..@0x805536a: db 0x75, 0xd0  ;; jnz A.code+0x805533c
..@0x805536c: db 0xc7, 0x05, 0xf4, 0x79, 0x84, 0x09, 0x02, 0x01  ;; mov dword [0x98479f4],0x102
..@0x8055374: db 0x00, 0x00
..@0x8055376: db 0xb9, 0x00, 0x00, 0x20, 0x00  ;; mov ecx,0x200000
..@0x805537b: pushf
..@0x805537c: pop eax
..@0x805537d: db 0x89, 0xc2  ;; mov edx,eax
..@0x805537f: db 0x31, 0xc8  ;; xor eax,ecx
..@0x8055381: push eax
..@0x8055382: popf
..@0x8055383: pushf
..@0x8055384: pop eax
..@0x8055385: db 0x31, 0xd0  ;; xor eax,edx
..@0x8055387: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x805538c: db 0x75, 0x02  ;; jnz A.code+0x8055390
..@0x805538e: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055390: db 0xc7, 0x05, 0xf0, 0x79, 0x84, 0x09, 0x00, 0x00  ;; mov dword [0x98479f0],0x0
..@0x8055398: db 0x00, 0x00
..@0x805539a: db 0x85, 0xc0  ;; test eax,eax
..@0x805539c: db 0x0f, 0x84, 0x8c, 0x00, 0x00, 0x00  ;; jz near A.code+0x805542e
..@0x80553a2: db 0x8d, 0x74, 0x24, 0x10  ;; lea esi,[esp+0x10]
..@0x80553a6: db 0x31, 0xc0  ;; xor eax,eax
..@0x80553a8: push ebx
..@0x80553a9: db 0x0f, 0xa2  ;; cpuid
..@0x80553ab: db 0x89, 0x06  ;; mov [esi],eax
..@0x80553ad: db 0x89, 0x5e, 0x04  ;; mov [esi+0x4],ebx
..@0x80553b0: db 0x89, 0x4e, 0x08  ;; mov [esi+0x8],ecx
..@0x80553b3: db 0x89, 0x56, 0x0c  ;; mov [esi+0xc],edx
..@0x80553b6: pop ebx
..@0x80553b7: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x80553bb: db 0x85, 0xc0  ;; test eax,eax
..@0x80553bd: db 0x74, 0x6f  ;; jz A.code+0x805542e
..@0x80553bf: db 0x89, 0xe6  ;; mov esi,esp
..@0x80553c1: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80553c6: push ebx
..@0x80553c7: db 0x0f, 0xa2  ;; cpuid
..@0x80553c9: db 0x89, 0x06  ;; mov [esi],eax
..@0x80553cb: db 0x89, 0x5e, 0x04  ;; mov [esi+0x4],ebx
..@0x80553ce: db 0x89, 0x4e, 0x08  ;; mov [esi+0x8],ecx
..@0x80553d1: db 0x89, 0x56, 0x0c  ;; mov [esi+0xc],edx
..@0x80553d4: pop ebx
..@0x80553d5: db 0x8b, 0x5c, 0x24, 0x0c  ;; mov ebx,[esp+0xc]
..@0x80553d9: db 0xb8, 0x00, 0x00, 0x00, 0x80  ;; mov eax,0x80000000
..@0x80553de: db 0x81, 0xe3, 0xff, 0xff, 0xbf, 0x3f  ;; and ebx,0x3fbfffff
..@0x80553e4: push ebx
..@0x80553e5: db 0x0f, 0xa2  ;; cpuid
..@0x80553e7: db 0x89, 0x06  ;; mov [esi],eax
..@0x80553e9: db 0x89, 0x5e, 0x04  ;; mov [esi+0x4],ebx
..@0x80553ec: db 0x89, 0x4e, 0x08  ;; mov [esi+0x8],ecx
..@0x80553ef: db 0x89, 0x56, 0x0c  ;; mov [esi+0xc],edx
..@0x80553f2: pop ebx
..@0x80553f3: db 0x81, 0x3c, 0x24, 0x00, 0x00, 0x00, 0x80  ;; cmp dword [esp],0x80000000
..@0x80553fa: db 0x77, 0x38  ;; ja A.code+0x8055434
..@0x80553fc: db 0x80, 0xe7, 0x80  ;; and bh,0x80
..@0x80553ff: db 0x74, 0x2d  ;; jz A.code+0x805542e
..@0x8055401: db 0xc7, 0x05, 0xdc, 0xd1, 0x05, 0x08, 0x04, 0x00  ;; mov dword [0x805d1dc],0x4
..@0x8055409: db 0x00, 0x00
..@0x805540b: db 0xba, 0x00, 0x02, 0x00, 0x00  ;; mov edx,0x200
..@0x8055410: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055412: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055418: db 0x89, 0x04, 0x95, 0x00, 0x7a, 0x84, 0x09  ;; mov [edx*4+0x9847a00],eax
..@0x805541f: db 0x89, 0x04, 0x85, 0x00, 0x82, 0x84, 0x09  ;; mov [eax*4+0x9848200],eax
..@0x8055426: add eax, strict byte 0x1
..@0x8055429: sub edx, strict byte 0x1
..@0x805542c: db 0x75, 0xea  ;; jnz A.code+0x8055418
..@0x805542e: add esp, strict byte 0x20
..@0x8055431: pop ebx
..@0x8055432: pop esi
..@0x8055433: ret
..@0x8055434: db 0xb8, 0x01, 0x00, 0x00, 0x80  ;; mov eax,0x80000001
..@0x8055439: push ebx
..@0x805543a: db 0x0f, 0xa2  ;; cpuid
..@0x805543c: db 0x89, 0x06  ;; mov [esi],eax
..@0x805543e: db 0x89, 0x5e, 0x04  ;; mov [esi+0x4],ebx
..@0x8055441: db 0x89, 0x4e, 0x08  ;; mov [esi+0x8],ecx
..@0x8055444: db 0x89, 0x56, 0x0c  ;; mov [esi+0xc],edx
..@0x8055447: pop ebx
..@0x8055448: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x805544c: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8055450: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8055452: db 0x25, 0x00, 0x00, 0x00, 0x80  ;; and eax,0x80000000
..@0x8055457: db 0x81, 0xf2, 0x41, 0x75, 0x74, 0x68  ;; xor edx,0x68747541
..@0x805545d: db 0x09, 0xc3  ;; or ebx,eax
..@0x805545f: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x8055463: db 0x35, 0x65, 0x6e, 0x74, 0x69  ;; xor eax,0x69746e65
..@0x8055468: db 0x09, 0xd0  ;; or eax,edx
..@0x805546a: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x805546e: db 0x81, 0xf2, 0x63, 0x41, 0x4d, 0x44  ;; xor edx,0x444d4163
..@0x8055474: db 0x09, 0xd0  ;; or eax,edx
..@0x8055476: db 0x75, 0x84  ;; jnz A.code+0x80553fc
..@0x8055478: db 0x81, 0xe1, 0x00, 0x00, 0x40, 0x40  ;; and ecx,0x40400000
..@0x805547e: db 0x09, 0xcb  ;; or ebx,ecx
..@0x8055480: jmp strict near R.code+0x80553fc
..@0x8055485: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055489: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8055490: push ebp
..@0x8055491: db 0xbd, 0x5c, 0x00, 0x00, 0x00  ;; mov ebp,0x5c
..@0x8055496: push edi
..@0x8055497: db 0x89, 0xc7  ;; mov edi,eax
..@0x8055499: push esi
..@0x805549a: db 0x8d, 0x72, 0x01  ;; lea esi,[edx+0x1]
..@0x805549d: push ebx
..@0x805549e: sub esp, strict byte 0x1c
..@0x80554a1: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x80554a4: db 0xeb, 0x4e  ;; jmp short A.code+0x80554f4
..@0x80554a6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80554a9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80554b0: db 0x84, 0xdb  ;; test bl,bl
..@0x80554b2: db 0x0f, 0x84, 0x98, 0x00, 0x00, 0x00  ;; jz near A.code+0x8055550
..@0x80554b8: db 0x80, 0xf9, 0x3f  ;; cmp cl,0x3f
..@0x80554bb: db 0x74, 0x28  ;; jz A.code+0x80554e5
..@0x80554bd: db 0x8d, 0x53, 0x9f  ;; lea edx,[ebx-0x61]
..@0x80554c0: db 0x8d, 0x43, 0xe0  ;; lea eax,[ebx-0x20]
..@0x80554c3: db 0x80, 0xfa, 0x19  ;; cmp dl,0x19
..@0x80554c6: db 0x8d, 0x51, 0x9f  ;; lea edx,[ecx-0x61]
..@0x80554c9: db 0x0f, 0x46, 0xd8  ;; cmovna ebx,eax
..@0x80554cc: db 0x80, 0xfa, 0x19  ;; cmp dl,0x19
..@0x80554cf: db 0x8d, 0x41, 0xe0  ;; lea eax,[ecx-0x20]
..@0x80554d2: db 0x0f, 0x46, 0xc8  ;; cmovna ecx,eax
..@0x80554d5: db 0x80, 0xfb, 0x2f  ;; cmp bl,0x2f
..@0x80554d8: db 0x0f, 0x44, 0xdd  ;; cmovz ebx,ebp
..@0x80554db: db 0x80, 0xf9, 0x2f  ;; cmp cl,0x2f
..@0x80554de: db 0x0f, 0x44, 0xcd  ;; cmovz ecx,ebp
..@0x80554e1: db 0x38, 0xcb  ;; cmp bl,cl
..@0x80554e3: db 0x75, 0x6b  ;; jnz A.code+0x8055550
..@0x80554e5: db 0x0f, 0xb6, 0x5f, 0x01  ;; movzx ebx,byte [edi+0x1]
..@0x80554e9: add edi, strict byte 0x1
..@0x80554ec: db 0x80, 0x3e, 0x00  ;; cmp byte [esi],0x0
..@0x80554ef: db 0x74, 0x3f  ;; jz A.code+0x8055530
..@0x80554f1: add esi, strict byte 0x1
..@0x80554f4: db 0x0f, 0xb6, 0x4e, 0xff  ;; movzx ecx,byte [esi-0x1]
..@0x80554f8: db 0x80, 0xf9, 0x2a  ;; cmp cl,0x2a
..@0x80554fb: db 0x75, 0xb3  ;; jnz A.code+0x80554b0
..@0x80554fd: db 0x84, 0xdb  ;; test bl,bl
..@0x80554ff: db 0x74, 0xeb  ;; jz A.code+0x80554ec
..@0x8055501: db 0x80, 0x3e, 0x00  ;; cmp byte [esi],0x0
..@0x8055504: db 0x74, 0x3a  ;; jz A.code+0x8055540
..@0x8055506: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8055508: db 0x89, 0xc8  ;; mov eax,ecx
..@0x805550a: db 0x89, 0xf2  ;; mov edx,esi
..@0x805550c: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x8055510: call R.code+0x8055490
..@0x8055515: db 0x8b, 0x4c, 0x24, 0x0c  ;; mov ecx,[esp+0xc]
..@0x8055519: db 0x85, 0xc0  ;; test eax,eax
..@0x805551b: db 0x75, 0x23  ;; jnz A.code+0x8055540
..@0x805551d: add ecx, strict byte 0x1
..@0x8055520: db 0x80, 0x39, 0x00  ;; cmp byte [ecx],0x0
..@0x8055523: db 0x74, 0xcc  ;; jz A.code+0x80554f1
..@0x8055525: db 0xeb, 0xe1  ;; jmp short A.code+0x8055508
..@0x8055527: db 0x89, 0xf6  ;; mov esi,esi
..@0x8055529: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8055530: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055532: db 0x84, 0xdb  ;; test bl,bl
..@0x8055534: db 0x0f, 0x94, 0xc0  ;; setz al
..@0x8055537: add esp, strict byte 0x1c
..@0x805553a: pop ebx
..@0x805553b: pop esi
..@0x805553c: pop edi
..@0x805553d: pop ebp
..@0x805553e: ret
..@0x805553f: nop
..@0x8055540: add esp, strict byte 0x1c
..@0x8055543: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8055548: pop ebx
..@0x8055549: pop esi
..@0x805554a: pop edi
..@0x805554b: pop ebp
..@0x805554c: ret
..@0x805554d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8055550: add esp, strict byte 0x1c
..@0x8055553: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055555: pop ebx
..@0x8055556: pop esi
..@0x8055557: pop edi
..@0x8055558: pop ebp
..@0x8055559: ret
..@0x805555a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055560: push ebp
..@0x8055561: push edi
..@0x8055562: push esi
..@0x8055563: push ebx
..@0x8055564: db 0x81, 0xec, 0xdc, 0x04, 0x00, 0x00  ;; sub esp,0x4dc
..@0x805556a: db 0x89, 0x54, 0x24, 0x5c  ;; mov [esp+0x5c],edx
..@0x805556e: db 0x8b, 0x50, 0x50  ;; mov edx,[eax+0x50]
..@0x8055571: db 0x8b, 0x70, 0x10  ;; mov esi,[eax+0x10]
..@0x8055574: db 0x89, 0x4c, 0x24, 0x40  ;; mov [esp+0x40],ecx
..@0x8055578: db 0x8b, 0x68, 0x0c  ;; mov ebp,[eax+0xc]
..@0x805557b: db 0xf6, 0xc2, 0x40  ;; test dl,0x40
..@0x805557e: db 0x89, 0x74, 0x24, 0x58  ;; mov [esp+0x58],esi
..@0x8055582: db 0x0f, 0x84, 0x0f, 0x01, 0x00, 0x00  ;; jz near A.code+0x8055697
..@0x8055588: db 0x83, 0x78, 0x58, 0x20  ;; cmp dword [eax+0x58],byte +0x20
..@0x805558c: db 0x0f, 0x85, 0x4e, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x8055592: db 0x81, 0x78, 0x5c, 0x00, 0x00, 0xff, 0x00  ;; cmp dword [eax+0x5c],0xff0000
..@0x8055599: db 0x0f, 0x85, 0x41, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x805559f: db 0x81, 0x78, 0x60, 0x00, 0xff, 0x00, 0x00  ;; cmp dword [eax+0x60],0xff00
..@0x80555a6: db 0x0f, 0x85, 0x34, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80555ac: db 0x81, 0x78, 0x64, 0xff, 0x00, 0x00, 0x00  ;; cmp dword [eax+0x64],0xff
..@0x80555b3: db 0x0f, 0x85, 0x27, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80555b9: db 0x81, 0x78, 0x68, 0x00, 0x00, 0x00, 0xff  ;; cmp dword [eax+0x68],0xff000000
..@0x80555c0: db 0x0f, 0x85, 0x1a, 0x05, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80555c6: db 0x8b, 0x9c, 0x24, 0xfc, 0x04, 0x00, 0x00  ;; mov ebx,[esp+0x4fc]
..@0x80555cd: db 0x8d, 0xb0, 0x80, 0x00, 0x00, 0x00  ;; lea esi,[eax+0x80]
..@0x80555d3: db 0x8b, 0x84, 0x24, 0xf8, 0x04, 0x00, 0x00  ;; mov eax,[esp+0x4f8]
..@0x80555da: db 0x8b, 0x7c, 0x24, 0x58  ;; mov edi,[esp+0x58]
..@0x80555de: db 0x0f, 0xaf, 0xd9  ;; imul ebx,ecx
..@0x80555e1: db 0x8b, 0x8c, 0x24, 0xf8, 0x04, 0x00, 0x00  ;; mov ecx,[esp+0x4f8]
..@0x80555e8: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x80555eb: db 0xc1, 0xe7, 0x02  ;; shl edi,byte 0x2
..@0x80555ee: db 0x01, 0xc3  ;; add ebx,eax
..@0x80555f0: db 0x03, 0x5c, 0x24, 0x5c  ;; add ebx,[esp+0x5c]
..@0x80555f4: db 0x85, 0xc9  ;; test ecx,ecx
..@0x80555f6: db 0x0f, 0x88, 0xfb, 0x05, 0x00, 0x00  ;; js near A.code+0x8055bf7
..@0x80555fc: db 0x8b, 0x84, 0x24, 0xf0, 0x04, 0x00, 0x00  ;; mov eax,[esp+0x4f0]
..@0x8055603: db 0x8b, 0x8c, 0x24, 0xf4, 0x04, 0x00, 0x00  ;; mov ecx,[esp+0x4f4]
..@0x805560a: db 0x2b, 0x84, 0x24, 0xf8, 0x04, 0x00, 0x00  ;; sub eax,[esp+0x4f8]
..@0x8055611: db 0x39, 0x44, 0x24, 0x58  ;; cmp [esp+0x58],eax
..@0x8055615: db 0x0f, 0x4e, 0x44, 0x24, 0x58  ;; cmovng eax,[esp+0x58]
..@0x805561a: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x805561d: db 0x39, 0xac, 0x24, 0xf4, 0x04, 0x00, 0x00  ;; cmp [esp+0x4f4],ebp
..@0x8055624: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8055628: db 0x8b, 0x84, 0x24, 0xf4, 0x04, 0x00, 0x00  ;; mov eax,[esp+0x4f4]
..@0x805562f: db 0x0f, 0x4f, 0xc5  ;; cmovg eax,ebp
..@0x8055632: db 0x8b, 0xac, 0x24, 0xfc, 0x04, 0x00, 0x00  ;; mov ebp,[esp+0x4fc]
..@0x8055639: db 0x85, 0xc0  ;; test eax,eax
..@0x805563b: db 0x8d, 0x14, 0x28  ;; lea edx,[eax+ebp]
..@0x805563e: db 0x7f, 0x15  ;; jg A.code+0x8055655
..@0x8055640: db 0xeb, 0x48  ;; jmp short A.code+0x805568a
..@0x8055642: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055648: add ebp, strict byte 0x1
..@0x805564b: db 0x03, 0x5c, 0x24, 0x40  ;; add ebx,[esp+0x40]
..@0x805564f: db 0x01, 0xfe  ;; add esi,edi
..@0x8055651: db 0x39, 0xd5  ;; cmp ebp,edx
..@0x8055653: db 0x74, 0x35  ;; jz A.code+0x805568a
..@0x8055655: db 0x39, 0xcd  ;; cmp ebp,ecx
..@0x8055657: db 0x73, 0xef  ;; jnc A.code+0x8055648
..@0x8055659: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x805565d: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8055661: add ebp, strict byte 0x1
..@0x8055664: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8055667: db 0x01, 0xfe  ;; add esi,edi
..@0x8055669: db 0x89, 0x54, 0x24, 0x18  ;; mov [esp+0x18],edx
..@0x805566d: db 0x89, 0x4c, 0x24, 0x14  ;; mov [esp+0x14],ecx
..@0x8055671: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8055675: call B.code+memcpy
..@0x805567a: db 0x8b, 0x54, 0x24, 0x18  ;; mov edx,[esp+0x18]
..@0x805567e: db 0x03, 0x5c, 0x24, 0x40  ;; add ebx,[esp+0x40]
..@0x8055682: db 0x8b, 0x4c, 0x24, 0x14  ;; mov ecx,[esp+0x14]
..@0x8055686: db 0x39, 0xd5  ;; cmp ebp,edx
..@0x8055688: db 0x75, 0xcb  ;; jnz A.code+0x8055655
..@0x805568a: db 0x81, 0xc4, 0xdc, 0x04, 0x00, 0x00  ;; add esp,0x4dc
..@0x8055690: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055692: pop ebx
..@0x8055693: pop esi
..@0x8055694: pop edi
..@0x8055695: pop ebp
..@0x8055696: ret
..@0x8055697: and edx, strict byte 0x4
..@0x805569a: db 0x0f, 0x84, 0x40, 0x04, 0x00, 0x00  ;; jz near A.code+0x8055ae0
..@0x80556a0: db 0x80, 0x78, 0x54, 0x44  ;; cmp byte [eax+0x54],0x44
..@0x80556a4: db 0x0f, 0xb6, 0x50, 0x57  ;; movzx edx,byte [eax+0x57]
..@0x80556a8: db 0x0f, 0x85, 0x32, 0x04, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80556ae: db 0x80, 0x78, 0x55, 0x58  ;; cmp byte [eax+0x55],0x58
..@0x80556b2: db 0x0f, 0x85, 0x28, 0x04, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80556b8: db 0x80, 0x78, 0x56, 0x54  ;; cmp byte [eax+0x56],0x54
..@0x80556bc: db 0x0f, 0x85, 0x1e, 0x04, 0x00, 0x00  ;; jnz near A.code+0x8055ae0
..@0x80556c2: db 0x8d, 0x72, 0xd0  ;; lea esi,[edx-0x30]
..@0x80556c5: sub edx, strict byte 0x31
..@0x80556c8: cmp edx, strict byte 0x4
..@0x80556cb: db 0x89, 0x74, 0x24, 0x2c  ;; mov [esp+0x2c],esi
..@0x80556cf: db 0x0f, 0x87, 0x0b, 0x04, 0x00, 0x00  ;; ja near A.code+0x8055ae0
..@0x80556d5: sub eax, strict byte -0x80
..@0x80556d8: and esi, strict byte 0x1
..@0x80556db: db 0x89, 0x44, 0x24, 0x50  ;; mov [esp+0x50],eax
..@0x80556df: db 0x89, 0x74, 0x24, 0x44  ;; mov [esp+0x44],esi
..@0x80556e3: db 0x75, 0x2b  ;; jnz A.code+0x8055710
..@0x80556e5: db 0xb9, 0xff, 0x00, 0x00, 0x00  ;; mov ecx,0xff
..@0x80556ea: db 0xbb, 0x00, 0x00, 0xff, 0x00  ;; mov ebx,0xff0000
..@0x80556ef: nop
..@0x80556f0: db 0x89, 0xda  ;; mov edx,ebx
..@0x80556f2: db 0x89, 0xd8  ;; mov eax,ebx
..@0x80556f4: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x80556f7: db 0xf7, 0xf9  ;; idiv ecx
..@0x80556f9: db 0x89, 0x84, 0x8c, 0xd0, 0x00, 0x00, 0x00  ;; mov [esp+ecx*4+0xd0],eax
..@0x8055700: sub ecx, strict byte 0x1
..@0x8055703: db 0x75, 0xeb  ;; jnz A.code+0x80556f0
..@0x8055705: db 0xc7, 0x84, 0x24, 0xd0, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xd0],0x10000
..@0x805570d: db 0x00, 0x01, 0x00
..@0x8055710: db 0x8b, 0x7c, 0x24, 0x58  ;; mov edi,[esp+0x58]
..@0x8055714: db 0x8b, 0x44, 0x24, 0x58  ;; mov eax,[esp+0x58]
..@0x8055718: db 0x01, 0xff  ;; add edi,edi
..@0x805571a: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x805571d: db 0x83, 0x7c, 0x24, 0x2c, 0x01  ;; cmp dword [esp+0x2c],byte +0x1
..@0x8055722: db 0x0f, 0x44, 0xc7  ;; cmovz eax,edi
..@0x8055725: db 0x85, 0xed  ;; test ebp,ebp
..@0x8055727: db 0x89, 0x44, 0x24, 0x64  ;; mov [esp+0x64],eax
..@0x805572b: db 0x0f, 0x8e, 0x59, 0xff, 0xff, 0xff  ;; jng near A.code+0x805568a
..@0x8055731: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8055735: db 0x8d, 0x84, 0x24, 0xc8, 0x00, 0x00, 0x00  ;; lea eax,[esp+0xc8]
..@0x805573c: sub ebp, strict byte 0x1
..@0x805573f: db 0x8b, 0x8c, 0x24, 0xfc, 0x04, 0x00, 0x00  ;; mov ecx,[esp+0x4fc]
..@0x8055746: and ebp, strict byte -0x4
..@0x8055749: db 0x89, 0x44, 0x24, 0x20  ;; mov [esp+0x20],eax
..@0x805574d: db 0x8d, 0x94, 0x24, 0xd0, 0x00, 0x00, 0x00  ;; lea edx,[esp+0xd0]
..@0x8055754: db 0x89, 0x54, 0x24, 0x1c  ;; mov [esp+0x1c],edx
..@0x8055758: db 0xc1, 0xe6, 0x02  ;; shl esi,byte 0x2
..@0x805575b: db 0x89, 0x4c, 0x24, 0x3c  ;; mov [esp+0x3c],ecx
..@0x805575f: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8055763: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x8055767: db 0x0f, 0xaf, 0x4c, 0x24, 0x40  ;; imul ecx,[esp+0x40]
..@0x805576c: db 0x8d, 0x6c, 0x2f, 0x04  ;; lea ebp,[edi+ebp+0x4]
..@0x8055770: db 0x89, 0x4c, 0x24, 0x54  ;; mov [esp+0x54],ecx
..@0x8055774: db 0x89, 0x6c, 0x24, 0x6c  ;; mov [esp+0x6c],ebp
..@0x8055778: nop
..@0x8055779: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055780: db 0x8b, 0x44, 0x24, 0x58  ;; mov eax,[esp+0x58]
..@0x8055784: db 0x85, 0xc0  ;; test eax,eax
..@0x8055786: db 0x0f, 0x8e, 0x2c, 0x03, 0x00, 0x00  ;; jng near A.code+0x8055ab8
..@0x805578c: db 0x83, 0x7c, 0x24, 0x2c, 0x01  ;; cmp dword [esp+0x2c],byte +0x1
..@0x8055791: db 0xc7, 0x44, 0x24, 0x34, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x34],0x0
..@0x8055799: db 0x8b, 0xb4, 0x24, 0xf8, 0x04, 0x00, 0x00  ;; mov esi,[esp+0x4f8]
..@0x80557a0: db 0x0f, 0x95, 0x44, 0x24, 0x63  ;; setnz [esp+0x63]
..@0x80557a5: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x80557a9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80557b0: db 0x8b, 0x7c, 0x24, 0x50  ;; mov edi,[esp+0x50]
..@0x80557b4: db 0xc7, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xb0],0xff
..@0x80557bc: db 0x00, 0x00, 0x00
..@0x80557bf: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x80557c3: db 0xc7, 0x84, 0x24, 0xb4, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xb4],0xff
..@0x80557cb: db 0x00, 0x00, 0x00
..@0x80557ce: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x80557d2: db 0x83, 0x7c, 0x24, 0x2c, 0x01  ;; cmp dword [esp+0x2c],byte +0x1
..@0x80557d7: db 0x8d, 0x44, 0x97, 0x08  ;; lea eax,[edi+edx*4+0x8]
..@0x80557db: db 0x8d, 0x34, 0x77  ;; lea esi,[edi+esi*2]
..@0x80557de: db 0x0f, 0x44, 0xc6  ;; cmovz eax,esi
..@0x80557e1: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x80557e5: db 0x0f, 0xb7, 0x38  ;; movzx edi,word [eax]
..@0x80557e8: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x80557ec: db 0x8d, 0x2c, 0xfd, 0x00, 0x00, 0x00, 0x00  ;; lea ebp,[edi*8+0x0]
..@0x80557f3: db 0x89, 0xf9  ;; mov ecx,edi
..@0x80557f5: db 0x89, 0xf8  ;; mov eax,edi
..@0x80557f7: db 0x0f, 0xb7, 0x72, 0x02  ;; movzx esi,word [edx+0x2]
..@0x80557fb: db 0x81, 0xe5, 0xff, 0x00, 0x00, 0x00  ;; and ebp,0xff
..@0x8055801: db 0xc1, 0xf9, 0x08  ;; sar ecx,byte 0x8
..@0x8055804: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8055807: db 0x89, 0x6c, 0x24, 0x24  ;; mov [esp+0x24],ebp
..@0x805580b: db 0x81, 0xe1, 0xf8, 0x00, 0x00, 0x00  ;; and ecx,0xf8
..@0x8055811: db 0x89, 0xac, 0x24, 0xa0, 0x00, 0x00, 0x00  ;; mov [esp+0xa0],ebp
..@0x8055818: db 0x25, 0xfc, 0x00, 0x00, 0x00  ;; and eax,0xfc
..@0x805581d: db 0x89, 0x8c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],ecx
..@0x8055824: db 0x89, 0xf3  ;; mov ebx,esi
..@0x8055826: db 0x89, 0xf2  ;; mov edx,esi
..@0x8055828: db 0x89, 0x84, 0x24, 0x90, 0x00, 0x00, 0x00  ;; mov [esp+0x90],eax
..@0x805582f: db 0xc1, 0xfb, 0x08  ;; sar ebx,byte 0x8
..@0x8055832: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8055835: db 0x8d, 0x2c, 0xf5, 0x00, 0x00, 0x00, 0x00  ;; lea ebp,[esi*8+0x0]
..@0x805583c: db 0x81, 0xe3, 0xf8, 0x00, 0x00, 0x00  ;; and ebx,0xf8
..@0x8055842: db 0x81, 0xe2, 0xfc, 0x00, 0x00, 0x00  ;; and edx,0xfc
..@0x8055848: db 0x81, 0xe5, 0xff, 0x00, 0x00, 0x00  ;; and ebp,0xff
..@0x805584e: db 0x39, 0xf7  ;; cmp edi,esi
..@0x8055850: db 0x89, 0x9c, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],ebx
..@0x8055857: db 0x89, 0x94, 0x24, 0x94, 0x00, 0x00, 0x00  ;; mov [esp+0x94],edx
..@0x805585e: db 0x89, 0xac, 0x24, 0xa4, 0x00, 0x00, 0x00  ;; mov [esp+0xa4],ebp
..@0x8055865: db 0x7f, 0x0b  ;; jg A.code+0x8055872
..@0x8055867: db 0x80, 0x7c, 0x24, 0x63, 0x00  ;; cmp byte [esp+0x63],0x0
..@0x805586c: db 0x0f, 0x84, 0xde, 0x02, 0x00, 0x00  ;; jz near A.code+0x8055b50
..@0x8055872: db 0x8d, 0x74, 0x4b, 0x01  ;; lea esi,[ebx+ecx*2+0x1]
..@0x8055876: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x805587a: db 0xc7, 0x84, 0x24, 0xb8, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xb8],0xff
..@0x8055882: db 0x00, 0x00, 0x00
..@0x8055885: db 0x69, 0xf6, 0x55, 0x55, 0x00, 0x00  ;; imul esi,esi,dword 0x5555
..@0x805588b: db 0x8d, 0x4c, 0x59, 0x01  ;; lea ecx,[ecx+ebx*2+0x1]
..@0x805588f: db 0xc7, 0x84, 0x24, 0xbc, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xbc],0xff
..@0x8055897: db 0x00, 0x00, 0x00
..@0x805589a: db 0x69, 0xc9, 0x55, 0x55, 0x00, 0x00  ;; imul ecx,ecx,dword 0x5555
..@0x80558a0: db 0xc1, 0xee, 0x10  ;; shr esi,byte 0x10
..@0x80558a3: db 0x89, 0xb4, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov [esp+0x88],esi
..@0x80558aa: db 0x8d, 0x74, 0x42, 0x01  ;; lea esi,[edx+eax*2+0x1]
..@0x80558ae: db 0xc1, 0xe9, 0x10  ;; shr ecx,byte 0x10
..@0x80558b1: db 0x8d, 0x44, 0x50, 0x01  ;; lea eax,[eax+edx*2+0x1]
..@0x80558b5: db 0x69, 0xf6, 0x55, 0x55, 0x00, 0x00  ;; imul esi,esi,dword 0x5555
..@0x80558bb: db 0x89, 0x8c, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov [esp+0x8c],ecx
..@0x80558c2: db 0x69, 0xc0, 0x55, 0x55, 0x00, 0x00  ;; imul eax,eax,dword 0x5555
..@0x80558c8: db 0xc1, 0xee, 0x10  ;; shr esi,byte 0x10
..@0x80558cb: db 0xc1, 0xe8, 0x10  ;; shr eax,byte 0x10
..@0x80558ce: db 0x89, 0xb4, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov [esp+0x98],esi
..@0x80558d5: db 0x89, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00  ;; mov [esp+0x9c],eax
..@0x80558dc: db 0x8d, 0x44, 0x6f, 0x01  ;; lea eax,[edi+ebp*2+0x1]
..@0x80558e0: db 0x69, 0xc0, 0x55, 0x55, 0x00, 0x00  ;; imul eax,eax,dword 0x5555
..@0x80558e6: db 0x8d, 0x74, 0x7d, 0x01  ;; lea esi,[ebp+edi*2+0x1]
..@0x80558ea: db 0x69, 0xf6, 0x55, 0x55, 0x00, 0x00  ;; imul esi,esi,dword 0x5555
..@0x80558f0: db 0xc1, 0xe8, 0x10  ;; shr eax,byte 0x10
..@0x80558f3: db 0x89, 0x84, 0x24, 0xac, 0x00, 0x00, 0x00  ;; mov [esp+0xac],eax
..@0x80558fa: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80558fe: db 0xc1, 0xee, 0x10  ;; shr esi,byte 0x10
..@0x8055901: db 0x83, 0x7c, 0x24, 0x2c, 0x03  ;; cmp dword [esp+0x2c],byte +0x3
..@0x8055906: db 0x89, 0xb4, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; mov [esp+0xa8],esi
..@0x805590d: db 0x8b, 0x40, 0x04  ;; mov eax,[eax+0x4]
..@0x8055910: db 0x89, 0x44, 0x24, 0x38  ;; mov [esp+0x38],eax
..@0x8055914: db 0x7e, 0x75  ;; jng A.code+0x805598b
..@0x8055916: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x805591a: db 0x0f, 0xb6, 0x56, 0xf9  ;; movzx edx,byte [esi-0x7]
..@0x805591e: db 0x0f, 0xb6, 0x46, 0xf8  ;; movzx eax,byte [esi-0x8]
..@0x8055922: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8055924: db 0x89, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov [esp+0xb4],edx
..@0x805592b: db 0x29, 0xc3  ;; sub ebx,eax
..@0x805592d: db 0x89, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov [esp+0xb0],eax
..@0x8055934: db 0x0f, 0x88, 0x86, 0x02, 0x00, 0x00  ;; js near A.code+0x8055bc0
..@0x805593a: db 0x8d, 0x54, 0x82, 0x02  ;; lea edx,[edx+eax*4+0x2]
..@0x805593e: db 0x69, 0xdb, 0x33, 0x33, 0x00, 0x00  ;; imul ebx,ebx,dword 0x3333
..@0x8055944: db 0x69, 0xd2, 0x33, 0x33, 0x00, 0x00  ;; imul edx,edx,dword 0x3333
..@0x805594a: db 0x8d, 0x84, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; lea eax,[esp+0xb8]
..@0x8055951: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8055953: db 0x01, 0xda  ;; add edx,ebx
..@0x8055955: db 0xc1, 0xf9, 0x10  ;; sar ecx,byte 0x10
..@0x8055958: db 0x89, 0x08  ;; mov [eax],ecx
..@0x805595a: add eax, strict byte 0x4
..@0x805595d: db 0x3b, 0x44, 0x24, 0x20  ;; cmp eax,[esp+0x20]
..@0x8055961: db 0x75, 0xee  ;; jnz A.code+0x8055951
..@0x8055963: db 0xc7, 0x84, 0x24, 0xc8, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xc8],0x0
..@0x805596b: db 0x00, 0x00, 0x00
..@0x805596e: db 0xc7, 0x84, 0x24, 0xcc, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xcc],0xff
..@0x8055976: db 0x00, 0x00, 0x00
..@0x8055979: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x805597d: db 0x8b, 0x47, 0xfa  ;; mov eax,[edi-0x6]
..@0x8055980: db 0x89, 0x44, 0x24, 0x78  ;; mov [esp+0x78],eax
..@0x8055984: db 0x8b, 0x47, 0xfd  ;; mov eax,[edi-0x3]
..@0x8055987: db 0x89, 0x44, 0x24, 0x7c  ;; mov [esp+0x7c],eax
..@0x805598b: db 0x8b, 0x74, 0x24, 0x54  ;; mov esi,[esp+0x54]
..@0x805598f: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8055993: db 0x8b, 0x7c, 0x24, 0x5c  ;; mov edi,[esp+0x5c]
..@0x8055997: db 0x8d, 0x04, 0x96  ;; lea eax,[esi+edx*4]
..@0x805599a: db 0x31, 0xf6  ;; xor esi,esi
..@0x805599c: db 0x01, 0xc7  ;; add edi,eax
..@0x805599e: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x80559a2: db 0x01, 0xf0  ;; add eax,esi
..@0x80559a4: db 0x39, 0x84, 0x24, 0xf4, 0x04, 0x00, 0x00  ;; cmp [esp+0x4f4],eax
..@0x80559ab: db 0x0f, 0x86, 0xdf, 0x00, 0x00, 0x00  ;; jna near A.code+0x8055a90
..@0x80559b1: db 0x8d, 0x14, 0xb5, 0x00, 0x00, 0x00, 0x00  ;; lea edx,[esi*4+0x0]
..@0x80559b8: db 0x89, 0xf0  ;; mov eax,esi
..@0x80559ba: db 0x89, 0x74, 0x24, 0x48  ;; mov [esp+0x48],esi
..@0x80559be: db 0xd1, 0xf8  ;; sar eax,1
..@0x80559c0: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x80559c4: db 0x89, 0x44, 0x24, 0x4c  ;; mov [esp+0x4c],eax
..@0x80559c8: db 0x31, 0xc0  ;; xor eax,eax
..@0x80559ca: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x80559ce: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x80559d2: db 0x01, 0xc2  ;; add edx,eax
..@0x80559d4: db 0x01, 0xc3  ;; add ebx,eax
..@0x80559d6: db 0x39, 0x94, 0x24, 0xf0, 0x04, 0x00, 0x00  ;; cmp [esp+0x4f0],edx
..@0x80559dd: db 0x0f, 0x86, 0x9d, 0x00, 0x00, 0x00  ;; jna near A.code+0x8055a80
..@0x80559e3: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x80559e7: db 0x8d, 0x0c, 0x1b  ;; lea ecx,[ebx+ebx]
..@0x80559ea: db 0xd3, 0xfa  ;; sar edx,cl
..@0x80559ec: and edx, strict byte 0x3
..@0x80559ef: db 0x83, 0x7c, 0x24, 0x2c, 0x02  ;; cmp dword [esp+0x2c],byte +0x2
..@0x80559f4: db 0x0f, 0x8d, 0xf6, 0x00, 0x00, 0x00  ;; jnl near A.code+0x8055af0
..@0x80559fa: db 0x8b, 0xb4, 0x94, 0xb0, 0x00, 0x00, 0x00  ;; mov esi,[esp+edx*4+0xb0]
..@0x8055a01: db 0x8b, 0x8c, 0x94, 0x80, 0x00, 0x00, 0x00  ;; mov ecx,[esp+edx*4+0x80]
..@0x8055a08: db 0x8b, 0x9c, 0x94, 0x90, 0x00, 0x00, 0x00  ;; mov ebx,[esp+edx*4+0x90]
..@0x8055a0f: db 0x8b, 0xac, 0x94, 0xa0, 0x00, 0x00, 0x00  ;; mov ebp,[esp+edx*4+0xa0]
..@0x8055a16: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8055a1a: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x8055a1e: db 0x85, 0xd2  ;; test edx,edx
..@0x8055a20: db 0x75, 0x3f  ;; jnz A.code+0x8055a61
..@0x8055a22: db 0x8b, 0x8c, 0xb4, 0xd0, 0x00, 0x00, 0x00  ;; mov ecx,[esp+esi*4+0xd0]
..@0x8055a29: db 0xba, 0xff, 0x00, 0x00, 0x00  ;; mov edx,0xff
..@0x8055a2e: db 0x0f, 0xaf, 0xe9  ;; imul ebp,ecx
..@0x8055a31: db 0xc1, 0xed, 0x10  ;; shr ebp,byte 0x10
..@0x8055a34: db 0x81, 0xfd, 0xff, 0x00, 0x00, 0x00  ;; cmp ebp,0xff
..@0x8055a3a: db 0x0f, 0x47, 0xea  ;; cmova ebp,edx
..@0x8055a3d: db 0x0f, 0xaf, 0xd9  ;; imul ebx,ecx
..@0x8055a40: db 0xc1, 0xeb, 0x10  ;; shr ebx,byte 0x10
..@0x8055a43: db 0x81, 0xfb, 0xff, 0x00, 0x00, 0x00  ;; cmp ebx,0xff
..@0x8055a49: db 0x0f, 0x47, 0xda  ;; cmova ebx,edx
..@0x8055a4c: db 0x0f, 0xaf, 0x4c, 0x24, 0x10  ;; imul ecx,[esp+0x10]
..@0x8055a51: db 0xc1, 0xe9, 0x10  ;; shr ecx,byte 0x10
..@0x8055a54: db 0x81, 0xf9, 0xff, 0x00, 0x00, 0x00  ;; cmp ecx,0xff
..@0x8055a5a: db 0x0f, 0x46, 0xd1  ;; cmovna edx,ecx
..@0x8055a5d: db 0x89, 0x54, 0x24, 0x10  ;; mov [esp+0x10],edx
..@0x8055a61: db 0x8d, 0x14, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea edx,[eax*4+0x0]
..@0x8055a68: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8055a6a: db 0x88, 0x0c, 0x87  ;; mov [edi+eax*4],cl
..@0x8055a6d: db 0x0f, 0xb6, 0x4c, 0x24, 0x10  ;; movzx ecx,byte [esp+0x10]
..@0x8055a72: db 0x88, 0x5c, 0x17, 0x01  ;; mov [edi+edx+0x1],bl
..@0x8055a76: db 0x88, 0x4c, 0x17, 0x02  ;; mov [edi+edx+0x2],cl
..@0x8055a7a: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8055a7c: db 0x88, 0x4c, 0x17, 0x03  ;; mov [edi+edx+0x3],cl
..@0x8055a80: add eax, strict byte 0x1
..@0x8055a83: cmp eax, strict byte 0x4
..@0x8055a86: db 0x0f, 0x85, 0x3e, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80559ca
..@0x8055a8c: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x8055a90: add esi, strict byte 0x1
..@0x8055a93: db 0x03, 0x7c, 0x24, 0x40  ;; add edi,[esp+0x40]
..@0x8055a97: cmp esi, strict byte 0x4
..@0x8055a9a: db 0x0f, 0x85, 0xfe, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x805599e
..@0x8055aa0: db 0x83, 0x44, 0x24, 0x34, 0x04  ;; add dword [esp+0x34],byte +0x4
..@0x8055aa5: db 0x83, 0x44, 0x24, 0x28, 0x04  ;; add dword [esp+0x28],byte +0x4
..@0x8055aaa: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x8055aae: db 0x39, 0x74, 0x24, 0x58  ;; cmp [esp+0x58],esi
..@0x8055ab2: db 0x0f, 0x8f, 0xf8, 0xfc, 0xff, 0xff  ;; jg near A.code+0x80557b0
..@0x8055ab8: db 0x8b, 0x7c, 0x24, 0x64  ;; mov edi,[esp+0x64]
..@0x8055abc: db 0x83, 0x44, 0x24, 0x3c, 0x04  ;; add dword [esp+0x3c],byte +0x4
..@0x8055ac1: db 0x8b, 0x44, 0x24, 0x68  ;; mov eax,[esp+0x68]
..@0x8055ac5: db 0x8b, 0x54, 0x24, 0x6c  ;; mov edx,[esp+0x6c]
..@0x8055ac9: db 0x01, 0x7c, 0x24, 0x50  ;; add [esp+0x50],edi
..@0x8055acd: db 0x01, 0x44, 0x24, 0x54  ;; add [esp+0x54],eax
..@0x8055ad1: db 0x39, 0x54, 0x24, 0x3c  ;; cmp [esp+0x3c],edx
..@0x8055ad5: db 0x0f, 0x85, 0xa5, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x8055780
..@0x8055adb: jmp strict near R.code+0x805568a
..@0x8055ae0: db 0x81, 0xc4, 0xdc, 0x04, 0x00, 0x00  ;; add esp,0x4dc
..@0x8055ae6: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8055aeb: pop ebx
..@0x8055aec: pop esi
..@0x8055aed: pop edi
..@0x8055aee: pop ebp
..@0x8055aef: ret
..@0x8055af0: db 0x83, 0x7c, 0x24, 0x2c, 0x03  ;; cmp dword [esp+0x2c],byte +0x3
..@0x8055af5: db 0x7e, 0x31  ;; jng A.code+0x8055b28
..@0x8055af7: db 0x83, 0x7c, 0x24, 0x2c, 0x05  ;; cmp dword [esp+0x2c],byte +0x5
..@0x8055afc: db 0x0f, 0x8f, 0xf8, 0xfe, 0xff, 0xff  ;; jg near A.code+0x80559fa
..@0x8055b02: db 0x8b, 0x74, 0x24, 0x4c  ;; mov esi,[esp+0x4c]
..@0x8055b06: and ebx, strict byte 0x7
..@0x8055b09: db 0x8d, 0x0c, 0x5b  ;; lea ecx,[ebx+ebx*2]
..@0x8055b0c: db 0x8b, 0x5c, 0xb4, 0x78  ;; mov ebx,[esp+esi*4+0x78]
..@0x8055b10: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8055b12: and ebx, strict byte 0x7
..@0x8055b15: db 0x8b, 0xb4, 0x9c, 0xb0, 0x00, 0x00, 0x00  ;; mov esi,[esp+ebx*4+0xb0]
..@0x8055b1c: jmp strict near R.code+0x8055a01
..@0x8055b21: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055b28: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x8055b2c: db 0xd1, 0xfb  ;; sar ebx,1
..@0x8055b2e: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8055b30: and ecx, strict byte 0x1
..@0x8055b33: db 0xc1, 0xe1, 0x02  ;; shl ecx,byte 0x2
..@0x8055b36: db 0x0f, 0xb6, 0x5c, 0x1e, 0xf8  ;; movzx ebx,byte [esi+ebx-0x8]
..@0x8055b3b: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8055b3d: and ebx, strict byte 0xf
..@0x8055b40: db 0x89, 0xde  ;; mov esi,ebx
..@0x8055b42: db 0xc1, 0xe6, 0x04  ;; shl esi,byte 0x4
..@0x8055b45: db 0x01, 0xde  ;; add esi,ebx
..@0x8055b47: jmp strict near R.code+0x8055a01
..@0x8055b4c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055b50: db 0x01, 0xd0  ;; add eax,edx
..@0x8055b52: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8055b56: db 0x01, 0xd9  ;; add ecx,ebx
..@0x8055b58: db 0x03, 0x6c, 0x24, 0x24  ;; add ebp,[esp+0x24]
..@0x8055b5c: db 0xd1, 0xe9  ;; shr ecx,1
..@0x8055b5e: db 0xd1, 0xe8  ;; shr eax,1
..@0x8055b60: db 0x89, 0x8c, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov [esp+0x88],ecx
..@0x8055b67: db 0x89, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00  ;; mov [esp+0x98],eax
..@0x8055b6e: db 0xc7, 0x84, 0x24, 0xb8, 0x00, 0x00, 0x00, 0xff  ;; mov dword [esp+0xb8],0xff
..@0x8055b76: db 0x00, 0x00, 0x00
..@0x8055b79: db 0x8b, 0x52, 0x04  ;; mov edx,[edx+0x4]
..@0x8055b7c: db 0xc7, 0x84, 0x24, 0xbc, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xbc],0x0
..@0x8055b84: db 0x00, 0x00, 0x00
..@0x8055b87: db 0xd1, 0xed  ;; shr ebp,1
..@0x8055b89: db 0x89, 0xac, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; mov [esp+0xa8],ebp
..@0x8055b90: db 0xc7, 0x84, 0x24, 0xac, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0xac],0x0
..@0x8055b98: db 0x00, 0x00, 0x00
..@0x8055b9b: db 0xc7, 0x84, 0x24, 0x9c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x9c],0x0
..@0x8055ba3: db 0x00, 0x00, 0x00
..@0x8055ba6: db 0xc7, 0x84, 0x24, 0x8c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8c],0x0
..@0x8055bae: db 0x00, 0x00, 0x00
..@0x8055bb1: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8055bb5: jmp strict near R.code+0x805598b
..@0x8055bba: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055bc0: db 0x8d, 0x04, 0x40  ;; lea eax,[eax+eax*2]
..@0x8055bc3: db 0x69, 0xcb, 0x92, 0x24, 0x00, 0x00  ;; imul ecx,ebx,dword 0x2492
..@0x8055bc9: db 0x8d, 0x54, 0x42, 0x03  ;; lea edx,[edx+eax*2+0x3]
..@0x8055bcd: db 0x69, 0xd2, 0x92, 0x24, 0x00, 0x00  ;; imul edx,edx,dword 0x2492
..@0x8055bd3: db 0x8d, 0x84, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; lea eax,[esp+0xb8]
..@0x8055bda: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055be0: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8055be2: db 0x01, 0xca  ;; add edx,ecx
..@0x8055be4: db 0xc1, 0xfb, 0x10  ;; sar ebx,byte 0x10
..@0x8055be7: db 0x89, 0x18  ;; mov [eax],ebx
..@0x8055be9: add eax, strict byte 0x4
..@0x8055bec: db 0x3b, 0x44, 0x24, 0x1c  ;; cmp eax,[esp+0x1c]
..@0x8055bf0: db 0x75, 0xee  ;; jnz A.code+0x8055be0
..@0x8055bf2: jmp strict near R.code+0x8055979
..@0x8055bf7: db 0x29, 0xc3  ;; sub ebx,eax
..@0x8055bf9: db 0x29, 0xc6  ;; sub esi,eax
..@0x8055bfb: db 0x8b, 0x84, 0x24, 0xf8, 0x04, 0x00, 0x00  ;; mov eax,[esp+0x4f8]
..@0x8055c02: db 0x01, 0x44, 0x24, 0x58  ;; add [esp+0x58],eax
..@0x8055c06: jmp strict near R.code+0x80555fc
..@0x8055c0b: nop
..@0x8055c0c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055c10: push ebp
..@0x8055c11: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8055c13: push edi
..@0x8055c14: db 0x89, 0xd7  ;; mov edi,edx
..@0x8055c16: push esi
..@0x8055c17: db 0x31, 0xf6  ;; xor esi,esi
..@0x8055c19: push ebx
..@0x8055c1a: sub esp, strict byte 0x1c
..@0x8055c1d: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8055c21: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055c28: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8055c2d: db 0x01, 0xed  ;; add ebp,ebp
..@0x8055c2f: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x8055c35: db 0x89, 0xc2  ;; mov edx,eax
..@0x8055c37: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8055c39: add eax, strict byte 0x1
..@0x8055c3c: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8055c3f: and ecx, strict byte 0x7
..@0x8055c42: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8055c47: db 0x8b, 0x1c, 0x13  ;; mov ebx,[ebx+edx]
..@0x8055c4a: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8055c4c: and ebx, strict byte 0x1
..@0x8055c4f: db 0x85, 0xc0  ;; test eax,eax
..@0x8055c51: db 0x78, 0x05  ;; js A.code+0x8055c58
..@0x8055c53: call R.code+0x8052cd0
..@0x8055c58: db 0x01, 0xdd  ;; add ebp,ebx
..@0x8055c5a: db 0x03, 0x2c, 0xb7  ;; add ebp,[edi+esi*4]
..@0x8055c5d: db 0x2b, 0x6c, 0xb7, 0x04  ;; sub ebp,[edi+esi*4+0x4]
..@0x8055c61: add esi, strict byte 0x1
..@0x8055c64: db 0x85, 0xed  ;; test ebp,ebp
..@0x8055c66: db 0x79, 0xc0  ;; jns A.code+0x8055c28
..@0x8055c68: db 0x03, 0x2c, 0xb7  ;; add ebp,[edi+esi*4]
..@0x8055c6b: db 0x8b, 0x54, 0x24, 0x0c  ;; mov edx,[esp+0xc]
..@0x8055c6f: db 0x8b, 0x04, 0xaa  ;; mov eax,[edx+ebp*4]
..@0x8055c72: add esp, strict byte 0x1c
..@0x8055c75: pop ebx
..@0x8055c76: pop esi
..@0x8055c77: pop edi
..@0x8055c78: pop ebp
..@0x8055c79: ret
..@0x8055c7a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055c80: sub esp, strict byte 0x10
..@0x8055c83: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8055c87: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8055c8a: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8055c8e: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x8055c92: db 0x89, 0x7c, 0x24, 0x08  ;; mov [esp+0x8],edi
..@0x8055c96: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8055c9a: db 0x89, 0x6c, 0x24, 0x0c  ;; mov [esp+0xc],ebp
..@0x8055c9e: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x8055ca4: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055ca6: db 0x83, 0x7c, 0x24, 0x18, 0x0f  ;; cmp dword [esp+0x18],byte +0xf
..@0x8055cab: db 0xc7, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebx],0x0
..@0x8055cb1: db 0x7e, 0x3d  ;; jng A.code+0x8055cf0
..@0x8055cb3: db 0x0f, 0xb6, 0x0a  ;; movzx ecx,byte [edx]
..@0x8055cb6: db 0x80, 0xf9, 0x89  ;; cmp cl,0x89
..@0x8055cb9: db 0x74, 0x4d  ;; jz A.code+0x8055d08
..@0x8055cbb: db 0x80, 0xf9, 0xff  ;; cmp cl,0xff
..@0x8055cbe: db 0x0f, 0x84, 0x3c, 0x01, 0x00, 0x00  ;; jz near A.code+0x8055e00
..@0x8055cc4: db 0x80, 0xf9, 0x47  ;; cmp cl,0x47
..@0x8055cc7: db 0x0f, 0x85, 0xbb, 0x00, 0x00, 0x00  ;; jnz near A.code+0x8055d88
..@0x8055ccd: db 0x80, 0x7a, 0x01, 0x49  ;; cmp byte [edx+0x1],0x49
..@0x8055cd1: db 0x75, 0x3f  ;; jnz A.code+0x8055d12
..@0x8055cd3: db 0x80, 0x7a, 0x02, 0x46  ;; cmp byte [edx+0x2],0x46
..@0x8055cd7: db 0x75, 0x39  ;; jnz A.code+0x8055d12
..@0x8055cd9: db 0x0f, 0xb7, 0x42, 0x06  ;; movzx eax,word [edx+0x6]
..@0x8055cdd: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055cdf: db 0x0f, 0xb7, 0x42, 0x08  ;; movzx eax,word [edx+0x8]
..@0x8055ce3: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8055ce7: db 0x89, 0x02  ;; mov [edx],eax
..@0x8055ce9: db 0xb8, 0x03, 0x00, 0x00, 0x00  ;; mov eax,0x3
..@0x8055cee: dw 0x9066  ;; o16 nop
..@0x8055cf0: db 0x8b, 0x1c, 0x24  ;; mov ebx,[esp]
..@0x8055cf3: db 0x8b, 0x74, 0x24, 0x04  ;; mov esi,[esp+0x4]
..@0x8055cf7: db 0x8b, 0x7c, 0x24, 0x08  ;; mov edi,[esp+0x8]
..@0x8055cfb: db 0x8b, 0x6c, 0x24, 0x0c  ;; mov ebp,[esp+0xc]
..@0x8055cff: add esp, strict byte 0x10
..@0x8055d02: ret
..@0x8055d03: nop
..@0x8055d04: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055d08: db 0x80, 0x7a, 0x01, 0x50  ;; cmp byte [edx+0x1],0x50
..@0x8055d0c: db 0x0f, 0x84, 0x7e, 0x01, 0x00, 0x00  ;; jz near A.code+0x8055e90
..@0x8055d12: db 0x8b, 0x02  ;; mov eax,[edx]
..@0x8055d14: db 0x3d, 0x0a, 0x05, 0x01, 0x08  ;; cmp eax,0x801050a
..@0x8055d19: db 0x0f, 0x84, 0xb1, 0x00, 0x00, 0x00  ;; jz near A.code+0x8055dd0
..@0x8055d1f: db 0x3d, 0x44, 0x44, 0x53, 0x20  ;; cmp eax,0x20534444
..@0x8055d24: db 0x0f, 0x84, 0x0e, 0x01, 0x00, 0x00  ;; jz near A.code+0x8055e38
..@0x8055d2a: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055d2c: db 0x83, 0x7c, 0x24, 0x18, 0x12  ;; cmp dword [esp+0x18],byte +0x12
..@0x8055d31: db 0x7e, 0xbd  ;; jng A.code+0x8055cf0
..@0x8055d33: db 0xf6, 0x42, 0x01, 0xfe  ;; test byte [edx+0x1],0xfe
..@0x8055d37: db 0x75, 0xb7  ;; jnz A.code+0x8055cf0
..@0x8055d39: db 0x0f, 0xb6, 0x72, 0x02  ;; movzx esi,byte [edx+0x2]
..@0x8055d3d: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8055d3f: db 0x80, 0xf9, 0x0b  ;; cmp cl,0xb
..@0x8055d42: db 0x77, 0xac  ;; ja A.code+0x8055cf0
..@0x8055d44: db 0xbf, 0x0e, 0x0e, 0x00, 0x00  ;; mov edi,0xe0e
..@0x8055d49: db 0x0f, 0xa3, 0xf7  ;; bt edi,esi
..@0x8055d4c: db 0x73, 0xa2  ;; jnc A.code+0x8055cf0
..@0x8055d4e: db 0x0f, 0xb6, 0x72, 0x10  ;; movzx esi,byte [edx+0x10]
..@0x8055d52: db 0xf7, 0xc6, 0x07, 0x00, 0x00, 0x00  ;; test esi,0x7
..@0x8055d58: db 0x75, 0x96  ;; jnz A.code+0x8055cf0
..@0x8055d5a: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8055d5c: db 0x84, 0xc9  ;; test cl,cl
..@0x8055d5e: db 0x74, 0x90  ;; jz A.code+0x8055cf0
..@0x8055d60: db 0x80, 0xf9, 0x20  ;; cmp cl,0x20
..@0x8055d63: db 0x77, 0x8b  ;; ja A.code+0x8055cf0
..@0x8055d65: db 0xf6, 0x42, 0x11, 0xc0  ;; test byte [edx+0x11],0xc0
..@0x8055d69: db 0x75, 0x85  ;; jnz A.code+0x8055cf0
..@0x8055d6b: db 0x0f, 0xb7, 0x42, 0x0c  ;; movzx eax,word [edx+0xc]
..@0x8055d6f: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055d71: db 0x0f, 0xb7, 0x42, 0x0e  ;; movzx eax,word [edx+0xe]
..@0x8055d75: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8055d79: db 0x89, 0x02  ;; mov [edx],eax
..@0x8055d7b: db 0xb8, 0x08, 0x00, 0x00, 0x00  ;; mov eax,0x8
..@0x8055d80: jmp strict near R.code+0x8055cf0
..@0x8055d85: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8055d88: db 0x80, 0xf9, 0x19  ;; cmp cl,0x19
..@0x8055d8b: db 0x0f, 0x85, 0x08, 0x02, 0x00, 0x00  ;; jnz near A.code+0x8055f99
..@0x8055d91: db 0x80, 0x7a, 0x01, 0x91  ;; cmp byte [edx+0x1],0x91
..@0x8055d95: db 0x0f, 0x85, 0x77, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055d9b: db 0x80, 0x7a, 0x0a, 0x08  ;; cmp byte [edx+0xa],0x8
..@0x8055d9f: db 0x0f, 0x85, 0x6d, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055da5: db 0x80, 0x7a, 0x0b, 0x00  ;; cmp byte [edx+0xb],0x0
..@0x8055da9: db 0x0f, 0x85, 0x63, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055daf: db 0x0f, 0xb7, 0x42, 0x02  ;; movzx eax,word [edx+0x2]
..@0x8055db3: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x8055db7: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055db9: db 0x0f, 0xb7, 0x42, 0x04  ;; movzx eax,word [edx+0x4]
..@0x8055dbd: db 0x89, 0x01  ;; mov [ecx],eax
..@0x8055dbf: db 0xb8, 0x04, 0x00, 0x00, 0x00  ;; mov eax,0x4
..@0x8055dc4: jmp strict near R.code+0x8055cf0
..@0x8055dc9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055dd0: db 0x0f, 0xbf, 0x42, 0x08  ;; movsx eax,word [edx+0x8]
..@0x8055dd4: db 0x0f, 0xbf, 0x72, 0x04  ;; movsx esi,word [edx+0x4]
..@0x8055dd8: db 0x29, 0xf0  ;; sub eax,esi
..@0x8055dda: add eax, strict byte 0x1
..@0x8055ddd: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055ddf: db 0x0f, 0xbf, 0x42, 0x0a  ;; movsx eax,word [edx+0xa]
..@0x8055de3: db 0x0f, 0xbf, 0x52, 0x06  ;; movsx edx,word [edx+0x6]
..@0x8055de7: db 0x29, 0xd0  ;; sub eax,edx
..@0x8055de9: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8055ded: add eax, strict byte 0x1
..@0x8055df0: db 0x89, 0x02  ;; mov [edx],eax
..@0x8055df2: db 0xb8, 0x06, 0x00, 0x00, 0x00  ;; mov eax,0x6
..@0x8055df7: jmp strict near R.code+0x8055cf0
..@0x8055dfc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055e00: db 0x80, 0x7a, 0x01, 0xd8  ;; cmp byte [edx+0x1],0xd8
..@0x8055e04: db 0x0f, 0x85, 0x08, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055e0a: db 0x8b, 0x7c, 0x24, 0x18  ;; mov edi,[esp+0x18]
..@0x8055e0e: db 0x8d, 0x42, 0x02  ;; lea eax,[edx+0x2]
..@0x8055e11: sub edi, strict byte 0x8
..@0x8055e14: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8055e16: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8055e18: db 0x39, 0xf9  ;; cmp ecx,edi
..@0x8055e1a: db 0x73, 0x10  ;; jnc A.code+0x8055e2c
..@0x8055e1c: db 0x80, 0x38, 0xff  ;; cmp byte [eax],0xff
..@0x8055e1f: db 0x74, 0x3f  ;; jz A.code+0x8055e60
..@0x8055e21: add eax, strict byte 0x1
..@0x8055e24: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8055e26: db 0x29, 0xd1  ;; sub ecx,edx
..@0x8055e28: db 0x39, 0xf9  ;; cmp ecx,edi
..@0x8055e2a: db 0x72, 0xf0  ;; jc A.code+0x8055e1c
..@0x8055e2c: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055e2e: jmp strict near R.code+0x8055cf0
..@0x8055e33: nop
..@0x8055e34: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8055e38: db 0x83, 0x7a, 0x04, 0x7c  ;; cmp dword [edx+0x4],byte +0x7c
..@0x8055e3c: db 0x0f, 0x85, 0xe8, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8055d2a
..@0x8055e42: db 0x8b, 0x42, 0x10  ;; mov eax,[edx+0x10]
..@0x8055e45: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x8055e49: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055e4b: db 0x8b, 0x42, 0x0c  ;; mov eax,[edx+0xc]
..@0x8055e4e: db 0x89, 0x01  ;; mov [ecx],eax
..@0x8055e50: db 0xb8, 0x07, 0x00, 0x00, 0x00  ;; mov eax,0x7
..@0x8055e55: jmp strict near R.code+0x8055cf0
..@0x8055e5a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055e60: db 0x0f, 0xb6, 0x48, 0x01  ;; movzx ecx,byte [eax+0x1]
..@0x8055e64: db 0x80, 0xf9, 0xff  ;; cmp cl,0xff
..@0x8055e67: db 0x74, 0xb8  ;; jz A.code+0x8055e21
..@0x8055e69: db 0x81, 0xe9, 0xc0, 0x00, 0x00, 0x00  ;; sub ecx,0xc0
..@0x8055e6f: cmp ecx, strict byte 0x2
..@0x8055e72: db 0x0f, 0x86, 0x9b, 0x00, 0x00, 0x00  ;; jna near A.code+0x8055f13
..@0x8055e78: db 0x0f, 0xb7, 0x48, 0x02  ;; movzx ecx,word [eax+0x2]
..@0x8055e7c: db 0x66, 0xc1, 0xc9, 0x08  ;; ror cx,byte 0x8
..@0x8055e80: db 0x0f, 0xb7, 0xc9  ;; movzx ecx,cx
..@0x8055e83: db 0x8d, 0x44, 0x08, 0x02  ;; lea eax,[eax+ecx+0x2]
..@0x8055e87: db 0xeb, 0x8b  ;; jmp short A.code+0x8055e14
..@0x8055e89: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055e90: db 0x81, 0x3a, 0x89, 0x50, 0x4e, 0x47  ;; cmp dword [edx],0x474e5089
..@0x8055e96: db 0x0f, 0x85, 0x54, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8055cf0
..@0x8055e9c: db 0x81, 0x7a, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [edx+0x4],0xa1a0a0d
..@0x8055ea3: db 0x0f, 0x85, 0x47, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8055cf0
..@0x8055ea9: db 0x8b, 0x4c, 0x24, 0x18  ;; mov ecx,[esp+0x18]
..@0x8055ead: db 0x8d, 0x7a, 0x08  ;; lea edi,[edx+0x8]
..@0x8055eb0: db 0x89, 0xfe  ;; mov esi,edi
..@0x8055eb2: sub ecx, strict byte 0x10
..@0x8055eb5: cmp ecx, strict byte 0x8
..@0x8055eb8: db 0x0f, 0x86, 0x32, 0xfe, 0xff, 0xff  ;; jna near A.code+0x8055cf0
..@0x8055ebe: db 0x81, 0x7a, 0x0c, 0x49, 0x48, 0x44, 0x52  ;; cmp dword [edx+0xc],0x52444849
..@0x8055ec5: db 0x75, 0x12  ;; jnz A.code+0x8055ed9
..@0x8055ec7: db 0xeb, 0x72  ;; jmp short A.code+0x8055f3b
..@0x8055ec9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055ed0: db 0x81, 0x7e, 0x04, 0x49, 0x48, 0x44, 0x52  ;; cmp dword [esi+0x4],0x52444849
..@0x8055ed7: db 0x74, 0x62  ;; jz A.code+0x8055f3b
..@0x8055ed9: db 0x8b, 0x07  ;; mov eax,[edi]
..@0x8055edb: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8055edd: db 0x89, 0xc7  ;; mov edi,eax
..@0x8055edf: db 0xc1, 0xef, 0x18  ;; shr edi,byte 0x18
..@0x8055ee2: db 0xc1, 0xe5, 0x18  ;; shl ebp,byte 0x18
..@0x8055ee5: db 0x8d, 0x6c, 0x3d, 0x0c  ;; lea ebp,[ebp+edi+0xc]
..@0x8055ee9: db 0x89, 0xc7  ;; mov edi,eax
..@0x8055eeb: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8055ef0: db 0xc1, 0xef, 0x08  ;; shr edi,byte 0x8
..@0x8055ef3: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8055ef6: db 0x81, 0xe7, 0x00, 0xff, 0x00, 0x00  ;; and edi,0xff00
..@0x8055efc: db 0x01, 0xef  ;; add edi,ebp
..@0x8055efe: db 0x01, 0xf8  ;; add eax,edi
..@0x8055f00: db 0x01, 0xc6  ;; add esi,eax
..@0x8055f02: db 0x89, 0xf0  ;; mov eax,esi
..@0x8055f04: db 0x89, 0xf7  ;; mov edi,esi
..@0x8055f06: db 0x29, 0xd0  ;; sub eax,edx
..@0x8055f08: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8055f0a: db 0x72, 0xc4  ;; jc A.code+0x8055ed0
..@0x8055f0c: db 0x31, 0xc0  ;; xor eax,eax
..@0x8055f0e: jmp strict near R.code+0x8055cf0
..@0x8055f13: db 0x0f, 0xb7, 0x50, 0x05  ;; movzx edx,word [eax+0x5]
..@0x8055f17: db 0x0f, 0xb7, 0x40, 0x07  ;; movzx eax,word [eax+0x7]
..@0x8055f1b: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x8055f1f: db 0x66, 0xc1, 0xca, 0x08  ;; ror dx,byte 0x8
..@0x8055f23: db 0x66, 0xc1, 0xc8, 0x08  ;; ror ax,byte 0x8
..@0x8055f27: db 0x0f, 0xb7, 0xd2  ;; movzx edx,dx
..@0x8055f2a: db 0x0f, 0xb7, 0xc0  ;; movzx eax,ax
..@0x8055f2d: db 0x89, 0x11  ;; mov [ecx],edx
..@0x8055f2f: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055f31: db 0xb8, 0x02, 0x00, 0x00, 0x00  ;; mov eax,0x2
..@0x8055f36: jmp strict near R.code+0x8055cf0
..@0x8055f3b: db 0x8b, 0x47, 0x08  ;; mov eax,[edi+0x8]
..@0x8055f3e: db 0x89, 0xc6  ;; mov esi,eax
..@0x8055f40: db 0x89, 0xc2  ;; mov edx,eax
..@0x8055f42: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8055f45: db 0xc1, 0xee, 0x18  ;; shr esi,byte 0x18
..@0x8055f48: db 0x01, 0xd6  ;; add esi,edx
..@0x8055f4a: db 0x89, 0xc2  ;; mov edx,eax
..@0x8055f4c: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8055f51: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8055f54: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8055f57: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8055f5d: db 0x01, 0xf2  ;; add edx,esi
..@0x8055f5f: db 0x01, 0xd0  ;; add eax,edx
..@0x8055f61: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8055f63: db 0x8b, 0x47, 0x0c  ;; mov eax,[edi+0xc]
..@0x8055f66: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8055f68: db 0x89, 0xc2  ;; mov edx,eax
..@0x8055f6a: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8055f6d: db 0xc1, 0xeb, 0x18  ;; shr ebx,byte 0x18
..@0x8055f70: db 0x01, 0xd3  ;; add ebx,edx
..@0x8055f72: db 0x89, 0xc2  ;; mov edx,eax
..@0x8055f74: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8055f79: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8055f7c: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8055f7f: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8055f85: db 0x01, 0xda  ;; add edx,ebx
..@0x8055f87: db 0x01, 0xd0  ;; add eax,edx
..@0x8055f89: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8055f8d: db 0x89, 0x02  ;; mov [edx],eax
..@0x8055f8f: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8055f94: jmp strict near R.code+0x8055cf0
..@0x8055f99: db 0x80, 0xf9, 0x42  ;; cmp cl,0x42
..@0x8055f9c: db 0x0f, 0x85, 0x70, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055fa2: db 0x80, 0x7a, 0x01, 0x4d  ;; cmp byte [edx+0x1],0x4d
..@0x8055fa6: db 0x0f, 0x85, 0x66, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8055d12
..@0x8055fac: db 0x83, 0x7a, 0x0e, 0x0c  ;; cmp dword [edx+0xe],byte +0xc
..@0x8055fb0: db 0x74, 0x3e  ;; jz A.code+0x8055ff0
..@0x8055fb2: db 0x66, 0x83, 0x7a, 0x1a, 0x01  ;; cmp word [edx+0x1a],byte +0x1
..@0x8055fb7: db 0x0f, 0x85, 0x33, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8055cf0
..@0x8055fbd: db 0x8b, 0x42, 0x12  ;; mov eax,[edx+0x12]
..@0x8055fc0: db 0x8b, 0x72, 0x12  ;; mov esi,[edx+0x12]
..@0x8055fc3: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x8055fc7: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x8055fca: db 0x31, 0xc6  ;; xor esi,eax
..@0x8055fcc: db 0x89, 0x33  ;; mov [ebx],esi
..@0x8055fce: db 0x29, 0x03  ;; sub [ebx],eax
..@0x8055fd0: db 0x8b, 0x42, 0x16  ;; mov eax,[edx+0x16]
..@0x8055fd3: db 0x8b, 0x52, 0x16  ;; mov edx,[edx+0x16]
..@0x8055fd6: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x8055fd9: db 0x31, 0xc2  ;; xor edx,eax
..@0x8055fdb: db 0x89, 0x11  ;; mov [ecx],edx
..@0x8055fdd: db 0x29, 0x01  ;; sub [ecx],eax
..@0x8055fdf: db 0xb8, 0x05, 0x00, 0x00, 0x00  ;; mov eax,0x5
..@0x8055fe4: jmp strict near R.code+0x8055cf0
..@0x8055fe9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8055ff0: db 0x66, 0x83, 0x7a, 0x16, 0x01  ;; cmp word [edx+0x16],byte +0x1
..@0x8055ff5: db 0x0f, 0x85, 0xf5, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x8055cf0
..@0x8055ffb: db 0x0f, 0xb7, 0x42, 0x12  ;; movzx eax,word [edx+0x12]
..@0x8055fff: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8056001: db 0x0f, 0xb7, 0x42, 0x14  ;; movzx eax,word [edx+0x14]
..@0x8056005: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8056009: db 0x89, 0x02  ;; mov [edx],eax
..@0x805600b: db 0xb8, 0x05, 0x00, 0x00, 0x00  ;; mov eax,0x5
..@0x8056010: jmp strict near R.code+0x8055cf0
..@0x8056015: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056019: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8056020: push ebp
..@0x8056021: push edi
..@0x8056022: push esi
..@0x8056023: push ebx
..@0x8056024: db 0x81, 0xec, 0x9c, 0x00, 0x00, 0x00  ;; sub esp,0x9c
..@0x805602a: db 0xc7, 0x05, 0x40, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca40],0x0
..@0x8056032: db 0x00, 0x00
..@0x8056034: db 0x8b, 0x8c, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov ecx,[esp+0xb8]
..@0x805603b: db 0xc7, 0x05, 0x48, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca48],0x0
..@0x8056043: db 0x00, 0x00
..@0x8056045: db 0x8b, 0x84, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xb0]
..@0x805604c: db 0xc7, 0x05, 0x44, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca44],0x0
..@0x8056054: db 0x00, 0x00
..@0x8056056: db 0x8b, 0x9c, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0xc0]
..@0x805605d: db 0xc7, 0x05, 0x24, 0xc6, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c624],0x0
..@0x8056065: db 0x00, 0x00
..@0x8056067: db 0x8b, 0xbc, 0x24, 0xc4, 0x00, 0x00, 0x00  ;; mov edi,[esp+0xc4]
..@0x805606e: db 0x89, 0x4c, 0x24, 0x6c  ;; mov [esp+0x6c],ecx
..@0x8056072: db 0x8b, 0x8c, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov ecx,[esp+0xbc]
..@0x8056079: db 0x8b, 0xac, 0x24, 0xc8, 0x00, 0x00, 0x00  ;; mov ebp,[esp+0xc8]
..@0x8056080: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x8056084: db 0x89, 0x5c, 0x24, 0x2c  ;; mov [esp+0x2c],ebx
..@0x8056088: db 0x8b, 0x9c, 0x24, 0xcc, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0xcc]
..@0x805608f: db 0x8b, 0x94, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov edx,[esp+0xb4]
..@0x8056096: db 0x89, 0x7c, 0x24, 0x64  ;; mov [esp+0x64],edi
..@0x805609a: db 0x89, 0x4c, 0x24, 0x34  ;; mov [esp+0x34],ecx
..@0x805609e: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x80560a1: db 0x89, 0x6c, 0x24, 0x40  ;; mov [esp+0x40],ebp
..@0x80560a5: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x80560a9: db 0x80, 0xf9, 0x89  ;; cmp cl,0x89
..@0x80560ac: db 0x0f, 0x84, 0x24, 0x03, 0x00, 0x00  ;; jz near A.code+0x80563d6
..@0x80560b2: db 0x80, 0xf9, 0xff  ;; cmp cl,0xff
..@0x80560b5: db 0x0f, 0x84, 0xa5, 0x00, 0x00, 0x00  ;; jz near A.code+0x8056160
..@0x80560bb: db 0x80, 0xf9, 0x47  ;; cmp cl,0x47
..@0x80560be: db 0x0f, 0x85, 0x7a, 0x06, 0x00, 0x00  ;; jnz near A.code+0x805673e
..@0x80560c4: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80560c8: db 0x80, 0x78, 0x01, 0x49  ;; cmp byte [eax+0x1],0x49
..@0x80560cc: db 0x0f, 0x85, 0x9e, 0x00, 0x00, 0x00  ;; jnz near A.code+0x8056170
..@0x80560d2: db 0x80, 0x78, 0x02, 0x46  ;; cmp byte [eax+0x2],0x46
..@0x80560d6: db 0x0f, 0x85, 0x94, 0x00, 0x00, 0x00  ;; jnz near A.code+0x8056170
..@0x80560dc: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x03  ;; mov byte [0x987ca4c],0x3
..@0x80560e3: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x80560ea: db 0x80, 0x38, 0x47  ;; cmp byte [eax],0x47
..@0x80560ed: db 0x0f, 0x85, 0xd3, 0x02, 0x00, 0x00  ;; jnz near A.code+0x80563c6
..@0x80560f3: db 0x0f, 0xb6, 0x58, 0x0a  ;; movzx ebx,byte [eax+0xa]
..@0x80560f7: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x80560fc: add eax, strict byte 0xd
..@0x80560ff: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8056101: and ecx, strict byte 0x7
..@0x8056104: add ecx, strict byte 0x1
..@0x8056107: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8056109: db 0x84, 0xdb  ;; test bl,bl
..@0x805610b: db 0x89, 0x15, 0x40, 0xca, 0x87, 0x09  ;; mov [0x987ca40],edx
..@0x8056111: db 0x0f, 0x88, 0x20, 0x1d, 0x00, 0x00  ;; js near A.code+0x8057e37
..@0x8056117: db 0xc7, 0x44, 0x24, 0x28, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x28],0xffffffff
..@0x805611f: db 0xeb, 0x18  ;; jmp short A.code+0x8056139
..@0x8056121: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056128: add eax, strict byte 0x2
..@0x805612b: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x805612e: db 0x0f, 0xb6, 0xd9  ;; movzx ebx,cl
..@0x8056131: db 0x84, 0xc9  ;; test cl,cl
..@0x8056133: db 0x8d, 0x44, 0x18, 0x01  ;; lea eax,[eax+ebx+0x1]
..@0x8056137: db 0x75, 0xf2  ;; jnz A.code+0x805612b
..@0x8056139: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x805613c: db 0x80, 0xf9, 0x21  ;; cmp cl,0x21
..@0x805613f: db 0x0f, 0x85, 0xf3, 0x16, 0x00, 0x00  ;; jnz near A.code+0x8057838
..@0x8056145: db 0x80, 0x78, 0x01, 0xf9  ;; cmp byte [eax+0x1],0xf9
..@0x8056149: db 0x75, 0xdd  ;; jnz A.code+0x8056128
..@0x805614b: db 0xf6, 0x40, 0x03, 0x01  ;; test byte [eax+0x3],0x1
..@0x805614f: db 0x74, 0xd7  ;; jz A.code+0x8056128
..@0x8056151: db 0x0f, 0xb6, 0x58, 0x06  ;; movzx ebx,byte [eax+0x6]
..@0x8056155: db 0x89, 0x5c, 0x24, 0x28  ;; mov [esp+0x28],ebx
..@0x8056159: db 0xeb, 0xcd  ;; jmp short A.code+0x8056128
..@0x805615b: nop
..@0x805615c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056160: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8056164: db 0x80, 0x78, 0x01, 0xd8  ;; cmp byte [eax+0x1],0xd8
..@0x8056168: db 0x0f, 0x84, 0x8c, 0x0b, 0x00, 0x00  ;; jz near A.code+0x8056cfa
..@0x805616e: dw 0x9066  ;; o16 nop
..@0x8056170: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x8056174: db 0x8b, 0x06  ;; mov eax,[esi]
..@0x8056176: db 0x3d, 0x0a, 0x05, 0x01, 0x08  ;; cmp eax,0x801050a
..@0x805617b: db 0x0f, 0x84, 0x1e, 0x07, 0x00, 0x00  ;; jz near A.code+0x805689f
..@0x8056181: db 0x3d, 0x44, 0x44, 0x53, 0x20  ;; cmp eax,0x20534444
..@0x8056186: db 0x0f, 0x84, 0x51, 0x04, 0x00, 0x00  ;; jz near A.code+0x80565dd
..@0x805618c: cmp edx, strict byte 0x12
..@0x805618f: db 0x0f, 0x8e, 0x31, 0x02, 0x00, 0x00  ;; jng near A.code+0x80563c6
..@0x8056195: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x8056199: db 0x0f, 0xb6, 0x46, 0x01  ;; movzx eax,byte [esi+0x1]
..@0x805619d: db 0xa8, 0xfe  ;; test al,0xfe
..@0x805619f: db 0x0f, 0x85, 0x21, 0x02, 0x00, 0x00  ;; jnz near A.code+0x80563c6
..@0x80561a5: db 0x0f, 0xb6, 0x56, 0x02  ;; movzx edx,byte [esi+0x2]
..@0x80561a9: db 0x80, 0xfa, 0x0b  ;; cmp dl,0xb
..@0x80561ac: db 0x0f, 0x87, 0x14, 0x02, 0x00, 0x00  ;; ja near A.code+0x80563c6
..@0x80561b2: db 0xbb, 0x0e, 0x0e, 0x00, 0x00  ;; mov ebx,0xe0e
..@0x80561b7: db 0x0f, 0xa3, 0xd3  ;; bt ebx,edx
..@0x80561ba: db 0x0f, 0x83, 0x06, 0x02, 0x00, 0x00  ;; jnc near A.code+0x80563c6
..@0x80561c0: db 0x0f, 0xb6, 0x76, 0x10  ;; movzx esi,byte [esi+0x10]
..@0x80561c4: db 0xf7, 0xc6, 0x07, 0x00, 0x00, 0x00  ;; test esi,0x7
..@0x80561ca: db 0x0f, 0x85, 0xf6, 0x01, 0x00, 0x00  ;; jnz near A.code+0x80563c6
..@0x80561d0: db 0x89, 0xf3  ;; mov ebx,esi
..@0x80561d2: db 0x84, 0xdb  ;; test bl,bl
..@0x80561d4: db 0x0f, 0x84, 0xec, 0x01, 0x00, 0x00  ;; jz near A.code+0x80563c6
..@0x80561da: db 0x80, 0xfb, 0x20  ;; cmp bl,0x20
..@0x80561dd: db 0x0f, 0x87, 0xe3, 0x01, 0x00, 0x00  ;; ja near A.code+0x80563c6
..@0x80561e3: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x80561e7: db 0x0f, 0xb6, 0x5f, 0x11  ;; movzx ebx,byte [edi+0x11]
..@0x80561eb: db 0xf6, 0xc3, 0xc0  ;; test bl,0xc0
..@0x80561ee: db 0x0f, 0x85, 0xd2, 0x01, 0x00, 0x00  ;; jnz near A.code+0x80563c6
..@0x80561f4: db 0x0f, 0xb7, 0x7f, 0x0c  ;; movzx edi,word [edi+0xc]
..@0x80561f8: db 0x85, 0xff  ;; test edi,edi
..@0x80561fa: db 0x0f, 0x84, 0xc6, 0x01, 0x00, 0x00  ;; jz near A.code+0x80563c6
..@0x8056200: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x8056204: db 0x0f, 0xb7, 0x6d, 0x0e  ;; movzx ebp,word [ebp+0xe]
..@0x8056208: db 0x85, 0xed  ;; test ebp,ebp
..@0x805620a: db 0x89, 0x6c, 0x24, 0x4c  ;; mov [esp+0x4c],ebp
..@0x805620e: db 0x0f, 0x84, 0xb2, 0x01, 0x00, 0x00  ;; jz near A.code+0x80563c6
..@0x8056214: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x8056218: db 0x81, 0xe6, 0xff, 0x00, 0x00, 0x00  ;; and esi,0xff
..@0x805621e: add esi, strict byte 0x7
..@0x8056221: db 0xc1, 0xfe, 0x03  ;; sar esi,byte 0x3
..@0x8056224: db 0x3c, 0x01  ;; cmp al,0x1
..@0x8056226: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x805622a: db 0x8d, 0x4c, 0x0d, 0x12  ;; lea ecx,[ebp+ecx+0x12]
..@0x805622e: db 0x89, 0xf5  ;; mov ebp,esi
..@0x8056230: db 0x0f, 0x84, 0x3a, 0x06, 0x00, 0x00  ;; jz near A.code+0x8056870
..@0x8056236: cmp ebp, strict byte 0x3
..@0x8056239: db 0x0f, 0x8f, 0xef, 0x03, 0x00, 0x00  ;; jg near A.code+0x805662e
..@0x805623f: cmp ebp, strict byte 0x2
..@0x8056242: db 0x0f, 0x8c, 0x8f, 0x09, 0x00, 0x00  ;; jl near A.code+0x8056bd7
..@0x8056248: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x805624f: db 0xf6, 0xc3, 0x10  ;; test bl,0x10
..@0x8056252: db 0x0f, 0x84, 0xd7, 0x04, 0x00, 0x00  ;; jz near A.code+0x805672f
..@0x8056258: db 0x8d, 0x77, 0xff  ;; lea esi,[edi-0x1]
..@0x805625b: db 0xc7, 0x44, 0x24, 0x28, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x28],0xffffffff
..@0x8056263: db 0xbf, 0xff, 0xff, 0xff, 0xff  ;; mov edi,0xffffffff
..@0x8056268: and ebx, strict byte 0x20
..@0x805626b: db 0x0f, 0x85, 0xa7, 0x04, 0x00, 0x00  ;; jnz near A.code+0x8056718
..@0x8056271: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8056275: db 0xc7, 0x44, 0x24, 0x50, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x50],0xffffffff
..@0x805627d: db 0x8b, 0x44, 0x24, 0x4c  ;; mov eax,[esp+0x4c]
..@0x8056281: db 0xc7, 0x44, 0x24, 0x4c, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x4c],0xffffffff
..@0x8056289: db 0xf7, 0xdb  ;; neg ebx
..@0x805628b: sub eax, strict byte 0x1
..@0x805628e: db 0x89, 0x5c, 0x24, 0x68  ;; mov [esp+0x68],ebx
..@0x8056292: db 0x03, 0x74, 0x24, 0x40  ;; add esi,[esp+0x40]
..@0x8056296: db 0x03, 0x44, 0x24, 0x3c  ;; add eax,[esp+0x3c]
..@0x805629a: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x805629e: db 0x89, 0x74, 0x24, 0x48  ;; mov [esp+0x48],esi
..@0x80562a2: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x80562a6: db 0x89, 0x44, 0x24, 0x44  ;; mov [esp+0x44],eax
..@0x80562aa: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x80562ae: db 0x01, 0xfb  ;; add ebx,edi
..@0x80562b0: db 0x03, 0x74, 0x24, 0x4c  ;; add esi,[esp+0x4c]
..@0x80562b4: db 0x80, 0xfa, 0x08  ;; cmp dl,0x8
..@0x80562b7: db 0x19, 0xd2  ;; sbb edx,edx
..@0x80562b9: db 0x0f, 0xaf, 0x44, 0x24, 0x44  ;; imul eax,[esp+0x44]
..@0x80562be: sub edx, strict byte 0x1
..@0x80562c1: db 0x89, 0x74, 0x24, 0x4c  ;; mov [esp+0x4c],esi
..@0x80562c5: db 0xbe, 0x00, 0x01, 0x00, 0x00  ;; mov esi,0x100
..@0x80562ca: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x80562ce: db 0x03, 0x44, 0x24, 0x6c  ;; add eax,[esp+0x6c]
..@0x80562d2: db 0x39, 0x7c, 0x24, 0x44  ;; cmp [esp+0x44],edi
..@0x80562d6: db 0x89, 0x44, 0x24, 0x34  ;; mov [esp+0x34],eax
..@0x80562da: db 0x0f, 0x84, 0x22, 0x04, 0x00, 0x00  ;; jz near A.code+0x8056702
..@0x80562e0: db 0x89, 0xdf  ;; mov edi,ebx
..@0x80562e2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80562e8: db 0x39, 0x7c, 0x24, 0x48  ;; cmp [esp+0x48],edi
..@0x80562ec: db 0x0f, 0x84, 0xf2, 0x03, 0x00, 0x00  ;; jz near A.code+0x80566e4
..@0x80562f2: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x80562f6: db 0x89, 0x7c, 0x24, 0x6c  ;; mov [esp+0x6c],edi
..@0x80562fa: db 0x8b, 0x44, 0x24, 0x48  ;; mov eax,[esp+0x48]
..@0x80562fe: db 0x39, 0x5c, 0x24, 0x64  ;; cmp [esp+0x64],ebx
..@0x8056302: db 0x0f, 0x97, 0x44, 0x24, 0x3c  ;; seta [esp+0x3c]
..@0x8056307: db 0xeb, 0x71  ;; jmp short A.code+0x805637a
..@0x8056309: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056310: db 0x89, 0xd3  ;; mov ebx,edx
..@0x8056312: and ebx, strict byte 0x7f
..@0x8056315: cmp ebx, strict byte 0x7f
..@0x8056318: db 0x0f, 0x84, 0x4a, 0x03, 0x00, 0x00  ;; jz near A.code+0x8056668
..@0x805631e: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8056322: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8056324: db 0x80, 0x7f, 0x01, 0x01  ;; cmp byte [edi+0x1],0x1
..@0x8056328: db 0x0f, 0x84, 0x50, 0x03, 0x00, 0x00  ;; jz near A.code+0x805667e
..@0x805632e: cmp ebp, strict byte 0x2
..@0x8056331: db 0x0f, 0x84, 0x67, 0x03, 0x00, 0x00  ;; jz near A.code+0x805669e
..@0x8056337: db 0x0f, 0x8f, 0x0b, 0x03, 0x00, 0x00  ;; jg near A.code+0x8056648
..@0x805633d: cmp ebp, strict byte 0x1
..@0x8056340: db 0x75, 0x0e  ;; jnz A.code+0x8056350
..@0x8056342: db 0x0f, 0xb6, 0x1b  ;; movzx ebx,byte [ebx]
..@0x8056345: db 0x8b, 0x34, 0x9d, 0x40, 0xc6, 0x87, 0x09  ;; mov esi,[ebx*4+0x987c640]
..@0x805634c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056350: db 0x03, 0x4c, 0x24, 0x38  ;; add ecx,[esp+0x38]
..@0x8056354: db 0x85, 0xd2  ;; test edx,edx
..@0x8056356: db 0x79, 0x27  ;; jns A.code+0x805637f
..@0x8056358: db 0x3b, 0x44, 0x24, 0x2c  ;; cmp eax,[esp+0x2c]
..@0x805635c: db 0x73, 0x0e  ;; jnc A.code+0x805636c
..@0x805635e: db 0x80, 0x7c, 0x24, 0x3c, 0x00  ;; cmp byte [esp+0x3c],0x0
..@0x8056363: db 0x74, 0x07  ;; jz A.code+0x805636c
..@0x8056365: db 0x8b, 0x5c, 0x24, 0x34  ;; mov ebx,[esp+0x34]
..@0x8056369: db 0x89, 0x34, 0x83  ;; mov [ebx+eax*4],esi
..@0x805636c: db 0x03, 0x44, 0x24, 0x28  ;; add eax,[esp+0x28]
..@0x8056370: db 0x39, 0x44, 0x24, 0x6c  ;; cmp [esp+0x6c],eax
..@0x8056374: db 0x0f, 0x84, 0x66, 0x03, 0x00, 0x00  ;; jz near A.code+0x80566e0
..@0x805637a: cmp edx, strict byte 0x7f
..@0x805637d: db 0x7e, 0x91  ;; jng A.code+0x8056310
..@0x805637f: sub edx, strict byte 0x1
..@0x8056382: db 0xeb, 0xd4  ;; jmp short A.code+0x8056358
..@0x8056384: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x8056388: db 0x89, 0x2d, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],ebp
..@0x805638e: db 0x8b, 0x74, 0x24, 0x38  ;; mov esi,[esp+0x38]
..@0x8056392: db 0x89, 0x1d, 0x14, 0xe1, 0x83, 0x09  ;; mov [0x983e114],ebx
..@0x8056398: db 0x89, 0x35, 0x18, 0xe1, 0x83, 0x09  ;; mov [0x983e118],esi
..@0x805639e: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x80563a2: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x80563a6: db 0x8b, 0x5c, 0x24, 0x4c  ;; mov ebx,[esp+0x4c]
..@0x80563aa: db 0x8b, 0x74, 0x24, 0x60  ;; mov esi,[esp+0x60]
..@0x80563ae: db 0x89, 0x3d, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],edi
..@0x80563b4: db 0x89, 0x2d, 0xd0, 0xd1, 0x05, 0x08  ;; mov [0x805d1d0],ebp
..@0x80563ba: db 0x89, 0x1d, 0xd4, 0xd1, 0x05, 0x08  ;; mov [0x805d1d4],ebx
..@0x80563c0: db 0x89, 0x35, 0xd8, 0xd1, 0x05, 0x08  ;; mov [0x805d1d8],esi
..@0x80563c6: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x80563cb: db 0x81, 0xc4, 0x9c, 0x00, 0x00, 0x00  ;; add esp,0x9c
..@0x80563d1: pop ebx
..@0x80563d2: pop esi
..@0x80563d3: pop edi
..@0x80563d4: pop ebp
..@0x80563d5: ret
..@0x80563d6: db 0x80, 0x78, 0x01, 0x50  ;; cmp byte [eax+0x1],0x50
..@0x80563da: db 0x0f, 0x85, 0x90, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x80563e0: db 0x80, 0x3d, 0x08, 0xe1, 0x83, 0x09, 0x00  ;; cmp byte [0x983e108],0x0
..@0x80563e7: db 0x75, 0x0c  ;; jnz A.code+0x80563f5
..@0x80563e9: db 0xc6, 0x05, 0x08, 0xe1, 0x83, 0x09, 0x01  ;; mov byte [0x983e108],0x1
..@0x80563f0: call R.code+0x80552a0
..@0x80563f5: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80563f9: db 0x81, 0x38, 0x89, 0x50, 0x4e, 0x47  ;; cmp dword [eax],0x474e5089
..@0x80563ff: db 0x75, 0xc5  ;; jnz A.code+0x80563c6
..@0x8056401: db 0x81, 0x78, 0x04, 0x0d, 0x0a, 0x1a, 0x0a  ;; cmp dword [eax+0x4],0xa1a0a0d
..@0x8056408: db 0x75, 0xbc  ;; jnz A.code+0x80563c6
..@0x805640a: db 0x8b, 0x1d, 0x14, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e114]
..@0x8056410: db 0x89, 0xc7  ;; mov edi,eax
..@0x8056412: db 0xc7, 0x05, 0x10, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e110],0x0
..@0x805641a: db 0x00, 0x00
..@0x805641c: db 0x8b, 0x35, 0x18, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e118]
..@0x8056422: add edi, strict byte 0x8
..@0x8056425: db 0x8b, 0x2d, 0x1c, 0xe1, 0x83, 0x09  ;; mov ebp,[0x983e11c]
..@0x805642b: db 0x89, 0x3d, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],edi
..@0x8056431: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x8056435: db 0x8b, 0x1d, 0xd0, 0xd1, 0x05, 0x08  ;; mov ebx,[0x805d1d0]
..@0x805643b: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x805643f: db 0x8b, 0x35, 0xd4, 0xd1, 0x05, 0x08  ;; mov esi,[0x805d1d4]
..@0x8056445: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x8056449: db 0x8b, 0x2d, 0xd8, 0xd1, 0x05, 0x08  ;; mov ebp,[0x805d1d8]
..@0x805644f: db 0x89, 0x5c, 0x24, 0x48  ;; mov [esp+0x48],ebx
..@0x8056453: db 0x89, 0x74, 0x24, 0x4c  ;; mov [esp+0x4c],esi
..@0x8056457: db 0x89, 0x6c, 0x24, 0x60  ;; mov [esp+0x60],ebp
..@0x805645b: db 0xeb, 0x37  ;; jmp short A.code+0x8056494
..@0x805645d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8056460: db 0x3d, 0x50, 0x4c, 0x54, 0x45  ;; cmp eax,0x45544c50
..@0x8056465: db 0x0f, 0x84, 0x41, 0x06, 0x00, 0x00  ;; jz near A.code+0x8056aac
..@0x805646b: db 0x3d, 0x62, 0x4b, 0x47, 0x44  ;; cmp eax,0x44474b62
..@0x8056470: db 0x0f, 0x84, 0xb0, 0x06, 0x00, 0x00  ;; jz near A.code+0x8056b26
..@0x8056476: db 0x3d, 0x74, 0x52, 0x4e, 0x53  ;; cmp eax,0x534e5274
..@0x805647b: db 0x0f, 0x84, 0x16, 0x07, 0x00, 0x00  ;; jz near A.code+0x8056b97
..@0x8056481: db 0x3d, 0x49, 0x44, 0x41, 0x54  ;; cmp eax,0x54414449
..@0x8056486: db 0x0f, 0x84, 0x94, 0x0a, 0x00, 0x00  ;; jz near A.code+0x8056f20
..@0x805648c: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8056490: db 0x8d, 0x7c, 0x1d, 0x04  ;; lea edi,[ebp+ebx+0x4]
..@0x8056494: db 0x8b, 0x07  ;; mov eax,[edi]
..@0x8056496: db 0x8d, 0x6f, 0x08  ;; lea ebp,[edi+0x8]
..@0x8056499: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805649b: db 0x89, 0xc2  ;; mov edx,eax
..@0x805649d: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x80564a0: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x80564a3: db 0x01, 0xd1  ;; add ecx,edx
..@0x80564a5: db 0x89, 0xc2  ;; mov edx,eax
..@0x80564a7: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x80564ac: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80564af: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x80564b2: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x80564b8: db 0x01, 0xca  ;; add edx,ecx
..@0x80564ba: db 0x01, 0xd0  ;; add eax,edx
..@0x80564bc: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x80564c0: db 0x8b, 0x47, 0x04  ;; mov eax,[edi+0x4]
..@0x80564c3: db 0x3d, 0x49, 0x48, 0x44, 0x52  ;; cmp eax,0x52444849
..@0x80564c8: db 0x75, 0x96  ;; jnz A.code+0x8056460
..@0x80564ca: db 0x8b, 0x47, 0x08  ;; mov eax,[edi+0x8]
..@0x80564cd: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80564cf: db 0x89, 0xc2  ;; mov edx,eax
..@0x80564d1: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x80564d4: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x80564d7: db 0x01, 0xd1  ;; add ecx,edx
..@0x80564d9: db 0x89, 0xc2  ;; mov edx,eax
..@0x80564db: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x80564e0: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x80564e3: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x80564e6: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x80564ec: db 0x01, 0xca  ;; add edx,ecx
..@0x80564ee: db 0x01, 0xd0  ;; add eax,edx
..@0x80564f0: db 0x85, 0xc0  ;; test eax,eax
..@0x80564f2: db 0x89, 0x44, 0x24, 0x44  ;; mov [esp+0x44],eax
..@0x80564f6: db 0x0f, 0x8e, 0xcf, 0x12, 0x00, 0x00  ;; jng near A.code+0x80577cb
..@0x80564fc: db 0x8b, 0x47, 0x0c  ;; mov eax,[edi+0xc]
..@0x80564ff: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8056501: db 0x89, 0xc2  ;; mov edx,eax
..@0x8056503: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8056506: db 0xc1, 0xe9, 0x18  ;; shr ecx,byte 0x18
..@0x8056509: db 0x01, 0xd1  ;; add ecx,edx
..@0x805650b: db 0x89, 0xc2  ;; mov edx,eax
..@0x805650d: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8056512: db 0xc1, 0xea, 0x08  ;; shr edx,byte 0x8
..@0x8056515: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8056518: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x805651e: db 0x01, 0xca  ;; add edx,ecx
..@0x8056520: db 0x01, 0xd0  ;; add eax,edx
..@0x8056522: db 0x85, 0xc0  ;; test eax,eax
..@0x8056524: db 0x89, 0x44, 0x24, 0x38  ;; mov [esp+0x38],eax
..@0x8056528: db 0x0f, 0x8e, 0x83, 0x12, 0x00, 0x00  ;; jng near A.code+0x80577b1
..@0x805652e: db 0x0f, 0xb6, 0x4f, 0x10  ;; movzx ecx,byte [edi+0x10]
..@0x8056532: db 0xb8, 0x16, 0x01, 0x00, 0x00  ;; mov eax,0x116
..@0x8056537: db 0x0f, 0xa3, 0xc8  ;; bt eax,ecx
..@0x805653a: db 0x88, 0x0d, 0x20, 0xc6, 0x87, 0x09  ;; mov [0x987c620],cl
..@0x8056540: db 0x0f, 0x83, 0x8e, 0x09, 0x00, 0x00  ;; jnc near A.code+0x8056ed4
..@0x8056546: db 0x0f, 0xb6, 0x47, 0x11  ;; movzx eax,byte [edi+0x11]
..@0x805654a: db 0xba, 0x5d, 0x00, 0x00, 0x00  ;; mov edx,0x5d
..@0x805654f: db 0x0f, 0xa3, 0xc2  ;; bt edx,eax
..@0x8056552: db 0xa2, 0x4c, 0xca, 0x87, 0x09  ;; mov [0x987ca4c],al
..@0x8056557: db 0x0f, 0x83, 0x27, 0xfe, 0xff, 0xff  ;; jnc near A.code+0x8056384
..@0x805655d: db 0x80, 0x7f, 0x12, 0x00  ;; cmp byte [edi+0x12],0x0
..@0x8056561: db 0x0f, 0x85, 0x6d, 0x09, 0x00, 0x00  ;; jnz near A.code+0x8056ed4
..@0x8056567: db 0x80, 0x7f, 0x13, 0x00  ;; cmp byte [edi+0x13],0x0
..@0x805656b: db 0x0f, 0x85, 0x13, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8056384
..@0x8056571: db 0x0f, 0xb6, 0x57, 0x14  ;; movzx edx,byte [edi+0x14]
..@0x8056575: db 0x80, 0xfa, 0x01  ;; cmp dl,0x1
..@0x8056578: db 0x0f, 0x87, 0x56, 0x09, 0x00, 0x00  ;; ja near A.code+0x8056ed4
..@0x805657e: db 0x8d, 0x1c, 0xd5, 0x00, 0x00, 0x00, 0x00  ;; lea ebx,[edx*8+0x0]
..@0x8056585: db 0x29, 0xd3  ;; sub ebx,edx
..@0x8056587: db 0xa8, 0xfb  ;; test al,0xfb
..@0x8056589: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x805658d: db 0x0f, 0x85, 0xf9, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x805648c
..@0x8056593: db 0xb8, 0xff, 0x00, 0x00, 0x00  ;; mov eax,0xff
..@0x8056598: db 0xbb, 0x01, 0x00, 0x00, 0x00  ;; mov ebx,0x1
..@0x805659d: db 0xd3, 0xe3  ;; shl ebx,cl
..@0x805659f: db 0x89, 0xc2  ;; mov edx,eax
..@0x80565a1: db 0x8d, 0x4b, 0xff  ;; lea ecx,[ebx-0x1]
..@0x80565a4: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x80565a7: db 0x89, 0x1d, 0x40, 0xca, 0x87, 0x09  ;; mov [0x987ca40],ebx
..@0x80565ad: db 0xf7, 0xf9  ;; idiv ecx
..@0x80565af: db 0x69, 0xc8, 0x01, 0x01, 0x01, 0x00  ;; imul ecx,eax,dword 0x10101
..@0x80565b5: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80565b7: db 0x0f, 0x8e, 0xcf, 0xfe, 0xff, 0xff  ;; jng near A.code+0x805648c
..@0x80565bd: db 0x31, 0xc0  ;; xor eax,eax
..@0x80565bf: db 0xba, 0x00, 0x00, 0x00, 0xff  ;; mov edx,0xff000000
..@0x80565c4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80565c8: db 0x89, 0x14, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov [eax*4+0x987c640],edx
..@0x80565cf: add eax, strict byte 0x1
..@0x80565d2: db 0x01, 0xca  ;; add edx,ecx
..@0x80565d4: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x80565d6: db 0x75, 0xf0  ;; jnz A.code+0x80565c8
..@0x80565d8: jmp strict near R.code+0x805648c
..@0x80565dd: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80565e1: db 0x83, 0x78, 0x04, 0x7c  ;; cmp dword [eax+0x4],byte +0x7c
..@0x80565e5: db 0x0f, 0x85, 0xa1, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x805618c
..@0x80565eb: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x80565ef: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x80565f3: db 0x8b, 0x7c, 0x24, 0x64  ;; mov edi,[esp+0x64]
..@0x80565f7: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x80565fb: db 0x89, 0x9c, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov [esp+0xbc],ebx
..@0x8056602: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x8056606: db 0x89, 0xb4, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov [esp+0xb8],esi
..@0x805660d: db 0x8b, 0x54, 0x24, 0x6c  ;; mov edx,[esp+0x6c]
..@0x8056611: db 0x89, 0xbc, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov [esp+0xb4],edi
..@0x8056618: db 0x89, 0x9c, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov [esp+0xb0],ebx
..@0x805661f: db 0x81, 0xc4, 0x9c, 0x00, 0x00, 0x00  ;; add esp,0x9c
..@0x8056625: pop ebx
..@0x8056626: pop esi
..@0x8056627: pop edi
..@0x8056628: pop ebp
..@0x8056629: jmp strict near R.code+0x8055560
..@0x805662e: cmp ebp, strict byte 0x4
..@0x8056631: db 0x0f, 0x85, 0x18, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x805624f
..@0x8056637: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x06  ;; mov byte [0x987ca4c],0x6
..@0x805663e: jmp strict near R.code+0x805624f
..@0x8056643: nop
..@0x8056644: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056648: cmp ebp, strict byte 0x3
..@0x805664b: db 0x0f, 0x84, 0x7f, 0x00, 0x00, 0x00  ;; jz near A.code+0x80566d0
..@0x8056651: cmp ebp, strict byte 0x4
..@0x8056654: db 0x0f, 0x85, 0xf6, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x8056350
..@0x805665a: db 0x8b, 0x33  ;; mov esi,[ebx]
..@0x805665c: jmp strict near R.code+0x8056350
..@0x8056661: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056668: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x805666c: db 0x0f, 0xb6, 0x11  ;; movzx edx,byte [ecx]
..@0x805666f: add ecx, strict byte 0x1
..@0x8056672: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x8056674: db 0x80, 0x7f, 0x01, 0x01  ;; cmp byte [edi+0x1],0x1
..@0x8056678: db 0x0f, 0x85, 0xb0, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x805632e
..@0x805667e: db 0x83, 0x7c, 0x24, 0x38, 0x01  ;; cmp dword [esp+0x38],byte +0x1
..@0x8056683: db 0x0f, 0x84, 0x87, 0x00, 0x00, 0x00  ;; jz near A.code+0x8056710
..@0x8056689: db 0x0f, 0xb7, 0x31  ;; movzx esi,word [ecx]
..@0x805668c: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x805668e: db 0x0f, 0xaf, 0xde  ;; imul ebx,esi
..@0x8056691: db 0x03, 0x5c, 0x24, 0x60  ;; add ebx,[esp+0x60]
..@0x8056695: cmp ebp, strict byte 0x2
..@0x8056698: db 0x0f, 0x85, 0x99, 0xfc, 0xff, 0xff  ;; jnz near A.code+0x8056337
..@0x805669e: db 0x0f, 0xb7, 0x1b  ;; movzx ebx,word [ebx]
..@0x80566a1: db 0x89, 0xdf  ;; mov edi,ebx
..@0x80566a3: db 0x89, 0xde  ;; mov esi,ebx
..@0x80566a5: db 0xc1, 0xe3, 0x03  ;; shl ebx,byte 0x3
..@0x80566a8: db 0x81, 0xe7, 0x00, 0x7c, 0x00, 0x00  ;; and edi,0x7c00
..@0x80566ae: db 0x81, 0xe6, 0xe0, 0x03, 0x00, 0x00  ;; and esi,0x3e0
..@0x80566b4: db 0x81, 0xe3, 0xf8, 0x00, 0x00, 0x00  ;; and ebx,0xf8
..@0x80566ba: db 0xc1, 0xe7, 0x09  ;; shl edi,byte 0x9
..@0x80566bd: db 0xc1, 0xe6, 0x06  ;; shl esi,byte 0x6
..@0x80566c0: db 0x01, 0xfe  ;; add esi,edi
..@0x80566c2: db 0x8d, 0xb4, 0x1e, 0x00, 0x00, 0x00, 0xff  ;; lea esi,[esi+ebx-0x1000000]
..@0x80566c9: jmp strict near R.code+0x8056350
..@0x80566ce: dw 0x9066  ;; o16 nop
..@0x80566d0: db 0x8b, 0x33  ;; mov esi,[ebx]
..@0x80566d2: db 0x81, 0xce, 0x00, 0x00, 0x00, 0xff  ;; or esi,0xff000000
..@0x80566d8: jmp strict near R.code+0x8056350
..@0x80566dd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x80566e0: db 0x8b, 0x7c, 0x24, 0x6c  ;; mov edi,[esp+0x6c]
..@0x80566e4: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x80566e8: db 0x8b, 0x5c, 0x24, 0x68  ;; mov ebx,[esp+0x68]
..@0x80566ec: db 0x01, 0x44, 0x24, 0x44  ;; add [esp+0x44],eax
..@0x80566f0: db 0x01, 0x5c, 0x24, 0x34  ;; add [esp+0x34],ebx
..@0x80566f4: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x80566f8: db 0x39, 0x44, 0x24, 0x4c  ;; cmp [esp+0x4c],eax
..@0x80566fc: db 0x0f, 0x85, 0xe6, 0xfb, 0xff, 0xff  ;; jnz near A.code+0x80562e8
..@0x8056702: db 0x31, 0xc0  ;; xor eax,eax
..@0x8056704: db 0x81, 0xc4, 0x9c, 0x00, 0x00, 0x00  ;; add esp,0x9c
..@0x805670a: pop ebx
..@0x805670b: pop esi
..@0x805670c: pop edi
..@0x805670d: pop ebp
..@0x805670e: ret
..@0x805670f: nop
..@0x8056710: db 0x0f, 0xb6, 0x31  ;; movzx esi,byte [ecx]
..@0x8056713: jmp strict near R.code+0x805668c
..@0x8056718: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x805671c: db 0xc7, 0x44, 0x24, 0x50, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x50],0x1
..@0x8056724: db 0x89, 0x44, 0x24, 0x68  ;; mov [esp+0x68],eax
..@0x8056728: db 0x31, 0xc0  ;; xor eax,eax
..@0x805672a: jmp strict near R.code+0x8056292
..@0x805672f: db 0x31, 0xf6  ;; xor esi,esi
..@0x8056731: db 0xc7, 0x44, 0x24, 0x28, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x1
..@0x8056739: jmp strict near R.code+0x8056268
..@0x805673e: db 0x80, 0xf9, 0x19  ;; cmp cl,0x19
..@0x8056741: db 0x0f, 0x85, 0x8d, 0x17, 0x00, 0x00  ;; jnz near A.code+0x8057ed4
..@0x8056747: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x805674b: db 0x80, 0x78, 0x01, 0x91  ;; cmp byte [eax+0x1],0x91
..@0x805674f: db 0x0f, 0x85, 0x1b, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x8056755: db 0x80, 0x78, 0x0a, 0x08  ;; cmp byte [eax+0xa],0x8
..@0x8056759: db 0x0f, 0x85, 0x11, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x805675f: db 0x80, 0x78, 0x0b, 0x00  ;; cmp byte [eax+0xb],0x0
..@0x8056763: db 0x0f, 0x85, 0x07, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x8056769: db 0x0f, 0xb7, 0x78, 0x02  ;; movzx edi,word [eax+0x2]
..@0x805676d: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x03  ;; mov byte [0x987ca4c],0x3
..@0x8056774: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x805677b: db 0xc7, 0x05, 0x40, 0xca, 0x87, 0x09, 0x00, 0x01  ;; mov dword [0x987ca40],0x100
..@0x8056783: db 0x00, 0x00
..@0x8056785: db 0x85, 0xff  ;; test edi,edi
..@0x8056787: db 0x0f, 0x84, 0x39, 0xfc, 0xff, 0xff  ;; jz near A.code+0x80563c6
..@0x805678d: db 0x0f, 0xb7, 0x68, 0x04  ;; movzx ebp,word [eax+0x4]
..@0x8056791: db 0x85, 0xed  ;; test ebp,ebp
..@0x8056793: db 0x0f, 0x84, 0x2d, 0xfc, 0xff, 0xff  ;; jz near A.code+0x80563c6
..@0x8056799: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x805679d: add eax, strict byte 0x20
..@0x80567a0: db 0xbb, 0x40, 0xc6, 0x87, 0x09  ;; mov ebx,0x987c640
..@0x80567a5: db 0x81, 0xc6, 0x20, 0x03, 0x00, 0x00  ;; add esi,0x320
..@0x80567ab: nop
..@0x80567ac: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80567b0: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x80567b3: db 0x0f, 0xb6, 0x50, 0x01  ;; movzx edx,byte [eax+0x1]
..@0x80567b7: db 0xc1, 0xe1, 0x12  ;; shl ecx,byte 0x12
..@0x80567ba: db 0xc1, 0xe2, 0x0a  ;; shl edx,byte 0xa
..@0x80567bd: db 0x01, 0xca  ;; add edx,ecx
..@0x80567bf: db 0x0f, 0xb6, 0x48, 0x02  ;; movzx ecx,byte [eax+0x2]
..@0x80567c3: add eax, strict byte 0x3
..@0x80567c6: db 0x8d, 0x94, 0x8a, 0x00, 0x00, 0x00, 0xff  ;; lea edx,[edx+ecx*4-0x1000000]
..@0x80567cd: db 0x89, 0x13  ;; mov [ebx],edx
..@0x80567cf: add ebx, strict byte 0x4
..@0x80567d2: db 0x39, 0xf0  ;; cmp eax,esi
..@0x80567d4: db 0x75, 0xda  ;; jnz A.code+0x80567b0
..@0x80567d6: db 0x03, 0x6c, 0x24, 0x3c  ;; add ebp,[esp+0x3c]
..@0x80567da: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x80567de: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x80567e2: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x80567e6: db 0x01, 0xfe  ;; add esi,edi
..@0x80567e8: db 0x39, 0x6c, 0x24, 0x3c  ;; cmp [esp+0x3c],ebp
..@0x80567ec: db 0x0f, 0x8d, 0x10, 0xff, 0xff, 0xff  ;; jnl near A.code+0x8056702
..@0x80567f2: db 0x8b, 0x7c, 0x24, 0x34  ;; mov edi,[esp+0x34]
..@0x80567f6: db 0x89, 0xf2  ;; mov edx,esi
..@0x80567f8: db 0x8b, 0x6c, 0x24, 0x3c  ;; mov ebp,[esp+0x3c]
..@0x80567fc: db 0x0f, 0xaf, 0x7c, 0x24, 0x3c  ;; imul edi,[esp+0x3c]
..@0x8056801: db 0x29, 0xea  ;; sub edx,ebp
..@0x8056803: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8056807: db 0x03, 0x7c, 0x24, 0x6c  ;; add edi,[esp+0x6c]
..@0x805680b: db 0x39, 0x74, 0x24, 0x3c  ;; cmp [esp+0x3c],esi
..@0x805680f: db 0x7d, 0x48  ;; jnl A.code+0x8056859
..@0x8056811: db 0x39, 0x6c, 0x24, 0x64  ;; cmp [esp+0x64],ebp
..@0x8056815: db 0x89, 0x6c, 0x24, 0x44  ;; mov [esp+0x44],ebp
..@0x8056819: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x805681d: db 0x8b, 0x4c, 0x24, 0x28  ;; mov ecx,[esp+0x28]
..@0x8056821: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x8056825: db 0x0f, 0x97, 0xc3  ;; seta bl
..@0x8056828: db 0x29, 0xc1  ;; sub ecx,eax
..@0x805682a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056830: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x8056832: db 0x73, 0x12  ;; jnc A.code+0x8056846
..@0x8056834: db 0x84, 0xdb  ;; test bl,bl
..@0x8056836: db 0x74, 0x0e  ;; jz A.code+0x8056846
..@0x8056838: db 0x0f, 0xb6, 0x14, 0x01  ;; movzx edx,byte [ecx+eax]
..@0x805683c: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x8056843: db 0x89, 0x14, 0x87  ;; mov [edi+eax*4],edx
..@0x8056846: add eax, strict byte 0x1
..@0x8056849: db 0x39, 0xf0  ;; cmp eax,esi
..@0x805684b: db 0x75, 0xe3  ;; jnz A.code+0x8056830
..@0x805684d: db 0x8b, 0x4c, 0x24, 0x38  ;; mov ecx,[esp+0x38]
..@0x8056851: db 0x8b, 0x6c, 0x24, 0x44  ;; mov ebp,[esp+0x44]
..@0x8056855: db 0x01, 0x4c, 0x24, 0x28  ;; add [esp+0x28],ecx
..@0x8056859: add ebp, strict byte 0x1
..@0x805685c: db 0x03, 0x7c, 0x24, 0x34  ;; add edi,[esp+0x34]
..@0x8056860: db 0x3b, 0x6c, 0x24, 0x30  ;; cmp ebp,[esp+0x30]
..@0x8056864: db 0x75, 0xa5  ;; jnz A.code+0x805680b
..@0x8056866: db 0x31, 0xc0  ;; xor eax,eax
..@0x8056868: jmp strict near R.code+0x8056704
..@0x805686d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8056870: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x8056874: db 0x0f, 0xb6, 0x46, 0x07  ;; movzx eax,byte [esi+0x7]
..@0x8056878: db 0x8d, 0x68, 0x07  ;; lea ebp,[eax+0x7]
..@0x805687b: db 0x0f, 0xb7, 0x46, 0x03  ;; movzx eax,word [esi+0x3]
..@0x805687f: db 0x89, 0xce  ;; mov esi,ecx
..@0x8056881: db 0xc1, 0xfd, 0x03  ;; sar ebp,byte 0x3
..@0x8056884: db 0x0f, 0xaf, 0xc5  ;; imul eax,ebp
..@0x8056887: db 0x29, 0xc6  ;; sub esi,eax
..@0x8056889: db 0x89, 0x74, 0x24, 0x60  ;; mov [esp+0x60],esi
..@0x805688d: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x8056891: db 0x0f, 0xb7, 0x46, 0x05  ;; movzx eax,word [esi+0x5]
..@0x8056895: db 0x0f, 0xaf, 0xc5  ;; imul eax,ebp
..@0x8056898: db 0x01, 0xc1  ;; add ecx,eax
..@0x805689a: jmp strict near R.code+0x8056236
..@0x805689f: db 0x0f, 0xbf, 0x46, 0x08  ;; movsx eax,word [esi+0x8]
..@0x80568a3: db 0x0f, 0xbf, 0x4e, 0x04  ;; movsx ecx,word [esi+0x4]
..@0x80568a7: db 0x29, 0xc8  ;; sub eax,ecx
..@0x80568a9: db 0x8d, 0x68, 0x01  ;; lea ebp,[eax+0x1]
..@0x80568ac: db 0x85, 0xed  ;; test ebp,ebp
..@0x80568ae: db 0x0f, 0x8e, 0x12, 0xfb, 0xff, 0xff  ;; jng near A.code+0x80563c6
..@0x80568b4: db 0x0f, 0xbf, 0x46, 0x0a  ;; movsx eax,word [esi+0xa]
..@0x80568b8: db 0x0f, 0xbf, 0x4e, 0x06  ;; movsx ecx,word [esi+0x6]
..@0x80568bc: db 0x29, 0xc8  ;; sub eax,ecx
..@0x80568be: add eax, strict byte 0x1
..@0x80568c1: db 0x85, 0xc0  ;; test eax,eax
..@0x80568c3: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x80568c7: db 0x0f, 0x8e, 0xf9, 0xfa, 0xff, 0xff  ;; jng near A.code+0x80563c6
..@0x80568cd: db 0x0f, 0xb6, 0x7e, 0x41  ;; movzx edi,byte [esi+0x41]
..@0x80568d1: db 0x0f, 0xbf, 0x46, 0x42  ;; movsx eax,word [esi+0x42]
..@0x80568d5: cmp edi, strict byte 0x1
..@0x80568d8: db 0x89, 0x7c, 0x24, 0x48  ;; mov [esp+0x48],edi
..@0x80568dc: db 0x89, 0x44, 0x24, 0x60  ;; mov [esp+0x60],eax
..@0x80568e0: db 0x0f, 0x84, 0x5e, 0x04, 0x00, 0x00  ;; jz near A.code+0x8056d44
..@0x80568e6: db 0x8b, 0x7c, 0x24, 0x40  ;; mov edi,[esp+0x40]
..@0x80568ea: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x80568ee: db 0x01, 0xef  ;; add edi,ebp
..@0x80568f0: db 0x03, 0x5c, 0x24, 0x28  ;; add ebx,[esp+0x28]
..@0x80568f4: db 0x89, 0x7c, 0x24, 0x38  ;; mov [esp+0x38],edi
..@0x80568f8: db 0x83, 0x7c, 0x24, 0x48, 0x03  ;; cmp dword [esp+0x48],byte +0x3
..@0x80568fd: db 0x89, 0x5c, 0x24, 0x44  ;; mov [esp+0x44],ebx
..@0x8056901: db 0x0f, 0x84, 0x0e, 0x01, 0x00, 0x00  ;; jz near A.code+0x8056a15
..@0x8056907: db 0x8b, 0x74, 0x24, 0x34  ;; mov esi,[esp+0x34]
..@0x805690b: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x805690f: db 0x0f, 0xaf, 0x74, 0x24, 0x3c  ;; imul esi,[esp+0x3c]
..@0x8056914: sub eax, strict byte -0x80
..@0x8056917: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x805691b: db 0x03, 0x74, 0x24, 0x6c  ;; add esi,[esp+0x6c]
..@0x805691f: db 0x3b, 0x6c, 0x24, 0x60  ;; cmp ebp,[esp+0x60]
..@0x8056923: db 0x0f, 0x8c, 0xcc, 0x00, 0x00, 0x00  ;; jl near A.code+0x80569f5
..@0x8056929: db 0x8b, 0x4c, 0x24, 0x48  ;; mov ecx,[esp+0x48]
..@0x805692d: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x8056931: db 0x8b, 0x6c, 0x24, 0x40  ;; mov ebp,[esp+0x40]
..@0x8056935: db 0x8b, 0x5c, 0x24, 0x38  ;; mov ebx,[esp+0x38]
..@0x8056939: sub ecx, strict byte 0x1
..@0x805693c: db 0xc1, 0xe7, 0x02  ;; shl edi,byte 0x2
..@0x805693f: db 0xc1, 0xe5, 0x02  ;; shl ebp,byte 0x2
..@0x8056942: db 0x8d, 0x14, 0x29  ;; lea edx,[ecx+ebp]
..@0x8056945: db 0xc1, 0xe3, 0x02  ;; shl ebx,byte 0x2
..@0x8056948: db 0x83, 0x7c, 0x24, 0x48, 0x01  ;; cmp dword [esp+0x48],byte +0x1
..@0x805694d: db 0x0f, 0x84, 0x66, 0x04, 0x00, 0x00  ;; jz near A.code+0x8056db9
..@0x8056953: db 0x31, 0xc0  ;; xor eax,eax
..@0x8056955: db 0x83, 0x7c, 0x24, 0x48, 0x03  ;; cmp dword [esp+0x48],byte +0x3
..@0x805695a: db 0x0f, 0x85, 0x6b, 0xfa, 0xff, 0xff  ;; jnz near A.code+0x80563cb
..@0x8056960: db 0x89, 0x7c, 0x24, 0x2c  ;; mov [esp+0x2c],edi
..@0x8056964: db 0x8b, 0x7c, 0x24, 0x64  ;; mov edi,[esp+0x64]
..@0x8056968: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x805696c: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8056970: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8056974: db 0x0f, 0xb6, 0x00  ;; movzx eax,byte [eax]
..@0x8056977: db 0x88, 0x44, 0x24, 0x38  ;; mov [esp+0x38],al
..@0x805697b: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x805697f: add eax, strict byte 0x1
..@0x8056982: db 0x80, 0x7c, 0x24, 0x38, 0xbf  ;; cmp byte [esp+0x38],0xbf
..@0x8056987: db 0x0f, 0x87, 0xd0, 0x01, 0x00, 0x00  ;; ja near A.code+0x8056b5d
..@0x805698d: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8056991: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8056996: db 0xc7, 0x44, 0x24, 0x3c, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x3c],0x1
..@0x805699e: db 0x89, 0x6c, 0x24, 0x40  ;; mov [esp+0x40],ebp
..@0x80569a2: db 0x89, 0x5c, 0x24, 0x48  ;; mov [esp+0x48],ebx
..@0x80569a6: db 0xeb, 0x17  ;; jmp short A.code+0x80569bf
..@0x80569a8: nop
..@0x80569a9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80569b0: db 0x8b, 0x54, 0x24, 0x40  ;; mov edx,[esp+0x40]
..@0x80569b4: db 0x01, 0xca  ;; add edx,ecx
..@0x80569b6: sub eax, strict byte 0x1
..@0x80569b9: db 0x0f, 0x84, 0xd4, 0x00, 0x00, 0x00  ;; jz near A.code+0x8056a93
..@0x80569bf: db 0x39, 0xfe  ;; cmp esi,edi
..@0x80569c1: db 0x73, 0x12  ;; jnc A.code+0x80569d5
..@0x80569c3: db 0x3b, 0x54, 0x24, 0x2c  ;; cmp edx,[esp+0x2c]
..@0x80569c7: db 0x73, 0x0c  ;; jnc A.code+0x80569d5
..@0x80569c9: db 0x0f, 0xb6, 0x5c, 0x24, 0x38  ;; movzx ebx,byte [esp+0x38]
..@0x80569ce: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x80569d2: db 0x88, 0x1c, 0x2a  ;; mov [edx+ebp],bl
..@0x80569d5: add edx, strict byte 0x4
..@0x80569d8: db 0x39, 0x54, 0x24, 0x48  ;; cmp [esp+0x48],edx
..@0x80569dc: db 0x7f, 0xd8  ;; jg A.code+0x80569b6
..@0x80569de: sub ecx, strict byte 0x1
..@0x80569e1: db 0x79, 0xcd  ;; jns A.code+0x80569b0
..@0x80569e3: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x80569e7: add esi, strict byte 0x1
..@0x80569ea: db 0x01, 0x4c, 0x24, 0x30  ;; add [esp+0x30],ecx
..@0x80569ee: db 0xb9, 0x02, 0x00, 0x00, 0x00  ;; mov ecx,0x2
..@0x80569f3: db 0xeb, 0xbb  ;; jmp short A.code+0x80569b0
..@0x80569f5: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x80569f9: db 0x8b, 0x44, 0x24, 0x60  ;; mov eax,[esp+0x60]
..@0x80569fd: db 0x39, 0x54, 0x24, 0x2c  ;; cmp [esp+0x2c],edx
..@0x8056a01: db 0x0f, 0x4e, 0x54, 0x24, 0x2c  ;; cmovng edx,[esp+0x2c]
..@0x8056a06: db 0x29, 0xe8  ;; sub eax,ebp
..@0x8056a08: db 0x01, 0x44, 0x24, 0x38  ;; add [esp+0x38],eax
..@0x8056a0c: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x8056a10: jmp strict near R.code+0x8056929
..@0x8056a15: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x8056a19: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8056a1b: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x8056a22: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8056a26: db 0x85, 0xc0  ;; test eax,eax
..@0x8056a28: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8056a2c: db 0x0f, 0x48, 0xf3  ;; cmovs esi,ebx
..@0x8056a2f: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x8056a33: db 0x8b, 0x74, 0x24, 0x2c  ;; mov esi,[esp+0x2c]
..@0x8056a37: db 0x39, 0xf7  ;; cmp edi,esi
..@0x8056a39: db 0x89, 0xf1  ;; mov ecx,esi
..@0x8056a3b: db 0x8b, 0x74, 0x24, 0x6c  ;; mov esi,[esp+0x6c]
..@0x8056a3f: db 0x0f, 0x4e, 0xcf  ;; cmovng ecx,edi
..@0x8056a42: db 0x8b, 0x7c, 0x24, 0x64  ;; mov edi,[esp+0x64]
..@0x8056a46: db 0x85, 0xc0  ;; test eax,eax
..@0x8056a48: db 0x0f, 0x49, 0x5c, 0x24, 0x3c  ;; cmovns ebx,[esp+0x3c]
..@0x8056a4d: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8056a51: db 0x39, 0x7c, 0x24, 0x44  ;; cmp [esp+0x44],edi
..@0x8056a55: db 0x0f, 0x4e, 0x7c, 0x24, 0x44  ;; cmovng edi,[esp+0x44]
..@0x8056a5a: db 0x0f, 0xaf, 0xc3  ;; imul eax,ebx
..@0x8056a5d: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8056a5f: db 0x8d, 0x54, 0x06, 0x03  ;; lea edx,[esi+eax+0x3]
..@0x8056a63: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x8056a67: db 0x0f, 0x8d, 0x9a, 0xfe, 0xff, 0xff  ;; jnl near A.code+0x8056907
..@0x8056a6d: db 0x39, 0xce  ;; cmp esi,ecx
..@0x8056a6f: db 0x89, 0xf0  ;; mov eax,esi
..@0x8056a71: db 0x7d, 0x10  ;; jnl A.code+0x8056a83
..@0x8056a73: nop
..@0x8056a74: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056a78: db 0xc6, 0x04, 0x82, 0xff  ;; mov byte [edx+eax*4],0xff
..@0x8056a7c: add eax, strict byte 0x1
..@0x8056a7f: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8056a81: db 0x75, 0xf5  ;; jnz A.code+0x8056a78
..@0x8056a83: add ebx, strict byte 0x1
..@0x8056a86: db 0x03, 0x54, 0x24, 0x34  ;; add edx,[esp+0x34]
..@0x8056a8a: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8056a8c: db 0x75, 0xdf  ;; jnz A.code+0x8056a6d
..@0x8056a8e: jmp strict near R.code+0x8056907
..@0x8056a93: db 0x8b, 0x6c, 0x24, 0x40  ;; mov ebp,[esp+0x40]
..@0x8056a97: db 0x8b, 0x5c, 0x24, 0x48  ;; mov ebx,[esp+0x48]
..@0x8056a9b: db 0x3b, 0x74, 0x24, 0x44  ;; cmp esi,[esp+0x44]
..@0x8056a9f: db 0x0f, 0x8c, 0xcb, 0xfe, 0xff, 0xff  ;; jl near A.code+0x8056970
..@0x8056aa5: db 0x31, 0xc0  ;; xor eax,eax
..@0x8056aa7: jmp strict near R.code+0x8056704
..@0x8056aac: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8056ab0: db 0xba, 0x56, 0x55, 0x55, 0x55  ;; mov edx,0x55555556
..@0x8056ab5: db 0xf7, 0xea  ;; imul edx
..@0x8056ab7: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8056abb: db 0xc1, 0xf8, 0x1f  ;; sar eax,byte 0x1f
..@0x8056abe: db 0x29, 0xc2  ;; sub edx,eax
..@0x8056ac0: db 0x89, 0xd0  ;; mov eax,edx
..@0x8056ac2: db 0x89, 0x15, 0x40, 0xca, 0x87, 0x09  ;; mov [0x987ca40],edx
..@0x8056ac8: sub eax, strict byte 0x1
..@0x8056acb: db 0x0f, 0x88, 0xbb, 0xf9, 0xff, 0xff  ;; js near A.code+0x805648c
..@0x8056ad1: db 0x8d, 0x54, 0x40, 0x08  ;; lea edx,[eax+eax*2+0x8]
..@0x8056ad5: db 0x8d, 0x1c, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; lea ebx,[eax*4+0x987c640]
..@0x8056adc: db 0x01, 0xfa  ;; add edx,edi
..@0x8056ade: add edi, strict byte 0x5
..@0x8056ae1: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056ae8: db 0x8b, 0x0a  ;; mov ecx,[edx]
..@0x8056aea: sub edx, strict byte 0x3
..@0x8056aed: db 0x89, 0xce  ;; mov esi,ecx
..@0x8056aef: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8056af1: db 0xc1, 0xe0, 0x18  ;; shl eax,byte 0x18
..@0x8056af4: db 0xc1, 0xee, 0x18  ;; shr esi,byte 0x18
..@0x8056af7: db 0x01, 0xc6  ;; add esi,eax
..@0x8056af9: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8056afb: db 0x81, 0xe1, 0x00, 0xff, 0x00, 0x00  ;; and ecx,0xff00
..@0x8056b01: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8056b04: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x8056b07: db 0x25, 0x00, 0xff, 0x00, 0x00  ;; and eax,0xff00
..@0x8056b0c: db 0x01, 0xf0  ;; add eax,esi
..@0x8056b0e: db 0x01, 0xc8  ;; add eax,ecx
..@0x8056b10: db 0xc1, 0xe8, 0x08  ;; shr eax,byte 0x8
..@0x8056b13: db 0x0d, 0x00, 0x00, 0x00, 0xff  ;; or eax,0xff000000
..@0x8056b18: db 0x89, 0x03  ;; mov [ebx],eax
..@0x8056b1a: sub ebx, strict byte 0x4
..@0x8056b1d: db 0x39, 0xfa  ;; cmp edx,edi
..@0x8056b1f: db 0x75, 0xc7  ;; jnz A.code+0x8056ae8
..@0x8056b21: jmp strict near R.code+0x805648c
..@0x8056b26: db 0x80, 0x3d, 0x4c, 0xca, 0x87, 0x09, 0x06  ;; cmp byte [0x987ca4c],0x6
..@0x8056b2d: db 0x0f, 0x86, 0x04, 0x01, 0x00, 0x00  ;; jna near A.code+0x8056c37
..@0x8056b33: db 0x8b, 0x1d, 0x48, 0xca, 0x87, 0x09  ;; mov ebx,[0x987ca48]
..@0x8056b39: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8056b3b: db 0x0f, 0xb6, 0xf7  ;; movzx esi,bh
..@0x8056b3e: db 0x81, 0xe3, 0xff, 0x00, 0x00, 0x00  ;; and ebx,0xff
..@0x8056b44: db 0xc1, 0xf8, 0x10  ;; sar eax,byte 0x10
..@0x8056b47: db 0x89, 0x74, 0x24, 0x4c  ;; mov [esp+0x4c],esi
..@0x8056b4b: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8056b50: db 0x89, 0x5c, 0x24, 0x60  ;; mov [esp+0x60],ebx
..@0x8056b54: db 0x89, 0x44, 0x24, 0x48  ;; mov [esp+0x48],eax
..@0x8056b58: jmp strict near R.code+0x805648c
..@0x8056b5d: db 0x0f, 0xb6, 0x44, 0x24, 0x38  ;; movzx eax,byte [esp+0x38]
..@0x8056b62: and eax, strict byte 0x3f
..@0x8056b65: db 0x89, 0x44, 0x24, 0x3c  ;; mov [esp+0x3c],eax
..@0x8056b69: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8056b6d: db 0x83, 0x44, 0x24, 0x28, 0x02  ;; add dword [esp+0x28],byte +0x2
..@0x8056b72: db 0x0f, 0xb6, 0x40, 0x01  ;; movzx eax,byte [eax+0x1]
..@0x8056b76: db 0x88, 0x44, 0x24, 0x38  ;; mov [esp+0x38],al
..@0x8056b7a: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8056b7e: db 0x85, 0xc0  ;; test eax,eax
..@0x8056b80: db 0x0f, 0x84, 0x15, 0xff, 0xff, 0xff  ;; jz near A.code+0x8056a9b
..@0x8056b86: db 0x89, 0x6c, 0x24, 0x40  ;; mov [esp+0x40],ebp
..@0x8056b8a: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8056b8e: db 0x89, 0x5c, 0x24, 0x48  ;; mov [esp+0x48],ebx
..@0x8056b92: jmp strict near R.code+0x80569bf
..@0x8056b97: db 0x0f, 0xb6, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movzx eax,byte [0x987ca4c]
..@0x8056b9e: db 0x3c, 0x02  ;; cmp al,0x2
..@0x8056ba0: db 0x0f, 0x84, 0xfc, 0x02, 0x00, 0x00  ;; jz near A.code+0x8056ea2
..@0x8056ba6: db 0x3c, 0x03  ;; cmp al,0x3
..@0x8056ba8: db 0x0f, 0x84, 0xb4, 0x02, 0x00, 0x00  ;; jz near A.code+0x8056e62
..@0x8056bae: db 0x84, 0xc0  ;; test al,al
..@0x8056bb0: db 0x0f, 0x85, 0xd6, 0xf8, 0xff, 0xff  ;; jnz near A.code+0x805648c
..@0x8056bb6: db 0x80, 0x3d, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; cmp byte [0x987c620],0x8
..@0x8056bbd: db 0x0f, 0x8f, 0xc9, 0xf8, 0xff, 0xff  ;; jg near A.code+0x805648c
..@0x8056bc3: db 0x0f, 0xb6, 0x47, 0x09  ;; movzx eax,byte [edi+0x9]
..@0x8056bc7: db 0x81, 0x24, 0x85, 0x40, 0xc6, 0x87, 0x09, 0xff  ;; and dword [eax*4+0x987c640],0xffffff
..@0x8056bcf: db 0xff, 0xff, 0x00
..@0x8056bd2: jmp strict near R.code+0x805648c
..@0x8056bd7: cmp ebp, strict byte 0x1
..@0x8056bda: db 0x0f, 0x85, 0x6f, 0xf6, 0xff, 0xff  ;; jnz near A.code+0x805624f
..@0x8056be0: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x00  ;; mov byte [0x987ca4c],0x0
..@0x8056be7: db 0xba, 0x00, 0x00, 0x00, 0xff  ;; mov edx,0xff000000
..@0x8056bec: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8056bf1: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x8056bf8: db 0xc7, 0x05, 0x40, 0xc6, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c640],0xff000000
..@0x8056c00: db 0x00, 0xff
..@0x8056c02: db 0xeb, 0x0b  ;; jmp short A.code+0x8056c0f
..@0x8056c04: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8056c08: db 0x8b, 0x14, 0x85, 0x3c, 0xc6, 0x87, 0x09  ;; mov edx,[eax*4+0x987c63c]
..@0x8056c0f: db 0x81, 0xc2, 0x01, 0x01, 0x01, 0x00  ;; add edx,0x10101
..@0x8056c15: db 0x89, 0x14, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov [eax*4+0x987c640],edx
..@0x8056c1c: add eax, strict byte 0x1
..@0x8056c1f: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x8056c24: db 0x75, 0xe2  ;; jnz A.code+0x8056c08
..@0x8056c26: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8056c2a: db 0x0f, 0xb6, 0x58, 0x11  ;; movzx ebx,byte [eax+0x11]
..@0x8056c2e: db 0x0f, 0xb6, 0x50, 0x02  ;; movzx edx,byte [eax+0x2]
..@0x8056c32: jmp strict near R.code+0x805624f
..@0x8056c37: db 0x0f, 0xb6, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movzx eax,byte [0x987ca4c]
..@0x8056c3e: db 0xff, 0x24, 0x85, 0xf0, 0xb7, 0x05, 0x08  ;; jmp [eax*4+code_ptr_0x805b7f0]
..@0x8056c45: db 0x0f, 0xb6, 0x47, 0x08  ;; movzx eax,byte [edi+0x8]
..@0x8056c49: db 0x8b, 0x1c, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov ebx,[eax*4+0x987c640]
..@0x8056c50: db 0x89, 0x1d, 0x48, 0xca, 0x87, 0x09  ;; mov [0x987ca48],ebx
..@0x8056c56: jmp strict near R.code+0x8056b39
..@0x8056c5b: db 0x80, 0x3d, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; cmp byte [0x987c620],0x8
..@0x8056c62: db 0x0f, 0x84, 0xaa, 0x0b, 0x00, 0x00  ;; jz near A.code+0x8057812
..@0x8056c68: db 0xc7, 0x05, 0x48, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca48],0xff000000
..@0x8056c70: db 0x00, 0xff
..@0x8056c72: db 0xbb, 0x00, 0x00, 0x00, 0xff  ;; mov ebx,0xff000000
..@0x8056c77: db 0x31, 0xf6  ;; xor esi,esi
..@0x8056c79: db 0x0f, 0xb6, 0x44, 0x75, 0x00  ;; movzx eax,byte [ebp+esi*2+0x0]
..@0x8056c7e: db 0xb9, 0x81, 0x7f, 0x80, 0x7f  ;; mov ecx,0x7f807f81
..@0x8056c83: db 0x0f, 0xb6, 0x54, 0x75, 0x01  ;; movzx edx,byte [ebp+esi*2+0x1]
..@0x8056c88: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8056c8b: db 0x01, 0xd0  ;; add eax,edx
..@0x8056c8d: db 0xf7, 0xe9  ;; imul ecx
..@0x8056c8f: db 0x8d, 0x04, 0xf5, 0x00, 0x00, 0x00, 0x00  ;; lea eax,[esi*8+0x0]
..@0x8056c96: db 0xb9, 0x10, 0x00, 0x00, 0x00  ;; mov ecx,0x10
..@0x8056c9b: db 0x29, 0xc1  ;; sub ecx,eax
..@0x8056c9d: add esi, strict byte 0x1
..@0x8056ca0: db 0xc1, 0xea, 0x07  ;; shr edx,byte 0x7
..@0x8056ca3: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8056ca5: db 0x01, 0xd3  ;; add ebx,edx
..@0x8056ca7: cmp esi, strict byte 0x3
..@0x8056caa: db 0x89, 0x1d, 0x48, 0xca, 0x87, 0x09  ;; mov [0x987ca48],ebx
..@0x8056cb0: db 0x75, 0xc7  ;; jnz A.code+0x8056c79
..@0x8056cb2: jmp strict near R.code+0x8056b39
..@0x8056cb7: db 0x0f, 0xb6, 0x47, 0x08  ;; movzx eax,byte [edi+0x8]
..@0x8056cbb: db 0x0f, 0xb6, 0x57, 0x09  ;; movzx edx,byte [edi+0x9]
..@0x8056cbf: db 0x0f, 0xbe, 0x0d, 0x20, 0xc6, 0x87, 0x09  ;; movsx ecx,byte [0x987c620]
..@0x8056cc6: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8056cc9: db 0x01, 0xc2  ;; add edx,eax
..@0x8056ccb: db 0x89, 0xd0  ;; mov eax,edx
..@0x8056ccd: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8056cd0: db 0x29, 0xd0  ;; sub eax,edx
..@0x8056cd2: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8056cd7: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8056cd9: db 0x8d, 0x4a, 0xff  ;; lea ecx,[edx-0x1]
..@0x8056cdc: db 0x89, 0xc2  ;; mov edx,eax
..@0x8056cde: db 0xc1, 0xfa, 0x1f  ;; sar edx,byte 0x1f
..@0x8056ce1: db 0xf7, 0xf9  ;; idiv ecx
..@0x8056ce3: db 0x69, 0xc0, 0x01, 0x01, 0x01, 0x00  ;; imul eax,eax,dword 0x10101
..@0x8056ce9: db 0x8d, 0x98, 0x00, 0x00, 0x00, 0xff  ;; lea ebx,[eax-0x1000000]
..@0x8056cef: db 0x89, 0x1d, 0x48, 0xca, 0x87, 0x09  ;; mov [0x987ca48],ebx
..@0x8056cf5: jmp strict near R.code+0x8056b39
..@0x8056cfa: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8056cfe: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8056d02: db 0x8b, 0x7c, 0x24, 0x64  ;; mov edi,[esp+0x64]
..@0x8056d06: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8056d0a: db 0x89, 0x9c, 0x24, 0xc0, 0x00, 0x00, 0x00  ;; mov [esp+0xc0],ebx
..@0x8056d11: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x8056d15: db 0x89, 0xb4, 0x24, 0xbc, 0x00, 0x00, 0x00  ;; mov [esp+0xbc],esi
..@0x8056d1c: db 0x89, 0xbc, 0x24, 0xb8, 0x00, 0x00, 0x00  ;; mov [esp+0xb8],edi
..@0x8056d23: db 0x89, 0x8c, 0x24, 0xb0, 0x00, 0x00, 0x00  ;; mov [esp+0xb0],ecx
..@0x8056d2a: db 0x8b, 0x4c, 0x24, 0x6c  ;; mov ecx,[esp+0x6c]
..@0x8056d2e: db 0x89, 0x9c, 0x24, 0xb4, 0x00, 0x00, 0x00  ;; mov [esp+0xb4],ebx
..@0x8056d35: db 0x81, 0xc4, 0x9c, 0x00, 0x00, 0x00  ;; add esp,0x9c
..@0x8056d3b: pop ebx
..@0x8056d3c: pop esi
..@0x8056d3d: pop edi
..@0x8056d3e: pop ebp
..@0x8056d3f: jmp strict near R.code+0x8053aa0
..@0x8056d44: db 0x8d, 0x84, 0x16, 0x00, 0xfd, 0xff, 0xff  ;; lea eax,[esi+edx-0x300]
..@0x8056d4b: db 0xbb, 0x40, 0xc6, 0x87, 0x09  ;; mov ebx,0x987c640
..@0x8056d50: db 0x8d, 0xb0, 0x00, 0x03, 0x00, 0x00  ;; lea esi,[eax+0x300]
..@0x8056d56: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8056d59: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8056d60: db 0x0f, 0xb6, 0x08  ;; movzx ecx,byte [eax]
..@0x8056d63: db 0x0f, 0xb6, 0x50, 0x01  ;; movzx edx,byte [eax+0x1]
..@0x8056d67: db 0x0f, 0xb6, 0x78, 0x02  ;; movzx edi,byte [eax+0x2]
..@0x8056d6b: add eax, strict byte 0x3
..@0x8056d6e: db 0xc1, 0xe1, 0x10  ;; shl ecx,byte 0x10
..@0x8056d71: db 0xc1, 0xe2, 0x08  ;; shl edx,byte 0x8
..@0x8056d74: db 0x01, 0xca  ;; add edx,ecx
..@0x8056d76: db 0x8d, 0x94, 0x3a, 0x00, 0x00, 0x00, 0xff  ;; lea edx,[edx+edi-0x1000000]
..@0x8056d7d: db 0x89, 0x13  ;; mov [ebx],edx
..@0x8056d7f: add ebx, strict byte 0x4
..@0x8056d82: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8056d84: db 0x75, 0xda  ;; jnz A.code+0x8056d60
..@0x8056d86: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8056d8a: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x03  ;; mov byte [0x987ca4c],0x3
..@0x8056d91: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x8056d95: db 0xc6, 0x05, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; mov byte [0x987c620],0x8
..@0x8056d9c: db 0xc7, 0x05, 0x40, 0xca, 0x87, 0x09, 0x00, 0x01  ;; mov dword [0x987ca40],0x100
..@0x8056da4: db 0x00, 0x00
..@0x8056da6: db 0x03, 0x74, 0x24, 0x28  ;; add esi,[esp+0x28]
..@0x8056daa: db 0x01, 0xeb  ;; add ebx,ebp
..@0x8056dac: db 0x89, 0x5c, 0x24, 0x38  ;; mov [esp+0x38],ebx
..@0x8056db0: db 0x89, 0x74, 0x24, 0x44  ;; mov [esp+0x44],esi
..@0x8056db4: jmp strict near R.code+0x8056907
..@0x8056db9: db 0x8b, 0x4c, 0x24, 0x64  ;; mov ecx,[esp+0x64]
..@0x8056dbd: db 0x89, 0x6c, 0x24, 0x2c  ;; mov [esp+0x2c],ebp
..@0x8056dc1: db 0x89, 0xfd  ;; mov ebp,edi
..@0x8056dc3: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8056dc7: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8056dcb: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8056dcf: db 0x0f, 0xb6, 0x3a  ;; movzx edi,byte [edx]
..@0x8056dd2: db 0x89, 0xfa  ;; mov edx,edi
..@0x8056dd4: db 0x80, 0xfa, 0xbf  ;; cmp dl,0xbf
..@0x8056dd7: db 0x76, 0x64  ;; jna A.code+0x8056e3d
..@0x8056dd9: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8056ddd: db 0x83, 0x44, 0x24, 0x28, 0x02  ;; add dword [esp+0x28],byte +0x2
..@0x8056de2: and edi, strict byte 0x3f
..@0x8056de5: db 0x0f, 0xb6, 0x52, 0x01  ;; movzx edx,byte [edx+0x1]
..@0x8056de9: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x8056df0: db 0x89, 0x54, 0x24, 0x30  ;; mov [esp+0x30],edx
..@0x8056df4: db 0x74, 0x3a  ;; jz A.code+0x8056e30
..@0x8056df6: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8056dfa: db 0x89, 0x6c, 0x24, 0x3c  ;; mov [esp+0x3c],ebp
..@0x8056dfe: dw 0x9066  ;; o16 nop
..@0x8056e00: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8056e02: db 0x73, 0x0d  ;; jnc A.code+0x8056e11
..@0x8056e04: db 0x3b, 0x54, 0x24, 0x3c  ;; cmp edx,[esp+0x3c]
..@0x8056e08: db 0x73, 0x07  ;; jnc A.code+0x8056e11
..@0x8056e0a: db 0x8b, 0x6c, 0x24, 0x30  ;; mov ebp,[esp+0x30]
..@0x8056e0e: db 0x89, 0x2c, 0x32  ;; mov [edx+esi],ebp
..@0x8056e11: add edx, strict byte 0x4
..@0x8056e14: db 0x39, 0xd3  ;; cmp ebx,edx
..@0x8056e16: db 0x7f, 0x0b  ;; jg A.code+0x8056e23
..@0x8056e18: db 0x03, 0x74, 0x24, 0x34  ;; add esi,[esp+0x34]
..@0x8056e1c: add eax, strict byte 0x1
..@0x8056e1f: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8056e23: sub edi, strict byte 0x1
..@0x8056e26: db 0x75, 0xd8  ;; jnz A.code+0x8056e00
..@0x8056e28: db 0x8b, 0x6c, 0x24, 0x3c  ;; mov ebp,[esp+0x3c]
..@0x8056e2c: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8056e30: db 0x3b, 0x44, 0x24, 0x44  ;; cmp eax,[esp+0x44]
..@0x8056e34: db 0x7c, 0x95  ;; jl A.code+0x8056dcb
..@0x8056e36: db 0x31, 0xc0  ;; xor eax,eax
..@0x8056e38: jmp strict near R.code+0x8056704
..@0x8056e3d: db 0x81, 0xe7, 0xff, 0x00, 0x00, 0x00  ;; and edi,0xff
..@0x8056e43: db 0x89, 0x6c, 0x24, 0x3c  ;; mov [esp+0x3c],ebp
..@0x8056e47: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8056e4b: db 0x8b, 0x3c, 0xbd, 0x40, 0xc6, 0x87, 0x09  ;; mov edi,[edi*4+0x987c640]
..@0x8056e52: db 0x83, 0x44, 0x24, 0x28, 0x01  ;; add dword [esp+0x28],byte +0x1
..@0x8056e57: db 0x89, 0x7c, 0x24, 0x30  ;; mov [esp+0x30],edi
..@0x8056e5b: db 0xbf, 0x01, 0x00, 0x00, 0x00  ;; mov edi,0x1
..@0x8056e60: db 0xeb, 0x9e  ;; jmp short A.code+0x8056e00
..@0x8056e62: db 0xa1, 0x40, 0xca, 0x87, 0x09  ;; mov eax,[0x987ca40]
..@0x8056e67: db 0x39, 0x44, 0x24, 0x28  ;; cmp [esp+0x28],eax
..@0x8056e6b: db 0x0f, 0x4e, 0x44, 0x24, 0x28  ;; cmovng eax,[esp+0x28]
..@0x8056e70: sub eax, strict byte 0x1
..@0x8056e73: db 0x0f, 0x88, 0x13, 0xf6, 0xff, 0xff  ;; js near A.code+0x805648c
..@0x8056e79: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8056e80: db 0x0f, 0xb6, 0x54, 0x07, 0x08  ;; movzx edx,byte [edi+eax+0x8]
..@0x8056e85: db 0xc1, 0xe2, 0x18  ;; shl edx,byte 0x18
..@0x8056e88: db 0x81, 0xca, 0xff, 0xff, 0xff, 0x00  ;; or edx,0xffffff
..@0x8056e8e: db 0x21, 0x14, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; and [eax*4+0x987c640],edx
..@0x8056e95: sub eax, strict byte 0x1
..@0x8056e98: cmp eax, strict byte -0x1
..@0x8056e9b: db 0x75, 0xe3  ;; jnz A.code+0x8056e80
..@0x8056e9d: jmp strict near R.code+0x805648c
..@0x8056ea2: db 0x80, 0x3d, 0x20, 0xc6, 0x87, 0x09, 0x08  ;; cmp byte [0x987c620],0x8
..@0x8056ea9: db 0x0f, 0x85, 0xdd, 0xf5, 0xff, 0xff  ;; jnz near A.code+0x805648c
..@0x8056eaf: db 0x0f, 0xb6, 0x57, 0x09  ;; movzx edx,byte [edi+0x9]
..@0x8056eb3: db 0x0f, 0xb6, 0x47, 0x0b  ;; movzx eax,byte [edi+0xb]
..@0x8056eb7: db 0x0f, 0xb6, 0x4f, 0x0d  ;; movzx ecx,byte [edi+0xd]
..@0x8056ebb: db 0xc1, 0xe2, 0x10  ;; shl edx,byte 0x10
..@0x8056ebe: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8056ec1: db 0x01, 0xd0  ;; add eax,edx
..@0x8056ec3: db 0x8d, 0x84, 0x08, 0x00, 0x00, 0x00, 0xff  ;; lea eax,[eax+ecx-0x1000000]
..@0x8056eca: db 0xa3, 0x10, 0xe1, 0x83, 0x09  ;; mov [0x983e110],eax
..@0x8056ecf: jmp strict near R.code+0x805648c
..@0x8056ed4: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x8056ed8: db 0x89, 0x2d, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],ebp
..@0x8056ede: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8056ee3: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x8056ee7: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x8056eeb: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x8056eef: db 0x89, 0x3d, 0x14, 0xe1, 0x83, 0x09  ;; mov [0x983e114],edi
..@0x8056ef5: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x8056ef9: db 0x89, 0x2d, 0x18, 0xe1, 0x83, 0x09  ;; mov [0x983e118],ebp
..@0x8056eff: db 0x8b, 0x6c, 0x24, 0x60  ;; mov ebp,[esp+0x60]
..@0x8056f03: db 0x89, 0x1d, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],ebx
..@0x8056f09: db 0x89, 0x35, 0xd0, 0xd1, 0x05, 0x08  ;; mov [0x805d1d0],esi
..@0x8056f0f: db 0x89, 0x3d, 0xd4, 0xd1, 0x05, 0x08  ;; mov [0x805d1d4],edi
..@0x8056f15: db 0x89, 0x2d, 0xd8, 0xd1, 0x05, 0x08  ;; mov [0x805d1d8],ebp
..@0x8056f1b: jmp strict near R.code+0x80563cb
..@0x8056f20: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x8056f24: db 0xc7, 0x05, 0x20, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e120],0x0
..@0x8056f2c: db 0x00, 0x00
..@0x8056f2e: db 0x8b, 0x74, 0x24, 0x44  ;; mov esi,[esp+0x44]
..@0x8056f32: db 0xc7, 0x05, 0x28, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e128],0x0
..@0x8056f3a: db 0x00, 0x00
..@0x8056f3c: db 0x8b, 0x7c, 0x24, 0x38  ;; mov edi,[esp+0x38]
..@0x8056f40: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8056f44: db 0x89, 0x1d, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],ebx
..@0x8056f4a: db 0x8b, 0x5c, 0x24, 0x60  ;; mov ebx,[esp+0x60]
..@0x8056f4e: db 0x89, 0x35, 0x14, 0xe1, 0x83, 0x09  ;; mov [0x983e114],esi
..@0x8056f54: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x8056f58: db 0x89, 0x3d, 0x18, 0xe1, 0x83, 0x09  ;; mov [0x983e118],edi
..@0x8056f5e: db 0x8b, 0x7c, 0x24, 0x4c  ;; mov edi,[esp+0x4c]
..@0x8056f62: sub eax, strict byte 0x4
..@0x8056f65: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8056f69: db 0x89, 0x1d, 0xd8, 0xd1, 0x05, 0x08  ;; mov [0x805d1d8],ebx
..@0x8056f6f: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x8056f73: db 0x8d, 0x54, 0x05, 0x00  ;; lea edx,[ebp+eax+0x0]
..@0x8056f77: db 0xc1, 0xe0, 0x03  ;; shl eax,byte 0x3
..@0x8056f7a: db 0x89, 0x35, 0xd0, 0xd1, 0x05, 0x08  ;; mov [0x805d1d0],esi
..@0x8056f80: db 0x8b, 0x74, 0x24, 0x64  ;; mov esi,[esp+0x64]
..@0x8056f84: db 0xf7, 0xd8  ;; neg eax
..@0x8056f86: db 0x89, 0x3d, 0xd4, 0xd1, 0x05, 0x08  ;; mov [0x805d1d4],edi
..@0x8056f8c: db 0x8b, 0x7c, 0x24, 0x40  ;; mov edi,[esp+0x40]
..@0x8056f90: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8056f95: db 0x0f, 0xb6, 0x05, 0x4c, 0xca, 0x87, 0x09  ;; movzx eax,byte [0x987ca4c]
..@0x8056f9c: db 0x89, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],edx
..@0x8056fa2: db 0x8b, 0x54, 0x24, 0x6c  ;; mov edx,[esp+0x6c]
..@0x8056fa6: db 0x89, 0x1d, 0x34, 0xe1, 0x83, 0x09  ;; mov [0x983e134],ebx
..@0x8056fac: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8056fb0: db 0x89, 0x0d, 0x30, 0xe1, 0x83, 0x09  ;; mov [0x983e130],ecx
..@0x8056fb6: db 0x3c, 0x04  ;; cmp al,0x4
..@0x8056fb8: db 0x89, 0x35, 0x38, 0xe1, 0x83, 0x09  ;; mov [0x983e138],esi
..@0x8056fbe: db 0x89, 0x15, 0x2c, 0xe1, 0x83, 0x09  ;; mov [0x983e12c],edx
..@0x8056fc4: db 0x89, 0x3d, 0x3c, 0xe1, 0x83, 0x09  ;; mov [0x983e13c],edi
..@0x8056fca: db 0x89, 0x1d, 0x40, 0xe1, 0x83, 0x09  ;; mov [0x983e140],ebx
..@0x8056fd0: db 0x0f, 0x84, 0x9a, 0x0e, 0x00, 0x00  ;; jz near A.code+0x8057e70
..@0x8056fd6: db 0x3c, 0x06  ;; cmp al,0x6
..@0x8056fd8: db 0x0f, 0x84, 0x65, 0x0e, 0x00, 0x00  ;; jz near A.code+0x8057e43
..@0x8056fde: db 0x3c, 0x02  ;; cmp al,0x2
..@0x8056fe0: db 0x0f, 0x84, 0x37, 0x16, 0x00, 0x00  ;; jz near A.code+0x805861d
..@0x8056fe6: db 0xc7, 0x05, 0x44, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e144],0x0
..@0x8056fee: db 0x00, 0x00
..@0x8056ff0: db 0x0f, 0xb6, 0x15, 0x20, 0xc6, 0x87, 0x09  ;; movzx edx,byte [0x987c620]
..@0x8056ff7: db 0x80, 0xfa, 0x02  ;; cmp dl,0x2
..@0x8056ffa: db 0x0f, 0x84, 0xd2, 0x15, 0x00, 0x00  ;; jz near A.code+0x80585d2
..@0x8057000: db 0x80, 0xfa, 0x04  ;; cmp dl,0x4
..@0x8057003: db 0x0f, 0x84, 0x7f, 0x15, 0x00, 0x00  ;; jz near A.code+0x8058588
..@0x8057009: db 0x80, 0xfa, 0x01  ;; cmp dl,0x1
..@0x805700c: db 0x0f, 0x84, 0x77, 0x0e, 0x00, 0x00  ;; jz near A.code+0x8057e89
..@0x8057012: db 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea ecx,[eax*4+0x0]
..@0x8057019: db 0xb8, 0x01, 0x13, 0x02, 0x04  ;; mov eax,0x4021301
..@0x805701e: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8057020: and eax, strict byte 0xf
..@0x8057023: db 0x0f, 0xaf, 0x05, 0x14, 0xe1, 0x83, 0x09  ;; imul eax,[0x983e114]
..@0x805702a: db 0x80, 0xfa, 0x02  ;; cmp dl,0x2
..@0x805702d: db 0xa3, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],eax
..@0x8057032: db 0x0f, 0x84, 0xd5, 0x15, 0x00, 0x00  ;; jz near A.code+0x805860d
..@0x8057038: db 0x80, 0xfa, 0x04  ;; cmp dl,0x4
..@0x805703b: db 0x0f, 0x84, 0x82, 0x15, 0x00, 0x00  ;; jz near A.code+0x80585c3
..@0x8057041: db 0x80, 0xfa, 0x01  ;; cmp dl,0x1
..@0x8057044: db 0x0f, 0x84, 0x7a, 0x0e, 0x00, 0x00  ;; jz near A.code+0x8057ec4
..@0x805704a: add eax, strict byte 0x1
..@0x805704d: db 0x3d, 0x00, 0x00, 0x01, 0x00  ;; cmp eax,0x10000
..@0x8057052: db 0x0f, 0x87, 0x6e, 0xf3, 0xff, 0xff  ;; ja near A.code+0x80563c6
..@0x8057058: call R.code+0x8052e50
..@0x805705d: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057062: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8057068: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805706a: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805706c: add eax, strict byte 0x10
..@0x805706f: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8057072: and ecx, strict byte 0x7
..@0x8057075: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805707a: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805707d: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805707f: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x8057085: db 0x85, 0xc0  ;; test eax,eax
..@0x8057087: db 0x78, 0x10  ;; js A.code+0x8057099
..@0x8057089: call R.code+0x8052cd0
..@0x805708e: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8057094: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057099: db 0x89, 0x1d, 0x24, 0xc6, 0x87, 0x09  ;; mov [0x987c624],ebx
..@0x805709f: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80570a1: db 0xc7, 0x44, 0x24, 0x2c, 0x00, 0x40, 0x00, 0x00  ;; mov dword [esp+0x2c],0x4000
..@0x80570a9: db 0x89, 0xdd  ;; mov ebp,ebx
..@0x80570ab: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80570ad: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80570af: add eax, strict byte 0x1
..@0x80570b2: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x80570b5: and ecx, strict byte 0x7
..@0x80570b8: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x80570bd: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x80570c0: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x80570c2: and ebx, strict byte 0x1
..@0x80570c5: db 0x85, 0xc0  ;; test eax,eax
..@0x80570c7: db 0x89, 0x5c, 0x24, 0x28  ;; mov [esp+0x28],ebx
..@0x80570cb: db 0x78, 0x10  ;; js A.code+0x80570dd
..@0x80570cd: call R.code+0x8052cd0
..@0x80570d2: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x80570d8: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x80570dd: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80570df: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80570e1: add eax, strict byte 0x2
..@0x80570e4: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x80570e7: and ecx, strict byte 0x7
..@0x80570ea: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x80570ef: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x80570f2: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x80570f4: and ebx, strict byte 0x3
..@0x80570f7: db 0x85, 0xc0  ;; test eax,eax
..@0x80570f9: db 0x78, 0x05  ;; js A.code+0x8057100
..@0x80570fb: call R.code+0x8052cd0
..@0x8057100: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8057102: db 0x0f, 0x84, 0x51, 0x03, 0x00, 0x00  ;; jz near A.code+0x8057459
..@0x8057108: cmp ebx, strict byte 0x3
..@0x805710b: db 0x0f, 0x84, 0x70, 0x04, 0x00, 0x00  ;; jz near A.code+0x8057581
..@0x8057111: cmp ebx, strict byte 0x1
..@0x8057114: db 0x0f, 0x85, 0x83, 0x04, 0x00, 0x00  ;; jnz near A.code+0x805759d
..@0x805711a: db 0x31, 0xc0  ;; xor eax,eax
..@0x805711c: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x08  ;; mov dword [eax*4+0x9846180],0x8
..@0x8057124: db 0x00, 0x00, 0x00
..@0x8057127: add eax, strict byte 0x1
..@0x805712a: db 0x3d, 0x90, 0x00, 0x00, 0x00  ;; cmp eax,0x90
..@0x805712f: db 0x75, 0xeb  ;; jnz A.code+0x805711c
..@0x8057131: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x09  ;; mov dword [eax*4+0x9846180],0x9
..@0x8057139: db 0x00, 0x00, 0x00
..@0x805713c: add eax, strict byte 0x1
..@0x805713f: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x8057144: db 0x75, 0xeb  ;; jnz A.code+0x8057131
..@0x8057146: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x07  ;; mov dword [eax*4+0x9846180],0x7
..@0x805714e: db 0x00, 0x00, 0x00
..@0x8057151: add eax, strict byte 0x1
..@0x8057154: db 0x3d, 0x18, 0x01, 0x00, 0x00  ;; cmp eax,0x118
..@0x8057159: db 0x75, 0xeb  ;; jnz A.code+0x8057146
..@0x805715b: db 0xc7, 0x05, 0xe0, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465e0],0x8
..@0x8057163: db 0x00, 0x00
..@0x8057165: db 0xb8, 0x00, 0x66, 0x84, 0x09  ;; mov eax,0x9846600
..@0x805716a: db 0xc7, 0x05, 0xe4, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465e4],0x8
..@0x8057172: db 0x00, 0x00
..@0x8057174: db 0xc7, 0x05, 0xe8, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465e8],0x8
..@0x805717c: db 0x00, 0x00
..@0x805717e: db 0xc7, 0x05, 0xec, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465ec],0x8
..@0x8057186: db 0x00, 0x00
..@0x8057188: db 0xc7, 0x05, 0xf0, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465f0],0x8
..@0x8057190: db 0x00, 0x00
..@0x8057192: db 0xc7, 0x05, 0xf4, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465f4],0x8
..@0x805719a: db 0x00, 0x00
..@0x805719c: db 0xc7, 0x05, 0xf8, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465f8],0x8
..@0x80571a4: db 0x00, 0x00
..@0x80571a6: db 0xc7, 0x05, 0xfc, 0x65, 0x84, 0x09, 0x08, 0x00  ;; mov dword [0x98465fc],0x8
..@0x80571ae: db 0x00, 0x00
..@0x80571b0: db 0xc7, 0x00, 0x05, 0x00, 0x00, 0x00  ;; mov dword [eax],0x5
..@0x80571b6: add eax, strict byte 0x4
..@0x80571b9: db 0x3d, 0x80, 0x66, 0x84, 0x09  ;; cmp eax,0x9846680
..@0x80571be: db 0x75, 0xf0  ;; jnz A.code+0x80571b0
..@0x80571c0: db 0xc7, 0x44, 0x24, 0x30, 0x20, 0x00, 0x00, 0x00  ;; mov dword [esp+0x30],0x20
..@0x80571c8: db 0xbf, 0x20, 0x01, 0x00, 0x00  ;; mov edi,0x120
..@0x80571cd: db 0xb9, 0xe0, 0x66, 0x84, 0x09  ;; mov ecx,0x98466e0
..@0x80571d2: db 0x89, 0xfa  ;; mov edx,edi
..@0x80571d4: db 0xb8, 0x80, 0x61, 0x84, 0x09  ;; mov eax,0x9846180
..@0x80571d9: db 0xc7, 0x04, 0x24, 0x60, 0x6b, 0x84, 0x09  ;; mov dword [esp],0x9846b60
..@0x80571e0: call R.code+0x8052430
..@0x80571e5: db 0xb9, 0xe0, 0x6b, 0x84, 0x09  ;; mov ecx,0x9846be0
..@0x80571ea: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x80571ef: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x80571f4: db 0xc7, 0x44, 0x24, 0x04, 0x09, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x9
..@0x80571fc: db 0xc7, 0x04, 0x24, 0xe0, 0x73, 0x84, 0x09  ;; mov dword [esp],0x98473e0
..@0x8057203: call R.code+0x8052300
..@0x8057208: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x805720c: db 0x8d, 0x04, 0xbd, 0x80, 0x61, 0x84, 0x09  ;; lea eax,[edi*4+0x9846180]
..@0x8057213: db 0xb9, 0xe0, 0x75, 0x84, 0x09  ;; mov ecx,0x98475e0
..@0x8057218: db 0xc7, 0x04, 0x24, 0x60, 0x76, 0x84, 0x09  ;; mov dword [esp],0x9847660
..@0x805721f: call R.code+0x8052430
..@0x8057224: db 0xb9, 0xe0, 0x76, 0x84, 0x09  ;; mov ecx,0x98476e0
..@0x8057229: db 0xba, 0x60, 0x76, 0x84, 0x09  ;; mov edx,0x9847660
..@0x805722e: db 0xc7, 0x44, 0x24, 0x04, 0x06, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x6
..@0x8057236: db 0xb8, 0xe0, 0x75, 0x84, 0x09  ;; mov eax,0x98475e0
..@0x805723b: db 0xc7, 0x04, 0x24, 0xe0, 0x77, 0x84, 0x09  ;; mov dword [esp],0x98477e0
..@0x8057242: call R.code+0x8052300
..@0x8057247: db 0x3b, 0x6c, 0x24, 0x2c  ;; cmp ebp,[esp+0x2c]
..@0x805724b: db 0x7d, 0x65  ;; jnl A.code+0x80572b2
..@0x805724d: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x8057253: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x8057259: db 0x89, 0xd0  ;; mov eax,edx
..@0x805725b: db 0x89, 0xd1  ;; mov ecx,edx
..@0x805725d: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8057260: and ecx, strict byte 0x7
..@0x8057263: db 0x8b, 0x04, 0x03  ;; mov eax,[ebx+eax]
..@0x8057266: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8057268: db 0x25, 0xff, 0x01, 0x00, 0x00  ;; and eax,0x1ff
..@0x805726d: db 0x0f, 0xb6, 0x88, 0xe0, 0x73, 0x84, 0x09  ;; movzx ecx,byte [eax+0x98473e0]
..@0x8057274: db 0x84, 0xc9  ;; test cl,cl
..@0x8057276: db 0x0f, 0x84, 0xa5, 0x01, 0x00, 0x00  ;; jz near A.code+0x8057421
..@0x805727c: db 0x01, 0xca  ;; add edx,ecx
..@0x805727e: db 0x8b, 0x1c, 0x85, 0xe0, 0x6b, 0x84, 0x09  ;; mov ebx,[eax*4+0x9846be0]
..@0x8057285: db 0x85, 0xd2  ;; test edx,edx
..@0x8057287: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x805728d: db 0x78, 0x05  ;; js A.code+0x8057294
..@0x805728f: call R.code+0x8052cd0
..@0x8057294: db 0x81, 0xfb, 0xff, 0x00, 0x00, 0x00  ;; cmp ebx,0xff
..@0x805729a: db 0x7f, 0x7c  ;; jg A.code+0x8057318
..@0x805729c: db 0x89, 0xe8  ;; mov eax,ebp
..@0x805729e: add ebp, strict byte 0x1
..@0x80572a1: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x80572a6: db 0x3b, 0x6c, 0x24, 0x2c  ;; cmp ebp,[esp+0x2c]
..@0x80572aa: db 0x88, 0x98, 0x60, 0xe1, 0x83, 0x09  ;; mov [eax+0x983e160],bl
..@0x80572b0: db 0x7c, 0x9b  ;; jl A.code+0x805724d
..@0x80572b2: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x80572b6: db 0xba, 0x00, 0x40, 0x00, 0x00  ;; mov edx,0x4000
..@0x80572bb: db 0x2d, 0x00, 0x40, 0x00, 0x00  ;; sub eax,0x4000
..@0x80572c0: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x80572c5: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x80572ca: call R.code+0x80531d0
..@0x80572cf: db 0x8b, 0x0d, 0x38, 0xe1, 0x83, 0x09  ;; mov ecx,[0x983e138]
..@0x80572d5: db 0x81, 0x44, 0x24, 0x2c, 0x00, 0x40, 0x00, 0x00  ;; add dword [esp+0x2c],0x4000
..@0x80572dd: db 0x39, 0x0d, 0x60, 0x61, 0x84, 0x09  ;; cmp [0x9846160],ecx
..@0x80572e3: db 0x0f, 0x8c, 0x64, 0xff, 0xff, 0xff  ;; jl near A.code+0x805724d
..@0x80572e9: db 0x83, 0x3d, 0x1c, 0xe1, 0x83, 0x09, 0x01  ;; cmp dword [0x983e11c],byte +0x1
..@0x80572f0: db 0x0f, 0x8f, 0x57, 0xff, 0xff, 0xff  ;; jg near A.code+0x805724d
..@0x80572f6: db 0x31, 0xc0  ;; xor eax,eax
..@0x80572f8: db 0x80, 0x3d, 0x4c, 0xca, 0x87, 0x09, 0x04  ;; cmp byte [0x987ca4c],0x4
..@0x80572ff: db 0x0f, 0x85, 0xc6, 0xf0, 0xff, 0xff  ;; jnz near A.code+0x80563cb
..@0x8057305: db 0xc7, 0x05, 0x40, 0xca, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987ca40],0x0
..@0x805730d: db 0x00, 0x00
..@0x805730f: jmp strict near R.code+0x80563cb
..@0x8057314: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8057318: db 0x81, 0xfb, 0x00, 0x01, 0x00, 0x00  ;; cmp ebx,0x100
..@0x805731e: db 0x0f, 0x84, 0x5d, 0x02, 0x00, 0x00  ;; jz near A.code+0x8057581
..@0x8057324: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057329: db 0x8d, 0xbb, 0x1d, 0xff, 0xff, 0xff  ;; lea edi,[ebx-0xe3]
..@0x805732f: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x8057335: db 0x8b, 0x14, 0xfd, 0x20, 0x78, 0x84, 0x09  ;; mov edx,[edi*8+0x9847820]
..@0x805733c: db 0x89, 0xc6  ;; mov esi,eax
..@0x805733e: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057340: db 0xc1, 0xfe, 0x03  ;; sar esi,byte 0x3
..@0x8057343: and ecx, strict byte 0x7
..@0x8057346: db 0x8b, 0x34, 0x33  ;; mov esi,[ebx+esi]
..@0x8057349: db 0x01, 0xd0  ;; add eax,edx
..@0x805734b: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8057350: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8057352: db 0x23, 0x34, 0x95, 0x00, 0xb9, 0x05, 0x08  ;; and esi,[edx*4+0x805b900]
..@0x8057359: db 0x85, 0xc0  ;; test eax,eax
..@0x805735b: db 0x78, 0x10  ;; js A.code+0x805736d
..@0x805735d: call R.code+0x8052cd0
..@0x8057362: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x8057368: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805736d: db 0x89, 0xc2  ;; mov edx,eax
..@0x805736f: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057371: db 0x03, 0x34, 0xfd, 0x24, 0x78, 0x84, 0x09  ;; add esi,[edi*8+0x9847824]
..@0x8057378: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805737b: and ecx, strict byte 0x7
..@0x805737e: db 0x8b, 0x14, 0x13  ;; mov edx,[ebx+edx]
..@0x8057381: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8057383: and edx, strict byte 0x3f
..@0x8057386: db 0x0f, 0xb6, 0x8a, 0xe0, 0x77, 0x84, 0x09  ;; movzx ecx,byte [edx+0x98477e0]
..@0x805738d: db 0x84, 0xc9  ;; test cl,cl
..@0x805738f: db 0x0f, 0x84, 0xa2, 0x00, 0x00, 0x00  ;; jz near A.code+0x8057437
..@0x8057395: db 0x8b, 0x3c, 0x95, 0xe0, 0x76, 0x84, 0x09  ;; mov edi,[edx*4+0x98476e0]
..@0x805739c: db 0x0f, 0xb6, 0xd1  ;; movzx edx,cl
..@0x805739f: db 0x01, 0xc2  ;; add edx,eax
..@0x80573a1: db 0x85, 0xd2  ;; test edx,edx
..@0x80573a3: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x80573a9: db 0x78, 0x11  ;; js A.code+0x80573bc
..@0x80573ab: call R.code+0x8052cd0
..@0x80573b0: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x80573b6: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x80573bc: db 0x89, 0xd0  ;; mov eax,edx
..@0x80573be: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80573c0: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x80573c3: and ecx, strict byte 0x7
..@0x80573c6: db 0x8b, 0x1c, 0x03  ;; mov ebx,[ebx+eax]
..@0x80573c9: db 0x8b, 0x04, 0xfd, 0x20, 0x78, 0x84, 0x09  ;; mov eax,[edi*8+0x9847820]
..@0x80573d0: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x80573d2: db 0x01, 0xc2  ;; add edx,eax
..@0x80573d4: db 0x23, 0x1c, 0x85, 0x00, 0xb9, 0x05, 0x08  ;; and ebx,[eax*4+0x805b900]
..@0x80573db: db 0x85, 0xd2  ;; test edx,edx
..@0x80573dd: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x80573e3: db 0x78, 0x05  ;; js A.code+0x80573ea
..@0x80573e5: call R.code+0x8052cd0
..@0x80573ea: db 0x03, 0x1c, 0xfd, 0x24, 0x78, 0x84, 0x09  ;; add ebx,[edi*8+0x9847824]
..@0x80573f1: db 0x01, 0xee  ;; add esi,ebp
..@0x80573f3: nop
..@0x80573f4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80573f8: db 0x89, 0xe8  ;; mov eax,ebp
..@0x80573fa: db 0x29, 0xd8  ;; sub eax,ebx
..@0x80573fc: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8057401: db 0x0f, 0xb6, 0x90, 0x60, 0xe1, 0x83, 0x09  ;; movzx edx,byte [eax+0x983e160]
..@0x8057408: db 0x89, 0xe8  ;; mov eax,ebp
..@0x805740a: add ebp, strict byte 0x1
..@0x805740d: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8057412: db 0x39, 0xee  ;; cmp esi,ebp
..@0x8057414: db 0x88, 0x90, 0x60, 0xe1, 0x83, 0x09  ;; mov [eax+0x983e160],dl
..@0x805741a: db 0x7f, 0xdc  ;; jg A.code+0x80573f8
..@0x805741c: jmp strict near R.code+0x8057247
..@0x8057421: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x8057426: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x805742b: call R.code+0x8055c10
..@0x8057430: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8057432: jmp strict near R.code+0x8057294
..@0x8057437: db 0xba, 0x60, 0x76, 0x84, 0x09  ;; mov edx,0x9847660
..@0x805743c: db 0xb8, 0xe0, 0x75, 0x84, 0x09  ;; mov eax,0x98475e0
..@0x8057441: call R.code+0x8055c10
..@0x8057446: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x805744c: db 0x89, 0xc7  ;; mov edi,eax
..@0x805744e: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x8057454: jmp strict near R.code+0x80573bc
..@0x8057459: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x805745f: db 0x89, 0xd0  ;; mov eax,edx
..@0x8057461: db 0xf7, 0xd8  ;; neg eax
..@0x8057463: and eax, strict byte 0x7
..@0x8057466: db 0x01, 0xd0  ;; add eax,edx
..@0x8057468: db 0x85, 0xc0  ;; test eax,eax
..@0x805746a: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805746f: db 0x78, 0x0a  ;; js A.code+0x805747b
..@0x8057471: call R.code+0x8052cd0
..@0x8057476: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805747b: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8057481: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8057483: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057485: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8057488: and ecx, strict byte 0x7
..@0x805748b: add eax, strict byte 0x10
..@0x805748e: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8057493: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x8057496: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8057498: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x805749e: db 0x85, 0xc0  ;; test eax,eax
..@0x80574a0: db 0x78, 0x10  ;; js A.code+0x80574b2
..@0x80574a2: call R.code+0x8052cd0
..@0x80574a7: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x80574ad: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x80574b2: db 0x89, 0xc6  ;; mov esi,eax
..@0x80574b4: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80574b6: add eax, strict byte 0x10
..@0x80574b9: db 0xc1, 0xfe, 0x03  ;; sar esi,byte 0x3
..@0x80574bc: and ecx, strict byte 0x7
..@0x80574bf: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x80574c4: db 0x8b, 0x34, 0x32  ;; mov esi,[edx+esi]
..@0x80574c7: db 0xd3, 0xfe  ;; sar esi,cl
..@0x80574c9: db 0x81, 0xe6, 0xff, 0xff, 0x00, 0x00  ;; and esi,0xffff
..@0x80574cf: db 0x85, 0xc0  ;; test eax,eax
..@0x80574d1: db 0x78, 0x05  ;; js A.code+0x80574d8
..@0x80574d3: call R.code+0x8052cd0
..@0x80574d8: db 0x31, 0xde  ;; xor esi,ebx
..@0x80574da: db 0x81, 0xfe, 0xff, 0xff, 0x00, 0x00  ;; cmp esi,0xffff
..@0x80574e0: db 0x0f, 0x85, 0xe0, 0xee, 0xff, 0xff  ;; jnz near A.code+0x80563c6
..@0x80574e6: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80574e8: db 0x0f, 0x84, 0x93, 0x00, 0x00, 0x00  ;; jz near A.code+0x8057581
..@0x80574ee: db 0x3b, 0x6c, 0x24, 0x2c  ;; cmp ebp,[esp+0x2c]
..@0x80574f2: db 0x7c, 0x40  ;; jl A.code+0x8057534
..@0x80574f4: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x80574f8: db 0xba, 0x00, 0x40, 0x00, 0x00  ;; mov edx,0x4000
..@0x80574fd: db 0x2d, 0x00, 0x40, 0x00, 0x00  ;; sub eax,0x4000
..@0x8057502: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8057507: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x805750c: call R.code+0x80531d0
..@0x8057511: db 0x8b, 0x35, 0x38, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e138]
..@0x8057517: db 0x81, 0x44, 0x24, 0x2c, 0x00, 0x40, 0x00, 0x00  ;; add dword [esp+0x2c],0x4000
..@0x805751f: db 0x39, 0x35, 0x60, 0x61, 0x84, 0x09  ;; cmp [0x9846160],esi
..@0x8057525: db 0x7c, 0x0d  ;; jl A.code+0x8057534
..@0x8057527: db 0x83, 0x3d, 0x1c, 0xe1, 0x83, 0x09, 0x01  ;; cmp dword [0x983e11c],byte +0x1
..@0x805752e: db 0x0f, 0x8e, 0xc2, 0xfd, 0xff, 0xff  ;; jng near A.code+0x80572f6
..@0x8057534: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057539: db 0x89, 0xee  ;; mov esi,ebp
..@0x805753b: db 0x8b, 0x3d, 0x0c, 0xe1, 0x83, 0x09  ;; mov edi,[0x983e10c]
..@0x8057541: db 0x81, 0xe6, 0xff, 0x7f, 0x00, 0x00  ;; and esi,0x7fff
..@0x8057547: db 0x89, 0xc2  ;; mov edx,eax
..@0x8057549: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805754b: add eax, strict byte 0x8
..@0x805754e: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8057551: and ecx, strict byte 0x7
..@0x8057554: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8057559: db 0x8b, 0x3c, 0x17  ;; mov edi,[edi+edx]
..@0x805755c: db 0xd3, 0xff  ;; sar edi,cl
..@0x805755e: db 0x81, 0xe7, 0xff, 0x00, 0x00, 0x00  ;; and edi,0xff
..@0x8057564: db 0x85, 0xc0  ;; test eax,eax
..@0x8057566: db 0x78, 0x05  ;; js A.code+0x805756d
..@0x8057568: call R.code+0x8052cd0
..@0x805756d: db 0x89, 0xf8  ;; mov eax,edi
..@0x805756f: add ebp, strict byte 0x1
..@0x8057572: sub ebx, strict byte 0x1
..@0x8057575: db 0x88, 0x86, 0x60, 0xe1, 0x83, 0x09  ;; mov [esi+0x983e160],al
..@0x805757b: db 0x0f, 0x85, 0x6d, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80574ee
..@0x8057581: db 0x8b, 0x7c, 0x24, 0x28  ;; mov edi,[esp+0x28]
..@0x8057585: db 0x85, 0xff  ;; test edi,edi
..@0x8057587: db 0x0f, 0x85, 0xa1, 0x0f, 0x00, 0x00  ;; jnz near A.code+0x805852e
..@0x805758d: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8057593: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057598: jmp strict near R.code+0x80570ab
..@0x805759d: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x80575a3: db 0x83, 0x05, 0x44, 0xca, 0x87, 0x09, 0x01  ;; add dword [0x987ca44],byte +0x1
..@0x80575aa: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x80575af: db 0x89, 0xd3  ;; mov ebx,edx
..@0x80575b1: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80575b3: add edx, strict byte 0x5
..@0x80575b6: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x80575b9: and ecx, strict byte 0x7
..@0x80575bc: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x80575c2: db 0x8b, 0x1c, 0x18  ;; mov ebx,[eax+ebx]
..@0x80575c5: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x80575c7: and ebx, strict byte 0x1f
..@0x80575ca: db 0x85, 0xd2  ;; test edx,edx
..@0x80575cc: db 0x78, 0x10  ;; js A.code+0x80575de
..@0x80575ce: call R.code+0x8052cd0
..@0x80575d3: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x80575d8: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x80575de: db 0x8d, 0xbb, 0x01, 0x01, 0x00, 0x00  ;; lea edi,[ebx+0x101]
..@0x80575e4: db 0x89, 0xd3  ;; mov ebx,edx
..@0x80575e6: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80575e8: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x80575eb: and ecx, strict byte 0x7
..@0x80575ee: add edx, strict byte 0x5
..@0x80575f1: db 0x8b, 0x1c, 0x18  ;; mov ebx,[eax+ebx]
..@0x80575f4: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x80575fa: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x80575fc: and ebx, strict byte 0x1f
..@0x80575ff: db 0x85, 0xd2  ;; test edx,edx
..@0x8057601: db 0x78, 0x10  ;; js A.code+0x8057613
..@0x8057603: call R.code+0x8052cd0
..@0x8057608: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x805760d: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x8057613: add ebx, strict byte 0x1
..@0x8057616: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8057618: db 0x89, 0x5c, 0x24, 0x30  ;; mov [esp+0x30],ebx
..@0x805761c: db 0x89, 0xd3  ;; mov ebx,edx
..@0x805761e: and ecx, strict byte 0x7
..@0x8057621: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8057624: add edx, strict byte 0x4
..@0x8057627: db 0x8b, 0x1c, 0x18  ;; mov ebx,[eax+ebx]
..@0x805762a: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x8057630: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8057632: and ebx, strict byte 0xf
..@0x8057635: db 0x85, 0xd2  ;; test edx,edx
..@0x8057637: db 0x78, 0x10  ;; js A.code+0x8057649
..@0x8057639: call R.code+0x8052cd0
..@0x805763e: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x8057643: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x8057649: add ebx, strict byte 0x4
..@0x805764c: db 0x89, 0x5c, 0x24, 0x34  ;; mov [esp+0x34],ebx
..@0x8057650: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8057652: db 0xeb, 0x0b  ;; jmp short A.code+0x805765f
..@0x8057654: db 0xa1, 0x0c, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e10c]
..@0x8057659: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x805765f: db 0x8b, 0x34, 0x9d, 0xa0, 0xb8, 0x05, 0x08  ;; mov esi,[ebx*4+0x805b8a0]
..@0x8057666: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8057668: and ecx, strict byte 0x7
..@0x805766b: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x805766f: db 0x89, 0xd6  ;; mov esi,edx
..@0x8057671: add edx, strict byte 0x3
..@0x8057674: db 0xc1, 0xfe, 0x03  ;; sar esi,byte 0x3
..@0x8057677: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x805767d: db 0x8b, 0x34, 0x30  ;; mov esi,[eax+esi]
..@0x8057680: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8057682: and esi, strict byte 0x7
..@0x8057685: db 0x85, 0xd2  ;; test edx,edx
..@0x8057687: db 0x78, 0x05  ;; js A.code+0x805768e
..@0x8057689: call R.code+0x8052cd0
..@0x805768e: add ebx, strict byte 0x1
..@0x8057691: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057695: db 0x39, 0x5c, 0x24, 0x34  ;; cmp [esp+0x34],ebx
..@0x8057699: db 0x89, 0x34, 0x85, 0x80, 0x66, 0x84, 0x09  ;; mov [eax*4+0x9846680],esi
..@0x80576a0: db 0x7f, 0xb2  ;; jg A.code+0x8057654
..@0x80576a2: cmp ebx, strict byte 0x12
..@0x80576a5: db 0x7f, 0x1e  ;; jg A.code+0x80576c5
..@0x80576a7: db 0x8d, 0x04, 0x9d, 0xa0, 0xb8, 0x05, 0x08  ;; lea eax,[ebx*4+0x805b8a0]
..@0x80576ae: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x80576b0: add eax, strict byte 0x4
..@0x80576b3: db 0x3d, 0xec, 0xb8, 0x05, 0x08  ;; cmp eax,0x805b8ec
..@0x80576b8: db 0xc7, 0x04, 0x95, 0x80, 0x66, 0x84, 0x09, 0x00  ;; mov dword [edx*4+0x9846680],0x0
..@0x80576c0: db 0x00, 0x00, 0x00
..@0x80576c3: db 0x75, 0xe9  ;; jnz A.code+0x80576ae
..@0x80576c5: db 0xba, 0x13, 0x00, 0x00, 0x00  ;; mov edx,0x13
..@0x80576ca: db 0xc7, 0x04, 0x24, 0x60, 0x6b, 0x84, 0x09  ;; mov dword [esp],0x9846b60
..@0x80576d1: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x80576d3: db 0xb9, 0xe0, 0x66, 0x84, 0x09  ;; mov ecx,0x98466e0
..@0x80576d8: db 0xb8, 0x80, 0x66, 0x84, 0x09  ;; mov eax,0x9846680
..@0x80576dd: call R.code+0x8052430
..@0x80576e2: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x80576e6: db 0x01, 0xfa  ;; add edx,edi
..@0x80576e8: db 0x89, 0x54, 0x24, 0x34  ;; mov [esp+0x34],edx
..@0x80576ec: db 0xeb, 0x14  ;; jmp short A.code+0x8057702
..@0x80576ee: db 0x89, 0x04, 0x9d, 0x80, 0x61, 0x84, 0x09  ;; mov [ebx*4+0x9846180],eax
..@0x80576f5: add ebx, strict byte 0x1
..@0x80576f8: db 0x39, 0x5c, 0x24, 0x34  ;; cmp [esp+0x34],ebx
..@0x80576fc: db 0x0f, 0x8e, 0xcb, 0xfa, 0xff, 0xff  ;; jng near A.code+0x80571cd
..@0x8057702: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x8057707: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x805770c: call R.code+0x8055c10
..@0x8057711: cmp eax, strict byte 0xf
..@0x8057714: db 0x7e, 0xd8  ;; jng A.code+0x80576ee
..@0x8057716: cmp eax, strict byte 0x10
..@0x8057719: db 0x0f, 0x84, 0xbb, 0x0d, 0x00, 0x00  ;; jz near A.code+0x80584da
..@0x805771f: cmp eax, strict byte 0x11
..@0x8057722: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8057727: db 0x89, 0xc2  ;; mov edx,eax
..@0x8057729: db 0x74, 0x5a  ;; jz A.code+0x8057785
..@0x805772b: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x8057731: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8057734: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057736: and ecx, strict byte 0x7
..@0x8057739: add eax, strict byte 0x7
..@0x805773c: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x805773f: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8057744: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8057746: and esi, strict byte 0x7f
..@0x8057749: db 0x85, 0xc0  ;; test eax,eax
..@0x805774b: db 0x78, 0x05  ;; js A.code+0x8057752
..@0x805774d: call R.code+0x8052cd0
..@0x8057752: add esi, strict byte 0xb
..@0x8057755: db 0x8d, 0x14, 0x1e  ;; lea edx,[esi+ebx]
..@0x8057758: db 0x8d, 0x04, 0x9d, 0x80, 0x61, 0x84, 0x09  ;; lea eax,[ebx*4+0x9846180]
..@0x805775f: db 0x8d, 0x14, 0x95, 0x80, 0x61, 0x84, 0x09  ;; lea edx,[edx*4+0x9846180]
..@0x8057766: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8057769: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8057770: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x8057776: add eax, strict byte 0x4
..@0x8057779: db 0x39, 0xd0  ;; cmp eax,edx
..@0x805777b: db 0x75, 0xf3  ;; jnz A.code+0x8057770
..@0x805777d: db 0x8d, 0x1c, 0x1e  ;; lea ebx,[esi+ebx]
..@0x8057780: jmp strict near R.code+0x80576f8
..@0x8057785: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x805778b: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805778e: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057790: and ecx, strict byte 0x7
..@0x8057793: add eax, strict byte 0x3
..@0x8057796: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x8057799: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805779e: db 0xd3, 0xfe  ;; sar esi,cl
..@0x80577a0: and esi, strict byte 0x7
..@0x80577a3: db 0x85, 0xc0  ;; test eax,eax
..@0x80577a5: db 0x78, 0x05  ;; js A.code+0x80577ac
..@0x80577a7: call R.code+0x8052cd0
..@0x80577ac: add esi, strict byte 0x3
..@0x80577af: db 0xeb, 0xa4  ;; jmp short A.code+0x8057755
..@0x80577b1: db 0x8b, 0x74, 0x24, 0x44  ;; mov esi,[esp+0x44]
..@0x80577b5: db 0x89, 0x2d, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],ebp
..@0x80577bb: db 0xa3, 0x18, 0xe1, 0x83, 0x09  ;; mov [0x983e118],eax
..@0x80577c0: db 0x89, 0x35, 0x14, 0xe1, 0x83, 0x09  ;; mov [0x983e114],esi
..@0x80577c6: jmp strict near R.code+0x805639e
..@0x80577cb: db 0x8b, 0x5c, 0x24, 0x38  ;; mov ebx,[esp+0x38]
..@0x80577cf: db 0x89, 0x2d, 0x0c, 0xe1, 0x83, 0x09  ;; mov [0x983e10c],ebp
..@0x80577d5: db 0x8b, 0x74, 0x24, 0x30  ;; mov esi,[esp+0x30]
..@0x80577d9: db 0xa3, 0x14, 0xe1, 0x83, 0x09  ;; mov [0x983e114],eax
..@0x80577de: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x80577e3: db 0x8b, 0x7c, 0x24, 0x48  ;; mov edi,[esp+0x48]
..@0x80577e7: db 0x8b, 0x6c, 0x24, 0x4c  ;; mov ebp,[esp+0x4c]
..@0x80577eb: db 0x89, 0x1d, 0x18, 0xe1, 0x83, 0x09  ;; mov [0x983e118],ebx
..@0x80577f1: db 0x8b, 0x5c, 0x24, 0x60  ;; mov ebx,[esp+0x60]
..@0x80577f5: db 0x89, 0x35, 0x1c, 0xe1, 0x83, 0x09  ;; mov [0x983e11c],esi
..@0x80577fb: db 0x89, 0x3d, 0xd0, 0xd1, 0x05, 0x08  ;; mov [0x805d1d0],edi
..@0x8057801: db 0x89, 0x2d, 0xd4, 0xd1, 0x05, 0x08  ;; mov [0x805d1d4],ebp
..@0x8057807: db 0x89, 0x1d, 0xd8, 0xd1, 0x05, 0x08  ;; mov [0x805d1d8],ebx
..@0x805780d: jmp strict near R.code+0x80563cb
..@0x8057812: db 0x0f, 0xb6, 0x57, 0x09  ;; movzx edx,byte [edi+0x9]
..@0x8057816: db 0x0f, 0xb6, 0x47, 0x0b  ;; movzx eax,byte [edi+0xb]
..@0x805781a: db 0x0f, 0xb6, 0x4f, 0x0d  ;; movzx ecx,byte [edi+0xd]
..@0x805781e: db 0xc1, 0xe2, 0x10  ;; shl edx,byte 0x10
..@0x8057821: db 0xc1, 0xe0, 0x08  ;; shl eax,byte 0x8
..@0x8057824: db 0x01, 0xd0  ;; add eax,edx
..@0x8057826: db 0x8d, 0x9c, 0x08, 0x00, 0x00, 0x00, 0xff  ;; lea ebx,[eax+ecx-0x1000000]
..@0x805782d: db 0x89, 0x1d, 0x48, 0xca, 0x87, 0x09  ;; mov [0x987ca48],ebx
..@0x8057833: jmp strict near R.code+0x8056b39
..@0x8057838: db 0x80, 0xf9, 0x2c  ;; cmp cl,0x2c
..@0x805783b: db 0x0f, 0x85, 0x85, 0xeb, 0xff, 0xff  ;; jnz near A.code+0x80563c6
..@0x8057841: db 0x0f, 0xb7, 0x78, 0x01  ;; movzx edi,word [eax+0x1]
..@0x8057845: db 0x0f, 0xb7, 0x58, 0x03  ;; movzx ebx,word [eax+0x3]
..@0x8057849: db 0x0f, 0xb6, 0x48, 0x09  ;; movzx ecx,byte [eax+0x9]
..@0x805784d: db 0x0f, 0xb7, 0xef  ;; movzx ebp,di
..@0x8057850: db 0x66, 0x89, 0x7c, 0x24, 0x38  ;; mov [esp+0x38],di
..@0x8057855: db 0x66, 0x89, 0x5c, 0x24, 0x68  ;; mov [esp+0x68],bx
..@0x805785a: db 0x0f, 0xb7, 0xfb  ;; movzx edi,bx
..@0x805785d: db 0x0f, 0xb7, 0x58, 0x07  ;; movzx ebx,word [eax+0x7]
..@0x8057861: db 0x89, 0x6c, 0x24, 0x70  ;; mov [esp+0x70],ebp
..@0x8057865: db 0x0f, 0xb7, 0x68, 0x05  ;; movzx ebp,word [eax+0x5]
..@0x8057869: db 0x89, 0x7c, 0x24, 0x74  ;; mov [esp+0x74],edi
..@0x805786d: db 0x8d, 0x78, 0x0a  ;; lea edi,[eax+0xa]
..@0x8057870: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8057872: and eax, strict byte 0x40
..@0x8057875: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x8057879: db 0x3c, 0x01  ;; cmp al,0x1
..@0x805787b: db 0x89, 0x5c, 0x24, 0x4c  ;; mov [esp+0x4c],ebx
..@0x805787f: db 0x19, 0xdb  ;; sbb ebx,ebx
..@0x8057881: db 0x89, 0x6c, 0x24, 0x48  ;; mov [esp+0x48],ebp
..@0x8057885: add ebx, strict byte 0x1
..@0x8057888: db 0x3c, 0x01  ;; cmp al,0x1
..@0x805788a: db 0x19, 0xff  ;; sbb edi,edi
..@0x805788c: db 0x88, 0x5c, 0x24, 0x50  ;; mov [esp+0x50],bl
..@0x8057890: and edi, strict byte -0x7
..@0x8057893: add edi, strict byte 0x8
..@0x8057896: db 0x84, 0xc9  ;; test cl,cl
..@0x8057898: db 0x89, 0x7c, 0x24, 0x60  ;; mov [esp+0x60],edi
..@0x805789c: db 0x0f, 0x88, 0x6e, 0x05, 0x00, 0x00  ;; js near A.code+0x8057e10
..@0x80578a2: db 0x85, 0xd2  ;; test edx,edx
..@0x80578a4: db 0x7e, 0x3a  ;; jng A.code+0x80578e0
..@0x80578a6: db 0x8d, 0x0c, 0x52  ;; lea ecx,[edx+edx*2]
..@0x80578a9: db 0x89, 0xf0  ;; mov eax,esi
..@0x80578ab: db 0xbe, 0x40, 0xc6, 0x87, 0x09  ;; mov esi,0x987c640
..@0x80578b0: db 0x8d, 0x2c, 0x08  ;; lea ebp,[eax+ecx]
..@0x80578b3: nop
..@0x80578b4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80578b8: db 0x0f, 0xb6, 0x18  ;; movzx ebx,byte [eax]
..@0x80578bb: db 0x0f, 0xb6, 0x48, 0x01  ;; movzx ecx,byte [eax+0x1]
..@0x80578bf: db 0x0f, 0xb6, 0x78, 0x02  ;; movzx edi,byte [eax+0x2]
..@0x80578c3: add eax, strict byte 0x3
..@0x80578c6: db 0xc1, 0xe3, 0x10  ;; shl ebx,byte 0x10
..@0x80578c9: db 0xc1, 0xe1, 0x08  ;; shl ecx,byte 0x8
..@0x80578cc: db 0x01, 0xd9  ;; add ecx,ebx
..@0x80578ce: db 0x8d, 0x8c, 0x39, 0x00, 0x00, 0x00, 0xff  ;; lea ecx,[ecx+edi-0x1000000]
..@0x80578d5: db 0x89, 0x0e  ;; mov [esi],ecx
..@0x80578d7: add esi, strict byte 0x4
..@0x80578da: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x80578dc: db 0x75, 0xda  ;; jnz A.code+0x80578b8
..@0x80578de: db 0xeb, 0x16  ;; jmp short A.code+0x80578f6
..@0x80578e0: db 0x31, 0xd2  ;; xor edx,edx
..@0x80578e2: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80578e8: db 0xc7, 0x04, 0x95, 0x40, 0xc6, 0x87, 0x09, 0x00  ;; mov dword [edx*4+0x987c640],0xff000000
..@0x80578f0: db 0x00, 0x00, 0xff
..@0x80578f3: add edx, strict byte 0x1
..@0x80578f6: db 0x81, 0xfa, 0xff, 0x00, 0x00, 0x00  ;; cmp edx,0xff
..@0x80578fc: db 0x7e, 0xea  ;; jng A.code+0x80578e8
..@0x80578fe: db 0x83, 0x7c, 0x24, 0x28, 0xff  ;; cmp dword [esp+0x28],byte -0x1
..@0x8057903: db 0x74, 0x0f  ;; jz A.code+0x8057914
..@0x8057905: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8057909: db 0x81, 0x24, 0x85, 0x40, 0xc6, 0x87, 0x09, 0xff  ;; and dword [eax*4+0x987c640],0xffffff
..@0x8057911: db 0xff, 0xff, 0x00
..@0x8057914: db 0x0f, 0xb7, 0x5c, 0x24, 0x68  ;; movzx ebx,word [esp+0x68]
..@0x8057919: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x805791d: db 0x66, 0x0b, 0x5c, 0x24, 0x38  ;; or bx,[esp+0x38]
..@0x8057922: db 0x0f, 0xb7, 0x78, 0x06  ;; movzx edi,word [eax+0x6]
..@0x8057926: db 0x0f, 0xb7, 0x50, 0x08  ;; movzx edx,word [eax+0x8]
..@0x805792a: db 0x75, 0x10  ;; jnz A.code+0x805793c
..@0x805792c: db 0x39, 0x54, 0x24, 0x4c  ;; cmp [esp+0x4c],edx
..@0x8057930: db 0x75, 0x0a  ;; jnz A.code+0x805793c
..@0x8057932: db 0x39, 0x7c, 0x24, 0x48  ;; cmp [esp+0x48],edi
..@0x8057936: db 0x0f, 0x84, 0x97, 0x04, 0x00, 0x00  ;; jz near A.code+0x8057dd3
..@0x805793c: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8057940: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8057942: db 0x80, 0x78, 0x0a, 0x00  ;; cmp byte [eax+0xa],0x0
..@0x8057946: db 0x0f, 0x88, 0xb4, 0x04, 0x00, 0x00  ;; js near A.code+0x8057e00
..@0x805794c: db 0x8b, 0x4c, 0x24, 0x40  ;; mov ecx,[esp+0x40]
..@0x8057950: db 0x31, 0xc0  ;; xor eax,eax
..@0x8057952: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8057956: db 0x8b, 0x6c, 0x24, 0x3c  ;; mov ebp,[esp+0x3c]
..@0x805795a: db 0x85, 0xc9  ;; test ecx,ecx
..@0x805795c: db 0x8b, 0x4c, 0x24, 0x2c  ;; mov ecx,[esp+0x2c]
..@0x8057960: db 0x0f, 0x48, 0xf0  ;; cmovs esi,eax
..@0x8057963: db 0x89, 0x74, 0x24, 0x38  ;; mov [esp+0x38],esi
..@0x8057967: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x805796b: db 0x85, 0xf6  ;; test esi,esi
..@0x805796d: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8057971: db 0x0f, 0x48, 0xe8  ;; cmovs ebp,eax
..@0x8057974: db 0x03, 0x74, 0x24, 0x70  ;; add esi,[esp+0x70]
..@0x8057978: db 0x39, 0xce  ;; cmp esi,ecx
..@0x805797a: db 0x89, 0x74, 0x24, 0x30  ;; mov [esp+0x30],esi
..@0x805797e: db 0x0f, 0x4e, 0xce  ;; cmovng ecx,esi
..@0x8057981: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8057985: db 0x89, 0x4c, 0x24, 0x78  ;; mov [esp+0x78],ecx
..@0x8057989: db 0x8b, 0x4c, 0x24, 0x64  ;; mov ecx,[esp+0x64]
..@0x805798d: db 0x03, 0x74, 0x24, 0x74  ;; add esi,[esp+0x74]
..@0x8057991: db 0x39, 0xce  ;; cmp esi,ecx
..@0x8057993: db 0x89, 0x74, 0x24, 0x28  ;; mov [esp+0x28],esi
..@0x8057997: db 0x0f, 0x4e, 0xce  ;; cmovng ecx,esi
..@0x805799a: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x805799e: db 0x03, 0x74, 0x24, 0x30  ;; add esi,[esp+0x30]
..@0x80579a2: db 0x0f, 0x49, 0xc6  ;; cmovns eax,esi
..@0x80579a5: db 0x89, 0x74, 0x24, 0x48  ;; mov [esp+0x48],esi
..@0x80579a9: db 0x8b, 0x74, 0x24, 0x4c  ;; mov esi,[esp+0x4c]
..@0x80579ad: db 0x89, 0x44, 0x24, 0x70  ;; mov [esp+0x70],eax
..@0x80579b1: db 0x8b, 0x44, 0x24, 0x64  ;; mov eax,[esp+0x64]
..@0x80579b5: db 0x03, 0x74, 0x24, 0x28  ;; add esi,[esp+0x28]
..@0x80579b9: db 0x39, 0xc6  ;; cmp esi,eax
..@0x80579bb: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x80579bf: db 0x0f, 0x4e, 0xc6  ;; cmovng eax,esi
..@0x80579c2: db 0x03, 0x7c, 0x24, 0x40  ;; add edi,[esp+0x40]
..@0x80579c6: db 0x89, 0x44, 0x24, 0x4c  ;; mov [esp+0x4c],eax
..@0x80579ca: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x80579ce: db 0x3b, 0x7c, 0x24, 0x2c  ;; cmp edi,[esp+0x2c]
..@0x80579d2: db 0x0f, 0x4f, 0x7c, 0x24, 0x2c  ;; cmovg edi,[esp+0x2c]
..@0x80579d7: db 0x01, 0xd0  ;; add eax,edx
..@0x80579d9: db 0x89, 0xea  ;; mov edx,ebp
..@0x80579db: db 0x3b, 0x44, 0x24, 0x64  ;; cmp eax,[esp+0x64]
..@0x80579df: db 0x0f, 0x4f, 0x44, 0x24, 0x64  ;; cmovg eax,[esp+0x64]
..@0x80579e4: db 0x89, 0x44, 0x24, 0x3c  ;; mov [esp+0x3c],eax
..@0x80579e8: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x80579ec: db 0x0f, 0xaf, 0xc5  ;; imul eax,ebp
..@0x80579ef: db 0x03, 0x44, 0x24, 0x6c  ;; add eax,[esp+0x6c]
..@0x80579f3: db 0x39, 0xcd  ;; cmp ebp,ecx
..@0x80579f5: db 0x89, 0x44, 0x24, 0x40  ;; mov [esp+0x40],eax
..@0x80579f9: db 0x89, 0xc6  ;; mov esi,eax
..@0x80579fb: db 0x7d, 0x39  ;; jnl A.code+0x8057a36
..@0x80579fd: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057a01: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8057a03: db 0x7d, 0x0a  ;; jnl A.code+0x8057a0f
..@0x8057a05: db 0x89, 0x1c, 0x86  ;; mov [esi+eax*4],ebx
..@0x8057a08: add eax, strict byte 0x1
..@0x8057a0b: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8057a0d: db 0x75, 0xf6  ;; jnz A.code+0x8057a05
..@0x8057a0f: add edx, strict byte 0x1
..@0x8057a12: db 0x03, 0x74, 0x24, 0x34  ;; add esi,[esp+0x34]
..@0x8057a16: db 0x39, 0xca  ;; cmp edx,ecx
..@0x8057a18: db 0x75, 0xe3  ;; jnz A.code+0x80579fd
..@0x8057a1a: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8057a1c: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8057a20: db 0xf7, 0xd0  ;; not eax
..@0x8057a22: db 0x01, 0xd0  ;; add eax,edx
..@0x8057a24: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x8057a28: db 0x8d, 0x6c, 0x05, 0x01  ;; lea ebp,[ebp+eax+0x1]
..@0x8057a2c: db 0x0f, 0xaf, 0xc8  ;; imul ecx,eax
..@0x8057a2f: db 0x03, 0x54, 0x24, 0x40  ;; add edx,[esp+0x40]
..@0x8057a33: db 0x8d, 0x34, 0x11  ;; lea esi,[ecx+edx]
..@0x8057a36: db 0x3b, 0x6c, 0x24, 0x4c  ;; cmp ebp,[esp+0x4c]
..@0x8057a3a: db 0x89, 0xe9  ;; mov ecx,ebp
..@0x8057a3c: db 0x89, 0xf2  ;; mov edx,esi
..@0x8057a3e: db 0x7d, 0x59  ;; jnl A.code+0x8057a99
..@0x8057a40: db 0x89, 0x74, 0x24, 0x40  ;; mov [esp+0x40],esi
..@0x8057a44: db 0x8b, 0x74, 0x24, 0x78  ;; mov esi,[esp+0x78]
..@0x8057a48: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057a4c: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8057a4e: db 0x7d, 0x0a  ;; jnl A.code+0x8057a5a
..@0x8057a50: db 0x89, 0x1c, 0x82  ;; mov [edx+eax*4],ebx
..@0x8057a53: add eax, strict byte 0x1
..@0x8057a56: db 0x39, 0xf0  ;; cmp eax,esi
..@0x8057a58: db 0x75, 0xf6  ;; jnz A.code+0x8057a50
..@0x8057a5a: db 0x39, 0x7c, 0x24, 0x70  ;; cmp [esp+0x70],edi
..@0x8057a5e: db 0x7d, 0x0e  ;; jnl A.code+0x8057a6e
..@0x8057a60: db 0x8b, 0x44, 0x24, 0x70  ;; mov eax,[esp+0x70]
..@0x8057a64: db 0x89, 0x1c, 0x82  ;; mov [edx+eax*4],ebx
..@0x8057a67: add eax, strict byte 0x1
..@0x8057a6a: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8057a6c: db 0x75, 0xf6  ;; jnz A.code+0x8057a64
..@0x8057a6e: add ecx, strict byte 0x1
..@0x8057a71: db 0x03, 0x54, 0x24, 0x34  ;; add edx,[esp+0x34]
..@0x8057a75: db 0x3b, 0x4c, 0x24, 0x4c  ;; cmp ecx,[esp+0x4c]
..@0x8057a79: db 0x75, 0xcd  ;; jnz A.code+0x8057a48
..@0x8057a7b: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8057a7d: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x8057a81: db 0xf7, 0xd0  ;; not eax
..@0x8057a83: db 0x8b, 0x54, 0x24, 0x34  ;; mov edx,[esp+0x34]
..@0x8057a87: db 0x01, 0xc8  ;; add eax,ecx
..@0x8057a89: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8057a8d: db 0x8d, 0x6c, 0x05, 0x01  ;; lea ebp,[ebp+eax+0x1]
..@0x8057a91: db 0x01, 0xf2  ;; add edx,esi
..@0x8057a93: db 0x0f, 0xaf, 0xc8  ;; imul ecx,eax
..@0x8057a96: db 0x8d, 0x34, 0x11  ;; lea esi,[ecx+edx]
..@0x8057a99: db 0x39, 0x6c, 0x24, 0x3c  ;; cmp [esp+0x3c],ebp
..@0x8057a9d: db 0x7e, 0x1f  ;; jng A.code+0x8057abe
..@0x8057a9f: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057aa3: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8057aa5: db 0x7d, 0x0a  ;; jnl A.code+0x8057ab1
..@0x8057aa7: db 0x89, 0x1c, 0x86  ;; mov [esi+eax*4],ebx
..@0x8057aaa: add eax, strict byte 0x1
..@0x8057aad: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8057aaf: db 0x75, 0xf6  ;; jnz A.code+0x8057aa7
..@0x8057ab1: add ebp, strict byte 0x1
..@0x8057ab4: db 0x03, 0x74, 0x24, 0x34  ;; add esi,[esp+0x34]
..@0x8057ab8: db 0x3b, 0x6c, 0x24, 0x3c  ;; cmp ebp,[esp+0x3c]
..@0x8057abc: db 0x75, 0xe1  ;; jnz A.code+0x8057a9f
..@0x8057abe: db 0x8b, 0x5c, 0x24, 0x64  ;; mov ebx,[esp+0x64]
..@0x8057ac2: db 0x39, 0x5c, 0x24, 0x28  ;; cmp [esp+0x28],ebx
..@0x8057ac6: db 0x0f, 0x83, 0xb3, 0x02, 0x00, 0x00  ;; jnc near A.code+0x8057d7f
..@0x8057acc: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8057ad0: db 0x8b, 0x74, 0x24, 0x48  ;; mov esi,[esp+0x48]
..@0x8057ad4: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8057ad8: db 0x0f, 0xaf, 0x44, 0x24, 0x28  ;; imul eax,[esp+0x28]
..@0x8057add: db 0x89, 0x74, 0x24, 0x74  ;; mov [esp+0x74],esi
..@0x8057ae1: db 0x03, 0x44, 0x24, 0x6c  ;; add eax,[esp+0x6c]
..@0x8057ae5: db 0x89, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],eax
..@0x8057aec: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x8057af0: db 0xbe, 0x01, 0x00, 0x00, 0x00  ;; mov esi,0x1
..@0x8057af5: db 0x0f, 0xb6, 0x0b  ;; movzx ecx,byte [ebx]
..@0x8057af8: db 0x8d, 0x51, 0x01  ;; lea edx,[ecx+0x1]
..@0x8057afb: db 0xd3, 0xe6  ;; shl esi,cl
..@0x8057afd: db 0x89, 0xf0  ;; mov eax,esi
..@0x8057aff: db 0x88, 0x54, 0x24, 0x78  ;; mov [esp+0x78],dl
..@0x8057b03: sub eax, strict byte 0x1
..@0x8057b06: db 0x78, 0x1d  ;; js A.code+0x8057b25
..@0x8057b08: nop
..@0x8057b09: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8057b10: db 0x89, 0x04, 0x85, 0xc0, 0x5b, 0x87, 0x09  ;; mov [eax*4+0x9875bc0],eax
..@0x8057b17: db 0x88, 0x80, 0xe0, 0x9b, 0x87, 0x09  ;; mov [eax+0x9879be0],al
..@0x8057b1d: sub eax, strict byte 0x1
..@0x8057b20: cmp eax, strict byte -0x1
..@0x8057b23: db 0x75, 0xeb  ;; jnz A.code+0x8057b10
..@0x8057b25: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x8057b29: db 0x8d, 0x2c, 0x36  ;; lea ebp,[esi+esi]
..@0x8057b2c: db 0x89, 0xac, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov [esp+0x80],ebp
..@0x8057b33: db 0x8b, 0x6c, 0x24, 0x44  ;; mov ebp,[esp+0x44]
..@0x8057b37: db 0x8d, 0x5e, 0x02  ;; lea ebx,[esi+0x2]
..@0x8057b3a: db 0x89, 0x5c, 0x24, 0x7c  ;; mov [esp+0x7c],ebx
..@0x8057b3e: db 0x0f, 0xb6, 0x40, 0x01  ;; movzx eax,byte [eax+0x1]
..@0x8057b42: db 0xc7, 0x04, 0x24, 0x00, 0xac, 0x87, 0x09  ;; mov dword [esp],0x987ac00
..@0x8057b49: add ebp, strict byte 0x2
..@0x8057b4c: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8057b50: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x8057b54: db 0x89, 0x44, 0x24, 0x38  ;; mov [esp+0x38],eax
..@0x8057b58: call B.code+memcpy
..@0x8057b5d: db 0x03, 0x6c, 0x24, 0x38  ;; add ebp,[esp+0x38]
..@0x8057b61: db 0xc7, 0x44, 0x24, 0x3c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x3c],0x0
..@0x8057b69: db 0x0f, 0xb6, 0x54, 0x24, 0x78  ;; movzx edx,byte [esp+0x78]
..@0x8057b6e: db 0x8b, 0x9c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x80]
..@0x8057b75: db 0x89, 0x6c, 0x24, 0x70  ;; mov [esp+0x70],ebp
..@0x8057b79: db 0x8b, 0x6c, 0x24, 0x7c  ;; mov ebp,[esp+0x7c]
..@0x8057b7d: db 0x88, 0x54, 0x24, 0x4c  ;; mov [esp+0x4c],dl
..@0x8057b81: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8057b85: db 0x89, 0x5c, 0x24, 0x40  ;; mov [esp+0x40],ebx
..@0x8057b89: db 0x8b, 0x5c, 0x24, 0x48  ;; mov ebx,[esp+0x48]
..@0x8057b8d: db 0x89, 0x6c, 0x24, 0x44  ;; mov [esp+0x44],ebp
..@0x8057b91: db 0x8b, 0x6c, 0x24, 0x28  ;; mov ebp,[esp+0x28]
..@0x8057b95: db 0x81, 0xc2, 0x00, 0x00, 0x00, 0x80  ;; add edx,0x80000000
..@0x8057b9b: db 0x81, 0xc3, 0x00, 0x00, 0x00, 0x80  ;; add ebx,0x80000000
..@0x8057ba1: db 0x89, 0x94, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov [esp+0x88],edx
..@0x8057ba8: db 0x89, 0x9c, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov [esp+0x8c],ebx
..@0x8057baf: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8057bb3: db 0x8b, 0x4c, 0x24, 0x3c  ;; mov ecx,[esp+0x3c]
..@0x8057bb7: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8057bbb: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8057bbe: db 0x8b, 0x98, 0x00, 0xac, 0x87, 0x09  ;; mov ebx,[eax+0x987ac00]
..@0x8057bc4: and ecx, strict byte 0x7
..@0x8057bc7: db 0x8b, 0x44, 0x24, 0x40  ;; mov eax,[esp+0x40]
..@0x8057bcb: sub edx, strict byte 0x2
..@0x8057bce: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8057bd0: sub eax, strict byte 0x1
..@0x8057bd3: db 0x21, 0xc3  ;; and ebx,eax
..@0x8057bd5: db 0x0f, 0xb6, 0x44, 0x24, 0x4c  ;; movzx eax,byte [esp+0x4c]
..@0x8057bda: db 0x01, 0x44, 0x24, 0x3c  ;; add [esp+0x3c],eax
..@0x8057bde: db 0x8b, 0x44, 0x24, 0x3c  ;; mov eax,[esp+0x3c]
..@0x8057be2: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8057be5: db 0x39, 0xc2  ;; cmp edx,eax
..@0x8057be7: db 0x7f, 0x60  ;; jg A.code+0x8057c49
..@0x8057be9: db 0x0f, 0xb7, 0x90, 0x00, 0xac, 0x87, 0x09  ;; movzx edx,word [eax+0x987ac00]
..@0x8057bf0: db 0x66, 0x89, 0x15, 0x00, 0xac, 0x87, 0x09  ;; mov [0x987ac00],dx
..@0x8057bf7: db 0x8b, 0x54, 0x24, 0x38  ;; mov edx,[esp+0x38]
..@0x8057bfb: db 0x29, 0xc2  ;; sub edx,eax
..@0x8057bfd: db 0x8b, 0x44, 0x24, 0x70  ;; mov eax,[esp+0x70]
..@0x8057c01: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8057c05: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8057c07: db 0x0f, 0xb6, 0x10  ;; movzx edx,byte [eax]
..@0x8057c0a: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057c0e: add ecx, strict byte 0x1
..@0x8057c11: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x8057c15: db 0x89, 0x4c, 0x24, 0x20  ;; mov [esp+0x20],ecx
..@0x8057c19: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x8057c1d: db 0x05, 0x00, 0xac, 0x87, 0x09  ;; add eax,0x987ac00
..@0x8057c22: db 0x89, 0x54, 0x24, 0x24  ;; mov [esp+0x24],edx
..@0x8057c26: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8057c29: call B.code+memcpy
..@0x8057c2e: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x8057c32: db 0x8b, 0x4c, 0x24, 0x20  ;; mov ecx,[esp+0x20]
..@0x8057c36: db 0x83, 0x64, 0x24, 0x3c, 0x07  ;; and dword [esp+0x3c],byte +0x7
..@0x8057c3b: db 0x01, 0xd1  ;; add ecx,edx
..@0x8057c3d: db 0x03, 0x54, 0x24, 0x38  ;; add edx,[esp+0x38]
..@0x8057c41: db 0x89, 0x4c, 0x24, 0x70  ;; mov [esp+0x70],ecx
..@0x8057c45: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8057c49: db 0x39, 0xde  ;; cmp esi,ebx
..@0x8057c4b: db 0x0f, 0x84, 0x4b, 0x01, 0x00, 0x00  ;; jz near A.code+0x8057d9c
..@0x8057c51: db 0x80, 0x7c, 0x24, 0x4c, 0x0b  ;; cmp byte [esp+0x4c],0xb
..@0x8057c56: db 0x77, 0x13  ;; ja A.code+0x8057c6b
..@0x8057c58: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8057c5c: db 0x39, 0x54, 0x24, 0x40  ;; cmp [esp+0x40],edx
..@0x8057c60: db 0x75, 0x09  ;; jnz A.code+0x8057c6b
..@0x8057c62: db 0x80, 0x44, 0x24, 0x4c, 0x01  ;; add byte [esp+0x4c],0x1
..@0x8057c67: db 0xd1, 0x64, 0x24, 0x40  ;; shl dword [esp+0x40],1
..@0x8057c6b: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8057c6f: db 0x31, 0xc0  ;; xor eax,eax
..@0x8057c71: db 0x39, 0xde  ;; cmp esi,ebx
..@0x8057c73: db 0x89, 0x1c, 0x95, 0xc0, 0x5b, 0x87, 0x09  ;; mov [edx*4+0x9875bc0],ebx
..@0x8057c7a: db 0x7f, 0x1f  ;; jg A.code+0x8057c9b
..@0x8057c7c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8057c80: db 0x0f, 0xb6, 0x93, 0xe0, 0x9b, 0x87, 0x09  ;; movzx edx,byte [ebx+0x9879be0]
..@0x8057c87: db 0x8b, 0x1c, 0x9d, 0xc0, 0x5b, 0x87, 0x09  ;; mov ebx,[ebx*4+0x9875bc0]
..@0x8057c8e: db 0x88, 0x90, 0x00, 0xaf, 0x87, 0x09  ;; mov [eax+0x987af00],dl
..@0x8057c94: add eax, strict byte 0x1
..@0x8057c97: db 0x39, 0xde  ;; cmp esi,ebx
..@0x8057c99: db 0x7e, 0xe5  ;; jng A.code+0x8057c80
..@0x8057c9b: db 0x8b, 0x14, 0x9d, 0xc0, 0x5b, 0x87, 0x09  ;; mov edx,[ebx*4+0x9875bc0]
..@0x8057ca2: db 0x89, 0x74, 0x24, 0x18  ;; mov [esp+0x18],esi
..@0x8057ca6: db 0x8b, 0x4c, 0x24, 0x74  ;; mov ecx,[esp+0x74]
..@0x8057caa: db 0x88, 0x90, 0x00, 0xaf, 0x87, 0x09  ;; mov [eax+0x987af00],dl
..@0x8057cb0: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x8057cb4: db 0x88, 0x9a, 0xe0, 0x9b, 0x87, 0x09  ;; mov [edx+0x9879be0],bl
..@0x8057cba: db 0x88, 0x9a, 0xdf, 0x9b, 0x87, 0x09  ;; mov [edx+0x9879bdf],bl
..@0x8057cc0: db 0x8b, 0x54, 0x24, 0x60  ;; mov edx,[esp+0x60]
..@0x8057cc4: db 0xeb, 0x16  ;; jmp short A.code+0x8057cdc
..@0x8057cc6: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8057cc9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8057cd0: sub eax, strict byte 0x1
..@0x8057cd3: cmp eax, strict byte -0x1
..@0x8057cd6: db 0x0f, 0x84, 0xe1, 0x00, 0x00, 0x00  ;; jz near A.code+0x8057dbd
..@0x8057cdc: db 0x3b, 0x7c, 0x24, 0x2c  ;; cmp edi,[esp+0x2c]
..@0x8057ce0: db 0x73, 0x18  ;; jnc A.code+0x8057cfa
..@0x8057ce2: db 0x0f, 0xb6, 0x98, 0x00, 0xaf, 0x87, 0x09  ;; movzx ebx,byte [eax+0x987af00]
..@0x8057ce9: db 0x8b, 0xb4, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov esi,[esp+0x84]
..@0x8057cf0: db 0x8b, 0x1c, 0x9d, 0x40, 0xc6, 0x87, 0x09  ;; mov ebx,[ebx*4+0x987c640]
..@0x8057cf7: db 0x89, 0x1c, 0xbe  ;; mov [esi+edi*4],ebx
..@0x8057cfa: add edi, strict byte 0x1
..@0x8057cfd: db 0x39, 0xcf  ;; cmp edi,ecx
..@0x8057cff: db 0x75, 0xcf  ;; jnz A.code+0x8057cd0
..@0x8057d01: db 0x01, 0xd5  ;; add ebp,edx
..@0x8057d03: db 0x3b, 0x6c, 0x24, 0x68  ;; cmp ebp,[esp+0x68]
..@0x8057d07: db 0x7c, 0x15  ;; jl A.code+0x8057d1e
..@0x8057d09: cmp edx, strict byte 0x4
..@0x8057d0c: db 0x74, 0x59  ;; jz A.code+0x8057d67
..@0x8057d0e: dw 0x9066  ;; o16 nop
..@0x8057d10: db 0x7f, 0x3e  ;; jg A.code+0x8057d50
..@0x8057d12: db 0x8d, 0x4a, 0xff  ;; lea ecx,[edx-0x1]
..@0x8057d15: cmp ecx, strict byte 0x1
..@0x8057d18: db 0x0f, 0x86, 0xe4, 0xe9, 0xff, 0xff  ;; jna near A.code+0x8056702
..@0x8057d1e: db 0x39, 0x6c, 0x24, 0x64  ;; cmp [esp+0x64],ebp
..@0x8057d22: db 0x76, 0x1c  ;; jna A.code+0x8057d40
..@0x8057d24: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8057d28: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8057d2c: db 0x0f, 0xaf, 0xcd  ;; imul ecx,ebp
..@0x8057d2f: db 0x03, 0x4c, 0x24, 0x6c  ;; add ecx,[esp+0x6c]
..@0x8057d33: db 0x89, 0x8c, 0x24, 0x84, 0x00, 0x00, 0x00  ;; mov [esp+0x84],ecx
..@0x8057d3a: db 0x8b, 0x4c, 0x24, 0x48  ;; mov ecx,[esp+0x48]
..@0x8057d3e: db 0xeb, 0x90  ;; jmp short A.code+0x8057cd0
..@0x8057d40: db 0x8b, 0xbc, 0x24, 0x88, 0x00, 0x00, 0x00  ;; mov edi,[esp+0x88]
..@0x8057d47: db 0x8b, 0x8c, 0x24, 0x8c, 0x00, 0x00, 0x00  ;; mov ecx,[esp+0x8c]
..@0x8057d4e: db 0xeb, 0x80  ;; jmp short A.code+0x8057cd0
..@0x8057d50: cmp edx, strict byte 0x8
..@0x8057d53: db 0x75, 0xc9  ;; jnz A.code+0x8057d1e
..@0x8057d55: db 0x80, 0x7c, 0x24, 0x50, 0x00  ;; cmp byte [esp+0x50],0x0
..@0x8057d5a: db 0x8b, 0x6c, 0x24, 0x28  ;; mov ebp,[esp+0x28]
..@0x8057d5e: db 0x75, 0x15  ;; jnz A.code+0x8057d75
..@0x8057d60: add ebp, strict byte 0x2
..@0x8057d63: db 0xb2, 0x04  ;; mov dl,0x4
..@0x8057d65: db 0xeb, 0xb7  ;; jmp short A.code+0x8057d1e
..@0x8057d67: db 0x8b, 0x6c, 0x24, 0x28  ;; mov ebp,[esp+0x28]
..@0x8057d6b: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x8057d70: add ebp, strict byte 0x1
..@0x8057d73: db 0xeb, 0xa9  ;; jmp short A.code+0x8057d1e
..@0x8057d75: add ebp, strict byte 0x4
..@0x8057d78: db 0xc6, 0x44, 0x24, 0x50, 0x00  ;; mov byte [esp+0x50],0x0
..@0x8057d7d: db 0xeb, 0x9f  ;; jmp short A.code+0x8057d1e
..@0x8057d7f: db 0x8b, 0x54, 0x24, 0x48  ;; mov edx,[esp+0x48]
..@0x8057d83: db 0x8b, 0x7c, 0x24, 0x30  ;; mov edi,[esp+0x30]
..@0x8057d87: db 0x81, 0xc2, 0x00, 0x00, 0x00, 0x80  ;; add edx,0x80000000
..@0x8057d8d: db 0x81, 0xc7, 0x00, 0x00, 0x00, 0x80  ;; add edi,0x80000000
..@0x8057d93: db 0x89, 0x54, 0x24, 0x74  ;; mov [esp+0x74],edx
..@0x8057d97: jmp strict near R.code+0x8057aec
..@0x8057d9c: db 0x0f, 0xb6, 0x54, 0x24, 0x78  ;; movzx edx,byte [esp+0x78]
..@0x8057da1: db 0x8b, 0x9c, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov ebx,[esp+0x80]
..@0x8057da8: db 0x88, 0x54, 0x24, 0x4c  ;; mov [esp+0x4c],dl
..@0x8057dac: db 0x8b, 0x54, 0x24, 0x7c  ;; mov edx,[esp+0x7c]
..@0x8057db0: db 0x89, 0x5c, 0x24, 0x40  ;; mov [esp+0x40],ebx
..@0x8057db4: db 0x89, 0x54, 0x24, 0x44  ;; mov [esp+0x44],edx
..@0x8057db8: jmp strict near R.code+0x8057baf
..@0x8057dbd: db 0x8b, 0x74, 0x24, 0x18  ;; mov esi,[esp+0x18]
..@0x8057dc1: db 0x89, 0x54, 0x24, 0x60  ;; mov [esp+0x60],edx
..@0x8057dc5: db 0x83, 0x44, 0x24, 0x44, 0x01  ;; add dword [esp+0x44],byte +0x1
..@0x8057dca: db 0x89, 0x4c, 0x24, 0x74  ;; mov [esp+0x74],ecx
..@0x8057dce: jmp strict near R.code+0x8057baf
..@0x8057dd3: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x8057dd7: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8057ddb: db 0x8b, 0x7c, 0x24, 0x3c  ;; mov edi,[esp+0x3c]
..@0x8057ddf: db 0x8b, 0x6c, 0x24, 0x40  ;; mov ebp,[esp+0x40]
..@0x8057de3: db 0x03, 0x5c, 0x24, 0x48  ;; add ebx,[esp+0x48]
..@0x8057de7: db 0x03, 0x74, 0x24, 0x4c  ;; add esi,[esp+0x4c]
..@0x8057deb: db 0x89, 0x7c, 0x24, 0x28  ;; mov [esp+0x28],edi
..@0x8057def: db 0x89, 0x6c, 0x24, 0x30  ;; mov [esp+0x30],ebp
..@0x8057df3: db 0x89, 0x5c, 0x24, 0x48  ;; mov [esp+0x48],ebx
..@0x8057df7: db 0x89, 0x74, 0x24, 0x68  ;; mov [esp+0x68],esi
..@0x8057dfb: jmp strict near R.code+0x8057abe
..@0x8057e00: db 0x0f, 0xb6, 0x40, 0x0b  ;; movzx eax,byte [eax+0xb]
..@0x8057e04: db 0x8b, 0x1c, 0x85, 0x40, 0xc6, 0x87, 0x09  ;; mov ebx,[eax*4+0x987c640]
..@0x8057e0b: jmp strict near R.code+0x805794c
..@0x8057e10: db 0x8b, 0x74, 0x24, 0x44  ;; mov esi,[esp+0x44]
..@0x8057e14: and ecx, strict byte 0x7
..@0x8057e17: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x8057e1c: add ecx, strict byte 0x1
..@0x8057e1f: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8057e21: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x8057e24: db 0x89, 0x15, 0x40, 0xca, 0x87, 0x09  ;; mov [0x987ca40],edx
..@0x8057e2a: db 0x89, 0xf5  ;; mov ebp,esi
..@0x8057e2c: db 0x01, 0xc5  ;; add ebp,eax
..@0x8057e2e: db 0x89, 0x6c, 0x24, 0x44  ;; mov [esp+0x44],ebp
..@0x8057e32: jmp strict near R.code+0x80578a2
..@0x8057e37: db 0x8d, 0x0c, 0x52  ;; lea ecx,[edx+edx*2]
..@0x8057e3a: db 0x89, 0xc6  ;; mov esi,eax
..@0x8057e3c: db 0x01, 0xc8  ;; add eax,ecx
..@0x8057e3e: jmp strict near R.code+0x8056117
..@0x8057e43: db 0xc7, 0x05, 0x44, 0xe1, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e144],0x1
..@0x8057e4b: db 0x00, 0x00
..@0x8057e4d: db 0xc7, 0x05, 0x48, 0xe1, 0x83, 0x09, 0x02, 0x00  ;; mov dword [0x983e148],0x2
..@0x8057e55: db 0x00, 0x00
..@0x8057e57: db 0xc7, 0x05, 0x4c, 0xe1, 0x83, 0x09, 0x03, 0x00  ;; mov dword [0x983e14c],0x3
..@0x8057e5f: db 0x00, 0x00
..@0x8057e61: db 0xc7, 0x05, 0x50, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e150],0x0
..@0x8057e69: db 0x00, 0x00
..@0x8057e6b: jmp strict near R.code+0x8056ff0
..@0x8057e70: db 0xc7, 0x05, 0x44, 0xe1, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e144],0x1
..@0x8057e78: db 0x00, 0x00
..@0x8057e7a: db 0xc7, 0x05, 0x48, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e148],0x0
..@0x8057e82: db 0x00, 0x00
..@0x8057e84: jmp strict near R.code+0x8056ff0
..@0x8057e89: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x8057e8e: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8057e90: and ecx, strict byte 0x1
..@0x8057e93: db 0x8b, 0x0c, 0x8d, 0x40, 0xc6, 0x87, 0x09  ;; mov ecx,[ecx*4+0x987c640]
..@0x8057e9a: db 0x89, 0x0c, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov [edx*4+0x987c640],ecx
..@0x8057ea1: add edx, strict byte 0x1
..@0x8057ea4: db 0x81, 0xfa, 0x00, 0x01, 0x00, 0x00  ;; cmp edx,0x100
..@0x8057eaa: db 0x75, 0xe2  ;; jnz A.code+0x8057e8e
..@0x8057eac: db 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea ecx,[eax*4+0x0]
..@0x8057eb3: db 0xb8, 0x01, 0x13, 0x02, 0x04  ;; mov eax,0x4021301
..@0x8057eb8: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8057eba: and eax, strict byte 0xf
..@0x8057ebd: db 0x0f, 0xaf, 0x05, 0x14, 0xe1, 0x83, 0x09  ;; imul eax,[0x983e114]
..@0x8057ec4: add eax, strict byte 0x7
..@0x8057ec7: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8057eca: db 0xa3, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],eax
..@0x8057ecf: jmp strict near R.code+0x805704a
..@0x8057ed4: db 0x80, 0xf9, 0x42  ;; cmp cl,0x42
..@0x8057ed7: db 0x0f, 0x85, 0x93, 0xe2, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x8057edd: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8057ee1: db 0x80, 0x78, 0x01, 0x4d  ;; cmp byte [eax+0x1],0x4d
..@0x8057ee5: db 0x0f, 0x85, 0x85, 0xe2, 0xff, 0xff  ;; jnz near A.code+0x8056170
..@0x8057eeb: db 0x8b, 0x58, 0x0e  ;; mov ebx,[eax+0xe]
..@0x8057eee: cmp ebx, strict byte 0xc
..@0x8057ef1: db 0x0f, 0x84, 0x89, 0x04, 0x00, 0x00  ;; jz near A.code+0x8058380
..@0x8057ef7: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8057efb: db 0x66, 0x83, 0x78, 0x1a, 0x01  ;; cmp word [eax+0x1a],byte +0x1
..@0x8057f00: db 0x0f, 0x85, 0xc0, 0xe4, 0xff, 0xff  ;; jnz near A.code+0x80563c6
..@0x8057f06: db 0x0f, 0xb7, 0x50, 0x1c  ;; movzx edx,word [eax+0x1c]
..@0x8057f0a: db 0x8b, 0x78, 0x12  ;; mov edi,[eax+0x12]
..@0x8057f0d: db 0x8b, 0x70, 0x16  ;; mov esi,[eax+0x16]
..@0x8057f10: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x8057f14: db 0x8b, 0x50, 0x1e  ;; mov edx,[eax+0x1e]
..@0x8057f17: db 0x85, 0xf6  ;; test esi,esi
..@0x8057f19: db 0x0f, 0x84, 0xa7, 0xe4, 0xff, 0xff  ;; jz near A.code+0x80563c6
..@0x8057f1f: db 0x85, 0xff  ;; test edi,edi
..@0x8057f21: db 0x0f, 0x8e, 0x9f, 0xe4, 0xff, 0xff  ;; jng near A.code+0x80563c6
..@0x8057f27: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057f2b: sub eax, strict byte 0x1
..@0x8057f2e: cmp eax, strict byte 0x1f
..@0x8057f31: db 0x0f, 0x87, 0x8f, 0xe4, 0xff, 0xff  ;; ja near A.code+0x80563c6
..@0x8057f37: db 0x8b, 0x4c, 0x24, 0x38  ;; mov ecx,[esp+0x38]
..@0x8057f3b: db 0xb8, 0x13, 0x01, 0x01, 0x01  ;; mov eax,0x1010113
..@0x8057f40: db 0x0f, 0xa3, 0xc8  ;; bt eax,ecx
..@0x8057f43: db 0x0f, 0x83, 0x7d, 0xe4, 0xff, 0xff  ;; jnc near A.code+0x80563c6
..@0x8057f49: cmp edx, strict byte 0x3
..@0x8057f4c: db 0x0f, 0x85, 0x57, 0x04, 0x00, 0x00  ;; jnz near A.code+0x80583a9
..@0x8057f52: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x8057f56: db 0x83, 0x7c, 0x24, 0x38, 0x0f  ;; cmp dword [esp+0x38],byte +0xf
..@0x8057f5b: db 0x8b, 0x68, 0x0a  ;; mov ebp,[eax+0xa]
..@0x8057f5e: db 0x0f, 0x8f, 0x4a, 0x03, 0x00, 0x00  ;; jg near A.code+0x80582ae
..@0x8057f64: db 0x83, 0x7c, 0x24, 0x38, 0x02  ;; cmp dword [esp+0x38],byte +0x2
..@0x8057f69: db 0x75, 0x14  ;; jnz A.code+0x8057f7f
..@0x8057f6b: db 0xc7, 0x05, 0x40, 0xc6, 0x87, 0x09, 0xff, 0xff  ;; mov dword [0x987c640],0xffffffff
..@0x8057f73: db 0xff, 0xff
..@0x8057f75: db 0xc7, 0x05, 0x44, 0xc6, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c644],0xff000000
..@0x8057f7d: db 0x00, 0xff
..@0x8057f7f: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8057f83: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8057f85: cmp ebx, strict byte 0xc
..@0x8057f88: db 0x0f, 0x95, 0xc1  ;; setnz cl
..@0x8057f8b: add ecx, strict byte 0x3
..@0x8057f8e: db 0x8d, 0x44, 0x1a, 0x0e  ;; lea eax,[edx+ebx+0xe]
..@0x8057f92: db 0x01, 0xd5  ;; add ebp,edx
..@0x8057f94: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8057f96: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x8057f98: db 0x73, 0x1e  ;; jnc A.code+0x8057fb8
..@0x8057f9a: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8057fa0: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x8057fa2: db 0x01, 0xc8  ;; add eax,ecx
..@0x8057fa4: db 0x81, 0xca, 0x00, 0x00, 0x00, 0xff  ;; or edx,0xff000000
..@0x8057faa: db 0x89, 0x14, 0x9d, 0x40, 0xc6, 0x87, 0x09  ;; mov [ebx*4+0x987c640],edx
..@0x8057fb1: add ebx, strict byte 0x1
..@0x8057fb4: db 0x39, 0xe8  ;; cmp eax,ebp
..@0x8057fb6: db 0x72, 0xe8  ;; jc A.code+0x8057fa0
..@0x8057fb8: db 0x0f, 0xb6, 0x4c, 0x24, 0x38  ;; movzx ecx,byte [esp+0x38]
..@0x8057fbd: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x03  ;; mov byte [0x987ca4c],0x3
..@0x8057fc4: db 0x89, 0x1d, 0x40, 0xca, 0x87, 0x09  ;; mov [0x987ca40],ebx
..@0x8057fca: db 0x88, 0x0d, 0x20, 0xc6, 0x87, 0x09  ;; mov [0x987c620],cl
..@0x8057fd0: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x8057fd4: db 0x0f, 0xaf, 0xc7  ;; imul eax,edi
..@0x8057fd7: add eax, strict byte 0x1f
..@0x8057fda: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8057fdd: and eax, strict byte -0x4
..@0x8057fe0: db 0x85, 0xf6  ;; test esi,esi
..@0x8057fe2: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x8057fe6: db 0x0f, 0x88, 0xb6, 0x03, 0x00, 0x00  ;; js near A.code+0x80583a2
..@0x8057fec: db 0x8d, 0x46, 0xff  ;; lea eax,[esi-0x1]
..@0x8057fef: db 0x0f, 0xaf, 0x44, 0x24, 0x30  ;; imul eax,[esp+0x30]
..@0x8057ff4: db 0xf7, 0x5c, 0x24, 0x30  ;; neg dword [esp+0x30]
..@0x8057ff8: db 0x01, 0xc5  ;; add ebp,eax
..@0x8057ffa: db 0x03, 0x7c, 0x24, 0x40  ;; add edi,[esp+0x40]
..@0x8057ffe: db 0x03, 0x74, 0x24, 0x3c  ;; add esi,[esp+0x3c]
..@0x8058002: db 0x85, 0xff  ;; test edi,edi
..@0x8058004: db 0x89, 0x74, 0x24, 0x44  ;; mov [esp+0x44],esi
..@0x8058008: db 0x0f, 0x8e, 0xf4, 0xe6, 0xff, 0xff  ;; jng near A.code+0x8056702
..@0x805800e: db 0x8b, 0x5c, 0x24, 0x40  ;; mov ebx,[esp+0x40]
..@0x8058012: db 0x39, 0x5c, 0x24, 0x2c  ;; cmp [esp+0x2c],ebx
..@0x8058016: db 0x0f, 0x8e, 0xe6, 0xe6, 0xff, 0xff  ;; jng near A.code+0x8056702
..@0x805801c: db 0x85, 0xf6  ;; test esi,esi
..@0x805801e: db 0x0f, 0x8e, 0xde, 0xe6, 0xff, 0xff  ;; jng near A.code+0x8056702
..@0x8058024: db 0x8b, 0x74, 0x24, 0x3c  ;; mov esi,[esp+0x3c]
..@0x8058028: db 0x39, 0x74, 0x24, 0x64  ;; cmp [esp+0x64],esi
..@0x805802c: db 0x0f, 0x8e, 0xd0, 0xe6, 0xff, 0xff  ;; jng near A.code+0x8056702
..@0x8058032: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8058034: db 0xb8, 0x00, 0x00, 0x00, 0x00  ;; mov eax,0x0
..@0x8058039: db 0x8b, 0x54, 0x24, 0x44  ;; mov edx,[esp+0x44]
..@0x805803d: db 0x0f, 0x49, 0xc3  ;; cmovns eax,ebx
..@0x8058040: db 0x3b, 0x7c, 0x24, 0x2c  ;; cmp edi,[esp+0x2c]
..@0x8058044: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058048: db 0x0f, 0x4f, 0x7c, 0x24, 0x2c  ;; cmovg edi,[esp+0x2c]
..@0x805804d: db 0x39, 0xd6  ;; cmp esi,edx
..@0x805804f: db 0x0f, 0x8d, 0xad, 0xe6, 0xff, 0xff  ;; jnl near A.code+0x8056702
..@0x8058055: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8058059: db 0x89, 0xf2  ;; mov edx,esi
..@0x805805b: db 0xc1, 0xe2, 0x02  ;; shl edx,byte 0x2
..@0x805805e: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x8058062: db 0x0f, 0xaf, 0xc6  ;; imul eax,esi
..@0x8058065: db 0x8b, 0x74, 0x24, 0x28  ;; mov esi,[esp+0x28]
..@0x8058069: db 0x8d, 0x1c, 0x5b  ;; lea ebx,[ebx+ebx*2]
..@0x805806c: db 0x89, 0x5c, 0x24, 0x60  ;; mov [esp+0x60],ebx
..@0x8058070: db 0x29, 0xd0  ;; sub eax,edx
..@0x8058072: db 0x03, 0x44, 0x24, 0x6c  ;; add eax,[esp+0x6c]
..@0x8058076: db 0xf7, 0xd6  ;; not esi
..@0x8058078: db 0x89, 0x74, 0x24, 0x4c  ;; mov [esp+0x4c],esi
..@0x805807c: db 0x89, 0xee  ;; mov esi,ebp
..@0x805807e: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058082: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8058086: db 0x39, 0x5c, 0x24, 0x64  ;; cmp [esp+0x64],ebx
..@0x805808a: db 0x0f, 0x86, 0x9a, 0x00, 0x00, 0x00  ;; jna near A.code+0x805812a
..@0x8058090: db 0x83, 0x7c, 0x24, 0x38, 0x20  ;; cmp dword [esp+0x38],byte +0x20
..@0x8058095: db 0x0f, 0x87, 0x8f, 0x00, 0x00, 0x00  ;; ja near A.code+0x805812a
..@0x805809b: db 0x8b, 0x6c, 0x24, 0x38  ;; mov ebp,[esp+0x38]
..@0x805809f: db 0xff, 0x24, 0xad, 0x0c, 0xb8, 0x05, 0x08  ;; jmp [ebp*4+code_ptr_0x805b80c]
..@0x80580a6: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x80580aa: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x80580ac: db 0x7d, 0x7c  ;; jnl A.code+0x805812a
..@0x80580ae: db 0x89, 0x7c, 0x24, 0x48  ;; mov [esp+0x48],edi
..@0x80580b2: db 0x8b, 0x04, 0x9e  ;; mov eax,[esi+ebx*4]
..@0x80580b5: db 0x8b, 0x0d, 0x40, 0xc6, 0x87, 0x09  ;; mov ecx,[0x987c640]
..@0x80580bb: db 0x8b, 0x3d, 0x44, 0xc6, 0x87, 0x09  ;; mov edi,[0x987c644]
..@0x80580c1: db 0x89, 0xc5  ;; mov ebp,eax
..@0x80580c3: db 0x89, 0xc2  ;; mov edx,eax
..@0x80580c5: db 0xd3, 0xe5  ;; shl ebp,cl
..@0x80580c7: db 0xf7, 0xd9  ;; neg ecx
..@0x80580c9: db 0xd3, 0xfa  ;; sar edx,cl
..@0x80580cb: db 0x89, 0xf9  ;; mov ecx,edi
..@0x80580cd: db 0xf7, 0xdf  ;; neg edi
..@0x80580cf: db 0x09, 0xd5  ;; or ebp,edx
..@0x80580d1: db 0x89, 0x7c, 0x24, 0x40  ;; mov [esp+0x40],edi
..@0x80580d5: db 0x89, 0xc2  ;; mov edx,eax
..@0x80580d7: db 0xd3, 0xe2  ;; shl edx,cl
..@0x80580d9: db 0x0f, 0xb6, 0x4c, 0x24, 0x40  ;; movzx ecx,byte [esp+0x40]
..@0x80580de: db 0x89, 0xc7  ;; mov edi,eax
..@0x80580e0: db 0x23, 0x2d, 0x4c, 0xc6, 0x87, 0x09  ;; and ebp,[0x987c64c]
..@0x80580e6: db 0xd3, 0xff  ;; sar edi,cl
..@0x80580e8: db 0x0f, 0xb6, 0x0d, 0x48, 0xc6, 0x87, 0x09  ;; movzx ecx,byte [0x987c648]
..@0x80580ef: db 0x09, 0xfa  ;; or edx,edi
..@0x80580f1: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x80580f5: db 0x23, 0x15, 0x50, 0xc6, 0x87, 0x09  ;; and edx,[0x987c650]
..@0x80580fb: db 0x01, 0xd5  ;; add ebp,edx
..@0x80580fd: db 0x89, 0xc2  ;; mov edx,eax
..@0x80580ff: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8058101: db 0x8b, 0x0d, 0x48, 0xc6, 0x87, 0x09  ;; mov ecx,[0x987c648]
..@0x8058107: db 0xf7, 0xd9  ;; neg ecx
..@0x8058109: db 0xd3, 0xf8  ;; sar eax,cl
..@0x805810b: db 0x09, 0xc2  ;; or edx,eax
..@0x805810d: db 0x23, 0x15, 0x54, 0xc6, 0x87, 0x09  ;; and edx,[0x987c654]
..@0x8058113: db 0x8d, 0x84, 0x15, 0x00, 0x00, 0x00, 0xff  ;; lea eax,[ebp+edx-0x1000000]
..@0x805811a: db 0x89, 0x04, 0x9f  ;; mov [edi+ebx*4],eax
..@0x805811d: add ebx, strict byte 0x1
..@0x8058120: db 0x3b, 0x5c, 0x24, 0x48  ;; cmp ebx,[esp+0x48]
..@0x8058124: db 0x75, 0x8c  ;; jnz A.code+0x80580b2
..@0x8058126: db 0x8b, 0x7c, 0x24, 0x48  ;; mov edi,[esp+0x48]
..@0x805812a: db 0x83, 0x44, 0x24, 0x3c, 0x01  ;; add dword [esp+0x3c],byte +0x1
..@0x805812f: db 0x8b, 0x4c, 0x24, 0x34  ;; mov ecx,[esp+0x34]
..@0x8058133: db 0x8b, 0x5c, 0x24, 0x44  ;; mov ebx,[esp+0x44]
..@0x8058137: db 0x03, 0x74, 0x24, 0x30  ;; add esi,[esp+0x30]
..@0x805813b: db 0x01, 0x4c, 0x24, 0x2c  ;; add [esp+0x2c],ecx
..@0x805813f: db 0x39, 0x5c, 0x24, 0x3c  ;; cmp [esp+0x3c],ebx
..@0x8058143: db 0x0f, 0x85, 0x39, 0xff, 0xff, 0xff  ;; jnz near A.code+0x8058082
..@0x8058149: db 0x31, 0xc0  ;; xor eax,eax
..@0x805814b: jmp strict near R.code+0x8056704
..@0x8058150: db 0x8b, 0x54, 0x24, 0x60  ;; mov edx,[esp+0x60]
..@0x8058154: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058158: db 0x01, 0xf2  ;; add edx,esi
..@0x805815a: db 0x39, 0xf8  ;; cmp eax,edi
..@0x805815c: db 0x7d, 0xcc  ;; jnl A.code+0x805812a
..@0x805815e: db 0x8b, 0x0a  ;; mov ecx,[edx]
..@0x8058160: add edx, strict byte 0x3
..@0x8058163: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x8058167: db 0x81, 0xc9, 0x00, 0x00, 0x00, 0xff  ;; or ecx,0xff000000
..@0x805816d: db 0x89, 0x4c, 0x85, 0x00  ;; mov [ebp+eax*4+0x0],ecx
..@0x8058171: add eax, strict byte 0x1
..@0x8058174: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8058176: db 0x75, 0xe6  ;; jnz A.code+0x805815e
..@0x8058178: db 0xeb, 0xb0  ;; jmp short A.code+0x805812a
..@0x805817a: db 0x8b, 0x5c, 0x24, 0x28  ;; mov ebx,[esp+0x28]
..@0x805817e: db 0x39, 0xfb  ;; cmp ebx,edi
..@0x8058180: db 0x7d, 0xa8  ;; jnl A.code+0x805812a
..@0x8058182: db 0x89, 0x7c, 0x24, 0x48  ;; mov [esp+0x48],edi
..@0x8058186: db 0x0f, 0xbf, 0x04, 0x5e  ;; movsx eax,word [esi+ebx*2]
..@0x805818a: db 0x8b, 0x0d, 0x40, 0xc6, 0x87, 0x09  ;; mov ecx,[0x987c640]
..@0x8058190: db 0x8b, 0x3d, 0x44, 0xc6, 0x87, 0x09  ;; mov edi,[0x987c644]
..@0x8058196: db 0x89, 0xc5  ;; mov ebp,eax
..@0x8058198: db 0x89, 0xc2  ;; mov edx,eax
..@0x805819a: db 0xd3, 0xe5  ;; shl ebp,cl
..@0x805819c: db 0xf7, 0xd9  ;; neg ecx
..@0x805819e: db 0xd3, 0xfa  ;; sar edx,cl
..@0x80581a0: db 0x89, 0xf9  ;; mov ecx,edi
..@0x80581a2: db 0xf7, 0xdf  ;; neg edi
..@0x80581a4: db 0x09, 0xd5  ;; or ebp,edx
..@0x80581a6: db 0x89, 0x7c, 0x24, 0x40  ;; mov [esp+0x40],edi
..@0x80581aa: db 0x89, 0xc2  ;; mov edx,eax
..@0x80581ac: db 0xd3, 0xe2  ;; shl edx,cl
..@0x80581ae: db 0x0f, 0xb6, 0x4c, 0x24, 0x40  ;; movzx ecx,byte [esp+0x40]
..@0x80581b3: db 0x89, 0xc7  ;; mov edi,eax
..@0x80581b5: db 0x23, 0x2d, 0x4c, 0xc6, 0x87, 0x09  ;; and ebp,[0x987c64c]
..@0x80581bb: db 0xd3, 0xff  ;; sar edi,cl
..@0x80581bd: db 0x0f, 0xb6, 0x0d, 0x48, 0xc6, 0x87, 0x09  ;; movzx ecx,byte [0x987c648]
..@0x80581c4: db 0x09, 0xfa  ;; or edx,edi
..@0x80581c6: db 0x8b, 0x7c, 0x24, 0x2c  ;; mov edi,[esp+0x2c]
..@0x80581ca: db 0x23, 0x15, 0x50, 0xc6, 0x87, 0x09  ;; and edx,[0x987c650]
..@0x80581d0: db 0x01, 0xd5  ;; add ebp,edx
..@0x80581d2: db 0x89, 0xc2  ;; mov edx,eax
..@0x80581d4: db 0xd3, 0xe2  ;; shl edx,cl
..@0x80581d6: db 0x8b, 0x0d, 0x48, 0xc6, 0x87, 0x09  ;; mov ecx,[0x987c648]
..@0x80581dc: db 0xf7, 0xd9  ;; neg ecx
..@0x80581de: db 0xd3, 0xf8  ;; sar eax,cl
..@0x80581e0: db 0x09, 0xc2  ;; or edx,eax
..@0x80581e2: db 0x23, 0x15, 0x54, 0xc6, 0x87, 0x09  ;; and edx,[0x987c654]
..@0x80581e8: db 0x8d, 0x84, 0x15, 0x00, 0x00, 0x00, 0xff  ;; lea eax,[ebp+edx-0x1000000]
..@0x80581ef: db 0x89, 0x04, 0x9f  ;; mov [edi+ebx*4],eax
..@0x80581f2: add ebx, strict byte 0x1
..@0x80581f5: db 0x3b, 0x5c, 0x24, 0x48  ;; cmp ebx,[esp+0x48]
..@0x80581f9: db 0x75, 0x8b  ;; jnz A.code+0x8058186
..@0x80581fb: jmp strict near R.code+0x8058126
..@0x8058200: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058204: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8058206: db 0x0f, 0x8d, 0x1e, 0xff, 0xff, 0xff  ;; jnl near A.code+0x805812a
..@0x805820c: db 0x0f, 0xb6, 0x14, 0x06  ;; movzx edx,byte [esi+eax]
..@0x8058210: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x8058214: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x805821b: db 0x89, 0x54, 0x85, 0x00  ;; mov [ebp+eax*4+0x0],edx
..@0x805821f: add eax, strict byte 0x1
..@0x8058222: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8058224: db 0x75, 0xe6  ;; jnz A.code+0x805820c
..@0x8058226: jmp strict near R.code+0x805812a
..@0x805822b: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x805822f: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8058231: db 0x0f, 0x8d, 0xf3, 0xfe, 0xff, 0xff  ;; jnl near A.code+0x805812a
..@0x8058237: db 0x89, 0xc2  ;; mov edx,eax
..@0x8058239: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805823b: db 0x8b, 0x5c, 0x24, 0x2c  ;; mov ebx,[esp+0x2c]
..@0x805823f: db 0xd1, 0xfa  ;; sar edx,1
..@0x8058241: and ecx, strict byte 0x1
..@0x8058244: db 0x0f, 0xb6, 0x14, 0x16  ;; movzx edx,byte [esi+edx]
..@0x8058248: cmp ecx, strict byte 0x1
..@0x805824b: db 0x19, 0xc9  ;; sbb ecx,ecx
..@0x805824d: and ecx, strict byte 0x4
..@0x8058250: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8058252: and edx, strict byte 0xf
..@0x8058255: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x805825c: db 0x89, 0x14, 0x83  ;; mov [ebx+eax*4],edx
..@0x805825f: add eax, strict byte 0x1
..@0x8058262: db 0x39, 0xf8  ;; cmp eax,edi
..@0x8058264: db 0x75, 0xd1  ;; jnz A.code+0x8058237
..@0x8058266: jmp strict near R.code+0x805812a
..@0x805826b: db 0x39, 0x7c, 0x24, 0x28  ;; cmp [esp+0x28],edi
..@0x805826f: db 0x0f, 0x8d, 0xb5, 0xfe, 0xff, 0xff  ;; jnl near A.code+0x805812a
..@0x8058275: db 0x8b, 0x5c, 0x24, 0x4c  ;; mov ebx,[esp+0x4c]
..@0x8058279: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x805827d: db 0x89, 0xc2  ;; mov edx,eax
..@0x805827f: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8058281: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x8058285: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x8058288: and ecx, strict byte 0x7
..@0x805828b: sub ebx, strict byte 0x1
..@0x805828e: db 0x0f, 0xb6, 0x14, 0x16  ;; movzx edx,byte [esi+edx]
..@0x8058292: db 0xd3, 0xfa  ;; sar edx,cl
..@0x8058294: and edx, strict byte 0x1
..@0x8058297: db 0x8b, 0x14, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov edx,[edx*4+0x987c640]
..@0x805829e: db 0x89, 0x54, 0x85, 0x00  ;; mov [ebp+eax*4+0x0],edx
..@0x80582a2: add eax, strict byte 0x1
..@0x80582a5: db 0x39, 0xf8  ;; cmp eax,edi
..@0x80582a7: db 0x75, 0xd4  ;; jnz A.code+0x805827d
..@0x80582a9: jmp strict near R.code+0x805812a
..@0x80582ae: db 0xf6, 0x44, 0x24, 0x38, 0x0f  ;; test byte [esp+0x38],0xf
..@0x80582b3: db 0x0f, 0x85, 0xbe, 0x00, 0x00, 0x00  ;; jnz near A.code+0x8058377
..@0x80582b9: db 0x83, 0x7c, 0x24, 0x38, 0x10  ;; cmp dword [esp+0x38],byte +0x10
..@0x80582be: db 0xc6, 0x05, 0x4c, 0xca, 0x87, 0x09, 0x02  ;; mov byte [0x987ca4c],0x2
..@0x80582c5: db 0x0f, 0x84, 0x85, 0x01, 0x00, 0x00  ;; jz near A.code+0x8058450
..@0x80582cb: db 0x83, 0x7c, 0x24, 0x38, 0x20  ;; cmp dword [esp+0x38],byte +0x20
..@0x80582d0: db 0x0f, 0x84, 0x39, 0x01, 0x00, 0x00  ;; jz near A.code+0x805840f
..@0x80582d6: cmp edx, strict byte 0x3
..@0x80582d9: db 0x0f, 0x84, 0xd7, 0x00, 0x00, 0x00  ;; jz near A.code+0x80583b6
..@0x80582df: db 0xa1, 0x4c, 0xc6, 0x87, 0x09  ;; mov eax,[0x987c64c]
..@0x80582e4: db 0xba, 0x18, 0x00, 0x00, 0x00  ;; mov edx,0x18
..@0x80582e9: db 0xbb, 0x10, 0x00, 0x00, 0x00  ;; mov ebx,0x10
..@0x80582ee: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80582f0: db 0x03, 0x05, 0x40, 0xc6, 0x87, 0x09  ;; add eax,[0x987c640]
..@0x80582f6: db 0x29, 0xc1  ;; sub ecx,eax
..@0x80582f8: db 0xa1, 0x50, 0xc6, 0x87, 0x09  ;; mov eax,[0x987c650]
..@0x80582fd: db 0x89, 0x0d, 0x40, 0xc6, 0x87, 0x09  ;; mov [0x987c640],ecx
..@0x8058303: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8058305: db 0x03, 0x05, 0x44, 0xc6, 0x87, 0x09  ;; add eax,[0x987c644]
..@0x805830b: db 0x29, 0xc1  ;; sub ecx,eax
..@0x805830d: db 0xa1, 0x54, 0xc6, 0x87, 0x09  ;; mov eax,[0x987c654]
..@0x8058312: db 0x89, 0x0d, 0x44, 0xc6, 0x87, 0x09  ;; mov [0x987c644],ecx
..@0x8058318: db 0xb9, 0x08, 0x00, 0x00, 0x00  ;; mov ecx,0x8
..@0x805831d: db 0x03, 0x05, 0x48, 0xc6, 0x87, 0x09  ;; add eax,[0x987c648]
..@0x8058323: db 0x29, 0xc1  ;; sub ecx,eax
..@0x8058325: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805832a: db 0x89, 0x0d, 0x48, 0xc6, 0x87, 0x09  ;; mov [0x987c648],ecx
..@0x8058330: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8058332: db 0x89, 0xc2  ;; mov edx,eax
..@0x8058334: db 0x2b, 0x0d, 0x4c, 0xc6, 0x87, 0x09  ;; sub ecx,[0x987c64c]
..@0x805833a: db 0xd3, 0xe2  ;; shl edx,cl
..@0x805833c: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x805833e: db 0x2b, 0x0d, 0x50, 0xc6, 0x87, 0x09  ;; sub ecx,[0x987c650]
..@0x8058344: db 0x81, 0xe2, 0x00, 0x00, 0xff, 0x00  ;; and edx,0xff0000
..@0x805834a: db 0x89, 0x15, 0x4c, 0xc6, 0x87, 0x09  ;; mov [0x987c64c],edx
..@0x8058350: db 0x89, 0xc2  ;; mov edx,eax
..@0x8058352: db 0xd3, 0xe2  ;; shl edx,cl
..@0x8058354: db 0xb9, 0x08, 0x00, 0x00, 0x00  ;; mov ecx,0x8
..@0x8058359: db 0x2b, 0x0d, 0x54, 0xc6, 0x87, 0x09  ;; sub ecx,[0x987c654]
..@0x805835f: db 0x81, 0xe2, 0x00, 0xff, 0x00, 0x00  ;; and edx,0xff00
..@0x8058365: db 0x89, 0x15, 0x50, 0xc6, 0x87, 0x09  ;; mov [0x987c650],edx
..@0x805836b: db 0xd3, 0xe0  ;; shl eax,cl
..@0x805836d: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8058372: db 0xa3, 0x54, 0xc6, 0x87, 0x09  ;; mov [0x987c654],eax
..@0x8058377: db 0x03, 0x6c, 0x24, 0x30  ;; add ebp,[esp+0x30]
..@0x805837b: jmp strict near R.code+0x8057fd0
..@0x8058380: db 0x66, 0x83, 0x78, 0x16, 0x01  ;; cmp word [eax+0x16],byte +0x1
..@0x8058385: db 0x0f, 0x85, 0x3b, 0xe0, 0xff, 0xff  ;; jnz near A.code+0x80563c6
..@0x805838b: db 0x0f, 0xb7, 0x50, 0x18  ;; movzx edx,word [eax+0x18]
..@0x805838f: db 0x0f, 0xb7, 0x78, 0x12  ;; movzx edi,word [eax+0x12]
..@0x8058393: db 0x0f, 0xb7, 0x70, 0x14  ;; movzx esi,word [eax+0x14]
..@0x8058397: db 0x89, 0x54, 0x24, 0x38  ;; mov [esp+0x38],edx
..@0x805839b: db 0x31, 0xd2  ;; xor edx,edx
..@0x805839d: jmp strict near R.code+0x8057f17
..@0x80583a2: db 0xf7, 0xde  ;; neg esi
..@0x80583a4: jmp strict near R.code+0x8057ffa
..@0x80583a9: db 0x85, 0xd2  ;; test edx,edx
..@0x80583ab: db 0x0f, 0x84, 0xa1, 0xfb, 0xff, 0xff  ;; jz near A.code+0x8057f52
..@0x80583b1: jmp strict near R.code+0x80563c6
..@0x80583b6: db 0x8b, 0x44, 0x24, 0x30  ;; mov eax,[esp+0x30]
..@0x80583ba: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x80583bc: db 0x8d, 0x1c, 0x18  ;; lea ebx,[eax+ebx]
..@0x80583bf: db 0x8b, 0x44, 0x8b, 0x0e  ;; mov eax,[ebx+ecx*4+0xe]
..@0x80583c3: db 0xc7, 0x04, 0x8d, 0x40, 0xc6, 0x87, 0x09, 0x00  ;; mov dword [ecx*4+0x987c640],0x0
..@0x80583cb: db 0x00, 0x00, 0x00
..@0x80583ce: db 0xa8, 0x01  ;; test al,0x1
..@0x80583d0: db 0x75, 0x2d  ;; jnz A.code+0x80583ff
..@0x80583d2: db 0xd1, 0xe8  ;; shr eax,1
..@0x80583d4: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x80583d9: db 0xc7, 0x04, 0x8d, 0x40, 0xc6, 0x87, 0x09, 0x01  ;; mov dword [ecx*4+0x987c640],0x1
..@0x80583e1: db 0x00, 0x00, 0x00
..@0x80583e4: db 0xeb, 0x15  ;; jmp short A.code+0x80583fb
..@0x80583e6: db 0x89, 0x14, 0x8d, 0x40, 0xc6, 0x87, 0x09  ;; mov [ecx*4+0x987c640],edx
..@0x80583ed: add edx, strict byte 0x1
..@0x80583f0: db 0xd1, 0xe8  ;; shr eax,1
..@0x80583f2: cmp edx, strict byte 0x21
..@0x80583f5: db 0x0f, 0x84, 0x96, 0x00, 0x00, 0x00  ;; jz near A.code+0x8058491
..@0x80583fb: db 0xa8, 0x01  ;; test al,0x1
..@0x80583fd: db 0x74, 0xe7  ;; jz A.code+0x80583e6
..@0x80583ff: db 0xc7, 0x04, 0x8d, 0x4c, 0xc6, 0x87, 0x09, 0x00  ;; mov dword [ecx*4+0x987c64c],0x0
..@0x8058407: db 0x00, 0x00, 0x00
..@0x805840a: jmp strict near R.code+0x80584a0
..@0x805840f: db 0xc7, 0x05, 0x40, 0xc6, 0x87, 0x09, 0x10, 0x00  ;; mov dword [0x987c640],0x10
..@0x8058417: db 0x00, 0x00
..@0x8058419: db 0xc7, 0x05, 0x44, 0xc6, 0x87, 0x09, 0x08, 0x00  ;; mov dword [0x987c644],0x8
..@0x8058421: db 0x00, 0x00
..@0x8058423: db 0xc7, 0x05, 0x48, 0xc6, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c648],0x0
..@0x805842b: db 0x00, 0x00
..@0x805842d: db 0xc7, 0x05, 0x4c, 0xc6, 0x87, 0x09, 0x08, 0x00  ;; mov dword [0x987c64c],0x8
..@0x8058435: db 0x00, 0x00
..@0x8058437: db 0xc7, 0x05, 0x50, 0xc6, 0x87, 0x09, 0x08, 0x00  ;; mov dword [0x987c650],0x8
..@0x805843f: db 0x00, 0x00
..@0x8058441: db 0xc7, 0x05, 0x54, 0xc6, 0x87, 0x09, 0x08, 0x00  ;; mov dword [0x987c654],0x8
..@0x8058449: db 0x00, 0x00
..@0x805844b: jmp strict near R.code+0x80582d6
..@0x8058450: db 0xc7, 0x05, 0x40, 0xc6, 0x87, 0x09, 0x0a, 0x00  ;; mov dword [0x987c640],0xa
..@0x8058458: db 0x00, 0x00
..@0x805845a: db 0xc7, 0x05, 0x44, 0xc6, 0x87, 0x09, 0x05, 0x00  ;; mov dword [0x987c644],0x5
..@0x8058462: db 0x00, 0x00
..@0x8058464: db 0xc7, 0x05, 0x48, 0xc6, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c648],0x0
..@0x805846c: db 0x00, 0x00
..@0x805846e: db 0xc7, 0x05, 0x4c, 0xc6, 0x87, 0x09, 0x05, 0x00  ;; mov dword [0x987c64c],0x5
..@0x8058476: db 0x00, 0x00
..@0x8058478: db 0xc7, 0x05, 0x50, 0xc6, 0x87, 0x09, 0x05, 0x00  ;; mov dword [0x987c650],0x5
..@0x8058480: db 0x00, 0x00
..@0x8058482: db 0xc7, 0x05, 0x54, 0xc6, 0x87, 0x09, 0x05, 0x00  ;; mov dword [0x987c654],0x5
..@0x805848a: db 0x00, 0x00
..@0x805848c: jmp strict near R.code+0x80582d6
..@0x8058491: db 0xc7, 0x04, 0x8d, 0x4c, 0xc6, 0x87, 0x09, 0x00  ;; mov dword [ecx*4+0x987c64c],0x0
..@0x8058499: db 0x00, 0x00, 0x00
..@0x805849c: db 0xa8, 0x01  ;; test al,0x1
..@0x805849e: db 0x74, 0x29  ;; jz A.code+0x80584c9
..@0x80584a0: db 0xd1, 0xe8  ;; shr eax,1
..@0x80584a2: db 0xba, 0x02, 0x00, 0x00, 0x00  ;; mov edx,0x2
..@0x80584a7: db 0xc7, 0x04, 0x8d, 0x4c, 0xc6, 0x87, 0x09, 0x01  ;; mov dword [ecx*4+0x987c64c],0x1
..@0x80584af: db 0x00, 0x00, 0x00
..@0x80584b2: db 0xeb, 0x11  ;; jmp short A.code+0x80584c5
..@0x80584b4: db 0x89, 0x14, 0x8d, 0x4c, 0xc6, 0x87, 0x09  ;; mov [ecx*4+0x987c64c],edx
..@0x80584bb: add edx, strict byte 0x1
..@0x80584be: db 0xd1, 0xe8  ;; shr eax,1
..@0x80584c0: cmp edx, strict byte 0x21
..@0x80584c3: db 0x74, 0x04  ;; jz A.code+0x80584c9
..@0x80584c5: db 0xa8, 0x01  ;; test al,0x1
..@0x80584c7: db 0x75, 0xeb  ;; jnz A.code+0x80584b4
..@0x80584c9: add ecx, strict byte 0x1
..@0x80584cc: cmp ecx, strict byte 0x3
..@0x80584cf: db 0x0f, 0x85, 0xea, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x80583bf
..@0x80584d5: jmp strict near R.code+0x80582df
..@0x80584da: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x80584df: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x80584e5: db 0x89, 0xc2  ;; mov edx,eax
..@0x80584e7: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80584e9: add eax, strict byte 0x2
..@0x80584ec: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x80584ef: and ecx, strict byte 0x7
..@0x80584f2: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x80584f7: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x80584fa: db 0xd3, 0xfe  ;; sar esi,cl
..@0x80584fc: and esi, strict byte 0x3
..@0x80584ff: db 0x85, 0xc0  ;; test eax,eax
..@0x8058501: db 0x78, 0x05  ;; js A.code+0x8058508
..@0x8058503: call R.code+0x8052cd0
..@0x8058508: db 0x8d, 0x14, 0x33  ;; lea edx,[ebx+esi]
..@0x805850b: db 0x8d, 0x04, 0x9d, 0x7c, 0x61, 0x84, 0x09  ;; lea eax,[ebx*4+0x984617c]
..@0x8058512: db 0x8d, 0x0c, 0x95, 0x88, 0x61, 0x84, 0x09  ;; lea ecx,[edx*4+0x9846188]
..@0x8058519: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x805851b: db 0x89, 0x50, 0x04  ;; mov [eax+0x4],edx
..@0x805851e: add eax, strict byte 0x4
..@0x8058521: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8058523: db 0x75, 0xf4  ;; jnz A.code+0x8058519
..@0x8058525: db 0x8d, 0x5c, 0x33, 0x03  ;; lea ebx,[ebx+esi+0x3]
..@0x8058529: jmp strict near R.code+0x80576f8
..@0x805852e: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8058532: db 0x2d, 0x00, 0x40, 0x00, 0x00  ;; sub eax,0x4000
..@0x8058537: db 0x89, 0xc2  ;; mov edx,eax
..@0x8058539: db 0x31, 0xea  ;; xor edx,ebp
..@0x805853b: db 0x80, 0xe6, 0x80  ;; and dh,0x80
..@0x805853e: db 0x75, 0x18  ;; jnz A.code+0x8058558
..@0x8058540: db 0x89, 0xea  ;; mov edx,ebp
..@0x8058542: db 0x29, 0xc2  ;; sub edx,eax
..@0x8058544: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8058549: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x805854e: call R.code+0x80531d0
..@0x8058553: jmp strict near R.code+0x80572f6
..@0x8058558: db 0x89, 0xc2  ;; mov edx,eax
..@0x805855a: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x805855f: db 0xf7, 0xda  ;; neg edx
..@0x8058561: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x8058566: db 0x81, 0xe2, 0xff, 0x7f, 0x00, 0x00  ;; and edx,0x7fff
..@0x805856c: call R.code+0x80531d0
..@0x8058571: db 0x89, 0xea  ;; mov edx,ebp
..@0x8058573: db 0xb8, 0x60, 0xe1, 0x83, 0x09  ;; mov eax,0x983e160
..@0x8058578: db 0x81, 0xe2, 0xff, 0x7f, 0x00, 0x00  ;; and edx,0x7fff
..@0x805857e: call R.code+0x80531d0
..@0x8058583: jmp strict near R.code+0x80572f6
..@0x8058588: db 0xba, 0x10, 0x00, 0x00, 0x00  ;; mov edx,0x10
..@0x805858d: db 0x89, 0xd1  ;; mov ecx,edx
..@0x805858f: and ecx, strict byte 0xf
..@0x8058592: db 0x8b, 0x0c, 0x8d, 0x40, 0xc6, 0x87, 0x09  ;; mov ecx,[ecx*4+0x987c640]
..@0x8058599: db 0x89, 0x0c, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov [edx*4+0x987c640],ecx
..@0x80585a0: add edx, strict byte 0x1
..@0x80585a3: db 0x81, 0xfa, 0x00, 0x01, 0x00, 0x00  ;; cmp edx,0x100
..@0x80585a9: db 0x75, 0xe2  ;; jnz A.code+0x805858d
..@0x80585ab: db 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea ecx,[eax*4+0x0]
..@0x80585b2: db 0xb8, 0x01, 0x13, 0x02, 0x04  ;; mov eax,0x4021301
..@0x80585b7: db 0xd3, 0xf8  ;; sar eax,cl
..@0x80585b9: and eax, strict byte 0xf
..@0x80585bc: db 0x0f, 0xaf, 0x05, 0x14, 0xe1, 0x83, 0x09  ;; imul eax,[0x983e114]
..@0x80585c3: add eax, strict byte 0x1
..@0x80585c6: db 0xd1, 0xf8  ;; sar eax,1
..@0x80585c8: db 0xa3, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],eax
..@0x80585cd: jmp strict near R.code+0x805704a
..@0x80585d2: db 0xba, 0x04, 0x00, 0x00, 0x00  ;; mov edx,0x4
..@0x80585d7: db 0x89, 0xd1  ;; mov ecx,edx
..@0x80585d9: and ecx, strict byte 0x3
..@0x80585dc: db 0x8b, 0x0c, 0x8d, 0x40, 0xc6, 0x87, 0x09  ;; mov ecx,[ecx*4+0x987c640]
..@0x80585e3: db 0x89, 0x0c, 0x95, 0x40, 0xc6, 0x87, 0x09  ;; mov [edx*4+0x987c640],ecx
..@0x80585ea: add edx, strict byte 0x1
..@0x80585ed: db 0x81, 0xfa, 0x00, 0x01, 0x00, 0x00  ;; cmp edx,0x100
..@0x80585f3: db 0x75, 0xe2  ;; jnz A.code+0x80585d7
..@0x80585f5: db 0x8d, 0x0c, 0x85, 0x00, 0x00, 0x00, 0x00  ;; lea ecx,[eax*4+0x0]
..@0x80585fc: db 0xb8, 0x01, 0x13, 0x02, 0x04  ;; mov eax,0x4021301
..@0x8058601: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8058603: and eax, strict byte 0xf
..@0x8058606: db 0x0f, 0xaf, 0x05, 0x14, 0xe1, 0x83, 0x09  ;; imul eax,[0x983e114]
..@0x805860d: add eax, strict byte 0x3
..@0x8058610: db 0xc1, 0xf8, 0x02  ;; sar eax,byte 0x2
..@0x8058613: db 0xa3, 0x54, 0xe1, 0x83, 0x09  ;; mov [0x983e154],eax
..@0x8058618: jmp strict near R.code+0x805704a
..@0x805861d: db 0xc7, 0x05, 0x44, 0xe1, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e144],0x1
..@0x8058625: db 0x00, 0x00
..@0x8058627: db 0xc7, 0x05, 0x48, 0xe1, 0x83, 0x09, 0x02, 0x00  ;; mov dword [0x983e148],0x2
..@0x805862f: db 0x00, 0x00
..@0x8058631: db 0xc7, 0x05, 0x4c, 0xe1, 0x83, 0x09, 0x00, 0x00  ;; mov dword [0x983e14c],0x0
..@0x8058639: db 0x00, 0x00
..@0x805863b: jmp strict near R.code+0x8056ff0
..@0x8058640: sub esp, strict byte 0x1c
..@0x8058643: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8058648: db 0x85, 0xc0  ;; test eax,eax
..@0x805864a: db 0x74, 0x12  ;; jz A.code+0x805865e
..@0x805864c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805864f: call B.code+prog_free
..@0x8058654: db 0xc7, 0x05, 0x00, 0xbf, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987bf00],0x0
..@0x805865c: db 0x00, 0x00
..@0x805865e: db 0xc7, 0x05, 0x04, 0xbf, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987bf04],0x0
..@0x8058666: db 0x00, 0x00
..@0x8058668: db 0xc7, 0x05, 0x08, 0xbf, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987bf08],0x0
..@0x8058670: db 0x00, 0x00
..@0x8058672: db 0xc7, 0x05, 0xe0, 0xd1, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d1e0],0xffffffff
..@0x805867a: db 0xff, 0xff
..@0x805867c: add esp, strict byte 0x1c
..@0x805867f: ret
..@0x8058680: push ebp
..@0x8058681: push edi
..@0x8058682: push esi
..@0x8058683: push ebx
..@0x8058684: db 0x81, 0xec, 0x7c, 0x01, 0x00, 0x00  ;; sub esp,0x17c
..@0x805868a: db 0x8b, 0xb4, 0x24, 0x90, 0x01, 0x00, 0x00  ;; mov esi,[esp+0x190]
..@0x8058691: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x8058699: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x805869c: call B.code+fopen
..@0x80586a1: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x80586a4: db 0x85, 0xc0  ;; test eax,eax
..@0x80586a6: db 0x89, 0xc3  ;; mov ebx,eax
..@0x80586a8: db 0x0f, 0x84, 0xa2, 0x00, 0x00, 0x00  ;; jz near A.code+0x8058750
..@0x80586ae: call B.code+strlen
..@0x80586b3: add eax, strict byte 0x1
..@0x80586b6: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x80586ba: call R.code+0x80539c0
..@0x80586bf: db 0x85, 0xc0  ;; test eax,eax
..@0x80586c1: db 0x0f, 0x84, 0xcc, 0x01, 0x00, 0x00  ;; jz near A.code+0x8058893
..@0x80586c7: db 0x8b, 0x15, 0x04, 0xbf, 0x87, 0x09  ;; mov edx,[0x987bf04]
..@0x80586cd: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x80586d1: db 0x8d, 0x74, 0x24, 0x28  ;; lea esi,[esp+0x28]
..@0x80586d5: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x80586da: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x80586de: db 0x01, 0xd0  ;; add eax,edx
..@0x80586e0: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80586e3: call B.code+strcpy
..@0x80586e8: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x80586ec: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80586f0: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80586f8: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x8058700: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8058703: db 0x03, 0x44, 0x24, 0x28  ;; add eax,[esp+0x28]
..@0x8058707: db 0xa3, 0x04, 0xbf, 0x87, 0x09  ;; mov [0x987bf04],eax
..@0x805870c: call B.code+fread
..@0x8058711: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058715: db 0x3d, 0x50, 0x4b, 0x03, 0x04  ;; cmp eax,0x4034b50
..@0x805871a: db 0x0f, 0x84, 0x80, 0x00, 0x00, 0x00  ;; jz near A.code+0x80587a0
..@0x8058720: db 0x3d, 0x4b, 0x65, 0x6e, 0x53  ;; cmp eax,0x536e654b
..@0x8058725: db 0x0f, 0x84, 0x7a, 0x01, 0x00, 0x00  ;; jz near A.code+0x80588a5
..@0x805872b: db 0x66, 0x3d, 0x4d, 0x5a  ;; cmp ax,0x5a4d
..@0x805872f: db 0x0f, 0x84, 0x6a, 0x02, 0x00, 0x00  ;; jz near A.code+0x805899f
..@0x8058735: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058738: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805873a: call B.code+fclose
..@0x805873f: db 0x81, 0xc4, 0x7c, 0x01, 0x00, 0x00  ;; add esp,0x17c
..@0x8058745: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8058747: pop ebx
..@0x8058748: pop esi
..@0x8058749: pop edi
..@0x805874a: pop ebp
..@0x805874b: ret
..@0x805874c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8058750: call B.code+strlen
..@0x8058755: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x805875a: add eax, strict byte 0x5
..@0x805875d: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058761: call R.code+0x80539c0
..@0x8058766: db 0x85, 0xc0  ;; test eax,eax
..@0x8058768: db 0x74, 0xd5  ;; jz A.code+0x805873f
..@0x805876a: db 0x8b, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf04]
..@0x8058770: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8058775: db 0x8b, 0x15, 0xe0, 0xd1, 0x05, 0x08  ;; mov edx,[0x805d1e0]
..@0x805877b: db 0x89, 0x3d, 0xe0, 0xd1, 0x05, 0x08  ;; mov [0x805d1e0],edi
..@0x8058781: db 0x89, 0x14, 0x38  ;; mov [eax+edi],edx
..@0x8058784: db 0x8d, 0x44, 0x38, 0x04  ;; lea eax,[eax+edi+0x4]
..@0x8058788: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x805878c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805878f: call B.code+strcpy
..@0x8058794: db 0x03, 0x7c, 0x24, 0x28  ;; add edi,[esp+0x28]
..@0x8058798: db 0x89, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov [0x987bf04],edi
..@0x805879e: db 0xeb, 0x9f  ;; jmp short A.code+0x805873f
..@0x80587a0: db 0xc7, 0x44, 0x24, 0x08, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x2
..@0x80587a8: db 0x8d, 0x6c, 0x24, 0x3e  ;; lea ebp,[esp+0x3e]
..@0x80587ac: db 0xc7, 0x44, 0x24, 0x04, 0xea, 0xff, 0xff, 0xff  ;; mov dword [esp+0x4],0xffffffea
..@0x80587b4: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80587b7: call B.code+fseek
..@0x80587bc: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80587c0: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80587c8: db 0xc7, 0x44, 0x24, 0x04, 0x16, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x16
..@0x80587d0: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x80587d3: call B.code+fread
..@0x80587d8: db 0x81, 0x7c, 0x24, 0x3e, 0x50, 0x4b, 0x05, 0x06  ;; cmp dword [esp+0x3e],0x6054b50
..@0x80587e0: db 0x0f, 0x84, 0x87, 0x05, 0x00, 0x00  ;; jz near A.code+0x8058d6d
..@0x80587e6: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80587ee: db 0x8d, 0x7c, 0x24, 0x2c  ;; lea edi,[esp+0x2c]
..@0x80587f2: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x0
..@0x80587fa: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80587fd: call B.code+fseek
..@0x8058802: db 0xc7, 0x44, 0x24, 0x34, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x34],0x0
..@0x805880a: db 0xeb, 0x5f  ;; jmp short A.code+0x805886b
..@0x805880c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8058810: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8058814: db 0x3d, 0x50, 0x4b, 0x01, 0x02  ;; cmp eax,0x2014b50
..@0x8058819: db 0x0f, 0x84, 0x29, 0x07, 0x00, 0x00  ;; jz near A.code+0x8058f48
..@0x805881f: db 0x3d, 0x50, 0x4b, 0x03, 0x04  ;; cmp eax,0x4034b50
..@0x8058824: db 0x75, 0x65  ;; jnz A.code+0x805888b
..@0x8058826: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x805882a: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058832: db 0xc7, 0x44, 0x24, 0x04, 0x1a, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1a
..@0x805883a: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x805883d: call B.code+fread
..@0x8058842: db 0x0f, 0xbf, 0x44, 0x24, 0x56  ;; movsx eax,word [esp+0x56]
..@0x8058847: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x805884a: db 0x0f, 0xbf, 0x54, 0x24, 0x54  ;; movsx edx,word [esp+0x54]
..@0x805884f: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058857: db 0x03, 0x44, 0x24, 0x4c  ;; add eax,[esp+0x4c]
..@0x805885b: db 0x01, 0xd0  ;; add eax,edx
..@0x805885d: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8058861: call B.code+fseek
..@0x8058866: db 0x83, 0x44, 0x24, 0x34, 0x01  ;; add dword [esp+0x34],byte +0x1
..@0x805886b: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x805886f: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058877: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x805887f: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x8058882: call B.code+fread
..@0x8058887: db 0x85, 0xc0  ;; test eax,eax
..@0x8058889: db 0x75, 0x85  ;; jnz A.code+0x8058810
..@0x805888b: db 0xc7, 0x44, 0x24, 0x34, 0xff, 0xff, 0xff, 0xff  ;; mov dword [esp+0x34],0xffffffff
..@0x8058893: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058896: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x805889b: call B.code+fclose
..@0x80588a0: jmp strict near R.code+0x805873f
..@0x80588a5: db 0x8d, 0x6c, 0x24, 0x3e  ;; lea ebp,[esp+0x3e]
..@0x80588a9: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80588ad: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80588b5: db 0xc7, 0x44, 0x24, 0x04, 0x0c, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0xc
..@0x80588bd: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x80588c0: call B.code+fread
..@0x80588c5: db 0x81, 0x7c, 0x24, 0x3e, 0x69, 0x6c, 0x76, 0x65  ;; cmp dword [esp+0x3e],0x65766c69
..@0x80588cd: db 0x0f, 0x85, 0x62, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8058735
..@0x80588d3: db 0x81, 0x7c, 0x24, 0x42, 0x72, 0x6d, 0x61, 0x6e  ;; cmp dword [esp+0x42],0x6e616d72
..@0x80588db: db 0x0f, 0x85, 0x54, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8058735
..@0x80588e1: db 0x8b, 0x44, 0x24, 0x46  ;; mov eax,[esp+0x46]
..@0x80588e5: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x80588ed: db 0x8d, 0x78, 0x01  ;; lea edi,[eax+0x1]
..@0x80588f0: db 0x89, 0x44, 0x24, 0x34  ;; mov [esp+0x34],eax
..@0x80588f4: db 0xc1, 0xe7, 0x04  ;; shl edi,byte 0x4
..@0x80588f7: db 0x85, 0xc0  ;; test eax,eax
..@0x80588f9: db 0x0f, 0x8e, 0x36, 0xfe, 0xff, 0xff  ;; jng near A.code+0x8058735
..@0x80588ff: db 0x89, 0x5c, 0x24, 0x18  ;; mov [esp+0x18],ebx
..@0x8058903: nop
..@0x8058904: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8058908: db 0x8b, 0x44, 0x24, 0x18  ;; mov eax,[esp+0x18]
..@0x805890c: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058914: db 0xc7, 0x44, 0x24, 0x04, 0x10, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x10
..@0x805891c: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x805891f: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8058923: call B.code+fread
..@0x8058928: db 0x8b, 0x44, 0x24, 0x4a  ;; mov eax,[esp+0x4a]
..@0x805892c: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x805892f: db 0xc6, 0x44, 0x24, 0x4a, 0x00  ;; mov byte [esp+0x4a],0x0
..@0x8058934: db 0x89, 0x44, 0x24, 0x30  ;; mov [esp+0x30],eax
..@0x8058938: call B.code+strlen
..@0x805893d: add eax, strict byte 0x16
..@0x8058940: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058944: call R.code+0x80539c0
..@0x8058949: db 0x85, 0xc0  ;; test eax,eax
..@0x805894b: db 0x0f, 0x84, 0x20, 0x06, 0x00, 0x00  ;; jz near A.code+0x8058f71
..@0x8058951: db 0x0f, 0xb6, 0x44, 0x24, 0x3e  ;; movzx eax,byte [esp+0x3e]
..@0x8058956: db 0x31, 0xd2  ;; xor edx,edx
..@0x8058958: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805895a: db 0x8d, 0x4c, 0x24, 0x3f  ;; lea ecx,[esp+0x3f]
..@0x805895e: db 0x84, 0xc0  ;; test al,al
..@0x8058960: db 0x75, 0x2a  ;; jnz A.code+0x805898c
..@0x8058962: jmp strict near R.code+0x8058c53
..@0x8058967: db 0x89, 0xf6  ;; mov esi,esi
..@0x8058969: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8058970: sub eax, strict byte 0x20
..@0x8058973: db 0x0f, 0xb6, 0xd8  ;; movzx ebx,al
..@0x8058976: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x8058979: add ecx, strict byte 0x1
..@0x805897c: db 0x89, 0xda  ;; mov edx,ebx
..@0x805897e: db 0x29, 0xc2  ;; sub edx,eax
..@0x8058980: db 0x0f, 0xb6, 0x41, 0xff  ;; movzx eax,byte [ecx-0x1]
..@0x8058984: db 0x84, 0xc0  ;; test al,al
..@0x8058986: db 0x0f, 0x84, 0xc4, 0x02, 0x00, 0x00  ;; jz near A.code+0x8058c50
..@0x805898c: db 0x8d, 0x58, 0x9f  ;; lea ebx,[eax-0x61]
..@0x805898f: db 0x80, 0xfb, 0x19  ;; cmp bl,0x19
..@0x8058992: db 0x76, 0xdc  ;; jna A.code+0x8058970
..@0x8058994: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8058996: db 0xbb, 0x5c, 0x00, 0x00, 0x00  ;; mov ebx,0x5c
..@0x805899b: db 0x74, 0xd9  ;; jz A.code+0x8058976
..@0x805899d: db 0xeb, 0xd4  ;; jmp short A.code+0x8058973
..@0x805899f: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80589a7: db 0xc7, 0x44, 0x24, 0x04, 0x3c, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x3c
..@0x80589af: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80589b2: call B.code+fseek
..@0x80589b7: db 0x8d, 0x44, 0x24, 0x38  ;; lea eax,[esp+0x38]
..@0x80589bb: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80589bf: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80589c7: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x80589cf: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80589d2: call B.code+fread
..@0x80589d7: db 0x8b, 0x44, 0x24, 0x38  ;; mov eax,[esp+0x38]
..@0x80589db: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80589de: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80589e6: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80589ea: call B.code+fseek
..@0x80589ef: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x80589f3: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80589fb: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x8058a03: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8058a06: call B.code+fread
..@0x8058a0b: db 0x81, 0x7c, 0x24, 0x28, 0x50, 0x45, 0x00, 0x00  ;; cmp dword [esp+0x28],0x4550
..@0x8058a13: db 0x0f, 0x85, 0x1c, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8058735
..@0x8058a19: db 0x8d, 0x44, 0x24, 0x24  ;; lea eax,[esp+0x24]
..@0x8058a1d: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058a21: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8058a23: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058a2b: db 0xc7, 0x44, 0x24, 0x04, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x2
..@0x8058a33: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058a36: call B.code+fread
..@0x8058a3b: db 0x8d, 0x44, 0x24, 0x26  ;; lea eax,[esp+0x26]
..@0x8058a3f: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058a43: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058a4b: db 0xc7, 0x44, 0x24, 0x04, 0x02, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x2
..@0x8058a53: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058a56: call B.code+fread
..@0x8058a5b: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058a63: db 0xc7, 0x44, 0x24, 0x04, 0x00, 0x01, 0x00, 0x00  ;; mov dword [esp+0x4],0x100
..@0x8058a6b: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058a6e: call B.code+fseek
..@0x8058a73: db 0x66, 0x83, 0x7c, 0x24, 0x26, 0x00  ;; cmp word [esp+0x26],byte +0x0
..@0x8058a79: db 0x74, 0x6a  ;; jz A.code+0x8058ae5
..@0x8058a7b: db 0x8d, 0x7c, 0x24, 0x2c  ;; lea edi,[esp+0x2c]
..@0x8058a7f: nop
..@0x8058a80: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058a84: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058a8c: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x8058a94: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8058a97: call B.code+fread
..@0x8058a9c: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058aa0: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058aa8: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x8058ab0: db 0x89, 0x3c, 0x24  ;; mov [esp],edi
..@0x8058ab3: call B.code+fread
..@0x8058ab8: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8058abc: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058abf: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058ac7: db 0xc7, 0x44, 0x24, 0x04, 0x20, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x20
..@0x8058acf: db 0x03, 0x44, 0x24, 0x28  ;; add eax,[esp+0x28]
..@0x8058ad3: db 0x39, 0xc5  ;; cmp ebp,eax
..@0x8058ad5: db 0x0f, 0x4c, 0xe8  ;; cmovl ebp,eax
..@0x8058ad8: call B.code+fseek
..@0x8058add: db 0x66, 0x83, 0x6c, 0x24, 0x26, 0x01  ;; sub word [esp+0x26],byte +0x1
..@0x8058ae3: db 0x75, 0x9b  ;; jnz A.code+0x8058a80
..@0x8058ae5: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x8058aed: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8058af1: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058af4: call B.code+fseek
..@0x8058af9: db 0x8d, 0x44, 0x24, 0x34  ;; lea eax,[esp+0x34]
..@0x8058afd: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058b01: db 0xc7, 0x44, 0x24, 0x08, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x4
..@0x8058b09: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x8058b11: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058b14: call B.code+fread
..@0x8058b19: cmp eax, strict byte 0x4
..@0x8058b1c: db 0x0f, 0x85, 0x71, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x8058893
..@0x8058b22: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8058b26: db 0x85, 0xc0  ;; test eax,eax
..@0x8058b28: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058b2c: db 0x7e, 0x35  ;; jng A.code+0x8058b63
..@0x8058b2e: dw 0x9066  ;; o16 nop
..@0x8058b30: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058b33: call B.code+fgetc
..@0x8058b38: db 0x85, 0xc0  ;; test eax,eax
..@0x8058b3a: db 0x7f, 0xf4  ;; jg A.code+0x8058b30
..@0x8058b3c: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058b44: db 0xc7, 0x44, 0x24, 0x04, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x4
..@0x8058b4c: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058b4f: call B.code+fseek
..@0x8058b54: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058b58: sub eax, strict byte 0x1
..@0x8058b5b: db 0x85, 0xc0  ;; test eax,eax
..@0x8058b5d: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058b61: db 0x7f, 0xcd  ;; jg A.code+0x8058b30
..@0x8058b63: add ebp, strict byte 0x4
..@0x8058b66: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058b69: call B.code+ftell
..@0x8058b6e: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8058b72: db 0x8d, 0x6c, 0x24, 0x3e  ;; lea ebp,[esp+0x3e]
..@0x8058b76: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x8058b7e: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058b81: db 0x89, 0x44, 0x24, 0x38  ;; mov [esp+0x38],eax
..@0x8058b85: call B.code+fseek
..@0x8058b8a: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8058b8e: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x8058b96: db 0x85, 0xc0  ;; test eax,eax
..@0x8058b98: db 0x0f, 0x8e, 0x97, 0xfb, 0xff, 0xff  ;; jng near A.code+0x8058735
..@0x8058b9e: dw 0x9066  ;; o16 nop
..@0x8058ba0: db 0xc7, 0x44, 0x24, 0x2c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x2c],0x0
..@0x8058ba8: nop
..@0x8058ba9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8058bb0: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058bb3: call B.code+fgetc
..@0x8058bb8: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x8058bbc: db 0x88, 0x44, 0x14, 0x3e  ;; mov [esp+edx+0x3e],al
..@0x8058bc0: add edx, strict byte 0x1
..@0x8058bc3: db 0x85, 0xc0  ;; test eax,eax
..@0x8058bc5: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x8058bc9: db 0x7f, 0xe5  ;; jg A.code+0x8058bb0
..@0x8058bcb: db 0x8d, 0x44, 0x24, 0x30  ;; lea eax,[esp+0x30]
..@0x8058bcf: db 0x89, 0x5c, 0x24, 0x0c  ;; mov [esp+0xc],ebx
..@0x8058bd3: db 0xc7, 0x44, 0x24, 0x08, 0x04, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x4
..@0x8058bdb: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x8058be3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058be6: call B.code+fread
..@0x8058beb: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x8058bee: call B.code+strlen
..@0x8058bf3: add eax, strict byte 0x16
..@0x8058bf6: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058bfa: call R.code+0x80539c0
..@0x8058bff: db 0x85, 0xc0  ;; test eax,eax
..@0x8058c01: db 0x0f, 0x84, 0x8c, 0xfc, 0xff, 0xff  ;; jz near A.code+0x8058893
..@0x8058c07: db 0x0f, 0xb6, 0x44, 0x24, 0x3e  ;; movzx eax,byte [esp+0x3e]
..@0x8058c0c: db 0x31, 0xd2  ;; xor edx,edx
..@0x8058c0e: db 0x31, 0xf6  ;; xor esi,esi
..@0x8058c10: db 0x8d, 0x4c, 0x24, 0x3f  ;; lea ecx,[esp+0x3f]
..@0x8058c14: db 0x84, 0xc0  ;; test al,al
..@0x8058c16: db 0x0f, 0x84, 0xc9, 0x00, 0x00, 0x00  ;; jz near A.code+0x8058ce5
..@0x8058c1c: db 0x89, 0xdf  ;; mov edi,ebx
..@0x8058c1e: db 0xeb, 0x1c  ;; jmp short A.code+0x8058c3c
..@0x8058c20: sub eax, strict byte 0x20
..@0x8058c23: db 0x0f, 0xb6, 0xf0  ;; movzx esi,al
..@0x8058c26: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x8058c29: add ecx, strict byte 0x1
..@0x8058c2c: db 0x89, 0xf2  ;; mov edx,esi
..@0x8058c2e: db 0x29, 0xc2  ;; sub edx,eax
..@0x8058c30: db 0x0f, 0xb6, 0x41, 0xff  ;; movzx eax,byte [ecx-0x1]
..@0x8058c34: db 0x84, 0xc0  ;; test al,al
..@0x8058c36: db 0x0f, 0x84, 0xa4, 0x00, 0x00, 0x00  ;; jz near A.code+0x8058ce0
..@0x8058c3c: db 0x8d, 0x58, 0x9f  ;; lea ebx,[eax-0x61]
..@0x8058c3f: db 0x80, 0xfb, 0x19  ;; cmp bl,0x19
..@0x8058c42: db 0x76, 0xdc  ;; jna A.code+0x8058c20
..@0x8058c44: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8058c46: db 0xbe, 0x5c, 0x00, 0x00, 0x00  ;; mov esi,0x5c
..@0x8058c4b: db 0x74, 0xd9  ;; jz A.code+0x8058c26
..@0x8058c4d: db 0xeb, 0xd4  ;; jmp short A.code+0x8058c23
..@0x8058c4f: nop
..@0x8058c50: db 0x0f, 0xb6, 0xda  ;; movzx ebx,dl
..@0x8058c53: db 0x8b, 0x35, 0x04, 0xbf, 0x87, 0x09  ;; mov esi,[0x987bf04]
..@0x8058c59: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8058c5e: db 0x8b, 0x0c, 0x9d, 0x20, 0xbf, 0x87, 0x09  ;; mov ecx,[ebx*4+0x987bf20]
..@0x8058c65: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8058c69: db 0x89, 0x7c, 0x30, 0x0c  ;; mov [eax+esi+0xc],edi
..@0x8058c6d: db 0x89, 0x0c, 0x30  ;; mov [eax+esi],ecx
..@0x8058c70: db 0x8b, 0x0d, 0xe4, 0xd1, 0x05, 0x08  ;; mov ecx,[0x805d1e4]
..@0x8058c76: db 0x89, 0x54, 0x30, 0x08  ;; mov [eax+esi+0x8],edx
..@0x8058c7a: db 0x89, 0x4c, 0x30, 0x04  ;; mov [eax+esi+0x4],ecx
..@0x8058c7e: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8058c82: db 0xc7, 0x44, 0x30, 0x14, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+esi+0x14],0x0
..@0x8058c8a: db 0x89, 0x4c, 0x30, 0x10  ;; mov [eax+esi+0x10],ecx
..@0x8058c8e: db 0x8d, 0x44, 0x30, 0x15  ;; lea eax,[eax+esi+0x15]
..@0x8058c92: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8058c96: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058c99: call B.code+strcpy
..@0x8058c9e: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058ca2: db 0x89, 0x34, 0x9d, 0x20, 0xbf, 0x87, 0x09  ;; mov [ebx*4+0x987bf20],esi
..@0x8058ca9: db 0x89, 0x35, 0xe4, 0xd1, 0x05, 0x08  ;; mov [0x805d1e4],esi
..@0x8058caf: db 0x03, 0x7c, 0x24, 0x30  ;; add edi,[esp+0x30]
..@0x8058cb3: db 0x03, 0x74, 0x24, 0x2c  ;; add esi,[esp+0x2c]
..@0x8058cb7: add eax, strict byte 0x1
..@0x8058cba: db 0x39, 0x44, 0x24, 0x34  ;; cmp [esp+0x34],eax
..@0x8058cbe: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058cc2: db 0x89, 0x35, 0x04, 0xbf, 0x87, 0x09  ;; mov [0x987bf04],esi
..@0x8058cc8: db 0x0f, 0x8f, 0x3a, 0xfc, 0xff, 0xff  ;; jg near A.code+0x8058908
..@0x8058cce: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x8058cd2: jmp strict near R.code+0x8058735
..@0x8058cd7: db 0x89, 0xf6  ;; mov esi,esi
..@0x8058cd9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8058ce0: db 0x89, 0xfb  ;; mov ebx,edi
..@0x8058ce2: db 0x0f, 0xb6, 0xf2  ;; movzx esi,dl
..@0x8058ce5: db 0x8b, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf04]
..@0x8058ceb: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8058cf0: db 0x8b, 0x0c, 0xb5, 0x20, 0xbf, 0x87, 0x09  ;; mov ecx,[esi*4+0x987bf20]
..@0x8058cf7: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8058cfb: db 0x89, 0x0c, 0x38  ;; mov [eax+edi],ecx
..@0x8058cfe: db 0x8b, 0x0d, 0xe4, 0xd1, 0x05, 0x08  ;; mov ecx,[0x805d1e4]
..@0x8058d04: db 0x89, 0x54, 0x38, 0x08  ;; mov [eax+edi+0x8],edx
..@0x8058d08: db 0x89, 0x4c, 0x38, 0x04  ;; mov [eax+edi+0x4],ecx
..@0x8058d0c: db 0x8b, 0x4c, 0x24, 0x38  ;; mov ecx,[esp+0x38]
..@0x8058d10: db 0x89, 0x4c, 0x38, 0x0c  ;; mov [eax+edi+0xc],ecx
..@0x8058d14: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8058d18: db 0xc7, 0x44, 0x38, 0x14, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+edi+0x14],0x0
..@0x8058d20: db 0x89, 0x4c, 0x38, 0x10  ;; mov [eax+edi+0x10],ecx
..@0x8058d24: db 0x8d, 0x44, 0x38, 0x15  ;; lea eax,[eax+edi+0x15]
..@0x8058d28: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8058d2c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058d2f: call B.code+strcpy
..@0x8058d34: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058d38: db 0x89, 0x3c, 0xb5, 0x20, 0xbf, 0x87, 0x09  ;; mov [esi*4+0x987bf20],edi
..@0x8058d3f: db 0x8b, 0x54, 0x24, 0x30  ;; mov edx,[esp+0x30]
..@0x8058d43: db 0x89, 0x3d, 0xe4, 0xd1, 0x05, 0x08  ;; mov [0x805d1e4],edi
..@0x8058d49: db 0x03, 0x7c, 0x24, 0x2c  ;; add edi,[esp+0x2c]
..@0x8058d4d: add eax, strict byte 0x1
..@0x8058d50: db 0x01, 0x54, 0x24, 0x38  ;; add [esp+0x38],edx
..@0x8058d54: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058d58: db 0x39, 0x44, 0x24, 0x34  ;; cmp [esp+0x34],eax
..@0x8058d5c: db 0x89, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov [0x987bf04],edi
..@0x8058d62: db 0x0f, 0x8f, 0x38, 0xfe, 0xff, 0xff  ;; jg near A.code+0x8058ba0
..@0x8058d68: jmp strict near R.code+0x8058735
..@0x8058d6d: db 0x0f, 0xbf, 0x44, 0x24, 0x48  ;; movsx eax,word [esp+0x48]
..@0x8058d72: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x8058d7a: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058d7d: db 0x89, 0x44, 0x24, 0x34  ;; mov [esp+0x34],eax
..@0x8058d81: db 0x8b, 0x44, 0x24, 0x4e  ;; mov eax,[esp+0x4e]
..@0x8058d85: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8058d89: call B.code+fseek
..@0x8058d8e: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8058d92: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x8058d9a: db 0x85, 0xc0  ;; test eax,eax
..@0x8058d9c: db 0x0f, 0x8e, 0x93, 0xf9, 0xff, 0xff  ;; jng near A.code+0x8058735
..@0x8058da2: db 0x8d, 0x74, 0x24, 0x6c  ;; lea esi,[esp+0x6c]
..@0x8058da6: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x8058daa: db 0x89, 0x6c, 0x24, 0x1c  ;; mov [esp+0x1c],ebp
..@0x8058dae: dw 0x9066  ;; o16 nop
..@0x8058db0: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8058db4: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058dbc: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x8058dc0: db 0xc7, 0x44, 0x24, 0x04, 0x2e, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x2e
..@0x8058dc8: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x8058dcc: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8058dcf: call B.code+fread
..@0x8058dd4: db 0x81, 0x7c, 0x24, 0x3e, 0x50, 0x4b, 0x01, 0x02  ;; cmp dword [esp+0x3e],0x2014b50
..@0x8058ddc: db 0x0f, 0x85, 0x3d, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8058f1f
..@0x8058de2: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x8058de6: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058dee: db 0x0f, 0xbf, 0x44, 0x24, 0x5a  ;; movsx eax,word [esp+0x5a]
..@0x8058df3: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8058df6: db 0x89, 0x54, 0x24, 0x0c  ;; mov [esp+0xc],edx
..@0x8058dfa: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8058dfe: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058e02: call B.code+fread
..@0x8058e07: db 0x8b, 0x44, 0x24, 0x2c  ;; mov eax,[esp+0x2c]
..@0x8058e0b: db 0xc6, 0x44, 0x04, 0x6c, 0x00  ;; mov byte [esp+eax+0x6c],0x0
..@0x8058e10: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x8058e13: call B.code+strlen
..@0x8058e18: add eax, strict byte 0x16
..@0x8058e1b: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058e1f: call R.code+0x80539c0
..@0x8058e24: db 0x85, 0xc0  ;; test eax,eax
..@0x8058e26: db 0x0f, 0x84, 0x06, 0x01, 0x00, 0x00  ;; jz near A.code+0x8058f32
..@0x8058e2c: db 0x0f, 0xb6, 0x44, 0x24, 0x6c  ;; movzx eax,byte [esp+0x6c]
..@0x8058e31: db 0x31, 0xd2  ;; xor edx,edx
..@0x8058e33: db 0x31, 0xed  ;; xor ebp,ebp
..@0x8058e35: db 0x8d, 0x4c, 0x24, 0x6d  ;; lea ecx,[esp+0x6d]
..@0x8058e39: db 0x84, 0xc0  ;; test al,al
..@0x8058e3b: db 0x75, 0x1b  ;; jnz A.code+0x8058e58
..@0x8058e3d: db 0xeb, 0x34  ;; jmp short A.code+0x8058e73
..@0x8058e3f: nop
..@0x8058e40: sub eax, strict byte 0x20
..@0x8058e43: db 0x0f, 0xb6, 0xd8  ;; movzx ebx,al
..@0x8058e46: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x8058e49: add ecx, strict byte 0x1
..@0x8058e4c: db 0x89, 0xda  ;; mov edx,ebx
..@0x8058e4e: db 0x29, 0xc2  ;; sub edx,eax
..@0x8058e50: db 0x0f, 0xb6, 0x41, 0xff  ;; movzx eax,byte [ecx-0x1]
..@0x8058e54: db 0x84, 0xc0  ;; test al,al
..@0x8058e56: db 0x74, 0x18  ;; jz A.code+0x8058e70
..@0x8058e58: db 0x8d, 0x58, 0x9f  ;; lea ebx,[eax-0x61]
..@0x8058e5b: db 0x80, 0xfb, 0x19  ;; cmp bl,0x19
..@0x8058e5e: db 0x76, 0xe0  ;; jna A.code+0x8058e40
..@0x8058e60: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8058e62: db 0xbb, 0x5c, 0x00, 0x00, 0x00  ;; mov ebx,0x5c
..@0x8058e67: db 0x74, 0xdd  ;; jz A.code+0x8058e46
..@0x8058e69: db 0xeb, 0xd8  ;; jmp short A.code+0x8058e43
..@0x8058e6b: nop
..@0x8058e6c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8058e70: db 0x0f, 0xb6, 0xea  ;; movzx ebp,dl
..@0x8058e73: db 0x8b, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf04]
..@0x8058e79: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8058e7e: db 0x8b, 0x0c, 0xad, 0x20, 0xbf, 0x87, 0x09  ;; mov ecx,[ebp*4+0x987bf20]
..@0x8058e85: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8058e89: db 0x89, 0x0c, 0x38  ;; mov [eax+edi],ecx
..@0x8058e8c: db 0x8b, 0x0d, 0xe4, 0xd1, 0x05, 0x08  ;; mov ecx,[0x805d1e4]
..@0x8058e92: db 0x89, 0x54, 0x38, 0x08  ;; mov [eax+edi+0x8],edx
..@0x8058e96: db 0x89, 0x4c, 0x38, 0x04  ;; mov [eax+edi+0x4],ecx
..@0x8058e9a: db 0x8b, 0x4c, 0x24, 0x68  ;; mov ecx,[esp+0x68]
..@0x8058e9e: db 0xc7, 0x44, 0x38, 0x10, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax+edi+0x10],0x0
..@0x8058ea6: db 0xc7, 0x44, 0x38, 0x14, 0x01, 0x00, 0x00, 0x00  ;; mov dword [eax+edi+0x14],0x1
..@0x8058eae: db 0x89, 0x4c, 0x38, 0x0c  ;; mov [eax+edi+0xc],ecx
..@0x8058eb2: db 0x8d, 0x44, 0x38, 0x15  ;; lea eax,[eax+edi+0x15]
..@0x8058eb6: db 0x89, 0x74, 0x24, 0x04  ;; mov [esp+0x4],esi
..@0x8058eba: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058ebd: call B.code+strcpy
..@0x8058ec2: db 0x0f, 0xbf, 0x54, 0x24, 0x5c  ;; movsx edx,word [esp+0x5c]
..@0x8058ec7: db 0x89, 0x3d, 0xe4, 0xd1, 0x05, 0x08  ;; mov [0x805d1e4],edi
..@0x8058ecd: db 0x0f, 0xbf, 0x44, 0x24, 0x5e  ;; movsx eax,word [esp+0x5e]
..@0x8058ed2: db 0x89, 0x3c, 0xad, 0x20, 0xbf, 0x87, 0x09  ;; mov [ebp*4+0x987bf20],edi
..@0x8058ed9: db 0x03, 0x7c, 0x24, 0x2c  ;; add edi,[esp+0x2c]
..@0x8058edd: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058ee5: db 0x01, 0xd0  ;; add eax,edx
..@0x8058ee7: db 0x89, 0x44, 0x24, 0x2c  ;; mov [esp+0x2c],eax
..@0x8058eeb: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8058eef: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8058ef3: db 0x89, 0x3d, 0x04, 0xbf, 0x87, 0x09  ;; mov [0x987bf04],edi
..@0x8058ef9: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058efc: call B.code+fseek
..@0x8058f01: db 0x8b, 0x44, 0x24, 0x28  ;; mov eax,[esp+0x28]
..@0x8058f05: add eax, strict byte 0x1
..@0x8058f08: db 0x39, 0x44, 0x24, 0x34  ;; cmp [esp+0x34],eax
..@0x8058f0c: db 0x89, 0x44, 0x24, 0x28  ;; mov [esp+0x28],eax
..@0x8058f10: db 0x0f, 0x8f, 0x9a, 0xfe, 0xff, 0xff  ;; jg near A.code+0x8058db0
..@0x8058f16: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8058f1a: jmp strict near R.code+0x8058735
..@0x8058f1f: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8058f23: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058f26: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x8058f28: call B.code+fclose
..@0x8058f2d: jmp strict near R.code+0x805873f
..@0x8058f32: db 0x8b, 0x5c, 0x24, 0x10  ;; mov ebx,[esp+0x10]
..@0x8058f36: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058f39: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x8058f3e: call B.code+fclose
..@0x8058f43: jmp strict near R.code+0x805873f
..@0x8058f48: db 0x8b, 0x44, 0x24, 0x34  ;; mov eax,[esp+0x34]
..@0x8058f4c: db 0x85, 0xc0  ;; test eax,eax
..@0x8058f4e: db 0x0f, 0x88, 0x3f, 0xf9, 0xff, 0xff  ;; js near A.code+0x8058893
..@0x8058f54: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8058f5c: db 0xc7, 0x44, 0x24, 0x04, 0xfc, 0xff, 0xff, 0xff  ;; mov dword [esp+0x4],0xfffffffc
..@0x8058f64: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058f67: call B.code+fseek
..@0x8058f6c: jmp strict near R.code+0x8058d8e
..@0x8058f71: db 0x8b, 0x5c, 0x24, 0x18  ;; mov ebx,[esp+0x18]
..@0x8058f75: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x8058f78: db 0xbb, 0xff, 0xff, 0xff, 0xff  ;; mov ebx,0xffffffff
..@0x8058f7d: call B.code+fclose
..@0x8058f82: jmp strict near R.code+0x805873f
..@0x8058f87: db 0x89, 0xf6  ;; mov esi,esi
..@0x8058f89: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8058f90: sub esp, strict byte 0x7c
..@0x8058f93: db 0xc7, 0x05, 0x64, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a64],0x0
..@0x8058f9b: db 0x00, 0x00
..@0x8058f9d: db 0x8b, 0x84, 0x24, 0x80, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x80]
..@0x8058fa4: db 0xc7, 0x05, 0x68, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a68],0x0
..@0x8058fac: db 0x00, 0x00
..@0x8058fae: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8058fb1: db 0xa3, 0x60, 0x8a, 0x85, 0x09  ;; mov [0x9858a60],eax
..@0x8058fb6: call B.code+fileno
..@0x8058fbb: db 0x8d, 0x54, 0x24, 0x18  ;; lea edx,[esp+0x18]
..@0x8058fbf: db 0xc7, 0x04, 0x24, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp],0x3
..@0x8058fc6: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x8058fca: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
%ifidn TARGET, ls
..@0x8058fce: call B.code+__fxstat
%else  ; TARGET, ls. Simulate an error in unused __fxstat.
..@0x8058fce: db 0x31, 0xc0  ;; xor eax,eax
..@0x8058fd0: dec eax
..@0x8058fd1: times 2 nop
%endif  ; TARGET, ls
..@0x8058fd3: db 0x85, 0xc0  ;; test eax,eax
..@0x8058fd5: db 0x78, 0x29  ;; js A.code+0x8059000
..@0x8058fd7: db 0x8b, 0x44, 0x24, 0x44  ;; mov eax,[esp+0x44]
..@0x8058fdb: db 0xa3, 0x74, 0x8a, 0x85, 0x09  ;; mov [0x9858a74],eax
..@0x8058fe0: db 0xc7, 0x05, 0x78, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a78],0x0
..@0x8058fe8: db 0x00, 0x00
..@0x8058fea: db 0xc7, 0x05, 0x84, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a84],0x0
..@0x8058ff2: db 0x00, 0x00
..@0x8058ff4: add esp, strict byte 0x7c
..@0x8058ff7: ret
..@0x8058ff8: nop
..@0x8058ff9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059000: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x8059005: db 0xeb, 0xd4  ;; jmp short A.code+0x8058fdb
..@0x8059007: db 0x89, 0xf6  ;; mov esi,esi
..@0x8059009: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8059010: push ebp
..@0x8059011: push edi
..@0x8059012: push esi
..@0x8059013: push ebx
..@0x8059014: db 0x81, 0xec, 0xbc, 0x01, 0x00, 0x00  ;; sub esp,0x1bc
..@0x805901a: db 0x8b, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x1d0]
..@0x8059021: db 0x80, 0x3a, 0x7c  ;; cmp byte [edx],0x7c
..@0x8059024: db 0x0f, 0x84, 0x85, 0x00, 0x00, 0x00  ;; jz near A.code+0x80590af
..@0x805902a: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x8059032: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x8059035: call B.code+fopen
..@0x805903a: db 0x85, 0xc0  ;; test eax,eax
..@0x805903c: db 0xa3, 0x60, 0x8a, 0x85, 0x09  ;; mov [0x9858a60],eax
..@0x8059041: db 0x74, 0x6c  ;; jz A.code+0x80590af
..@0x8059043: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8059046: db 0xc7, 0x05, 0x64, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a64],0x0
..@0x805904e: db 0x00, 0x00
..@0x8059050: db 0xc7, 0x05, 0x68, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a68],0x0
..@0x8059058: db 0x00, 0x00
..@0x805905a: call B.code+fileno
..@0x805905f: db 0x8d, 0x54, 0x24, 0x7c  ;; lea edx,[esp+0x7c]
..@0x8059063: db 0xc7, 0x04, 0x24, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp],0x3
..@0x805906a: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x805906e: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
%ifidn TARGET, ls
..@0x8059072: call B.code+__fxstat
%else  ; TARGET, ls. Simulate an error in unused __fxstat.
..@0x8059072: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059074: dec eax
..@0x8059075: times 2 nop
%endif  ; TARGET, ls
..@0x8059077: db 0x85, 0xc0  ;; test eax,eax
..@0x8059079: db 0x0f, 0x88, 0xe9, 0x03, 0x00, 0x00  ;; js near A.code+0x8059468
..@0x805907f: db 0x8b, 0x84, 0x24, 0xa8, 0x00, 0x00, 0x00  ;; mov eax,[esp+0xa8]
..@0x8059086: db 0xa3, 0x74, 0x8a, 0x85, 0x09  ;; mov [0x9858a74],eax
..@0x805908b: db 0xc7, 0x05, 0x78, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a78],0x0
..@0x8059093: db 0x00, 0x00
..@0x8059095: db 0xc7, 0x05, 0x84, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a84],0x0
..@0x805909d: db 0x00, 0x00
..@0x805909f: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x80590a4: db 0x81, 0xc4, 0xbc, 0x01, 0x00, 0x00  ;; add esp,0x1bc
..@0x80590aa: pop ebx
..@0x80590ab: pop esi
..@0x80590ac: pop edi
..@0x80590ad: pop ebp
..@0x80590ae: ret
..@0x80590af: db 0x8b, 0x1d, 0x00, 0xbf, 0x87, 0x09  ;; mov ebx,[0x987bf00]
..@0x80590b5: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80590b7: db 0x89, 0x5c, 0x24, 0x1c  ;; mov [esp+0x1c],ebx
..@0x80590bb: db 0x0f, 0x84, 0x0d, 0x01, 0x00, 0x00  ;; jz near A.code+0x80591ce
..@0x80590c1: db 0x8b, 0x84, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov eax,[esp+0x1d0]
..@0x80590c8: db 0x8b, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x1d0]
..@0x80590cf: db 0x0f, 0xb6, 0x00  ;; movzx eax,byte [eax]
..@0x80590d2: db 0x89, 0x54, 0x24, 0x10  ;; mov [esp+0x10],edx
..@0x80590d6: db 0x3c, 0x7c  ;; cmp al,0x7c
..@0x80590d8: db 0x88, 0x44, 0x24, 0x1b  ;; mov [esp+0x1b],al
..@0x80590dc: db 0x0f, 0x84, 0x57, 0x02, 0x00, 0x00  ;; jz near A.code+0x8059339
..@0x80590e2: db 0x80, 0x7c, 0x24, 0x1b, 0x00  ;; cmp byte [esp+0x1b],0x0
..@0x80590e7: db 0x0f, 0x84, 0xa3, 0x02, 0x00, 0x00  ;; jz near A.code+0x8059390
..@0x80590ed: db 0x8b, 0x4c, 0x24, 0x10  ;; mov ecx,[esp+0x10]
..@0x80590f1: db 0x31, 0xd2  ;; xor edx,edx
..@0x80590f3: db 0x0f, 0xb6, 0x44, 0x24, 0x1b  ;; movzx eax,byte [esp+0x1b]
..@0x80590f8: add ecx, strict byte 0x1
..@0x80590fb: db 0xeb, 0x1b  ;; jmp short A.code+0x8059118
..@0x80590fd: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059100: sub eax, strict byte 0x20
..@0x8059103: db 0x0f, 0xb6, 0xd8  ;; movzx ebx,al
..@0x8059106: db 0x8d, 0x04, 0x52  ;; lea eax,[edx+edx*2]
..@0x8059109: add ecx, strict byte 0x1
..@0x805910c: db 0x89, 0xda  ;; mov edx,ebx
..@0x805910e: db 0x29, 0xc2  ;; sub edx,eax
..@0x8059110: db 0x0f, 0xb6, 0x41, 0xff  ;; movzx eax,byte [ecx-0x1]
..@0x8059114: db 0x84, 0xc0  ;; test al,al
..@0x8059116: db 0x74, 0x13  ;; jz A.code+0x805912b
..@0x8059118: db 0x8d, 0x58, 0x9f  ;; lea ebx,[eax-0x61]
..@0x805911b: db 0x80, 0xfb, 0x19  ;; cmp bl,0x19
..@0x805911e: db 0x76, 0xe0  ;; jna A.code+0x8059100
..@0x8059120: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8059122: db 0xbb, 0x5c, 0x00, 0x00, 0x00  ;; mov ebx,0x5c
..@0x8059127: db 0x74, 0xdd  ;; jz A.code+0x8059106
..@0x8059129: db 0xeb, 0xd8  ;; jmp short A.code+0x8059103
..@0x805912b: db 0x81, 0xe2, 0xff, 0x00, 0x00, 0x00  ;; and edx,0xff
..@0x8059131: db 0x8b, 0x14, 0x95, 0x20, 0xbf, 0x87, 0x09  ;; mov edx,[edx*4+0x987bf20]
..@0x8059138: db 0x85, 0xd2  ;; test edx,edx
..@0x805913a: db 0x89, 0x54, 0x24, 0x14  ;; mov [esp+0x14],edx
..@0x805913e: db 0x0f, 0x88, 0x8a, 0x00, 0x00, 0x00  ;; js near A.code+0x80591ce
..@0x8059144: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059148: db 0x8b, 0x5c, 0x24, 0x1c  ;; mov ebx,[esp+0x1c]
..@0x805914c: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x8059150: db 0x80, 0x7c, 0x24, 0x1b, 0x00  ;; cmp byte [esp+0x1b],0x0
..@0x8059155: db 0x8d, 0x7c, 0x13, 0x15  ;; lea edi,[ebx+edx+0x15]
..@0x8059159: db 0x0f, 0x84, 0xd3, 0x01, 0x00, 0x00  ;; jz near A.code+0x8059332
..@0x805915f: db 0x31, 0xd2  ;; xor edx,edx
..@0x8059161: db 0x0f, 0xb6, 0x44, 0x24, 0x1b  ;; movzx eax,byte [esp+0x1b]
..@0x8059166: db 0x31, 0xc9  ;; xor ecx,ecx
..@0x8059168: db 0x89, 0xd5  ;; mov ebp,edx
..@0x805916a: db 0xeb, 0x19  ;; jmp short A.code+0x8059185
..@0x805916c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059170: db 0x8b, 0x54, 0x24, 0x10  ;; mov edx,[esp+0x10]
..@0x8059174: add ecx, strict byte 0x1
..@0x8059177: db 0x89, 0xcd  ;; mov ebp,ecx
..@0x8059179: db 0x0f, 0xb6, 0x04, 0x0a  ;; movzx eax,byte [edx+ecx]
..@0x805917d: db 0x84, 0xc0  ;; test al,al
..@0x805917f: db 0x0f, 0x84, 0x1b, 0x01, 0x00, 0x00  ;; jz near A.code+0x80592a0
..@0x8059185: db 0x8d, 0x50, 0x9f  ;; lea edx,[eax-0x61]
..@0x8059188: db 0x8d, 0x70, 0xe0  ;; lea esi,[eax-0x20]
..@0x805918b: db 0x80, 0xfa, 0x19  ;; cmp dl,0x19
..@0x805918e: db 0x0f, 0xb6, 0x14, 0x2f  ;; movzx edx,byte [edi+ebp]
..@0x8059192: db 0x0f, 0x46, 0xc6  ;; cmovna eax,esi
..@0x8059195: db 0x8d, 0x6a, 0x9f  ;; lea ebp,[edx-0x61]
..@0x8059198: db 0x8d, 0x72, 0xe0  ;; lea esi,[edx-0x20]
..@0x805919b: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x805919d: db 0x80, 0xfb, 0x19  ;; cmp bl,0x19
..@0x80591a0: db 0xbb, 0x5c, 0x00, 0x00, 0x00  ;; mov ebx,0x5c
..@0x80591a5: db 0x0f, 0x46, 0xd6  ;; cmovna edx,esi
..@0x80591a8: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x80591aa: db 0x0f, 0x44, 0xc3  ;; cmovz eax,ebx
..@0x80591ad: db 0x80, 0xfa, 0x2f  ;; cmp dl,0x2f
..@0x80591b0: db 0x0f, 0x44, 0xd3  ;; cmovz edx,ebx
..@0x80591b3: db 0x38, 0xd0  ;; cmp al,dl
..@0x80591b5: db 0x74, 0xb9  ;; jz A.code+0x8059170
..@0x80591b7: db 0x8b, 0x5c, 0x24, 0x14  ;; mov ebx,[esp+0x14]
..@0x80591bb: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x80591bf: db 0x8b, 0x1c, 0x18  ;; mov ebx,[eax+ebx]
..@0x80591c2: db 0x85, 0xdb  ;; test ebx,ebx
..@0x80591c4: db 0x89, 0x5c, 0x24, 0x14  ;; mov [esp+0x14],ebx
..@0x80591c8: db 0x0f, 0x89, 0x7a, 0xff, 0xff, 0xff  ;; jns near A.code+0x8059148
..@0x80591ce: db 0x8b, 0x3d, 0xe0, 0xd1, 0x05, 0x08  ;; mov edi,[0x805d1e0]
..@0x80591d4: db 0x85, 0xff  ;; test edi,edi
..@0x80591d6: db 0x0f, 0x88, 0xb6, 0x00, 0x00, 0x00  ;; js near A.code+0x8059292
..@0x80591dc: db 0x8b, 0x6c, 0x24, 0x1c  ;; mov ebp,[esp+0x1c]
..@0x80591e0: db 0x8d, 0x5c, 0x24, 0x7c  ;; lea ebx,[esp+0x7c]
..@0x80591e4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80591e8: db 0x8d, 0x44, 0x3d, 0x04  ;; lea eax,[ebp+edi+0x4]
..@0x80591ec: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80591ef: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80591f3: call B.code+stpcpy
..@0x80591f8: db 0x8b, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x1d0]
..@0x80591ff: db 0x89, 0xc6  ;; mov esi,eax
..@0x8059201: db 0x89, 0x44, 0x24, 0x10  ;; mov [esp+0x10],eax
..@0x8059205: db 0x29, 0xde  ;; sub esi,ebx
..@0x8059207: db 0x89, 0x14, 0x24  ;; mov [esp],edx
..@0x805920a: call B.code+strlen
..@0x805920f: db 0x8d, 0x44, 0x06, 0x01  ;; lea eax,[esi+eax+0x1]
..@0x8059213: db 0x3d, 0x31, 0x01, 0x00, 0x00  ;; cmp eax,0x131
..@0x8059218: db 0x77, 0x6c  ;; ja A.code+0x8059286
..@0x805921a: db 0x85, 0xf6  ;; test esi,esi
..@0x805921c: db 0x74, 0x32  ;; jz A.code+0x8059250
..@0x805921e: db 0x0f, 0xb6, 0x44, 0x34, 0x7b  ;; movzx eax,byte [esp+esi+0x7b]
..@0x8059223: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8059225: db 0x74, 0x29  ;; jz A.code+0x8059250
..@0x8059227: db 0x3c, 0x5c  ;; cmp al,0x5c
..@0x8059229: db 0x74, 0x25  ;; jz A.code+0x8059250
..@0x805922b: db 0x8b, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x1d0]
..@0x8059232: db 0x0f, 0xb6, 0x02  ;; movzx eax,byte [edx]
..@0x8059235: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8059237: db 0x74, 0x17  ;; jz A.code+0x8059250
..@0x8059239: db 0x3c, 0x5c  ;; cmp al,0x5c
..@0x805923b: db 0x74, 0x13  ;; jz A.code+0x8059250
..@0x805923d: db 0x8b, 0x44, 0x24, 0x10  ;; mov eax,[esp+0x10]
..@0x8059241: db 0x66, 0xc7, 0x00, 0x2f, 0x00  ;; mov word [eax],0x2f
..@0x8059246: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059249: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8059250: db 0x8b, 0x94, 0x24, 0xd0, 0x01, 0x00, 0x00  ;; mov edx,[esp+0x1d0]
..@0x8059257: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x805925a: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x805925e: call B.code+strcat
..@0x8059263: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x805926b: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x805926e: call B.code+fopen
..@0x8059273: db 0x85, 0xc0  ;; test eax,eax
..@0x8059275: db 0xa3, 0x60, 0x8a, 0x85, 0x09  ;; mov [0x9858a60],eax
..@0x805927a: db 0x0f, 0x85, 0x17, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8059397
..@0x8059280: db 0x8b, 0x2d, 0x00, 0xbf, 0x87, 0x09  ;; mov ebp,[0x987bf00]
..@0x8059286: db 0x8b, 0x7c, 0x3d, 0x00  ;; mov edi,[ebp+edi+0x0]
..@0x805928a: db 0x85, 0xff  ;; test edi,edi
..@0x805928c: db 0x0f, 0x89, 0x56, 0xff, 0xff, 0xff  ;; jns near A.code+0x80591e8
..@0x8059292: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059294: db 0x81, 0xc4, 0xbc, 0x01, 0x00, 0x00  ;; add esp,0x1bc
..@0x805929a: pop ebx
..@0x805929b: pop esi
..@0x805929c: pop edi
..@0x805929d: pop ebp
..@0x805929e: ret
..@0x805929f: nop
..@0x80592a0: db 0x89, 0xca  ;; mov edx,ecx
..@0x80592a2: db 0x80, 0x3c, 0x17, 0x00  ;; cmp byte [edi+edx],0x0
..@0x80592a6: db 0x0f, 0x85, 0x0b, 0xff, 0xff, 0xff  ;; jnz near A.code+0x80591b7
..@0x80592ac: db 0x8b, 0x54, 0x24, 0x1c  ;; mov edx,[esp+0x1c]
..@0x80592b0: db 0x8b, 0x44, 0x24, 0x14  ;; mov eax,[esp+0x14]
..@0x80592b4: db 0x8b, 0x5c, 0x02, 0x0c  ;; mov ebx,[edx+eax+0xc]
..@0x80592b8: db 0x8b, 0x7c, 0x02, 0x10  ;; mov edi,[edx+eax+0x10]
..@0x80592bc: db 0x0f, 0xb6, 0x74, 0x02, 0x14  ;; movzx esi,byte [edx+eax+0x14]
..@0x80592c1: db 0x89, 0xd0  ;; mov eax,edx
..@0x80592c3: db 0xc7, 0x44, 0x24, 0x04, 0xbc, 0xb0, 0x05, 0x08  ;; mov dword [esp+0x4],str_fopen_rb
..@0x80592cb: db 0x8b, 0x54, 0x24, 0x14  ;; mov edx,[esp+0x14]
..@0x80592cf: db 0x03, 0x44, 0x10, 0x08  ;; add eax,[eax+edx+0x8]
..@0x80592d3: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80592d6: call B.code+fopen
..@0x80592db: db 0x85, 0xc0  ;; test eax,eax
..@0x80592dd: db 0x89, 0xc5  ;; mov ebp,eax
..@0x80592df: db 0x74, 0xb1  ;; jz A.code+0x8059292
..@0x80592e1: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x80592e9: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x80592ed: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80592f0: call B.code+fseek
..@0x80592f5: db 0x89, 0xf0  ;; mov eax,esi
..@0x80592f7: db 0x84, 0xc0  ;; test al,al
..@0x80592f9: db 0x75, 0x5c  ;; jnz A.code+0x8059357
..@0x80592fb: db 0x89, 0x2d, 0x60, 0x8a, 0x85, 0x09  ;; mov [0x9858a60],ebp
..@0x8059301: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8059303: db 0xc7, 0x05, 0x64, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a64],0x0
..@0x805930b: db 0x00, 0x00
..@0x805930d: db 0x89, 0x1d, 0x68, 0x8a, 0x85, 0x09  ;; mov [0x9858a68],ebx
..@0x8059313: db 0x89, 0x3d, 0x74, 0x8a, 0x85, 0x09  ;; mov [0x9858a74],edi
..@0x8059319: db 0xc7, 0x05, 0x78, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a78],0x0
..@0x8059321: db 0x00, 0x00
..@0x8059323: db 0xc7, 0x05, 0x84, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a84],0x0
..@0x805932b: db 0x00, 0x00
..@0x805932d: jmp strict near R.code+0x80590a4
..@0x8059332: db 0x31, 0xd2  ;; xor edx,edx
..@0x8059334: jmp strict near R.code+0x80592a2
..@0x8059339: db 0x0f, 0xb6, 0x42, 0x01  ;; movzx eax,byte [edx+0x1]
..@0x805933d: db 0x89, 0xd3  ;; mov ebx,edx
..@0x805933f: add ebx, strict byte 0x1
..@0x8059342: db 0x89, 0x5c, 0x24, 0x10  ;; mov [esp+0x10],ebx
..@0x8059346: db 0x88, 0x44, 0x24, 0x1b  ;; mov [esp+0x1b],al
..@0x805934a: db 0x80, 0x7c, 0x24, 0x1b, 0x00  ;; cmp byte [esp+0x1b],0x0
..@0x805934f: db 0x0f, 0x85, 0x98, 0xfd, 0xff, 0xff  ;; jnz near A.code+0x80590ed
..@0x8059355: db 0xeb, 0x39  ;; jmp short A.code+0x8059390
..@0x8059357: db 0x8d, 0x44, 0x24, 0x7c  ;; lea eax,[esp+0x7c]
..@0x805935b: db 0x89, 0x6c, 0x24, 0x0c  ;; mov [esp+0xc],ebp
..@0x805935f: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8059367: db 0xc7, 0x44, 0x24, 0x04, 0x1e, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1e
..@0x805936f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8059372: call B.code+fread
..@0x8059377: db 0x81, 0x7c, 0x24, 0x7c, 0x50, 0x4b, 0x03, 0x04  ;; cmp dword [esp+0x7c],0x4034b50
..@0x805937f: db 0x74, 0x5b  ;; jz A.code+0x80593dc
..@0x8059381: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x8059384: call B.code+fclose
..@0x8059389: db 0x31, 0xc0  ;; xor eax,eax
..@0x805938b: jmp strict near R.code+0x80590a4
..@0x8059390: db 0x31, 0xd2  ;; xor edx,edx
..@0x8059392: jmp strict near R.code+0x8059131
..@0x8059397: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805939a: db 0xc7, 0x05, 0x64, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a64],0x0
..@0x80593a2: db 0x00, 0x00
..@0x80593a4: db 0xc7, 0x05, 0x68, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a68],0x0
..@0x80593ac: db 0x00, 0x00
..@0x80593ae: call B.code+fileno
..@0x80593b3: db 0x8d, 0x54, 0x24, 0x24  ;; lea edx,[esp+0x24]
..@0x80593b7: db 0xc7, 0x04, 0x24, 0x03, 0x00, 0x00, 0x00  ;; mov dword [esp],0x3
..@0x80593be: db 0x89, 0x54, 0x24, 0x08  ;; mov [esp+0x8],edx
..@0x80593c2: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
%ifidn TARGET, ls
..@0x80593c6: call B.code+__fxstat
%else  ; TARGET, ls. Simulate an error in unused __fxstat.
..@0x80593c6: db 0x31, 0xc0  ;; xor eax,eax
..@0x80593c8: dec eax
..@0x80593c9: times 2 nop
%endif  ; TARGET, ls
..@0x80593cb: db 0x85, 0xc0  ;; test eax,eax
..@0x80593cd: db 0x0f, 0x88, 0x95, 0x00, 0x00, 0x00  ;; js near A.code+0x8059468
..@0x80593d3: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x80593d7: jmp strict near R.code+0x8059086
..@0x80593dc: db 0x0f, 0xbf, 0x94, 0x24, 0x96, 0x00, 0x00, 0x00  ;; movsx edx,word [esp+0x96]
..@0x80593e4: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80593ec: db 0x0f, 0xbf, 0x84, 0x24, 0x98, 0x00, 0x00, 0x00  ;; movsx eax,word [esp+0x98]
..@0x80593f4: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x80593f7: db 0x01, 0xd0  ;; add eax,edx
..@0x80593f9: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80593fd: call B.code+fseek
..@0x8059402: db 0x0f, 0xbf, 0x84, 0x24, 0x84, 0x00, 0x00, 0x00  ;; movsx eax,word [esp+0x84]
..@0x805940a: db 0x89, 0x2c, 0x24  ;; mov [esp],ebp
..@0x805940d: db 0x89, 0x2d, 0x60, 0x8a, 0x85, 0x09  ;; mov [0x9858a60],ebp
..@0x8059413: db 0xa3, 0x64, 0x8a, 0x85, 0x09  ;; mov [0x9858a64],eax
..@0x8059418: call B.code+ftell
..@0x805941d: db 0xc7, 0x05, 0x78, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a78],0x0
..@0x8059425: db 0x00, 0x00
..@0x8059427: db 0xa3, 0x68, 0x8a, 0x85, 0x09  ;; mov [0x9858a68],eax
..@0x805942c: db 0x8b, 0x84, 0x24, 0x92, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x92]
..@0x8059433: db 0xa3, 0x74, 0x8a, 0x85, 0x09  ;; mov [0x9858a74],eax
..@0x8059438: db 0xa1, 0x64, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a64]
..@0x805943d: db 0x85, 0xc0  ;; test eax,eax
..@0x805943f: db 0x0f, 0x84, 0x50, 0xfc, 0xff, 0xff  ;; jz near A.code+0x8059095
..@0x8059445: cmp eax, strict byte 0x8
..@0x8059448: db 0x74, 0x28  ;; jz A.code+0x8059472
..@0x805944a: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x805944f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x8059452: call B.code+fclose
..@0x8059457: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059459: db 0xc7, 0x05, 0x60, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a60],0x0
..@0x8059461: db 0x00, 0x00
..@0x8059463: jmp strict near R.code+0x8059294
..@0x8059468: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805946d: jmp strict near R.code+0x8059086
..@0x8059472: db 0x80, 0x3d, 0x08, 0xe1, 0x83, 0x09, 0x00  ;; cmp byte [0x983e108],0x0
..@0x8059479: db 0x74, 0x2a  ;; jz A.code+0x80594a5
..@0x805947b: db 0x8b, 0x84, 0x24, 0x8e, 0x00, 0x00, 0x00  ;; mov eax,[esp+0x8e]
..@0x8059482: db 0xc7, 0x05, 0x70, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a70],0x0
..@0x805948a: db 0x00, 0x00
..@0x805948c: db 0xc7, 0x05, 0x20, 0xc3, 0x87, 0x09, 0xff, 0xff  ;; mov dword [0x987c320],0x7fffffff
..@0x8059494: db 0xff, 0x7f
..@0x8059496: db 0xa3, 0x6c, 0x8a, 0x85, 0x09  ;; mov [0x9858a6c],eax
..@0x805949b: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x80594a0: jmp strict near R.code+0x80590a4
..@0x80594a5: db 0xc6, 0x05, 0x08, 0xe1, 0x83, 0x09, 0x01  ;; mov byte [0x983e108],0x1
..@0x80594ac: call R.code+0x80552a0
..@0x80594b1: db 0xeb, 0xc8  ;; jmp short A.code+0x805947b
..@0x80594b3: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80594b9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80594c0: push ebx
..@0x80594c1: sub esp, strict byte 0x18
..@0x80594c4: db 0xa1, 0x24, 0xc3, 0x87, 0x09  ;; mov eax,[0x987c324]
..@0x80594c9: db 0x8b, 0x5c, 0x24, 0x20  ;; mov ebx,[esp+0x20]
..@0x80594cd: db 0x85, 0xc0  ;; test eax,eax
..@0x80594cf: db 0x74, 0x12  ;; jz A.code+0x80594e3
..@0x80594d1: db 0x89, 0x04, 0x24  ;; mov [esp],eax
%ifidn TARGET, ls
..@0x80594d4: call B.code+closedir
%else  ; TARGET, ls. Simulate an error in fake closedir.
..@0x80594d4: db 0x31, 0xc0  ;; xor eax,eax
..@0x80594d6: dec eax
..@0x80594d7: times 2 nop
%endif  ; TARGET, ls
..@0x80594d9: db 0xc7, 0x05, 0x24, 0xc3, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c324],0x0
..@0x80594e1: db 0x00, 0x00
..@0x80594e3: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x80594e7: db 0xc7, 0x04, 0x24, 0x40, 0xc3, 0x87, 0x09  ;; mov dword [esp],0x987c340
..@0x80594ee: call B.code+strcpy
..@0x80594f3: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x80594f7: db 0xc7, 0x04, 0x24, 0x60, 0xc4, 0x87, 0x09  ;; mov dword [esp],0x987c460
..@0x80594fe: call B.code+strcpy
..@0x8059503: db 0x80, 0x3b, 0x3a  ;; cmp byte [ebx],0x3a
..@0x8059506: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d1e8],0x0
..@0x805950e: db 0x00, 0x00
..@0x8059510: db 0x74, 0x1e  ;; jz A.code+0x8059530
..@0x8059512: db 0xa1, 0xe4, 0xd1, 0x05, 0x08  ;; mov eax,[0x805d1e4]
..@0x8059517: db 0xa3, 0x64, 0xc5, 0x87, 0x09  ;; mov [0x987c564],eax
..@0x805951c: db 0xa1, 0xe0, 0xd1, 0x05, 0x08  ;; mov eax,[0x805d1e0]
..@0x8059521: db 0xa3, 0xec, 0xd1, 0x05, 0x08  ;; mov [0x805d1ec],eax
..@0x8059526: add esp, strict byte 0x18
..@0x8059529: pop ebx
..@0x805952a: ret
..@0x805952b: nop
..@0x805952c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059530: db 0x80, 0x7b, 0x01, 0x00  ;; cmp byte [ebx+0x1],0x0
..@0x8059534: db 0x75, 0xdc  ;; jnz A.code+0x8059512
..@0x8059536: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x0a, 0x00  ;; mov dword [0x805d1e8],0xa
..@0x805953e: db 0x00, 0x00
..@0x8059540: db 0xeb, 0xd0  ;; jmp short A.code+0x8059512
..@0x8059542: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059549: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8059550: push ebp
..@0x8059551: push edi
..@0x8059552: push esi
..@0x8059553: push ebx
..@0x8059554: sub esp, strict byte 0x1c
..@0x8059557: db 0x8b, 0x3d, 0xe8, 0xd1, 0x05, 0x08  ;; mov edi,[0x805d1e8]
..@0x805955d: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8059561: db 0x85, 0xff  ;; test edi,edi
..@0x8059563: db 0xc6, 0x01, 0x00  ;; mov byte [ecx],0x0
..@0x8059566: db 0x0f, 0x85, 0x44, 0x01, 0x00, 0x00  ;; jnz near A.code+0x80596b0
..@0x805956c: db 0x0f, 0xb6, 0x05, 0x60, 0xc4, 0x87, 0x09  ;; movzx eax,byte [0x987c460]
..@0x8059573: db 0x84, 0xc0  ;; test al,al
..@0x8059575: db 0x0f, 0x84, 0xc3, 0x02, 0x00, 0x00  ;; jz near A.code+0x805983e
..@0x805957b: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x01, 0x00  ;; mov dword [0x805d1e8],0x1
..@0x8059583: db 0x00, 0x00
..@0x8059585: db 0xba, 0x01, 0x00, 0x00, 0x00  ;; mov edx,0x1
..@0x805958a: db 0x31, 0xf6  ;; xor esi,esi
..@0x805958c: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059590: db 0x3c, 0x5c  ;; cmp al,0x5c
..@0x8059592: db 0x74, 0x04  ;; jz A.code+0x8059598
..@0x8059594: db 0x3c, 0x2f  ;; cmp al,0x2f
..@0x8059596: db 0x75, 0x02  ;; jnz A.code+0x805959a
..@0x8059598: db 0x89, 0xd6  ;; mov esi,edx
..@0x805959a: db 0x0f, 0xb6, 0x82, 0x60, 0xc4, 0x87, 0x09  ;; movzx eax,byte [edx+0x987c460]
..@0x80595a1: add edx, strict byte 0x1
..@0x80595a4: db 0x84, 0xc0  ;; test al,al
..@0x80595a6: db 0x75, 0xe8  ;; jnz A.code+0x8059590
..@0x80595a8: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80595ac: db 0x89, 0x74, 0x24, 0x08  ;; mov [esp+0x8],esi
..@0x80595b0: db 0xc7, 0x44, 0x24, 0x04, 0x60, 0xc4, 0x87, 0x09  ;; mov dword [esp+0x4],0x987c460
..@0x80595b8: db 0x89, 0x35, 0x68, 0xc5, 0x87, 0x09  ;; mov [0x987c568],esi
..@0x80595be: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x80595c1: call B.code+memcpy
..@0x80595c6: db 0xa1, 0x24, 0xc3, 0x87, 0x09  ;; mov eax,[0x987c324]
..@0x80595cb: db 0x85, 0xc0  ;; test eax,eax
..@0x80595cd: db 0x0f, 0x84, 0xaa, 0x00, 0x00, 0x00  ;; jz near A.code+0x805967d
..@0x80595d3: db 0x8b, 0x3d, 0x68, 0xc5, 0x87, 0x09  ;; mov edi,[0x987c568]
..@0x80595d9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80595e0: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80595e4: db 0x89, 0x7c, 0x24, 0x08  ;; mov [esp+0x8],edi
..@0x80595e8: db 0xc7, 0x44, 0x24, 0x04, 0x60, 0xc4, 0x87, 0x09  ;; mov dword [esp+0x4],0x987c460
..@0x80595f0: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x80595f3: call B.code+memcpy
..@0x80595f8: db 0xa1, 0x24, 0xc3, 0x87, 0x09  ;; mov eax,[0x987c324]
..@0x80595fd: db 0x89, 0x04, 0x24  ;; mov [esp],eax
%ifidn TARGET, ls
..@0x8059600: call B.code+readdir
..@0x8059605: db 0x85, 0xc0  ;; test eax,eax
%else  ; TARGET, ls. Simulate an error in fake readdir.
..@0x8059600: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059602: times 5 nop
%endif  ; TARGET, ls
..@0x8059607: db 0x89, 0xc6  ;; mov esi,eax
..@0x8059609: db 0xa3, 0x6c, 0xc5, 0x87, 0x09  ;; mov [0x987c56c],eax
..@0x805960e: db 0x0f, 0x84, 0xf7, 0x01, 0x00, 0x00  ;; jz near A.code+0x805980b
..@0x8059614: db 0x0f, 0xb6, 0x40, 0x0a  ;; movzx eax,byte [eax+0xa]
..@0x8059618: db 0x8b, 0x3d, 0x68, 0xc5, 0x87, 0x09  ;; mov edi,[0x987c568]
..@0x805961e: db 0x3c, 0x04  ;; cmp al,0x4
..@0x8059620: db 0x0f, 0x84, 0x8f, 0x01, 0x00, 0x00  ;; jz near A.code+0x80597b5
..@0x8059626: and eax, strict byte -0x3
..@0x8059629: db 0x3c, 0x08  ;; cmp al,0x8
..@0x805962b: db 0x75, 0xb3  ;; jnz A.code+0x80595e0
..@0x805962d: db 0x80, 0x7e, 0x0b, 0x2e  ;; cmp byte [esi+0xb],0x2e
..@0x8059631: db 0x74, 0xad  ;; jz A.code+0x80595e0
..@0x8059633: db 0x80, 0xbf, 0x60, 0xc4, 0x87, 0x09, 0x00  ;; cmp byte [edi+0x987c460],0x0
..@0x805963a: db 0x8d, 0x6e, 0x0b  ;; lea ebp,[esi+0xb]
..@0x805963d: db 0x74, 0x11  ;; jz A.code+0x8059650
..@0x805963f: db 0x8d, 0x97, 0x60, 0xc4, 0x87, 0x09  ;; lea edx,[edi+0x987c460]
..@0x8059645: db 0x89, 0xe8  ;; mov eax,ebp
..@0x8059647: call R.code+0x8055490
..@0x805964c: db 0x85, 0xc0  ;; test eax,eax
..@0x805964e: db 0x74, 0x90  ;; jz A.code+0x80595e0
..@0x8059650: db 0x8b, 0x5c, 0x24, 0x30  ;; mov ebx,[esp+0x30]
..@0x8059654: db 0x89, 0x6c, 0x24, 0x04  ;; mov [esp+0x4],ebp
..@0x8059658: db 0x01, 0xfb  ;; add ebx,edi
..@0x805965a: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x805965d: call B.code+stpcpy
..@0x8059662: db 0x80, 0x7e, 0x0a, 0x04  ;; cmp byte [esi+0xa],0x4
..@0x8059666: db 0x89, 0xc2  ;; mov edx,eax
..@0x8059668: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x805966d: db 0x0f, 0x85, 0x90, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8059803
..@0x8059673: db 0x66, 0xc7, 0x02, 0x2f, 0x00  ;; mov word [edx],0x2f
..@0x8059678: jmp strict near R.code+0x8059803
..@0x805967d: db 0x85, 0xf6  ;; test esi,esi
..@0x805967f: db 0xb8, 0x5b, 0xb1, 0x05, 0x08  ;; mov eax,0x805b15b
..@0x8059684: db 0x7e, 0x0a  ;; jng A.code+0x8059690
..@0x8059686: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x805968a: db 0xc6, 0x04, 0x31, 0x00  ;; mov byte [ecx+esi],0x0
..@0x805968e: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8059690: db 0x89, 0x04, 0x24  ;; mov [esp],eax
%ifidn TARGET, ls
..@0x8059693: call B.code+opendir
..@0x8059698: db 0x85, 0xc0  ;; test eax,eax
%else  ; TARGET, ls. Simulate an error in fake opendir.
..@0x8059693: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059695: times 5 nop
%endif  ; TARGET, ls
..@0x805969a: db 0xa3, 0x24, 0xc3, 0x87, 0x09  ;; mov [0x987c324],eax
..@0x805969f: db 0x0f, 0x84, 0x7d, 0x01, 0x00, 0x00  ;; jz near A.code+0x8059822
..@0x80596a5: db 0x8b, 0x3d, 0xe8, 0xd1, 0x05, 0x08  ;; mov edi,[0x805d1e8]
..@0x80596ab: nop
..@0x80596ac: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80596b0: cmp edi, strict byte 0x1
..@0x80596b3: db 0x0f, 0x84, 0x1a, 0xff, 0xff, 0xff  ;; jz near A.code+0x80595d3
..@0x80596b9: cmp edi, strict byte 0x2
..@0x80596bc: db 0x75, 0x62  ;; jnz A.code+0x8059720
..@0x80596be: db 0x8b, 0x35, 0x64, 0xc5, 0x87, 0x09  ;; mov esi,[0x987c564]
..@0x80596c4: db 0x85, 0xf6  ;; test esi,esi
..@0x80596c6: db 0x0f, 0x88, 0x02, 0x01, 0x00, 0x00  ;; js near A.code+0x80597ce
..@0x80596cc: db 0x8b, 0x2d, 0x00, 0xbf, 0x87, 0x09  ;; mov ebp,[0x987bf00]
..@0x80596d2: db 0x80, 0x3d, 0x60, 0xc4, 0x87, 0x09, 0x00  ;; cmp byte [0x987c460],0x0
..@0x80596d9: db 0x8d, 0x5c, 0x35, 0x15  ;; lea ebx,[ebp+esi+0x15]
..@0x80596dd: db 0x0f, 0x84, 0xfa, 0x00, 0x00, 0x00  ;; jz near A.code+0x80597dd
..@0x80596e3: db 0x8b, 0x3d, 0xe8, 0xd1, 0x05, 0x08  ;; mov edi,[0x805d1e8]
..@0x80596e9: db 0xeb, 0x13  ;; jmp short A.code+0x80596fe
..@0x80596eb: nop
..@0x80596ec: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x80596f0: db 0x85, 0xc0  ;; test eax,eax
..@0x80596f2: db 0x0f, 0x88, 0xd6, 0x00, 0x00, 0x00  ;; js near A.code+0x80597ce
..@0x80596f8: db 0x8d, 0x5c, 0x05, 0x15  ;; lea ebx,[ebp+eax+0x15]
..@0x80596fc: db 0x89, 0xc6  ;; mov esi,eax
..@0x80596fe: db 0xba, 0x60, 0xc4, 0x87, 0x09  ;; mov edx,0x987c460
..@0x8059703: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8059705: call R.code+0x8055490
..@0x805970a: db 0x85, 0xc0  ;; test eax,eax
..@0x805970c: db 0x0f, 0x85, 0xcb, 0x00, 0x00, 0x00  ;; jnz near A.code+0x80597dd
..@0x8059712: db 0x8b, 0x44, 0x35, 0x04  ;; mov eax,[ebp+esi+0x4]
..@0x8059716: cmp edi, strict byte 0x2
..@0x8059719: db 0xa3, 0x64, 0xc5, 0x87, 0x09  ;; mov [0x987c564],eax
..@0x805971e: db 0x74, 0xd0  ;; jz A.code+0x80596f0
..@0x8059720: cmp edi, strict byte 0x3
..@0x8059723: db 0x0f, 0x85, 0x23, 0x01, 0x00, 0x00  ;; jnz near A.code+0x805984c
..@0x8059729: db 0x8b, 0x35, 0xec, 0xd1, 0x05, 0x08  ;; mov esi,[0x805d1ec]
..@0x805972f: db 0x85, 0xf6  ;; test esi,esi
..@0x8059731: db 0x0f, 0x88, 0x07, 0x01, 0x00, 0x00  ;; js near A.code+0x805983e
..@0x8059737: db 0x8b, 0x3d, 0x00, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf00]
..@0x805973d: db 0xc7, 0x04, 0x24, 0x60, 0xc4, 0x87, 0x09  ;; mov dword [esp],0x987c460
..@0x8059744: db 0x8d, 0x44, 0x37, 0x04  ;; lea eax,[edi+esi+0x4]
..@0x8059748: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805974c: call B.code+stpcpy
..@0x8059751: db 0x89, 0xc2  ;; mov edx,eax
..@0x8059753: db 0x81, 0xea, 0x60, 0xc4, 0x87, 0x09  ;; sub edx,0x987c460
..@0x8059759: db 0x74, 0x2d  ;; jz A.code+0x8059788
..@0x805975b: db 0x0f, 0xb6, 0x92, 0x5f, 0xc4, 0x87, 0x09  ;; movzx edx,byte [edx+0x987c45f]
..@0x8059762: db 0x80, 0xfa, 0x2f  ;; cmp dl,0x2f
..@0x8059765: db 0x74, 0x21  ;; jz A.code+0x8059788
..@0x8059767: db 0x80, 0xfa, 0x5c  ;; cmp dl,0x5c
..@0x805976a: db 0x74, 0x1c  ;; jz A.code+0x8059788
..@0x805976c: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8059770: db 0x0f, 0xb6, 0x11  ;; movzx edx,byte [ecx]
..@0x8059773: db 0x80, 0xfa, 0x2f  ;; cmp dl,0x2f
..@0x8059776: db 0x74, 0x10  ;; jz A.code+0x8059788
..@0x8059778: db 0x80, 0xfa, 0x5c  ;; cmp dl,0x5c
..@0x805977b: db 0x74, 0x0b  ;; jz A.code+0x8059788
..@0x805977d: db 0x66, 0xc7, 0x00, 0x2f, 0x00  ;; mov word [eax],0x2f
..@0x8059782: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059788: db 0xc7, 0x44, 0x24, 0x04, 0x40, 0xc3, 0x87, 0x09  ;; mov dword [esp+0x4],0x987c340
..@0x8059790: db 0xc7, 0x04, 0x24, 0x60, 0xc4, 0x87, 0x09  ;; mov dword [esp],0x987c460
..@0x8059797: call B.code+strcat
..@0x805979c: db 0x8b, 0x04, 0x37  ;; mov eax,[edi+esi]
..@0x805979f: db 0x31, 0xff  ;; xor edi,edi
..@0x80597a1: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x00, 0x00  ;; mov dword [0x805d1e8],0x0
..@0x80597a9: db 0x00, 0x00
..@0x80597ab: db 0xa3, 0xec, 0xd1, 0x05, 0x08  ;; mov [0x805d1ec],eax
..@0x80597b0: jmp strict near R.code+0x805955d
..@0x80597b5: db 0x80, 0x7e, 0x0b, 0x2e  ;; cmp byte [esi+0xb],0x2e
..@0x80597b9: db 0x0f, 0x85, 0x74, 0xfe, 0xff, 0xff  ;; jnz near A.code+0x8059633
..@0x80597bf: db 0x80, 0x7e, 0x0c, 0x00  ;; cmp byte [esi+0xc],0x0
..@0x80597c3: db 0x0f, 0x84, 0x17, 0xfe, 0xff, 0xff  ;; jz near A.code+0x80595e0
..@0x80597c9: jmp strict near R.code+0x8059633
..@0x80597ce: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x03, 0x00  ;; mov dword [0x805d1e8],0x3
..@0x80597d6: db 0x00, 0x00
..@0x80597d8: jmp strict near R.code+0x8059729
..@0x80597dd: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80597e1: db 0xc6, 0x01, 0x7c  ;; mov byte [ecx],0x7c
..@0x80597e4: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x80597e8: db 0x89, 0xcb  ;; mov ebx,ecx
..@0x80597ea: add ebx, strict byte 0x1
..@0x80597ed: db 0x89, 0x1c, 0x24  ;; mov [esp],ebx
..@0x80597f0: call B.code+strcpy
..@0x80597f5: db 0x8b, 0x44, 0x35, 0x04  ;; mov eax,[ebp+esi+0x4]
..@0x80597f9: db 0xa3, 0x64, 0xc5, 0x87, 0x09  ;; mov [0x987c564],eax
..@0x80597fe: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x8059803: add esp, strict byte 0x1c
..@0x8059806: pop ebx
..@0x8059807: pop esi
..@0x8059808: pop edi
..@0x8059809: pop ebp
..@0x805980a: ret
..@0x805980b: db 0xa1, 0x24, 0xc3, 0x87, 0x09  ;; mov eax,[0x987c324]
..@0x8059810: db 0x89, 0x04, 0x24  ;; mov [esp],eax
%ifidn TARGET, ls
..@0x8059813: call B.code+closedir
%else  ; TARGET, ls. Simulate an error in fake closedir.
..@0x8059813: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059815: dec eax
..@0x8059816: times 2 nop
%endif  ; TARGET, ls
..@0x8059818: db 0xc7, 0x05, 0x24, 0xc3, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c324],0x0
..@0x8059820: db 0x00, 0x00
..@0x8059822: db 0xa1, 0x00, 0xbf, 0x87, 0x09  ;; mov eax,[0x987bf00]
..@0x8059827: db 0x85, 0xc0  ;; test eax,eax
..@0x8059829: db 0x0f, 0x84, 0x87, 0x00, 0x00, 0x00  ;; jz near A.code+0x80598b6
..@0x805982f: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x02, 0x00  ;; mov dword [0x805d1e8],0x2
..@0x8059837: db 0x00, 0x00
..@0x8059839: jmp strict near R.code+0x80596be
..@0x805983e: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0xff, 0xff  ;; mov dword [0x805d1e8],0xffffffff
..@0x8059846: db 0xff, 0xff
..@0x8059848: db 0x31, 0xc0  ;; xor eax,eax
..@0x805984a: db 0xeb, 0xb7  ;; jmp short A.code+0x8059803
..@0x805984c: cmp edi, strict byte 0xa
..@0x805984f: db 0x75, 0x59  ;; jnz A.code+0x80598aa
..@0x8059851: db 0x8b, 0x35, 0xec, 0xd1, 0x05, 0x08  ;; mov esi,[0x805d1ec]
..@0x8059857: db 0x85, 0xf6  ;; test esi,esi
..@0x8059859: db 0x79, 0x62  ;; jns A.code+0x80598bd
..@0x805985b: db 0xc7, 0x05, 0xe8, 0xd1, 0x05, 0x08, 0x0b, 0x00  ;; mov dword [0x805d1e8],0xb
..@0x8059863: db 0x00, 0x00
..@0x8059865: db 0x8b, 0x35, 0x64, 0xc5, 0x87, 0x09  ;; mov esi,[0x987c564]
..@0x805986b: db 0x85, 0xf6  ;; test esi,esi
..@0x805986d: db 0x78, 0xcf  ;; js A.code+0x805983e
..@0x805986f: db 0x8b, 0x3d, 0x00, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf00]
..@0x8059875: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x8059879: db 0x8b, 0x6c, 0x37, 0x08  ;; mov ebp,[edi+esi+0x8]
..@0x805987d: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x8059880: db 0x8d, 0x04, 0x2f  ;; lea eax,[edi+ebp]
..@0x8059883: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8059887: call B.code+strcpy
..@0x805988c: db 0x8b, 0x74, 0x37, 0x04  ;; mov esi,[edi+esi+0x4]
..@0x8059890: db 0x39, 0x6c, 0x37, 0x08  ;; cmp [edi+esi+0x8],ebp
..@0x8059894: db 0x75, 0x04  ;; jnz A.code+0x805989a
..@0x8059896: db 0x85, 0xf6  ;; test esi,esi
..@0x8059898: db 0x79, 0xf2  ;; jns A.code+0x805988c
..@0x805989a: db 0x89, 0x35, 0x64, 0xc5, 0x87, 0x09  ;; mov [0x987c564],esi
..@0x80598a0: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80598a5: jmp strict near R.code+0x8059803
..@0x80598aa: db 0x31, 0xc0  ;; xor eax,eax
..@0x80598ac: cmp edi, strict byte 0xb
..@0x80598af: db 0x74, 0xb4  ;; jz A.code+0x8059865
..@0x80598b1: jmp strict near R.code+0x8059803
..@0x80598b6: db 0x31, 0xc0  ;; xor eax,eax
..@0x80598b8: jmp strict near R.code+0x8059803
..@0x80598bd: db 0x8b, 0x3d, 0x00, 0xbf, 0x87, 0x09  ;; mov edi,[0x987bf00]
..@0x80598c3: db 0x8b, 0x4c, 0x24, 0x30  ;; mov ecx,[esp+0x30]
..@0x80598c7: db 0x8d, 0x44, 0x37, 0x04  ;; lea eax,[edi+esi+0x4]
..@0x80598cb: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x80598cf: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x80598d2: call B.code+strcpy
..@0x80598d7: db 0x8b, 0x04, 0x37  ;; mov eax,[edi+esi]
..@0x80598da: db 0xa3, 0xec, 0xd1, 0x05, 0x08  ;; mov [0x805d1ec],eax
..@0x80598df: db 0xb8, 0x01, 0x00, 0x00, 0x00  ;; mov eax,0x1
..@0x80598e4: jmp strict near R.code+0x8059803
..@0x80598e9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x80598f0: sub esp, strict byte 0x4c
..@0x80598f3: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x80598f8: db 0x89, 0x6c, 0x24, 0x48  ;; mov [esp+0x48],ebp
..@0x80598fc: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x8059900: db 0x8b, 0x6c, 0x24, 0x54  ;; mov ebp,[esp+0x54]
..@0x8059904: db 0x89, 0x74, 0x24, 0x40  ;; mov [esp+0x40],esi
..@0x8059908: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x805990c: db 0x85, 0xc0  ;; test eax,eax
..@0x805990e: db 0x0f, 0x84, 0xcc, 0x00, 0x00, 0x00  ;; jz near A.code+0x80599e0
..@0x8059914: db 0x85, 0xed  ;; test ebp,ebp
..@0x8059916: db 0x0f, 0x8e, 0xc4, 0x00, 0x00, 0x00  ;; jng near A.code+0x80599e0
..@0x805991c: db 0x8b, 0x15, 0x64, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a64]
..@0x8059922: db 0x85, 0xd2  ;; test edx,edx
..@0x8059924: db 0x74, 0x4a  ;; jz A.code+0x8059970
..@0x8059926: cmp edx, strict byte 0x8
..@0x8059929: db 0x0f, 0x84, 0xc1, 0x00, 0x00, 0x00  ;; jz near A.code+0x80599f0
..@0x805992f: db 0x8b, 0x15, 0x78, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a78]
..@0x8059935: db 0x8b, 0x0d, 0x74, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a74]
..@0x805993b: db 0x8d, 0x44, 0x15, 0x00  ;; lea eax,[ebp+edx+0x0]
..@0x805993f: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x8059941: db 0xa3, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],eax
..@0x8059946: db 0x7e, 0x08  ;; jng A.code+0x8059950
..@0x8059948: db 0x89, 0x0d, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],ecx
..@0x805994e: db 0x89, 0xc8  ;; mov eax,ecx
..@0x8059950: db 0x29, 0xd0  ;; sub eax,edx
..@0x8059952: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x8059956: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x805995a: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x805995e: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x8059962: add esp, strict byte 0x4c
..@0x8059965: ret
..@0x8059966: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059969: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x8059970: db 0x8b, 0x0d, 0x78, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a78]
..@0x8059976: db 0x3b, 0x0d, 0x84, 0x8a, 0x85, 0x09  ;; cmp ecx,[0x9858a84]
..@0x805997c: db 0x74, 0x2b  ;; jz A.code+0x80599a9
..@0x805997e: db 0x03, 0x0d, 0x68, 0x8a, 0x85, 0x09  ;; add ecx,[0x9858a68]
..@0x8059984: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x805998c: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805998f: db 0x89, 0x4c, 0x24, 0x04  ;; mov [esp+0x4],ecx
..@0x8059993: call B.code+fseek
..@0x8059998: db 0x8b, 0x0d, 0x78, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a78]
..@0x805999e: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x80599a3: db 0x89, 0x0d, 0x84, 0x8a, 0x85, 0x09  ;; mov [0x9858a84],ecx
..@0x80599a9: db 0x8b, 0x15, 0x74, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a74]
..@0x80599af: db 0x89, 0x44, 0x24, 0x0c  ;; mov [esp+0xc],eax
..@0x80599b3: db 0x89, 0xeb  ;; mov ebx,ebp
..@0x80599b5: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x80599b9: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x80599c1: db 0x29, 0xca  ;; sub edx,ecx
..@0x80599c3: db 0x39, 0xea  ;; cmp edx,ebp
..@0x80599c5: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x80599c8: db 0x0f, 0x4e, 0xda  ;; cmovng ebx,edx
..@0x80599cb: db 0x89, 0x5c, 0x24, 0x04  ;; mov [esp+0x4],ebx
..@0x80599cf: call B.code+fread
..@0x80599d4: db 0x01, 0x1d, 0x84, 0x8a, 0x85, 0x09  ;; add [0x9858a84],ebx
..@0x80599da: jmp strict near R.code+0x805992f
..@0x80599df: nop
..@0x80599e0: db 0x31, 0xc0  ;; xor eax,eax
..@0x80599e2: jmp strict near R.code+0x8059952
..@0x80599e7: db 0x89, 0xf6  ;; mov esi,esi
..@0x80599e9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x80599f0: db 0xc7, 0x05, 0x20, 0xe1, 0x83, 0x09, 0x01, 0x00  ;; mov dword [0x983e120],0x1
..@0x80599f8: db 0x00, 0x00
..@0x80599fa: db 0x89, 0xc1  ;; mov ecx,eax
..@0x80599fc: db 0x8b, 0x54, 0x24, 0x50  ;; mov edx,[esp+0x50]
..@0x8059a00: db 0xa1, 0x78, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a78]
..@0x8059a05: db 0x8d, 0x5c, 0x05, 0x00  ;; lea ebx,[ebp+eax+0x0]
..@0x8059a09: db 0x29, 0xc2  ;; sub edx,eax
..@0x8059a0b: db 0x89, 0x15, 0x70, 0xc5, 0x87, 0x09  ;; mov [0x987c570],edx
..@0x8059a11: db 0x8b, 0x15, 0x74, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a74]
..@0x8059a17: db 0x39, 0xd3  ;; cmp ebx,edx
..@0x8059a19: db 0x0f, 0x4f, 0xda  ;; cmovg ebx,edx
..@0x8059a1c: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8059a1e: db 0x89, 0x1d, 0x7c, 0x8a, 0x85, 0x09  ;; mov [0x9858a7c],ebx
..@0x8059a24: db 0x74, 0xba  ;; jz A.code+0x80599e0
..@0x8059a26: db 0x8b, 0x35, 0x20, 0xc3, 0x87, 0x09  ;; mov esi,[0x987c320]
..@0x8059a2c: db 0x8d, 0x96, 0x00, 0x80, 0xff, 0xff  ;; lea edx,[esi-0x8000]
..@0x8059a32: db 0x39, 0xd0  ;; cmp eax,edx
..@0x8059a34: db 0x0f, 0x8c, 0x8e, 0x02, 0x00, 0x00  ;; jl near A.code+0x8059cc8
..@0x8059a3a: db 0x81, 0xfe, 0x00, 0x80, 0x00, 0x00  ;; cmp esi,0x8000
..@0x8059a40: db 0x0f, 0x8e, 0x8a, 0x03, 0x00, 0x00  ;; jng near A.code+0x8059dd0
..@0x8059a46: db 0x89, 0xd0  ;; mov eax,edx
..@0x8059a48: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8059a4d: db 0x8b, 0x3d, 0x74, 0xc5, 0x87, 0x09  ;; mov edi,[0x987c574]
..@0x8059a53: db 0x81, 0xef, 0x00, 0x40, 0x00, 0x00  ;; sub edi,0x4000
..@0x8059a59: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8059a5b: db 0x0f, 0x4e, 0xfb  ;; cmovng edi,ebx
..@0x8059a5e: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8059a60: db 0x31, 0xd1  ;; xor ecx,edx
..@0x8059a62: db 0x80, 0xe5, 0x80  ;; and ch,0x80
..@0x8059a65: db 0x0f, 0x85, 0x35, 0x03, 0x00, 0x00  ;; jnz near A.code+0x8059da0
..@0x8059a6b: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x8059a70: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8059a72: call R.code+0x8052df0
..@0x8059a77: db 0x39, 0xf3  ;; cmp ebx,esi
..@0x8059a79: db 0x0f, 0x8e, 0xb0, 0xfe, 0xff, 0xff  ;; jng near A.code+0x805992f
..@0x8059a7f: db 0xa1, 0x80, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a80]
..@0x8059a84: cmp eax, strict byte 0x2
..@0x8059a87: db 0x0f, 0x84, 0x53, 0x03, 0x00, 0x00  ;; jz near A.code+0x8059de0
..@0x8059a8d: cmp eax, strict byte 0x3
..@0x8059a90: db 0x0f, 0x84, 0xfa, 0x02, 0x00, 0x00  ;; jz near A.code+0x8059d90
..@0x8059a96: cmp eax, strict byte 0x1
..@0x8059a99: db 0x0f, 0x84, 0x50, 0x03, 0x00, 0x00  ;; jz near A.code+0x8059def
..@0x8059a9f: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8059aa4: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059aaa: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8059aac: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8059aae: add eax, strict byte 0x1
..@0x8059ab1: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8059ab4: and ecx, strict byte 0x7
..@0x8059ab7: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8059abc: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x8059abf: db 0x89, 0x5c, 0x24, 0x20  ;; mov [esp+0x20],ebx
..@0x8059ac3: db 0xd3, 0x7c, 0x24, 0x20  ;; sar dword [esp+0x20],cl
..@0x8059ac7: db 0x83, 0x64, 0x24, 0x20, 0x01  ;; and dword [esp+0x20],byte +0x1
..@0x8059acc: db 0x85, 0xc0  ;; test eax,eax
..@0x8059ace: db 0x78, 0x10  ;; js A.code+0x8059ae0
..@0x8059ad0: call R.code+0x8052cd0
..@0x8059ad5: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059adb: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8059ae0: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8059ae2: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8059ae4: add eax, strict byte 0x2
..@0x8059ae7: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8059aea: and ecx, strict byte 0x7
..@0x8059aed: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8059af2: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x8059af5: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8059af7: and ebx, strict byte 0x3
..@0x8059afa: db 0x85, 0xc0  ;; test eax,eax
..@0x8059afc: db 0x78, 0x05  ;; js A.code+0x8059b03
..@0x8059afe: call R.code+0x8052cd0
..@0x8059b03: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8059b05: db 0x0f, 0x84, 0x0d, 0x05, 0x00, 0x00  ;; jz near A.code+0x805a018
..@0x8059b0b: cmp ebx, strict byte 0x3
..@0x8059b0e: dw 0x9066  ;; o16 nop
..@0x8059b10: db 0x0f, 0x84, 0x2e, 0x02, 0x00, 0x00  ;; jz near A.code+0x8059d44
..@0x8059b16: cmp ebx, strict byte 0x1
..@0x8059b19: db 0x0f, 0x85, 0x91, 0x05, 0x00, 0x00  ;; jnz near A.code+0x805a0b0
..@0x8059b1f: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059b21: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059b28: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x08  ;; mov dword [eax*4+0x9846180],0x8
..@0x8059b30: db 0x00, 0x00, 0x00
..@0x8059b33: add eax, strict byte 0x1
..@0x8059b36: db 0x3d, 0x90, 0x00, 0x00, 0x00  ;; cmp eax,0x90
..@0x8059b3b: db 0x75, 0xeb  ;; jnz A.code+0x8059b28
..@0x8059b3d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059b40: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x09  ;; mov dword [eax*4+0x9846180],0x9
..@0x8059b48: db 0x00, 0x00, 0x00
..@0x8059b4b: add eax, strict byte 0x1
..@0x8059b4e: db 0x3d, 0x00, 0x01, 0x00, 0x00  ;; cmp eax,0x100
..@0x8059b53: db 0x75, 0xeb  ;; jnz A.code+0x8059b40
..@0x8059b55: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059b58: db 0xc7, 0x04, 0x85, 0x80, 0x61, 0x84, 0x09, 0x07  ;; mov dword [eax*4+0x9846180],0x7
..@0x8059b60: db 0x00, 0x00, 0x00
..@0x8059b63: add eax, strict byte 0x1
..@0x8059b66: db 0x3d, 0x18, 0x01, 0x00, 0x00  ;; cmp eax,0x118
..@0x8059b6b: db 0x75, 0xeb  ;; jnz A.code+0x8059b58
..@0x8059b6d: db 0xb8, 0xe0, 0x65, 0x84, 0x09  ;; mov eax,0x98465e0
..@0x8059b72: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059b78: db 0xc7, 0x00, 0x08, 0x00, 0x00, 0x00  ;; mov dword [eax],0x8
..@0x8059b7e: add eax, strict byte 0x4
..@0x8059b81: db 0x3d, 0x00, 0x66, 0x84, 0x09  ;; cmp eax,0x9846600
..@0x8059b86: db 0x75, 0xf0  ;; jnz A.code+0x8059b78
..@0x8059b88: db 0xb8, 0x00, 0x66, 0x84, 0x09  ;; mov eax,0x9846600
..@0x8059b8d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x8059b90: db 0xc7, 0x00, 0x05, 0x00, 0x00, 0x00  ;; mov dword [eax],0x5
..@0x8059b96: add eax, strict byte 0x4
..@0x8059b99: db 0x3d, 0x80, 0x66, 0x84, 0x09  ;; cmp eax,0x9846680
..@0x8059b9e: db 0x75, 0xf0  ;; jnz A.code+0x8059b90
..@0x8059ba0: db 0xc7, 0x44, 0x24, 0x28, 0x20, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x20
..@0x8059ba8: db 0xc7, 0x44, 0x24, 0x24, 0x20, 0x01, 0x00, 0x00  ;; mov dword [esp+0x24],0x120
..@0x8059bb0: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x8059bb4: db 0xb9, 0xe0, 0x66, 0x84, 0x09  ;; mov ecx,0x98466e0
..@0x8059bb9: db 0xb8, 0x80, 0x61, 0x84, 0x09  ;; mov eax,0x9846180
..@0x8059bbe: db 0xc7, 0x04, 0x24, 0x60, 0x6b, 0x84, 0x09  ;; mov dword [esp],0x9846b60
..@0x8059bc5: call R.code+0x8052430
..@0x8059bca: db 0xb9, 0xe0, 0x6b, 0x84, 0x09  ;; mov ecx,0x9846be0
..@0x8059bcf: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x8059bd4: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x8059bd9: db 0xc7, 0x44, 0x24, 0x04, 0x09, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x9
..@0x8059be1: db 0xc7, 0x04, 0x24, 0xe0, 0x73, 0x84, 0x09  ;; mov dword [esp],0x98473e0
..@0x8059be8: call R.code+0x8052300
..@0x8059bed: db 0x8b, 0x4c, 0x24, 0x24  ;; mov ecx,[esp+0x24]
..@0x8059bf1: db 0xc7, 0x04, 0x24, 0x60, 0x76, 0x84, 0x09  ;; mov dword [esp],0x9847660
..@0x8059bf8: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x8059bfc: db 0x8d, 0x04, 0x8d, 0x80, 0x61, 0x84, 0x09  ;; lea eax,[ecx*4+0x9846180]
..@0x8059c03: db 0xb9, 0xe0, 0x75, 0x84, 0x09  ;; mov ecx,0x98475e0
..@0x8059c08: call R.code+0x8052430
..@0x8059c0d: db 0xb9, 0xe0, 0x76, 0x84, 0x09  ;; mov ecx,0x98476e0
..@0x8059c12: db 0xba, 0x60, 0x76, 0x84, 0x09  ;; mov edx,0x9847660
..@0x8059c17: db 0xc7, 0x44, 0x24, 0x04, 0x06, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x6
..@0x8059c1f: db 0xb8, 0xe0, 0x75, 0x84, 0x09  ;; mov eax,0x98475e0
..@0x8059c24: db 0xc7, 0x04, 0x24, 0xe0, 0x77, 0x84, 0x09  ;; mov dword [esp],0x98477e0
..@0x8059c2b: call R.code+0x8052300
..@0x8059c30: db 0x8b, 0x3d, 0x20, 0xc3, 0x87, 0x09  ;; mov edi,[0x987c320]
..@0x8059c36: db 0xeb, 0x40  ;; jmp short A.code+0x8059c78
..@0x8059c38: db 0x01, 0xca  ;; add edx,ecx
..@0x8059c3a: db 0x8b, 0x1c, 0x85, 0xe0, 0x6b, 0x84, 0x09  ;; mov ebx,[eax*4+0x9846be0]
..@0x8059c41: db 0x85, 0xd2  ;; test edx,edx
..@0x8059c43: db 0x89, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],edx
..@0x8059c49: db 0x78, 0x05  ;; js A.code+0x8059c50
..@0x8059c4b: call R.code+0x8052cd0
..@0x8059c50: db 0x81, 0xfb, 0xff, 0x00, 0x00, 0x00  ;; cmp ebx,0xff
..@0x8059c56: db 0x0f, 0x8f, 0x88, 0x02, 0x00, 0x00  ;; jg near A.code+0x8059ee4
..@0x8059c5c: db 0x8b, 0x3d, 0x20, 0xc3, 0x87, 0x09  ;; mov edi,[0x987c320]
..@0x8059c62: db 0x89, 0xf8  ;; mov eax,edi
..@0x8059c64: add edi, strict byte 0x1
..@0x8059c67: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8059c6c: db 0x89, 0x3d, 0x20, 0xc3, 0x87, 0x09  ;; mov [0x987c320],edi
..@0x8059c72: db 0x88, 0x98, 0x60, 0xe1, 0x83, 0x09  ;; mov [eax+0x983e160],bl
..@0x8059c78: db 0x8b, 0x0d, 0x74, 0xc5, 0x87, 0x09  ;; mov ecx,[0x987c574]
..@0x8059c7e: db 0x39, 0xf9  ;; cmp ecx,edi
..@0x8059c80: db 0x0f, 0x8e, 0xdf, 0x06, 0x00, 0x00  ;; jng near A.code+0x805a365
..@0x8059c86: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x8059c8c: db 0x8b, 0x1d, 0x0c, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e10c]
..@0x8059c92: db 0x89, 0xd0  ;; mov eax,edx
..@0x8059c94: db 0x89, 0xd1  ;; mov ecx,edx
..@0x8059c96: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8059c99: and ecx, strict byte 0x7
..@0x8059c9c: db 0x8b, 0x04, 0x03  ;; mov eax,[ebx+eax]
..@0x8059c9f: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8059ca1: db 0x25, 0xff, 0x01, 0x00, 0x00  ;; and eax,0x1ff
..@0x8059ca6: db 0x0f, 0xb6, 0x88, 0xe0, 0x73, 0x84, 0x09  ;; movzx ecx,byte [eax+0x98473e0]
..@0x8059cad: db 0x84, 0xc9  ;; test cl,cl
..@0x8059caf: db 0x75, 0x87  ;; jnz A.code+0x8059c38
..@0x8059cb1: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x8059cb6: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x8059cbb: call R.code+0x8055c10
..@0x8059cc0: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8059cc2: db 0xeb, 0x8c  ;; jmp short A.code+0x8059c50
..@0x8059cc4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059cc8: db 0x8b, 0x1d, 0x70, 0x8a, 0x85, 0x09  ;; mov ebx,[0x9858a70]
..@0x8059cce: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8059cd0: db 0x0f, 0x85, 0xea, 0x01, 0x00, 0x00  ;; jnz near A.code+0x8059ec0
..@0x8059cd6: db 0x81, 0x3d, 0x6c, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; cmp dword [0x9858a6c],0x10000
..@0x8059cde: db 0x01, 0x00
..@0x8059ce0: db 0xb8, 0x00, 0x00, 0x01, 0x00  ;; mov eax,0x10000
..@0x8059ce5: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x8059ce9: db 0xc7, 0x44, 0x24, 0x08, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x1
..@0x8059cf1: db 0xc7, 0x04, 0x24, 0x20, 0x8a, 0x84, 0x09  ;; mov dword [esp],0x9848a20
..@0x8059cf8: db 0xc7, 0x05, 0x20, 0xc3, 0x87, 0x09, 0x00, 0x00  ;; mov dword [0x987c320],0x0
..@0x8059d00: db 0x00, 0x00
..@0x8059d02: db 0x0f, 0x46, 0x05, 0x6c, 0x8a, 0x85, 0x09  ;; cmovna eax,[0x9858a6c]
..@0x8059d09: db 0xc7, 0x05, 0x74, 0xc5, 0x87, 0x09, 0x00, 0x40  ;; mov dword [0x987c574],0x4000
..@0x8059d11: db 0x00, 0x00
..@0x8059d13: db 0xc7, 0x05, 0x80, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a80],0x0
..@0x8059d1b: db 0x00, 0x00
..@0x8059d1d: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8059d21: db 0xa3, 0x70, 0x8a, 0x85, 0x09  ;; mov [0x9858a70],eax
..@0x8059d26: call B.code+fread
..@0x8059d2b: db 0xc7, 0x05, 0x24, 0xe1, 0x83, 0x09, 0x20, 0x00  ;; mov dword [0x983e124],0xfff80020
..@0x8059d33: db 0xf8, 0xff
..@0x8059d35: db 0xc7, 0x05, 0x0c, 0xe1, 0x83, 0x09, 0x1c, 0x8a  ;; mov dword [0x983e10c],0x9858a1c
..@0x8059d3d: db 0x85, 0x09
..@0x8059d3f: jmp strict near R.code+0x8059a7f
..@0x8059d44: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8059d48: db 0x85, 0xc0  ;; test eax,eax
..@0x8059d4a: db 0x0f, 0x84, 0x4f, 0xfd, 0xff, 0xff  ;; jz near A.code+0x8059a9f
..@0x8059d50: db 0x8b, 0x15, 0x74, 0xc5, 0x87, 0x09  ;; mov edx,[0x987c574]
..@0x8059d56: db 0x8b, 0x1d, 0x20, 0xc3, 0x87, 0x09  ;; mov ebx,[0x987c320]
..@0x8059d5c: db 0x81, 0xea, 0x00, 0x40, 0x00, 0x00  ;; sub edx,0x4000
..@0x8059d62: db 0x89, 0xd0  ;; mov eax,edx
..@0x8059d64: db 0x89, 0x15, 0x74, 0xc5, 0x87, 0x09  ;; mov [0x987c574],edx
..@0x8059d6a: db 0x31, 0xd8  ;; xor eax,ebx
..@0x8059d6c: db 0xf6, 0xc4, 0x80  ;; test ah,0x80
..@0x8059d6f: db 0x0f, 0x85, 0xc2, 0x05, 0x00, 0x00  ;; jnz near A.code+0x805a337
..@0x8059d75: db 0x89, 0xd0  ;; mov eax,edx
..@0x8059d77: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8059d79: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8059d7e: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x8059d83: call R.code+0x8052df0
..@0x8059d88: nop
..@0x8059d89: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059d90: db 0xc7, 0x05, 0x80, 0x8a, 0x85, 0x09, 0x03, 0x00  ;; mov dword [0x9858a80],0x3
..@0x8059d98: db 0x00, 0x00
..@0x8059d9a: jmp strict near R.code+0x805992f
..@0x8059d9f: nop
..@0x8059da0: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8059da2: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x8059da7: db 0x81, 0xe1, 0x00, 0x80, 0xff, 0xff  ;; and ecx,0xffff8000
..@0x8059dad: db 0x89, 0x4c, 0x24, 0x20  ;; mov [esp+0x20],ecx
..@0x8059db1: call R.code+0x8052df0
..@0x8059db6: db 0x8b, 0x54, 0x24, 0x20  ;; mov edx,[esp+0x20]
..@0x8059dba: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8059dbc: db 0xb8, 0x60, 0xe1, 0x83, 0x09  ;; mov eax,0x983e160
..@0x8059dc1: call R.code+0x8052df0
..@0x8059dc6: jmp strict near R.code+0x8059a77
..@0x8059dcb: nop
..@0x8059dcc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059dd0: db 0x31, 0xc0  ;; xor eax,eax
..@0x8059dd2: db 0x31, 0xd2  ;; xor edx,edx
..@0x8059dd4: jmp strict near R.code+0x8059a4d
..@0x8059dd9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059de0: db 0x8b, 0x15, 0x88, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a88]
..@0x8059de6: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8059dea: jmp strict near R.code+0x8059c86
..@0x8059def: db 0x8b, 0x15, 0x88, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a88]
..@0x8059df5: db 0x8b, 0x1d, 0x84, 0x8a, 0x85, 0x09  ;; mov ebx,[0x9858a84]
..@0x8059dfb: db 0x8b, 0x35, 0x20, 0xc3, 0x87, 0x09  ;; mov esi,[0x987c320]
..@0x8059e01: db 0x89, 0x54, 0x24, 0x20  ;; mov [esp+0x20],edx
..@0x8059e05: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8059e0a: db 0x89, 0xf7  ;; mov edi,esi
..@0x8059e0c: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059e12: db 0x81, 0xe7, 0xff, 0x7f, 0x00, 0x00  ;; and edi,0x7fff
..@0x8059e18: db 0x8b, 0x0d, 0x24, 0xe1, 0x83, 0x09  ;; mov ecx,[0x983e124]
..@0x8059e1e: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8059e21: db 0x8b, 0x04, 0x02  ;; mov eax,[edx+eax]
..@0x8059e24: and ecx, strict byte 0x7
..@0x8059e27: db 0xd3, 0xf8  ;; sar eax,cl
..@0x8059e29: db 0x25, 0xff, 0x00, 0x00, 0x00  ;; and eax,0xff
..@0x8059e2e: db 0x83, 0x05, 0x24, 0xe1, 0x83, 0x09, 0x08  ;; add dword [0x983e124],byte +0x8
..@0x8059e35: db 0x78, 0x0d  ;; js A.code+0x8059e44
..@0x8059e37: db 0x89, 0x44, 0x24, 0x1c  ;; mov [esp+0x1c],eax
..@0x8059e3b: call R.code+0x8052cd0
..@0x8059e40: db 0x8b, 0x44, 0x24, 0x1c  ;; mov eax,[esp+0x1c]
..@0x8059e44: add esi, strict byte 0x1
..@0x8059e47: db 0x88, 0x87, 0x60, 0xe1, 0x83, 0x09  ;; mov [edi+0x983e160],al
..@0x8059e4d: sub ebx, strict byte 0x1
..@0x8059e50: db 0x89, 0x35, 0x20, 0xc3, 0x87, 0x09  ;; mov [0x987c320],esi
..@0x8059e56: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8059e58: db 0x0f, 0x84, 0xe6, 0xfe, 0xff, 0xff  ;; jz near A.code+0x8059d44
..@0x8059e5e: db 0x8b, 0x35, 0x20, 0xc3, 0x87, 0x09  ;; mov esi,[0x987c320]
..@0x8059e64: db 0x8b, 0x3d, 0x74, 0xc5, 0x87, 0x09  ;; mov edi,[0x987c574]
..@0x8059e6a: db 0x39, 0xfe  ;; cmp esi,edi
..@0x8059e6c: db 0x7c, 0x97  ;; jl A.code+0x8059e05
..@0x8059e6e: db 0x8d, 0x97, 0x00, 0xc0, 0xff, 0xff  ;; lea edx,[edi-0x4000]
..@0x8059e74: db 0x89, 0xf9  ;; mov ecx,edi
..@0x8059e76: db 0x89, 0xd0  ;; mov eax,edx
..@0x8059e78: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x8059e7d: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x8059e82: call R.code+0x8052df0
..@0x8059e87: db 0x3b, 0x3d, 0x7c, 0x8a, 0x85, 0x09  ;; cmp edi,[0x9858a7c]
..@0x8059e8d: db 0x8d, 0x87, 0x00, 0x40, 0x00, 0x00  ;; lea eax,[edi+0x4000]
..@0x8059e93: db 0xa3, 0x74, 0xc5, 0x87, 0x09  ;; mov [0x987c574],eax
..@0x8059e98: db 0x0f, 0x8c, 0x67, 0xff, 0xff, 0xff  ;; jl near A.code+0x8059e05
..@0x8059e9e: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x8059ea2: db 0x89, 0x1d, 0x84, 0x8a, 0x85, 0x09  ;; mov [0x9858a84],ebx
..@0x8059ea8: db 0xc7, 0x05, 0x80, 0x8a, 0x85, 0x09, 0x01, 0x00  ;; mov dword [0x9858a80],0x1
..@0x8059eb0: db 0x00, 0x00
..@0x8059eb2: db 0xa3, 0x88, 0x8a, 0x85, 0x09  ;; mov [0x9858a88],eax
..@0x8059eb7: jmp strict near R.code+0x805992f
..@0x8059ebc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x8059ec0: db 0xa1, 0x68, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a68]
..@0x8059ec5: db 0x89, 0x0c, 0x24  ;; mov [esp],ecx
..@0x8059ec8: db 0xc7, 0x44, 0x24, 0x08, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x8],0x0
..@0x8059ed0: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x8059ed4: call B.code+fseek
..@0x8059ed9: db 0x8b, 0x0d, 0x60, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a60]
..@0x8059edf: jmp strict near R.code+0x8059cd6
..@0x8059ee4: db 0x81, 0xfb, 0x00, 0x01, 0x00, 0x00  ;; cmp ebx,0x100
..@0x8059eea: db 0x0f, 0x84, 0x54, 0xfe, 0xff, 0xff  ;; jz near A.code+0x8059d44
..@0x8059ef0: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8059ef5: db 0x8d, 0xb3, 0x1d, 0xff, 0xff, 0xff  ;; lea esi,[ebx-0xe3]
..@0x8059efb: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059f01: db 0x8b, 0x3c, 0xf5, 0x20, 0x78, 0x84, 0x09  ;; mov edi,[esi*8+0x9847820]
..@0x8059f08: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8059f0a: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8059f0c: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8059f0f: and ecx, strict byte 0x7
..@0x8059f12: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x8059f15: db 0x01, 0xf8  ;; add eax,edi
..@0x8059f17: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x8059f1c: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8059f1e: db 0x23, 0x1c, 0xbd, 0x00, 0xb9, 0x05, 0x08  ;; and ebx,[edi*4+0x805b900]
..@0x8059f25: db 0x85, 0xc0  ;; test eax,eax
..@0x8059f27: db 0x78, 0x10  ;; js A.code+0x8059f39
..@0x8059f29: call R.code+0x8052cd0
..@0x8059f2e: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059f34: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x8059f39: db 0x03, 0x1c, 0xf5, 0x24, 0x78, 0x84, 0x09  ;; add ebx,[esi*8+0x9847824]
..@0x8059f40: db 0x89, 0xc1  ;; mov ecx,eax
..@0x8059f42: and ecx, strict byte 0x7
..@0x8059f45: db 0x89, 0x5c, 0x24, 0x24  ;; mov [esp+0x24],ebx
..@0x8059f49: db 0x89, 0xc3  ;; mov ebx,eax
..@0x8059f4b: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x8059f4e: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x8059f51: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x8059f53: and ebx, strict byte 0x3f
..@0x8059f56: db 0x0f, 0xb6, 0x8b, 0xe0, 0x77, 0x84, 0x09  ;; movzx ecx,byte [ebx+0x98477e0]
..@0x8059f5d: db 0x84, 0xc9  ;; test cl,cl
..@0x8059f5f: db 0x0f, 0x84, 0xb0, 0x03, 0x00, 0x00  ;; jz near A.code+0x805a315
..@0x8059f65: db 0x8b, 0x3c, 0x9d, 0xe0, 0x76, 0x84, 0x09  ;; mov edi,[ebx*4+0x98476e0]
..@0x8059f6c: db 0x8d, 0x1c, 0x01  ;; lea ebx,[ecx+eax]
..@0x8059f6f: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8059f71: db 0x89, 0x1d, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],ebx
..@0x8059f77: db 0x78, 0x11  ;; js A.code+0x8059f8a
..@0x8059f79: call R.code+0x8052cd0
..@0x8059f7e: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x8059f84: db 0x8b, 0x1d, 0x24, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e124]
..@0x8059f8a: db 0x89, 0xd8  ;; mov eax,ebx
..@0x8059f8c: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x8059f8e: db 0xc1, 0xf8, 0x03  ;; sar eax,byte 0x3
..@0x8059f91: and ecx, strict byte 0x7
..@0x8059f94: db 0x8b, 0x34, 0x02  ;; mov esi,[edx+eax]
..@0x8059f97: db 0x8b, 0x04, 0xfd, 0x20, 0x78, 0x84, 0x09  ;; mov eax,[edi*8+0x9847820]
..@0x8059f9e: db 0xd3, 0xfe  ;; sar esi,cl
..@0x8059fa0: db 0x01, 0xc3  ;; add ebx,eax
..@0x8059fa2: db 0x23, 0x34, 0x85, 0x00, 0xb9, 0x05, 0x08  ;; and esi,[eax*4+0x805b900]
..@0x8059fa9: db 0x85, 0xdb  ;; test ebx,ebx
..@0x8059fab: db 0x89, 0x1d, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],ebx
..@0x8059fb1: db 0x78, 0x05  ;; js A.code+0x8059fb8
..@0x8059fb3: call R.code+0x8052cd0
..@0x8059fb8: db 0x03, 0x34, 0xfd, 0x24, 0x78, 0x84, 0x09  ;; add esi,[edi*8+0x9847824]
..@0x8059fbf: db 0x8b, 0x5c, 0x24, 0x24  ;; mov ebx,[esp+0x24]
..@0x8059fc3: db 0x8b, 0x3d, 0x20, 0xc3, 0x87, 0x09  ;; mov edi,[0x987c320]
..@0x8059fc9: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x8059fcd: db 0x01, 0xfb  ;; add ebx,edi
..@0x8059fcf: db 0x89, 0xf8  ;; mov eax,edi
..@0x8059fd1: db 0x85, 0xd2  ;; test edx,edx
..@0x8059fd3: db 0x0f, 0x84, 0x9f, 0xfc, 0xff, 0xff  ;; jz near A.code+0x8059c78
..@0x8059fd9: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x8059fe0: db 0x89, 0xc2  ;; mov edx,eax
..@0x8059fe2: db 0x29, 0xf2  ;; sub edx,esi
..@0x8059fe4: db 0x81, 0xe2, 0xff, 0x7f, 0x00, 0x00  ;; and edx,0x7fff
..@0x8059fea: db 0x0f, 0xb6, 0x8a, 0x60, 0xe1, 0x83, 0x09  ;; movzx ecx,byte [edx+0x983e160]
..@0x8059ff1: db 0x89, 0xc2  ;; mov edx,eax
..@0x8059ff3: add eax, strict byte 0x1
..@0x8059ff6: db 0x81, 0xe2, 0xff, 0x7f, 0x00, 0x00  ;; and edx,0x7fff
..@0x8059ffc: db 0x39, 0xd8  ;; cmp eax,ebx
..@0x8059ffe: db 0x88, 0x8a, 0x60, 0xe1, 0x83, 0x09  ;; mov [edx+0x983e160],cl
..@0x805a004: db 0x75, 0xda  ;; jnz A.code+0x8059fe0
..@0x805a006: db 0x8b, 0x54, 0x24, 0x24  ;; mov edx,[esp+0x24]
..@0x805a00a: db 0x8d, 0x3c, 0x3a  ;; lea edi,[edx+edi]
..@0x805a00d: db 0x89, 0x3d, 0x20, 0xc3, 0x87, 0x09  ;; mov [0x987c320],edi
..@0x805a013: jmp strict near R.code+0x8059c78
..@0x805a018: db 0x8b, 0x15, 0x24, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e124]
..@0x805a01e: db 0x89, 0xd0  ;; mov eax,edx
..@0x805a020: db 0xf7, 0xd8  ;; neg eax
..@0x805a022: and eax, strict byte 0x7
..@0x805a025: db 0x01, 0xd0  ;; add eax,edx
..@0x805a027: db 0x85, 0xc0  ;; test eax,eax
..@0x805a029: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a02e: db 0x78, 0x0a  ;; js A.code+0x805a03a
..@0x805a030: call R.code+0x8052cd0
..@0x805a035: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a03a: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a040: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805a042: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a044: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x805a047: and ecx, strict byte 0x7
..@0x805a04a: add eax, strict byte 0x10
..@0x805a04d: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a052: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805a055: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805a057: db 0x81, 0xe3, 0xff, 0xff, 0x00, 0x00  ;; and ebx,0xffff
..@0x805a05d: db 0x85, 0xc0  ;; test eax,eax
..@0x805a05f: db 0x78, 0x10  ;; js A.code+0x805a071
..@0x805a061: call R.code+0x8052cd0
..@0x805a066: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a06c: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a071: db 0x89, 0xc6  ;; mov esi,eax
..@0x805a073: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a075: add eax, strict byte 0x10
..@0x805a078: db 0xc1, 0xfe, 0x03  ;; sar esi,byte 0x3
..@0x805a07b: and ecx, strict byte 0x7
..@0x805a07e: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a083: db 0x8b, 0x14, 0x32  ;; mov edx,[edx+esi]
..@0x805a086: db 0xd3, 0xfa  ;; sar edx,cl
..@0x805a088: db 0x0f, 0xb7, 0xf2  ;; movzx esi,dx
..@0x805a08b: db 0x85, 0xc0  ;; test eax,eax
..@0x805a08d: db 0x78, 0x05  ;; js A.code+0x805a094
..@0x805a08f: call R.code+0x8052cd0
..@0x805a094: db 0x89, 0xf2  ;; mov edx,esi
..@0x805a096: db 0x31, 0xda  ;; xor edx,ebx
..@0x805a098: db 0x81, 0xfa, 0xff, 0xff, 0x00, 0x00  ;; cmp edx,0xffff
..@0x805a09e: db 0x0f, 0x84, 0xb2, 0xfd, 0xff, 0xff  ;; jz near A.code+0x8059e56
..@0x805a0a4: or eax, strict byte -0x1
..@0x805a0a7: jmp strict near R.code+0x8059952
..@0x805a0ac: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x805a0b0: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a0b5: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a0bb: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805a0bd: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a0bf: add eax, strict byte 0x5
..@0x805a0c2: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x805a0c5: and ecx, strict byte 0x7
..@0x805a0c8: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a0cd: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805a0d0: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805a0d2: and ebx, strict byte 0x1f
..@0x805a0d5: db 0x85, 0xc0  ;; test eax,eax
..@0x805a0d7: db 0x78, 0x10  ;; js A.code+0x805a0e9
..@0x805a0d9: call R.code+0x8052cd0
..@0x805a0de: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a0e4: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a0e9: db 0x81, 0xc3, 0x01, 0x01, 0x00, 0x00  ;; add ebx,0x101
..@0x805a0ef: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a0f1: db 0x89, 0x5c, 0x24, 0x24  ;; mov [esp+0x24],ebx
..@0x805a0f5: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805a0f7: and ecx, strict byte 0x7
..@0x805a0fa: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x805a0fd: add eax, strict byte 0x5
..@0x805a100: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805a103: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a108: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805a10a: and ebx, strict byte 0x1f
..@0x805a10d: db 0x85, 0xc0  ;; test eax,eax
..@0x805a10f: db 0x78, 0x10  ;; js A.code+0x805a121
..@0x805a111: call R.code+0x8052cd0
..@0x805a116: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a11c: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a121: add ebx, strict byte 0x1
..@0x805a124: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a126: db 0x89, 0x5c, 0x24, 0x28  ;; mov [esp+0x28],ebx
..@0x805a12a: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805a12c: and ecx, strict byte 0x7
..@0x805a12f: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x805a132: add eax, strict byte 0x4
..@0x805a135: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805a138: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a13d: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805a13f: and ebx, strict byte 0xf
..@0x805a142: db 0x85, 0xc0  ;; test eax,eax
..@0x805a144: db 0x78, 0x10  ;; js A.code+0x805a156
..@0x805a146: call R.code+0x8052cd0
..@0x805a14b: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a151: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a156: db 0x8d, 0x7b, 0x04  ;; lea edi,[ebx+0x4]
..@0x805a159: db 0x31, 0xf6  ;; xor esi,esi
..@0x805a15b: db 0x89, 0x6c, 0x24, 0x2c  ;; mov [esp+0x2c],ebp
..@0x805a15f: db 0xeb, 0x12  ;; jmp short A.code+0x805a173
..@0x805a161: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a168: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a16e: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a173: db 0x89, 0xc3  ;; mov ebx,eax
..@0x805a175: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a177: add eax, strict byte 0x3
..@0x805a17a: db 0xc1, 0xfb, 0x03  ;; sar ebx,byte 0x3
..@0x805a17d: and ecx, strict byte 0x7
..@0x805a180: db 0x8b, 0x2c, 0xb5, 0xa0, 0xb8, 0x05, 0x08  ;; mov ebp,[esi*4+0x805b8a0]
..@0x805a187: db 0x8b, 0x1c, 0x1a  ;; mov ebx,[edx+ebx]
..@0x805a18a: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a18f: db 0xd3, 0xfb  ;; sar ebx,cl
..@0x805a191: and ebx, strict byte 0x7
..@0x805a194: db 0x85, 0xc0  ;; test eax,eax
..@0x805a196: db 0x78, 0x05  ;; js A.code+0x805a19d
..@0x805a198: call R.code+0x8052cd0
..@0x805a19d: add esi, strict byte 0x1
..@0x805a1a0: db 0x89, 0x1c, 0xad, 0x80, 0x66, 0x84, 0x09  ;; mov [ebp*4+0x9846680],ebx
..@0x805a1a7: db 0x39, 0xf7  ;; cmp edi,esi
..@0x805a1a9: db 0x7f, 0xbd  ;; jg A.code+0x805a168
..@0x805a1ab: db 0x8b, 0x6c, 0x24, 0x2c  ;; mov ebp,[esp+0x2c]
..@0x805a1af: db 0x8d, 0x04, 0xb5, 0xa0, 0xb8, 0x05, 0x08  ;; lea eax,[esi*4+0x805b8a0]
..@0x805a1b6: cmp esi, strict byte 0x12
..@0x805a1b9: db 0x7f, 0x1c  ;; jg A.code+0x805a1d7
..@0x805a1bb: nop
..@0x805a1bc: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x805a1c0: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x805a1c2: add eax, strict byte 0x4
..@0x805a1c5: db 0x3d, 0xec, 0xb8, 0x05, 0x08  ;; cmp eax,0x805b8ec
..@0x805a1ca: db 0xc7, 0x04, 0x95, 0x80, 0x66, 0x84, 0x09, 0x00  ;; mov dword [edx*4+0x9846680],0x0
..@0x805a1d2: db 0x00, 0x00, 0x00
..@0x805a1d5: db 0x75, 0xe9  ;; jnz A.code+0x805a1c0
..@0x805a1d7: db 0xc7, 0x04, 0x24, 0x60, 0x6b, 0x84, 0x09  ;; mov dword [esp],0x9846b60
..@0x805a1de: db 0xb9, 0xe0, 0x66, 0x84, 0x09  ;; mov ecx,0x98466e0
..@0x805a1e3: db 0x31, 0xdb  ;; xor ebx,ebx
..@0x805a1e5: db 0xba, 0x13, 0x00, 0x00, 0x00  ;; mov edx,0x13
..@0x805a1ea: db 0xb8, 0x80, 0x66, 0x84, 0x09  ;; mov eax,0x9846680
..@0x805a1ef: call R.code+0x8052430
..@0x805a1f4: db 0x8b, 0x7c, 0x24, 0x24  ;; mov edi,[esp+0x24]
..@0x805a1f8: db 0x03, 0x7c, 0x24, 0x28  ;; add edi,[esp+0x28]
..@0x805a1fc: db 0xeb, 0x14  ;; jmp short A.code+0x805a212
..@0x805a1fe: dw 0x9066  ;; o16 nop
..@0x805a200: db 0x89, 0x04, 0x9d, 0x80, 0x61, 0x84, 0x09  ;; mov [ebx*4+0x9846180],eax
..@0x805a207: add ebx, strict byte 0x1
..@0x805a20a: db 0x39, 0xdf  ;; cmp edi,ebx
..@0x805a20c: db 0x0f, 0x8e, 0x9e, 0xf9, 0xff, 0xff  ;; jng near A.code+0x8059bb0
..@0x805a212: db 0xba, 0x60, 0x6b, 0x84, 0x09  ;; mov edx,0x9846b60
..@0x805a217: db 0xb8, 0xe0, 0x66, 0x84, 0x09  ;; mov eax,0x98466e0
..@0x805a21c: call R.code+0x8055c10
..@0x805a221: cmp eax, strict byte 0xf
..@0x805a224: db 0x7e, 0xda  ;; jng A.code+0x805a200
..@0x805a226: cmp eax, strict byte 0x10
..@0x805a229: db 0x0f, 0x84, 0x92, 0x00, 0x00, 0x00  ;; jz near A.code+0x805a2c1
..@0x805a22f: cmp eax, strict byte 0x11
..@0x805a232: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a237: db 0x89, 0xc2  ;; mov edx,eax
..@0x805a239: db 0x74, 0x5a  ;; jz A.code+0x805a295
..@0x805a23b: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x805a241: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805a244: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a246: and ecx, strict byte 0x7
..@0x805a249: add eax, strict byte 0x7
..@0x805a24c: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x805a24f: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a254: db 0xd3, 0xfe  ;; sar esi,cl
..@0x805a256: and esi, strict byte 0x7f
..@0x805a259: db 0x85, 0xc0  ;; test eax,eax
..@0x805a25b: db 0x78, 0x05  ;; js A.code+0x805a262
..@0x805a25d: call R.code+0x8052cd0
..@0x805a262: add esi, strict byte 0xb
..@0x805a265: db 0x8d, 0x14, 0x1e  ;; lea edx,[esi+ebx]
..@0x805a268: db 0x8d, 0x04, 0x9d, 0x80, 0x61, 0x84, 0x09  ;; lea eax,[ebx*4+0x9846180]
..@0x805a26f: db 0x8d, 0x14, 0x95, 0x80, 0x61, 0x84, 0x09  ;; lea edx,[edx*4+0x9846180]
..@0x805a276: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x805a279: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a280: db 0xc7, 0x00, 0x00, 0x00, 0x00, 0x00  ;; mov dword [eax],0x0
..@0x805a286: add eax, strict byte 0x4
..@0x805a289: db 0x39, 0xd0  ;; cmp eax,edx
..@0x805a28b: db 0x75, 0xf3  ;; jnz A.code+0x805a280
..@0x805a28d: db 0x8d, 0x1c, 0x1e  ;; lea ebx,[esi+ebx]
..@0x805a290: jmp strict near R.code+0x805a20a
..@0x805a295: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x805a29b: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805a29e: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a2a0: and ecx, strict byte 0x7
..@0x805a2a3: add eax, strict byte 0x3
..@0x805a2a6: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x805a2a9: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a2ae: db 0xd3, 0xfe  ;; sar esi,cl
..@0x805a2b0: and esi, strict byte 0x7
..@0x805a2b3: db 0x85, 0xc0  ;; test eax,eax
..@0x805a2b5: db 0x78, 0x05  ;; js A.code+0x805a2bc
..@0x805a2b7: call R.code+0x8052cd0
..@0x805a2bc: add esi, strict byte 0x3
..@0x805a2bf: db 0xeb, 0xa4  ;; jmp short A.code+0x805a265
..@0x805a2c1: db 0xa1, 0x24, 0xe1, 0x83, 0x09  ;; mov eax,[0x983e124]
..@0x805a2c6: db 0x8b, 0x35, 0x0c, 0xe1, 0x83, 0x09  ;; mov esi,[0x983e10c]
..@0x805a2cc: db 0x89, 0xc2  ;; mov edx,eax
..@0x805a2ce: db 0x89, 0xc1  ;; mov ecx,eax
..@0x805a2d0: add eax, strict byte 0x2
..@0x805a2d3: db 0xc1, 0xfa, 0x03  ;; sar edx,byte 0x3
..@0x805a2d6: and ecx, strict byte 0x7
..@0x805a2d9: db 0xa3, 0x24, 0xe1, 0x83, 0x09  ;; mov [0x983e124],eax
..@0x805a2de: db 0x8b, 0x34, 0x16  ;; mov esi,[esi+edx]
..@0x805a2e1: db 0xd3, 0xfe  ;; sar esi,cl
..@0x805a2e3: and esi, strict byte 0x3
..@0x805a2e6: db 0x85, 0xc0  ;; test eax,eax
..@0x805a2e8: db 0x78, 0x05  ;; js A.code+0x805a2ef
..@0x805a2ea: call R.code+0x8052cd0
..@0x805a2ef: db 0x8d, 0x14, 0x33  ;; lea edx,[ebx+esi]
..@0x805a2f2: db 0x8d, 0x04, 0x9d, 0x7c, 0x61, 0x84, 0x09  ;; lea eax,[ebx*4+0x984617c]
..@0x805a2f9: db 0x8d, 0x0c, 0x95, 0x88, 0x61, 0x84, 0x09  ;; lea ecx,[edx*4+0x9846188]
..@0x805a300: db 0x8b, 0x10  ;; mov edx,[eax]
..@0x805a302: db 0x89, 0x50, 0x04  ;; mov [eax+0x4],edx
..@0x805a305: add eax, strict byte 0x4
..@0x805a308: db 0x39, 0xc8  ;; cmp eax,ecx
..@0x805a30a: db 0x75, 0xf4  ;; jnz A.code+0x805a300
..@0x805a30c: db 0x8d, 0x5c, 0x33, 0x03  ;; lea ebx,[ebx+esi+0x3]
..@0x805a310: jmp strict near R.code+0x805a20a
..@0x805a315: db 0xba, 0x60, 0x76, 0x84, 0x09  ;; mov edx,0x9847660
..@0x805a31a: db 0xb8, 0xe0, 0x75, 0x84, 0x09  ;; mov eax,0x98475e0
..@0x805a31f: call R.code+0x8055c10
..@0x805a324: db 0x8b, 0x15, 0x0c, 0xe1, 0x83, 0x09  ;; mov edx,[0x983e10c]
..@0x805a32a: db 0x89, 0xc7  ;; mov edi,eax
..@0x805a32c: db 0x8b, 0x1d, 0x24, 0xe1, 0x83, 0x09  ;; mov ebx,[0x983e124]
..@0x805a332: jmp strict near R.code+0x8059f8a
..@0x805a337: db 0x89, 0xd0  ;; mov eax,edx
..@0x805a339: db 0x89, 0xde  ;; mov esi,ebx
..@0x805a33b: db 0x81, 0xe6, 0x00, 0x80, 0xff, 0xff  ;; and esi,0xffff8000
..@0x805a341: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x805a346: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x805a34b: db 0x89, 0xf1  ;; mov ecx,esi
..@0x805a34d: call R.code+0x8052df0
..@0x805a352: db 0x89, 0xd9  ;; mov ecx,ebx
..@0x805a354: db 0x89, 0xf2  ;; mov edx,esi
..@0x805a356: db 0xb8, 0x60, 0xe1, 0x83, 0x09  ;; mov eax,0x983e160
..@0x805a35b: call R.code+0x8052df0
..@0x805a360: jmp strict near R.code+0x8059d90
..@0x805a365: db 0x8d, 0x91, 0x00, 0xc0, 0xff, 0xff  ;; lea edx,[ecx-0x4000]
..@0x805a36b: db 0x89, 0xd0  ;; mov eax,edx
..@0x805a36d: db 0x25, 0xff, 0x7f, 0x00, 0x00  ;; and eax,0x7fff
..@0x805a372: db 0x05, 0x60, 0xe1, 0x83, 0x09  ;; add eax,0x983e160
..@0x805a377: call R.code+0x8052df0
..@0x805a37c: db 0xa1, 0x74, 0xc5, 0x87, 0x09  ;; mov eax,[0x987c574]
..@0x805a381: db 0x3b, 0x05, 0x7c, 0x8a, 0x85, 0x09  ;; cmp eax,[0x9858a7c]
..@0x805a387: db 0x8d, 0x90, 0x00, 0x40, 0x00, 0x00  ;; lea edx,[eax+0x4000]
..@0x805a38d: db 0x89, 0x15, 0x74, 0xc5, 0x87, 0x09  ;; mov [0x987c574],edx
..@0x805a393: db 0x0f, 0x8c, 0xed, 0xf8, 0xff, 0xff  ;; jl near A.code+0x8059c86
..@0x805a399: db 0xc7, 0x05, 0x80, 0x8a, 0x85, 0x09, 0x02, 0x00  ;; mov dword [0x9858a80],0x2
..@0x805a3a1: db 0x00, 0x00
..@0x805a3a3: db 0x8b, 0x44, 0x24, 0x20  ;; mov eax,[esp+0x20]
..@0x805a3a7: db 0xa3, 0x88, 0x8a, 0x85, 0x09  ;; mov [0x9858a88],eax
..@0x805a3ac: jmp strict near R.code+0x805992f
..@0x805a3b1: db 0xeb, 0x0d  ;; jmp short A.code+0x805a3c0
..@0x805a3b3: nop
..@0x805a3b4: nop
..@0x805a3b5: nop
..@0x805a3b6: nop
..@0x805a3b7: nop
..@0x805a3b8: nop
..@0x805a3b9: nop
..@0x805a3ba: nop
..@0x805a3bb: nop
..@0x805a3bc: nop
..@0x805a3bd: nop
..@0x805a3be: nop
..@0x805a3bf: nop
..@0x805a3c0: db 0x8b, 0x15, 0x60, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a60]
..@0x805a3c6: db 0x31, 0xc0  ;; xor eax,eax
..@0x805a3c8: db 0x85, 0xd2  ;; test edx,edx
..@0x805a3ca: db 0x0f, 0x45, 0x05, 0x74, 0x8a, 0x85, 0x09  ;; cmovnz eax,[0x9858a74]
..@0x805a3d1: ret
..@0x805a3d2: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a3d9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a3e0: db 0x8b, 0x0d, 0x60, 0x8a, 0x85, 0x09  ;; mov ecx,[0x9858a60]
..@0x805a3e6: db 0x8b, 0x44, 0x24, 0x04  ;; mov eax,[esp+0x4]
..@0x805a3ea: db 0x8b, 0x54, 0x24, 0x08  ;; mov edx,[esp+0x8]
..@0x805a3ee: db 0x85, 0xc9  ;; test ecx,ecx
..@0x805a3f0: db 0x74, 0x26  ;; jz A.code+0x805a418
..@0x805a3f2: cmp edx, strict byte 0x1
..@0x805a3f5: db 0x74, 0x59  ;; jz A.code+0x805a450
..@0x805a3f7: cmp edx, strict byte 0x2
..@0x805a3fa: db 0x74, 0x2c  ;; jz A.code+0x805a428
..@0x805a3fc: db 0x8b, 0x15, 0x74, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a74]
..@0x805a402: db 0xa3, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],eax
..@0x805a407: db 0x85, 0xc0  ;; test eax,eax
..@0x805a409: db 0x78, 0x2e  ;; js A.code+0x805a439
..@0x805a40b: db 0x39, 0xc2  ;; cmp edx,eax
..@0x805a40d: db 0x7d, 0x11  ;; jnl A.code+0x805a420
..@0x805a40f: db 0x89, 0x15, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],edx
..@0x805a415: db 0x89, 0xd0  ;; mov eax,edx
..@0x805a417: ret
..@0x805a418: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805a41d: db 0x8d, 0x76, 0x00  ;; lea esi,[esi+0x0]
..@0x805a420: db 0xf3, 0xc3  ;; rep ret
..@0x805a422: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a428: db 0x8b, 0x15, 0x74, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a74]
..@0x805a42e: db 0x01, 0xd0  ;; add eax,edx
..@0x805a430: db 0x85, 0xc0  ;; test eax,eax
..@0x805a432: db 0xa3, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],eax
..@0x805a437: db 0x79, 0xd2  ;; jns A.code+0x805a40b
..@0x805a439: db 0xc7, 0x05, 0x78, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a78],0x0
..@0x805a441: db 0x00, 0x00
..@0x805a443: db 0x31, 0xc0  ;; xor eax,eax
..@0x805a445: db 0xeb, 0xc4  ;; jmp short A.code+0x805a40b
..@0x805a447: db 0x89, 0xf6  ;; mov esi,esi
..@0x805a449: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a450: db 0x03, 0x05, 0x78, 0x8a, 0x85, 0x09  ;; add eax,[0x9858a78]
..@0x805a456: db 0x8b, 0x15, 0x74, 0x8a, 0x85, 0x09  ;; mov edx,[0x9858a74]
..@0x805a45c: db 0xa3, 0x78, 0x8a, 0x85, 0x09  ;; mov [0x9858a78],eax
..@0x805a461: db 0xeb, 0xa4  ;; jmp short A.code+0x805a407
..@0x805a463: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a469: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a470: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x805a475: db 0x85, 0xc0  ;; test eax,eax
..@0x805a477: db 0x74, 0x06  ;; jz A.code+0x805a47f
..@0x805a479: db 0xa1, 0x78, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a78]
..@0x805a47e: ret
..@0x805a47f: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805a484: ret
..@0x805a485: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x805a489: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a490: sub esp, strict byte 0x2c
..@0x805a493: db 0x8d, 0x44, 0x24, 0x1f  ;; lea eax,[esp+0x1f]
..@0x805a497: db 0xc7, 0x44, 0x24, 0x04, 0x01, 0x00, 0x00, 0x00  ;; mov dword [esp+0x4],0x1
..@0x805a49f: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a4a2: call R.code+0x80598f0
..@0x805a4a7: db 0x85, 0xc0  ;; test eax,eax
..@0x805a4a9: db 0x74, 0x0d  ;; jz A.code+0x805a4b8
..@0x805a4ab: db 0x0f, 0xb6, 0x44, 0x24, 0x1f  ;; movzx eax,byte [esp+0x1f]
..@0x805a4b0: add esp, strict byte 0x2c
..@0x805a4b3: ret
..@0x805a4b4: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x805a4b8: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805a4bd: db 0xeb, 0xf1  ;; jmp short A.code+0x805a4b0
..@0x805a4bf: nop
..@0x805a4c0: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x805a4c5: db 0x85, 0xc0  ;; test eax,eax
..@0x805a4c7: db 0x74, 0x12  ;; jz A.code+0x805a4db
..@0x805a4c9: db 0xa1, 0x74, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a74]
..@0x805a4ce: db 0x39, 0x05, 0x78, 0x8a, 0x85, 0x09  ;; cmp [0x9858a78],eax
..@0x805a4d4: db 0x0f, 0x9d, 0xc0  ;; setnl al
..@0x805a4d7: db 0x0f, 0xb6, 0xc0  ;; movzx eax,al
..@0x805a4da: ret
..@0x805a4db: db 0xb8, 0xff, 0xff, 0xff, 0xff  ;; mov eax,0xffffffff
..@0x805a4e0: ret
..@0x805a4e1: db 0xeb, 0x0d  ;; jmp short A.code+0x805a4f0
..@0x805a4e3: nop
..@0x805a4e4: nop
..@0x805a4e5: nop
..@0x805a4e6: nop
..@0x805a4e7: nop
..@0x805a4e8: nop
..@0x805a4e9: nop
..@0x805a4ea: nop
..@0x805a4eb: nop
..@0x805a4ec: nop
..@0x805a4ed: nop
..@0x805a4ee: nop
..@0x805a4ef: nop
..@0x805a4f0: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x805a4f5: db 0x85, 0xc0  ;; test eax,eax
..@0x805a4f7: db 0x74, 0x18  ;; jz A.code+0x805a511
..@0x805a4f9: sub esp, strict byte 0x1c
..@0x805a4fc: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a4ff: call B.code+fclose
..@0x805a504: db 0xc7, 0x05, 0x60, 0x8a, 0x85, 0x09, 0x00, 0x00  ;; mov dword [0x9858a60],0x0
..@0x805a50c: db 0x00, 0x00
..@0x805a50e: add esp, strict byte 0x1c
..@0x805a511: db 0xf3, 0xc3  ;; rep ret
..@0x805a513: db 0x8d, 0xb6, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a519: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a520: sub esp, strict byte 0x4c
..@0x805a523: db 0x89, 0x5c, 0x24, 0x3c  ;; mov [esp+0x3c],ebx
..@0x805a527: db 0x8b, 0x44, 0x24, 0x50  ;; mov eax,[esp+0x50]
..@0x805a52b: db 0x8b, 0x5c, 0x24, 0x54  ;; mov ebx,[esp+0x54]
..@0x805a52f: db 0x89, 0x7c, 0x24, 0x44  ;; mov [esp+0x44],edi
..@0x805a533: db 0x8b, 0x54, 0x24, 0x58  ;; mov edx,[esp+0x58]
..@0x805a537: db 0x89, 0x6c, 0x24, 0x48  ;; mov [esp+0x48],ebp
..@0x805a53b: db 0x89, 0x74, 0x24, 0x40  ;; mov [esp+0x40],esi
..@0x805a53f: db 0x8b, 0x7c, 0x24, 0x5c  ;; mov edi,[esp+0x5c]
..@0x805a543: db 0x8b, 0x6c, 0x24, 0x60  ;; mov ebp,[esp+0x60]
..@0x805a547: db 0xc7, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebx],0x0
..@0x805a54d: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a550: db 0x89, 0x54, 0x24, 0x2c  ;; mov [esp+0x2c],edx
..@0x805a554: call R.code+0x8059010
..@0x805a559: db 0x85, 0xc0  ;; test eax,eax
..@0x805a55b: db 0x0f, 0x84, 0xef, 0x00, 0x00, 0x00  ;; jz near A.code+0x805a650
..@0x805a561: db 0xa1, 0x60, 0x8a, 0x85, 0x09  ;; mov eax,[0x9858a60]
..@0x805a566: db 0x85, 0xc0  ;; test eax,eax
..@0x805a568: db 0x0f, 0x84, 0xfa, 0x00, 0x00, 0x00  ;; jz near A.code+0x805a668
..@0x805a56e: mov edx, [0x9858a74]
..@0x805a574: db 0x89, 0x54, 0x24, 0x28  ;; mov [esp+0x28],edx
..@0x805a578: db 0x89, 0xd0  ;; mov eax,edx
..@0x805a57a: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a57d: call B.code+prog_malloc
..@0x805a582: db 0x85, 0xc0  ;; test eax,eax
..@0x805a584: db 0x89, 0xc6  ;; mov esi,eax
..@0x805a586: db 0x0f, 0x84, 0xf4, 0x00, 0x00, 0x00  ;; jz near A.code+0x805a680
..@0x805a58c: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x805a590: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a593: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x805a597: call R.code+0x80598f0
..@0x805a59c: call R.code+0x805a4f0
..@0x805a5a1: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x805a5a5: db 0x89, 0x6c, 0x24, 0x0c  ;; mov [esp+0xc],ebp
..@0x805a5a9: db 0x89, 0x7c, 0x24, 0x08  ;; mov [esp+0x8],edi
..@0x805a5ad: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x805a5b0: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x805a5b4: call R.code+0x8055c80
..@0x805a5b9: db 0x8b, 0x07  ;; mov eax,[edi]
..@0x805a5bb: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x805a5bf: db 0xc1, 0xe0, 0x02  ;; shl eax,byte 0x2
..@0x805a5c2: db 0x89, 0x02  ;; mov [edx],eax
..@0x805a5c4: db 0x0f, 0xaf, 0x45, 0x00  ;; imul eax,[ebp+0x0]
..@0x805a5c8: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a5cb: call B.code+prog_malloc
..@0x805a5d0: db 0x85, 0xc0  ;; test eax,eax
..@0x805a5d2: db 0x89, 0x03  ;; mov [ebx],eax
..@0x805a5d4: db 0x74, 0x3f  ;; jz A.code+0x805a615
..@0x805a5d6: db 0xc7, 0x44, 0x24, 0x1c, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x1c],0x0
..@0x805a5de: db 0x8b, 0x54, 0x24, 0x2c  ;; mov edx,[esp+0x2c]
..@0x805a5e2: db 0xc7, 0x44, 0x24, 0x18, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x18],0x0
..@0x805a5ea: db 0x8b, 0x4d, 0x00  ;; mov ecx,[ebp+0x0]
..@0x805a5ed: db 0x89, 0x4c, 0x24, 0x14  ;; mov [esp+0x14],ecx
..@0x805a5f1: db 0x8b, 0x0f  ;; mov ecx,[edi]
..@0x805a5f3: db 0x89, 0x4c, 0x24, 0x10  ;; mov [esp+0x10],ecx
..@0x805a5f7: db 0x8b, 0x0a  ;; mov ecx,[edx]
..@0x805a5f9: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x805a5fd: db 0x8b, 0x54, 0x24, 0x28  ;; mov edx,[esp+0x28]
..@0x805a601: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x805a604: db 0x89, 0x4c, 0x24, 0x0c  ;; mov [esp+0xc],ecx
..@0x805a608: db 0x89, 0x54, 0x24, 0x04  ;; mov [esp+0x4],edx
..@0x805a60c: call R.code+0x8056020
..@0x805a611: db 0x85, 0xc0  ;; test eax,eax
..@0x805a613: db 0x78, 0x23  ;; js A.code+0x805a638
..@0x805a615: db 0x89, 0x74, 0x24, 0x50  ;; mov [esp+0x50],esi
..@0x805a619: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x805a61d: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x805a621: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x805a625: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x805a629: add esp, strict byte 0x4c
..@0x805a62c: jmp strict near B.code+prog_free
..@0x805a631: db 0x8d, 0xb4, 0x26, 0x00, 0x00, 0x00, 0x00  ;; lea esi,[esi+0x0]
..@0x805a638: db 0x89, 0x34, 0x24  ;; mov [esp],esi
..@0x805a63b: call B.code+prog_free
..@0x805a640: db 0x8b, 0x03  ;; mov eax,[ebx]
..@0x805a642: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a645: call B.code+prog_free
..@0x805a64a: db 0xc7, 0x03, 0x00, 0x00, 0x00, 0x00  ;; mov dword [ebx],0x0
..@0x805a650: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x805a654: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x805a658: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x805a65c: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x805a660: add esp, strict byte 0x4c
..@0x805a663: ret
..@0x805a664: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]
..@0x805a668: db 0x31, 0xc0  ;; xor eax,eax
..@0x805a66a: db 0xc7, 0x44, 0x24, 0x28, 0x00, 0x00, 0x00, 0x00  ;; mov dword [esp+0x28],0x0
..@0x805a672: jmp strict near R.code+0x805a57a
..@0x805a677: db 0x89, 0xf6  ;; mov esi,esi
..@0x805a679: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]
..@0x805a680: db 0x8b, 0x5c, 0x24, 0x3c  ;; mov ebx,[esp+0x3c]
..@0x805a684: db 0x8b, 0x74, 0x24, 0x40  ;; mov esi,[esp+0x40]
..@0x805a688: db 0x8b, 0x7c, 0x24, 0x44  ;; mov edi,[esp+0x44]
..@0x805a68c: db 0x8b, 0x6c, 0x24, 0x48  ;; mov ebp,[esp+0x48]
..@0x805a690: add esp, strict byte 0x4c
..@0x805a693: jmp strict near R.code+0x805a4f0
P.text.end:
times -(P.text.end-P.text)+(0x805a698-0x8048d10) times 0 nop  ; Assert.
times +(P.text.end-P.text)-(0x805a698-0x8048d10) times 0 nop  ; Assert.

%ifidn TARGET, x
X.gap5:      ;0x18698..0x1876c  +0x000d4    @0x805a698...0x805a76c
..@0x805a698: times 0x805a76c-0x805a698 db 0  ; Padding.
;..@0x805a76c:
%endif  ; TARGET, x

%ifidn TARGET, l
L.gap16:  ; addr=0x805a698 off=0x12698
..@0x805a698: times 0x805a76c-0x805a698 db 0  ; Padding.
;..@0x805a76c:
%endif  ; TARGET, l

%ifidn TARGET, d
D.gap15:  ; addr=0x805a698 off=0x12698
..@0x805a698: times 0x805a76c-0x805a698 db 0  ; Padding.
;..@0x805a76c:
%endif

%ifidn TARGET, ls
LS.after_text_padding:  ; addr=0x805a698 off=0x12698
..@0x805a698: times 8 nop  ; Alignment padding.

LS.glibc.after_text:  ; addr=0x805a6a0 off=0x126a0
; From elf-init.oS in libc_nonshared.a (source: csu/elf-init.c?), section .text:
__libc_csu_fini: equ $-B.code  ; It doesn't do anything.
..@0x805a6a0: push ebp
..@0x805a6a1: db 0x89, 0xe5  ;; mov ebp,esp
..@0x805a6a3: pop ebp
..@0x805a6a4: ret
..@0x805a6a5: db 0x8d, 0x74, 0x26, 0x00  ;; lea esi,[esi+0x0]  ; Alignment padding.
..@0x805a6a9: db 0x8d, 0xbc, 0x27, 0x00, 0x00, 0x00, 0x00  ;; lea edi,[edi+0x0]  ; Alignment padding.
__libc_csu_init: equ $-B.code
..@0x805a6b0: push ebp
..@0x805a6b1: db 0x89, 0xe5  ;; mov ebp,esp
..@0x805a6b3: push edi
..@0x805a6b4: push esi
..@0x805a6b5: push ebx
..@0x805a6b6: call B.code+__x86.get_pc_thunk.bx
..@0x805a6bb: add ebx, strict dword B.code+_GLOBAL_OFFSET_TABLE_-$  ; EBX := _GLOBAL_OFFSET_TABLE_ (in a position-independent way).
..@0x805a6c1: sub esp, strict byte 0x1c
..@0x805a6c4: call B.code+_dynamic_init
..@0x805a6c9: db 0x8d, 0xbb
                dd _dynamic_init_array.end-_GLOBAL_OFFSET_TABLE_  ;; lea edi, [ebx+_dynamic_init_array.end-_GLOBAL_OFFSET_TABLE_]  ; EDI := _dynamic_init_array.end (in a position-independent way).
..@0x805a6cf: db 0x8d, 0x83
                dd _dynamic_init_array-_GLOBAL_OFFSET_TABLE_  ;; lea eax, [ebx+_dynamic_init_array-_GLOBAL_OFFSET_TABLE_]  ; EAX := _dynamic_init_array (in a position-independent way).
..@0x805a6d5: db 0x29, 0xc7  ;; sub edi,eax
..@0x805a6d7: db 0xc1, 0xff, 0x02  ;; sar edi,0x2
..@0x805a6da: db 0x85, 0xff  ;; test edi,edi
..@0x805a6dc: db 0x74, 0x24  ;; jz A.code+0x805a702
..@0x805a6de: db 0x31, 0xf6  ;; xor esi,esi
..@0x805a6e0: db 0x8b, 0x45, 0x10  ;; mov eax,[ebp+0x10]
..@0x805a6e3: db 0x89, 0x44, 0x24, 0x08  ;; mov [esp+0x8],eax
..@0x805a6e7: db 0x8b, 0x45, 0x0c  ;; mov eax,[ebp+0xc]
..@0x805a6ea: db 0x89, 0x44, 0x24, 0x04  ;; mov [esp+0x4],eax
..@0x805a6ee: db 0x8b, 0x45, 0x08  ;; mov eax,[ebp+0x8]
..@0x805a6f1: db 0x89, 0x04, 0x24  ;; mov [esp],eax
..@0x805a6f4: call [ebx+esi*4+_dynamic_init_array-_GLOBAL_OFFSET_TABLE_]  ; call [esi*4+_dynamic_init_array] (in a position-independent way).
..@0x805a6fb: add esi, strict byte 0x1
..@0x805a6fe: db 0x39, 0xfe  ;; cmp esi,edi
..@0x805a700: db 0x72, 0xde  ;; jc A.code+0x805a6e0
..@0x805a702: add esp, strict byte 0x1c
..@0x805a705: pop ebx
..@0x805a706: pop esi
..@0x805a707: pop edi
..@0x805a708: pop ebp
..@0x805a709: ret
; From elf-init.oS in libc_nonshared.a (source: csu/elf-init.c?), section .text.__x86.get_pc_thunk.bx:
__x86.get_pc_thunk.bx: equ $-B.code
..@0x805a70a: mov ebx, [esp]
..@0x805a70d: ret
; End from crti.o.
..@0x805a70e: times 2 nop  ; Alignment padding.

LS.fini:  ; addr=0x805a710 off=0x12710
_dynamic_fini: equ $-B.code
; From crti.o, section .fini:
..@0x805a710: push ebp
..@0x805a711: db 0x89, 0xe5  ;; mov ebp,esp
..@0x805a713: push ebx
..@0x805a714: sub esp, strict byte 4
..@0x805a717: call B.code+_dynamic_fini_pop_ebx
_dynamic_fini_pop_ebx: equ $-B.code
..@0x805a71c: pop ebx
..@0x805a71d: add ebx, strict dword B.code+_GLOBAL_OFFSET_TABLE_-$+1  ; EBX := _GLOBAL_OFFSET_TABLE_ (in a position-independent way).
; End from crti.o.
; From crtn.o, section .fini:
..@0x805a723: pop ecx
..@0x805a724: pop ebx
..@0x805a725: leave
..@0x805a726: ret
; End from crtn.o.
..@0x805a727: times 0x19 db 0  ; Alignment padding.

LS.glibc.rodata:  ; addr=0x805a740 off=0x12740
; From crt1.o, section .rodata:
_fp_hw: equ $-B.code
..@0x805a740: dd 3
; End from crt1.o.
; From crt1.o, section .rodata.cst4:
_IO_stdin_used: equ $-B.code
; Why this value?
; https://sourceware.org/git/?p=glibc.git;a=blob;f=csu/init.c;h=c2f978f3da565590bcab355fefa3d81cf211cb36;hb=63fb8f9aa9d19f85599afe4b849b567aefd70a36
; It works even if the value is 0.
..@0x805a744: dd 0x20001
; End from crt1.o.

LS.rodata:  ; addr=0x805a748 off=0x12748
str_message_on_sigint: equ $-B.code
..@0x805a748: db 'Press ^C again to exit immediately.', 0x0a, ''
str_message_on_sigint.end: equ $-B.code
%endif  ; TARGET, ls

P.rodata:    ;0x1876c..0x19a20  +0x012b4    @0x805a76c...0x805ba20
times -(P.rodata-B.code-$$)+0x805a76c times 0 nop  ; Assert.
times +(P.rodata-B.code-$$)-0x805a76c times 0 nop  ; Assert.
..@0x805a76c: db 0
..@0x805a76d: db 0, 0, 0
str_message_help_line1: equ $-B.code
..@0x805a770: db 'PNGOUT [In:{PNG,JPG,GIF,TGA,PCX,BMP}] (Out:PNG) (options...)        %s', 10, 0
..@0x805a7b8: db 'by Ken Silverman (http://advsys.net/ken)', 0x0a, 0, 0, 0
..@0x805a7e4: db 'Linux port by Jonathon Fowler (http://www.jonof.id.au/pngout)', 0x0a, 0, 0
..@0x805a824: db 'PNGOUT optimizes PNG size losslessly using my own deflate algorithm (not Zlib)', 0x0a, 0
..@0x805a874: db 'With the right options, it can often beat other programs by 5-10%%. Options:', 0x0a, 0, 0, 0
..@0x805a8c4: db '   -c# PNG output color: 0=Gray, 2=RGB, 3=Pal, 4=Gray+Alpha, 6=RGB+Alpha', 0x0a, 0, 0, 0
..@0x805a910: db '   -f# PNG output filter: 0=none, 1=', 0x7f, 'x, 2=', 0x7f, 'y, 3=', 0x7f, 'x&y, 4=Paeth, 5=mixed, 6=reuse', 0x0a, 0, 0, 0, 0
..@0x805a964: db '   -d# Override default bitdepth: 0(min),1,2,4,8 (valid only in /c0,/c3 modes)', 0x0a, 0
..@0x805a9b4: db '   -s# Select strategy. 0:Xtreme(default), 1:Intense, 2:Longest Match,', 0x0a, 0
..@0x805a9fc: db '       3:Huffman Only, 4:Uncompressed', 0x0a, 0, 0
..@0x805aa24: db '   -b# Block split threshold (lower=more blocks, 0=1 block/file, default=256)', 0x0a, 0, 0
..@0x805aa74: db '       Use trial&error! Suggested values to try are: 0,128,192,256,512,1024,..', 0x0a, 0
..@0x805aac4: db '   -n# Exact number of Huffman blocks (overrides /b#)', 0x0a, 0, 0
..@0x805aafc: db '   -r  Randomized initial tables (good for many trials with same options)', 0x0a, 0, 0
..@0x805ab48: db '   -k? 0=Remove optional chunks (default), 1=Keep all', 0x0a, 0, 0
..@0x805ab80: db '       p=Keep palette indices, s=Keep settings for /c,f,d,b', 0x0a, 0, 0, 0, 0
..@0x805abc0: db '   -k(Chunk,Chunk,..) Preserve only named chunk(s). Example: -kgAMA,bKGD,tEXt', 0x0a, 0, 0
..@0x805ac10: db '   -v,q,l Verbose,Quiet,List mode (use ', 0x27, '-', 0x27, ' as filename to specify stdin/stdout)', 0x0a, 0, 0, 0, 0
..@0x805ac64: db '   -y  Assume Yes at the ', 0x27, 'overwrite file?', 0x27, ' prompt', 0x0a, 0, 0
..@0x805ac98: db '   -force  Write file even if bigger.', 0x0a, 0, 0
..@0x805acc0: db '   -mincodes#  Workaround for buggy decoders. 1:Zlib 1.2.1 bug, 2:buggy mobiles', 0x0a, 0, 0, 0, 0
..@0x805ad14: db 'The 1st filename is the input. If you omit the output', 0x0a, 0, 0
..@0x805ad4c: db 'filename, PNGOUT will use the same filename with a .PNG extension. Examples:', 0x0a, 0, 0, 0
..@0x805ad9c: db '   $ pngout inlarge.bmp outsmall.png           <- writes outsmall.png', 0x0a, 0, 0
str_message_help_line_last: equ $-B.code
..@0x805ade4: db '   $ pngout duke3d.png -c2 -f3 -b128 -kbKGD -v <- writes duke3d.png if smaller', 10, 0
..@0x805ae34: db 'Too many filenames specified on cmdline', 0x0a, 0, 0, 0, 0
..@0x805ae60: db 'Warning: unrecognized option: %s', 0x0a, 0, 0, 0
..@0x805ae84: db 'Must specify a source or target image', 0x0a, 0, 0
..@0x805aeac: db '                Name  Offset   Length     CRC', 0x0a, 0, 0
str_message_already_cancelled: equ $-B.code
..@0x805aedc: db '%s already exists. '
str_message_operation_cancelled_nl: equ $-B.code  ; Reusing the suffix of str_message_already_cancelled.
..@0x805aeef: db 'Operation cancelled.', 0x0a, 0, 0, 0, 0
str_message_already_ask_overwrite: equ $-B.code
..@0x805af08: db '%s already exists. Overwrite? (y/n) ', 0, 0 ,0, 0
str_message_unrecognised_response: equ $-B.code
..@0x805af30: db 'Unrecognised response. Overwrite? (y/n) ', 0, 0, 0, 0
str_fmt_in_first: equ $-B.code
..@0x805af5c: db ' In:                             %s /c%d', 0, 0, 0, 0
str_fmt_out: equ $-B.code
..@0x805af88: db 'Out:                             %s', 0
..@0x805afac: db 'ERROR: Unable to open %s for writing!', 0x0a, 0, 0
..@0x805afd4: db 'Chg:%+8d byte%c (%3d%% of original)', 0x0a, 0, 0, 0, 0
..@0x805affc: db 'Unable to compress further: copying original file', 0x0a, 0
str_release_date: equ $-B.code
..@0x805b02f: db 'Mar 19 2015', 0
..@0x805b03b: db 'FORCE', 0
..@0x805b041: db 'MINCODES', 0
..@0x805b04a: db 'ZL121', 0
..@0x805b050: db 'Invalid coltype', 0x0a, 0
..@0x805b061: db 'Invalid filter', 0x0a, 0
..@0x805b071: db 'stdin.png', 0
..@0x805b07b: db '.PNG', 0
..@0x805b080: db '.JPEG', 0
..@0x805b086: db '.JPG', 0
..@0x805b08b: db '.JPE', 0
..@0x805b090: db '.GIF', 0
..@0x805b095: db '.PCX', 0
..@0x805b09a: db '.TGA', 0
..@0x805b09f: db '.BMP', 0
..@0x805b0a4: db '(stdout)', 0
..@0x805b0ad: db 'Out of memory', 0x0a, 0
str_fopen_rb: equ $-B.code
..@0x805b0bc: db 'rb', 0
..@0x805b0bf: db '%s not found', 0x0a, 0
..@0x805b0cd: db '%s unsupported format', 0x0a, 0
..@0x805b0e4: db 'ALL', 0
str_comma: equ $-B.code
..@0x805b0e8: db ',', 0
..@0x805b0ea: db 'Required chunk: ', 0
..@0x805b0fb: db '  Remove chunk: ', 0
..@0x805b10c: db '    Keep chunk: ', 0
..@0x805b11d: db '%c%c%c%c %08x %08x %08x', 0x0a, 0
..@0x805b136: db '/c%d', 0
..@0x805b13b: db ' /d%d', 0
..@0x805b141: db ' /n%d', 0x0a, 0
%ifidn TARGET, ls
str_message_operation_cancelled: equ $-B.code
..@0x805b148: db 'Operation cancelled.', 0
%else  ; TARGET, ls
unused_str_message_operation_cancelled: equ $-B.code
..@0x805b148: times 21 db 0  ; Unused.
%endif  ; TARGET, ls
str_fmt_in_bytes: equ $-B.code
..@0x805b15d: db 0x0d, ' In:%8d bytes', 0x0a, 0
..@0x805b16d: db 0x0d, ' In: (Windows clipboard)', 0x0a, 0
str_fopen_wb: equ $-B.code
..@str_fopen_wb: db 'wb', 0
..@0x805b18b: db 'ERROR writing to file!', 0x0a, 0
..@0x805b1a3: db 'Unable to compress further', 0x0a, 0
..@0x805b1bf: db 'Read %d byte(s) from stdin', 0x0a, 0, 0
code_ptr_0x805b1dc: equ $-B.code
..@0x805b1dc: dd A.code+0x804a093
code_ptr_0x805b1e0: equ $-B.code
..@0x805b1e0: dd A.code+0x804a0cf
code_ptr_0x805b1e4: equ $-B.code
..@0x805b1e4: dd A.code+0x804a156
code_ptr_0x805b1e8: equ $-B.code
..@0x805b1e8: dd A.code+0x8049cfa
code_ptr_0x805b1ec: equ $-B.code
..@0x805b1ec: dd A.code+0x804a19e
code_ptr_0x805b1f0: equ $-B.code
..@0x805b1f0: dd A.code+0x8049cfa
code_ptr_0x805b1f4: equ $-B.code
..@0x805b1f4: dd A.code+0x8049cfa
code_ptr_0x805b1f8: equ $-B.code
..@0x805b1f8: dd A.code+0x8049cfa
code_ptr_0x805b1fc: equ $-B.code
..@0x805b1fc: dd A.code+0x8049cfa
code_ptr_0x805b200: equ $-B.code
..@0x805b200: dd A.code+0x804a30f
code_ptr_0x805b204: equ $-B.code
..@0x805b204: dd A.code+0x804a347
code_ptr_0x805b208: equ $-B.code
..@0x805b208: dd A.code+0x8049cfa
code_ptr_0x805b20c: equ $-B.code
..@0x805b20c: dd A.code+0x804a274
code_ptr_0x805b210: equ $-B.code
..@0x805b210: dd A.code+0x8049cfa
code_ptr_0x805b214: equ $-B.code
..@0x805b214: dd A.code+0x8049cfa
code_ptr_0x805b218: equ $-B.code
..@0x805b218: dd A.code+0x804a2a3
code_ptr_0x805b21c: equ $-B.code
..@0x805b21c: dd A.code+0x804a2ad
code_ptr_0x805b220: equ $-B.code
..@0x805b220: dd A.code+0x804a2bd
code_ptr_0x805b224: equ $-B.code
..@0x805b224: dd A.code+0x8049cfa
code_ptr_0x805b228: equ $-B.code
..@0x805b228: dd A.code+0x8049cfa
code_ptr_0x805b22c: equ $-B.code
..@0x805b22c: dd A.code+0x804a24d
code_ptr_0x805b230: equ $-B.code
..@0x805b230: dd A.code+0x8049cfa
code_ptr_0x805b234: equ $-B.code
..@0x805b234: dd A.code+0x8049cfa
code_ptr_0x805b238: equ $-B.code
..@0x805b238: dd A.code+0x804a25d
..@0x805b23c: db 0x00, 0x00, 0x80, 0x43
..@0x805b240: db 0x00, 0x00, 0xc8, 0x42, 0x0d
..@0x805b245: db 'bKGD chunk can', 0x27, 't fit palette index. Try higher bitdepth, /c2 or /c6 instead', 0x0a, 0, 0, 0
..@0x805b294: db 'doesn', 0x27, 't fit into 256 color entries; ', 0, 0, 0, 0
..@0x805b2bc: db 0x0d, 'Image requires full alpha; try %s instead', 0, 0
..@0x805b2e8: db 0x0d, 'Image doesn', 0x27, 't fit into 256 color entries; try %s instead', 0, 0, 0
..@0x805b324: db 0x0d, 'Image is not grayscale; try %s instead', 0
..@0x805b34c: db 0x0d, 'bKGD must be grayscale in color type 0.', 0, 0, 0, 0
..@0x805b378: db 0x0d, 'Image doesn', 0x27, 't fit in selected bitdepth', 0
..@0x805b3a0: db 0x0a, 'Ignoring /kp (palette not found)', 0, 0, 0
..@0x805b3c4: db 0x0d, 'PNG color type %d not supported', 0x0a, 0, 0, 0
..@0x805b3e8: db 'Out:%8d', 0
..@0x805b3f0: db '     -0', 0
..@0x805b3f8: db '%7d', 0
..@0x805b3fc: db '.%1d=%7d.%1d', 0
..@0x805b409: db ' bytes               ', 0
..@0x805b41f: db 0x0d, 'malloc failed (olinbuf)', 0x0a, 0
..@0x805b439: db 0x0d, 'malloc failed (entropylut)', 0x0a, 0
..@0x805b456: db '/c0 (Gray)', 0
..@0x805b461: db '/c2 (RGB)', 0
..@0x805b46b: db '/c3 (Pal)', 0
..@0x805b475: db '/c4 (Gray+Alpha)', 0
..@0x805b486: db '/c6 (RGB+Alpha)', 0
..@0x805b496: db 0x0d, 'Image ', 0
..@0x805b49e: db 'requires full alpha; ', 0
..@0x805b4b4: db 'is not grayscale; ', 0
..@0x805b4c7: db 'try %s instead', 0
..@0x805b4d6: db ' /c%d /f%d', 0
..@0x805b4e1: db ' /d%d, %d colors', 0
..@0x805b4f2: db 0x0d, 'malloc failed (gpo->kbuf)', 0
..@0x805b50d: db 0x0d, 'malloc failed', 0
..@0x805b51c: db 'Out:', 0x0a, 'Block boundaries: ', 0
..@0x805b534: db '%x', 0
..@0x805b537: db 'none', 0
..@0x805b53c: db ' (%d block', 0
..@0x805b547: db ')', 0x0a
str_message_nl: equ $-B.code
..@0x805b549: db 0x0a, 0
str_dev_urandom: equ $-B.code
..@0x805b54b: db '/dev/urandom', 0
str_fmt_percent: equ $-B.code
..@0x805b558: db '%2d%% ', 0x0d, 0
..@0x805b560: db 0x0d, 'Bit depth %d not supported', 0x0a, 0
..@0x805b57d: db 0x0a, 'Early ESC! ', 0
..@0x805b58a: db 0x0d, '!malloc failed (gpo->kbuf)', 0
..@0x805b5a6: db 'Out:%8d bytes (stored)', 0
%ifidn TARGET, ls
str_fmt_took_time: equ $-B.code
..@0x805b5bd: db 'Took %.3f sec.', 0x0a, 0  ; Message displayed if the -v flag is specified.
..@0x805b5cd: times 0x805b5e0-0x805b5cd db 0  ; Padding, otherwise unused.
%else  ; TARGET, ls
str_fmt_took_time: equ $-B.code
..@0x805b5bd: db 'Took %u.%03u sec.', 0x0a, 0  ; Message displayed if the -v flag is specified.
..@0x805b5d0: times 0x805b5e0-0x805b5d0 db 0  ; Padding, otherwise unused.
%endif  ; TARGET, ls
code_ptr_0x805b5e0: equ $-B.code
..@0x805b5e0: dd A.code+0x804dd08
code_ptr_0x805b5e4: equ $-B.code
..@0x805b5e4: dd A.code+0x804dd40
code_ptr_0x805b5e8: equ $-B.code
..@0x805b5e8: dd A.code+0x804dd90
code_ptr_0x805b5ec: equ $-B.code
..@0x805b5ec: dd A.code+0x804da30
code_ptr_0x805b5f0: equ $-B.code
..@0x805b5f0: dd A.code+0x804db80
code_ptr_0x805b5f4: equ $-B.code
..@0x805b5f4: dd A.code+0x804e0b0
code_ptr_0x805b5f8: equ $-B.code
..@0x805b5f8: dd A.code+0x804e0d8
code_ptr_0x805b5fc: equ $-B.code
..@0x805b5fc: dd A.code+0x804e110
code_ptr_0x805b600: equ $-B.code
..@0x805b600: dd A.code+0x804e050
code_ptr_0x805b604: equ $-B.code
..@0x805b604: dd A.code+0x804de90
code_ptr_0x805b608: equ $-B.code
..@0x805b608: dd A.code+0x804e550
code_ptr_0x805b60c: equ $-B.code
..@0x805b60c: dd A.code+0x804e598
code_ptr_0x805b610: equ $-B.code
..@0x805b610: dd A.code+0x804e600
code_ptr_0x805b614: equ $-B.code
..@0x805b614: dd A.code+0x804e488
code_ptr_0x805b618: equ $-B.code
..@0x805b618: dd A.code+0x804e1d0
code_ptr_0x805b61c: equ $-B.code
..@0x805b61c: dd A.code+0x804e850
code_ptr_0x805b620: equ $-B.code
..@0x805b620: dd A.code+0x804e870
code_ptr_0x805b624: equ $-B.code
..@0x805b624: dd A.code+0x804e890
code_ptr_0x805b628: equ $-B.code
..@0x805b628: dd A.code+0x804e820
code_ptr_0x805b62c: equ $-B.code
..@0x805b62c: dd A.code+0x804e6f0
code_ptr_0x805b630: equ $-B.code
..@0x805b630: dd A.code+0x80504e0
code_ptr_0x805b634: equ $-B.code
..@0x805b634: dd A.code+0x804f3e0
code_ptr_0x805b638: equ $-B.code
..@0x805b638: dd A.code+0x804f3e0
code_ptr_0x805b63c: equ $-B.code
..@0x805b63c: dd A.code+0x804f3e0
code_ptr_0x805b640: equ $-B.code
..@0x805b640: dd A.code+0x804f3e8
code_ptr_0x805b644: equ $-B.code
..@0x805b644: dd A.code+0x80504f9
code_ptr_0x805b648: equ $-B.code
..@0x805b648: dd A.code+0x8051391
code_ptr_0x805b64c: equ $-B.code
..@0x805b64c: dd A.code+0x8051384
code_ptr_0x805b650: equ $-B.code
..@0x805b650: dd A.code+0x80511c1
code_ptr_0x805b654: equ $-B.code
..@0x805b654: dd A.code+0x80511b6
code_ptr_0x805b658: equ $-B.code
..@0x805b658: dd A.code+0x80510c2
code_ptr_0x805b65c: equ $-B.code
..@0x805b65c: dd A.code+0x80511c1
code_ptr_0x805b660: equ $-B.code
..@0x805b660: dd A.code+0x805082a
code_ptr_0x805b664: equ $-B.code
..@0x805b664: dd A.code+0x80511b6
code_ptr_0x805b668: equ $-B.code
..@0x805b668: dd A.code+0x80511a9
code_ptr_0x805b66c: equ $-B.code
..@0x805b66c: dd A.code+0x80501eb
code_ptr_0x805b670: equ $-B.code
..@0x805b670: dd A.code+0x804f174
code_ptr_0x805b674: equ $-B.code
..@0x805b674: dd A.code+0x80501c0
code_ptr_0x805b678: equ $-B.code
..@0x805b678: dd A.code+0x8050190
code_ptr_0x805b67c: equ $-B.code
..@0x805b67c: dd A.code+0x805017c
code_ptr_0x805b680: equ $-B.code
..@0x805b680: dd A.code+0x804f174
code_ptr_0x805b684: equ $-B.code
..@0x805b684: dd A.code+0x80512fd
code_ptr_0x805b688: equ $-B.code
..@0x805b688: dd A.code+0x805186e
code_ptr_0x805b68c: equ $-B.code
..@0x805b68c: dd A.code+0x804ff45
code_ptr_0x805b690: equ $-B.code
..@0x805b690: dd A.code+0x80516bf
code_ptr_0x805b694: equ $-B.code
..@0x805b694: dd A.code+0x805213e
code_ptr_0x805b698: equ $-B.code
..@0x805b698: dd A.code+0x805139e
code_ptr_0x805b69c: equ $-B.code
..@0x805b69c: dd A.code+0x804ff45
code_ptr_0x805b6a0: equ $-B.code
..@0x805b6a0: dd A.code+0x80505b6
code_ptr_0x805b6a4: equ $-B.code
..@0x805b6a4: dd A.code+0x8050cbe
code_ptr_0x805b6a8: equ $-B.code
..@0x805b6a8: dd A.code+0x8050b8f
code_ptr_0x805b6ac: equ $-B.code
..@0x805b6ac: dd A.code+0x8050bbc
code_ptr_0x805b6b0: equ $-B.code
..@0x805b6b0: dd A.code+0x8050cbe
code_ptr_0x805b6b4: equ $-B.code
..@0x805b6b4: dd A.code+0x8050d70
code_ptr_0x805b6b8: equ $-B.code
..@0x805b6b8: dd A.code+0x8050b8f
code_ptr_0x805b6bc: equ $-B.code
..@0x805b6bc: dd A.code+0x80509f0
..@0x805b6c0: db 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b6d0: db 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
..@0x805b6e0: db 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
..@0x805b6f0: db 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x805b700: db 0x0e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b710: db 0x17, 0x6e, 0x05, 0xb5, 0xb5, 0xb8, 0x93, 0x46, 0x8f, 0x55, 0x0f, 0xa3, 0xbf, 0x73, 0x6c, 0xc6
..@0x805b720: db 0x26, 0x88, 0xc0, 0x81, 0x88, 0x2e, 0xa0, 0x3f, 0xac, 0x4c, 0x2e, 0x48, 0xec, 0x5f, 0xc9, 0x3f
..@0x805b730: db 0xfe, 0x82, 0x2b, 0x65, 0x47, 0x15, 0xc7, 0xbf, 0x00, 0x00, 0xc0, 0xff, 0xff, 0xff, 0xdf, 0x41
..@0x805b740: db 0x00, 0x00, 0x00, 0x3f
%ifidn TARGET, ls
f32_1000000: equ $-B.code
..@0x805b744: db 0x00, 0x24, 0x74, 0x49  ; (32-bit float)1000000.
%else  ; TARGET, ls
unused_f32_1000000: equ $-B.code
..@0x805b744: times 4 db 0  ; Unused.
%endif  ; TARGET, ls
..@0x805b748: times 0x18 db 0  ; Padding.
code_ptr_0x805b760: equ $-B.code
..@0x805b760: dd A.code+0x80534a0
code_ptr_0x805b764: equ $-B.code
..@0x805b764: dd A.code+0x80536b5
code_ptr_0x805b768: equ $-B.code
..@0x805b768: dd A.code+0x80535cd
code_ptr_0x805b76c: equ $-B.code
..@0x805b76c: dd A.code+0x805362d
code_ptr_0x805b770: equ $-B.code
..@0x805b770: dd A.code+0x805323a
code_ptr_0x805b774: equ $-B.code
..@0x805b774: dd A.code+0x80534fd
code_ptr_0x805b778: equ $-B.code
..@0x805b778: dd A.code+0x8054ed4
code_ptr_0x805b77c: equ $-B.code
..@0x805b77c: dd A.code+0x8054ed4
code_ptr_0x805b780: equ $-B.code
..@0x805b780: dd A.code+0x8054ed4
code_ptr_0x805b784: equ $-B.code
..@0x805b784: dd A.code+0x8055010
code_ptr_0x805b788: equ $-B.code
..@0x805b788: dd A.code+0x8055061
code_ptr_0x805b78c: equ $-B.code
..@0x805b78c: dd A.code+0x8055010
code_ptr_0x805b790: equ $-B.code
..@0x805b790: dd A.code+0x8055010
code_ptr_0x805b794: equ $-B.code
..@0x805b794: dd A.code+0x8055010
code_ptr_0x805b798: equ $-B.code
..@0x805b798: dd A.code+0x8055010
code_ptr_0x805b79c: equ $-B.code
..@0x805b79c: dd A.code+0x8055010
code_ptr_0x805b7a0: equ $-B.code
..@0x805b7a0: dd A.code+0x8055010
code_ptr_0x805b7a4: equ $-B.code
..@0x805b7a4: dd A.code+0x8055010
code_ptr_0x805b7a8: equ $-B.code
..@0x805b7a8: dd A.code+0x8055010
code_ptr_0x805b7ac: equ $-B.code
..@0x805b7ac: dd A.code+0x8055010
code_ptr_0x805b7b0: equ $-B.code
..@0x805b7b0: dd A.code+0x8055010
code_ptr_0x805b7b4: equ $-B.code
..@0x805b7b4: dd A.code+0x8055010
code_ptr_0x805b7b8: equ $-B.code
..@0x805b7b8: dd A.code+0x8055010
code_ptr_0x805b7bc: equ $-B.code
..@0x805b7bc: dd A.code+0x8055010
code_ptr_0x805b7c0: equ $-B.code
..@0x805b7c0: dd A.code+0x8055010
code_ptr_0x805b7c4: equ $-B.code
..@0x805b7c4: dd A.code+0x8055010
code_ptr_0x805b7c8: equ $-B.code
..@0x805b7c8: dd A.code+0x8055010
code_ptr_0x805b7cc: equ $-B.code
..@0x805b7cc: dd A.code+0x8055010
code_ptr_0x805b7d0: equ $-B.code
..@0x805b7d0: dd A.code+0x8055010
code_ptr_0x805b7d4: equ $-B.code
..@0x805b7d4: dd A.code+0x8055010
code_ptr_0x805b7d8: equ $-B.code
..@0x805b7d8: dd A.code+0x8055010
code_ptr_0x805b7dc: equ $-B.code
..@0x805b7dc: dd A.code+0x8053ba8
code_ptr_0x805b7e0: equ $-B.code
..@0x805b7e0: dd A.code+0x80540f5
code_ptr_0x805b7e4: equ $-B.code
..@0x805b7e4: dd A.code+0x8054051
code_ptr_0x805b7e8: equ $-B.code
..@0x805b7e8: dd A.code+0x8055010
code_ptr_0x805b7ec: equ $-B.code
..@0x805b7ec: dd A.code+0x8054038
code_ptr_0x805b7f0: equ $-B.code
..@0x805b7f0: dd A.code+0x8056cb7
code_ptr_0x805b7f4: equ $-B.code
..@0x805b7f4: dd A.code+0x8056b33
code_ptr_0x805b7f8: equ $-B.code
..@0x805b7f8: dd A.code+0x8056c5b
code_ptr_0x805b7fc: equ $-B.code
..@0x805b7fc: dd A.code+0x8056c45
code_ptr_0x805b800: equ $-B.code
..@0x805b800: dd A.code+0x8056cb7
code_ptr_0x805b804: equ $-B.code
..@0x805b804: dd A.code+0x8056b33
code_ptr_0x805b808: equ $-B.code
..@0x805b808: dd A.code+0x8056c5b
code_ptr_0x805b80c: equ $-B.code
..@0x805b80c: dd A.code+0x805812a
code_ptr_0x805b810: equ $-B.code
..@0x805b810: dd A.code+0x805826b
code_ptr_0x805b814: equ $-B.code
..@0x805b814: dd A.code+0x805812a
code_ptr_0x805b818: equ $-B.code
..@0x805b818: dd A.code+0x805812a
code_ptr_0x805b81c: equ $-B.code
..@0x805b81c: dd A.code+0x805822b
code_ptr_0x805b820: equ $-B.code
..@0x805b820: dd A.code+0x805812a
code_ptr_0x805b824: equ $-B.code
..@0x805b824: dd A.code+0x805812a
code_ptr_0x805b828: equ $-B.code
..@0x805b828: dd A.code+0x805812a
code_ptr_0x805b82c: equ $-B.code
..@0x805b82c: dd A.code+0x8058200
code_ptr_0x805b830: equ $-B.code
..@0x805b830: dd A.code+0x805812a
code_ptr_0x805b834: equ $-B.code
..@0x805b834: dd A.code+0x805812a
code_ptr_0x805b838: equ $-B.code
..@0x805b838: dd A.code+0x805812a
code_ptr_0x805b83c: equ $-B.code
..@0x805b83c: dd A.code+0x805812a
code_ptr_0x805b840: equ $-B.code
..@0x805b840: dd A.code+0x805812a
code_ptr_0x805b844: equ $-B.code
..@0x805b844: dd A.code+0x805812a
code_ptr_0x805b848: equ $-B.code
..@0x805b848: dd A.code+0x805812a
code_ptr_0x805b84c: equ $-B.code
..@0x805b84c: dd A.code+0x805817a
code_ptr_0x805b850: equ $-B.code
..@0x805b850: dd A.code+0x805812a
code_ptr_0x805b854: equ $-B.code
..@0x805b854: dd A.code+0x805812a
code_ptr_0x805b858: equ $-B.code
..@0x805b858: dd A.code+0x805812a
code_ptr_0x805b85c: equ $-B.code
..@0x805b85c: dd A.code+0x805812a
code_ptr_0x805b860: equ $-B.code
..@0x805b860: dd A.code+0x805812a
code_ptr_0x805b864: equ $-B.code
..@0x805b864: dd A.code+0x805812a
code_ptr_0x805b868: equ $-B.code
..@0x805b868: dd A.code+0x805812a
code_ptr_0x805b86c: equ $-B.code
..@0x805b86c: dd A.code+0x8058150
code_ptr_0x805b870: equ $-B.code
..@0x805b870: dd A.code+0x805812a
code_ptr_0x805b874: equ $-B.code
..@0x805b874: dd A.code+0x805812a
code_ptr_0x805b878: equ $-B.code
..@0x805b878: dd A.code+0x805812a
code_ptr_0x805b87c: equ $-B.code
..@0x805b87c: dd A.code+0x805812a
code_ptr_0x805b880: equ $-B.code
..@0x805b880: dd A.code+0x805812a
code_ptr_0x805b884: equ $-B.code
..@0x805b884: dd A.code+0x805812a
code_ptr_0x805b888: equ $-B.code
..@0x805b888: dd A.code+0x805812a
code_ptr_0x805b88c: equ $-B.code
..@0x805b88c: dd A.code+0x80580a6
..@0x805b890: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b8a0: db 0x10, 0x00, 0x00, 0x00, 0x11, 0x00, 0x00, 0x00, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b8b0: db 0x08, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00
..@0x805b8c0: db 0x0a, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
..@0x805b8d0: db 0x0c, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00
..@0x805b8e0: db 0x0e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b8f0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805b900: db 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
..@0x805b910: db 0x0f, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x7f, 0x00, 0x00, 0x00
..@0x805b920: db 0xff, 0x00, 0x00, 0x00, 0xff, 0x01, 0x00, 0x00, 0xff, 0x03, 0x00, 0x00, 0xff, 0x07, 0x00, 0x00
..@0x805b930: db 0xff, 0x0f, 0x00, 0x00, 0xff, 0x1f, 0x00, 0x00, 0xff, 0x3f, 0x00, 0x00, 0xff, 0x7f, 0x00, 0x00
..@0x805b940: db 0xff, 0xff, 0x00, 0x00, 0xff, 0xff, 0x01, 0x00, 0xff, 0xff, 0x03, 0x00, 0xff, 0xff, 0x07, 0x00
..@0x805b950: db 0xff, 0xff, 0x0f, 0x00, 0xff, 0xff, 0x1f, 0x00, 0xff, 0xff, 0x3f, 0x00, 0xff, 0xff, 0x7f, 0x00
..@0x805b960: db 0xff, 0xff, 0xff, 0x00, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0x03, 0xff, 0xff, 0xff, 0x07
..@0x805b970: db 0xff, 0xff, 0xff, 0x0f, 0xff, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0x7f
..@0x805b980: db 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00
..@0x805b990: db 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00
..@0x805b9a0: db 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00
..@0x805b9b0: db 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00
..@0x805b9c0: db 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00
..@0x805b9d0: db 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80, 0x00
..@0x805b9e0: db 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08
..@0x805b9f0: db 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x80
..@0x805ba00: db 0xe6, 0x09, 0x6a, 0x01, 0x0b, 0x15, 0x63, 0x01, 0xe9, 0x7a, 0x4e, 0x01, 0x2f, 0x06, 0x2d, 0x01
..@0x805ba10: db 0x00, 0x00, 0x00, 0x01, 0x4e, 0x23, 0xc9, 0x00, 0xd4, 0x8b, 0x8a, 0x00, 0x57, 0xa1, 0x46, 0x00
P.rodata.end:
times -(P.rodata.end-P.rodata)+(0x805ba20-0x805a76c) times 0 nop  ; Assert.
times +(P.rodata.end-P.rodata)-(0x805ba20-0x805a76c) times 0 nop  ; Assert.

%ifidn TARGET, x
X.gap6:      ;0x19a20..0x19f40  +0x00520    @0x805ba20...0x805cf40  memsize=infilesize+0x1000=0x1520, virtual memory gap
..@0x805ba20:
times +0x00520 db 0

X.ucdata:    ;0x19f40..0x1a1ac  +0x0026c    @0x805cf40...0x805d1ac
times -($-$$-B.data)+0x805cf40 times 0 nop  ; Assert.
times +($-$$-B.data)-0x805cf40 times 0 nop  ; Assert.
stdin: equ $-B.data  ; FILE*.
..@0x805cf40: dd filestruct_stdin
stdout: equ $-B.data  ; FILE*.
..@0x805cf44: dd filestruct_stdout
stderr: equ $-B.data  ; FILE*.
..@0x805cf48: dd filestruct_stderr
__stdin: equ $-B.data  ; FILE*. Unused by the program.
..@0x805cf4c: dd filestruct_stdin
__stdout: equ $-B.data  ; FILE*. Unused by the program.
..@0x805cf50: dd filestruct_stdout
_stdio_openlist: equ $-B.data  ; FILE*.
..@0x805cf54: dd filestruct_stdin  ; Head of linked list via .__nextopen pointers. Initial state: head == filestruct_stdin --> filestruct_stdout --> filestruct_stderr --> NULL. Seems to be unused by fclose(3).
_stdio_openlist_add_lock: equ $-B.data
..@0x805cf58: dd 0, 0, 0, 1, 0, 0
_stdio_openlist_del_lock: equ $-B.data
..@0x805cf70: dd 0, 0, 0, 1, 0, 0
_stdio_user_locking: equ $-B.data
..@0x805cf88: dd 2
..@0x805cf8c: times 0x14 db 0  ; Padding.
_stdio_streams: equ $-B.data
filestruct_stdin: equ $-B.data  ; struct __STDIO_FILE_STRUCT.
..@0x805cfa0: db 0x20, 0x01, 0x00, 0x00
filestruct_stdin.__filedes: equ $-B.data
..@0x805cfa4:   dd 0  ; STDIN_FILENO.
filestruct_stdin.__bufstart: equ $-B.data
..@0x805cfa8:   dd buf_stdin
filestruct_stdin.__bufend: equ $-B.data
..@0x805cfac:   dd buf_stdin.end
..@0x805cfb0:   db 0x60, 0xca, 0x87, 0x09, 0x60, 0xca, 0x87, 0x09, 0x60, 0xca, 0x87, 0x09, 0x60, 0xca, 0x87, 0x09
..@0x805cfc0:   dd filestruct_stdout  ; .__nextopen.
..@0x805cfc4:   db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805cfd0:   db 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805cfe0:   db 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
filestruct_stdout: equ $-B.data  ; struct __STDIO_FILE_STRUCT
..@0x805cff0: db 0x10, 0x01, 0x00, 0x00
filestruct_stdout.__filedes: equ $-B.data
..@0x805cff4:   dd 1  ; STDOUT_FILENO
filestruct_stdout.__bufstart: equ $-B.data
..@0x805cff8:   dd buf_stdout
filestruct_stdout.__bufend: equ $-B.data
..@0x805cffc:   dd buf_stdout+0x400  ; buf_stdout.end  ; Limited to 0x400 == 1024 bytes to match glibc 2.19 on TTY.
..@0x805d000:   db 0x60, 0xda, 0x87, 0x09, 0x60, 0xda, 0x87, 0x09, 0x60, 0xda, 0x87, 0x09, 0x60, 0xda, 0x87, 0x09
..@0x805d010:   dd filestruct_stderr  ; .__nextopen.
..@ox805d014:   db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805d020:   db 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805d030:   db 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
filestruct_stderr: equ $-B.data  ; struct __STDIO_FILE_STRUCT
..@0x805d040: db 0x10, 0x02, 0x00, 0x00
filestruct_stderr.__filedes: equ $-B.data
..@0x805d044:   dd 2  ; STDERR_FILENO.
filestruct_stderr.__bufstart: equ $-B.data
..@0x805d048:   dd 0  ; Unbuffered.
filestruct_stderr.__bufend: equ $-B.data
..@0x805d04c:   dd 0  ; Unbuffered.
..@0x805d050:   db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805d060:   dd 0  ; .__nextopen.
..@0x805d064:   db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805d070:   db 0x00, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805d080:   db 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
_stdio_streams.end: equ $-B.data
__malloc_lock: equ $-B.data
..@0x805d090: dd 0, 0, 0, 1, 0, 0
__mylock1: equ $-B.data
..@0x805d0a8: dd 0, 0, 0, 1, 0, 0
__mylock2: equ $-B.data
..@0x805d0c0: dd 0, 0, 0, 1, 0, 0
unsafe_state: equ $-B.data  ; 0x1c bytes.
..@0x805d0d8: dd 0x805d110, 0x805d104, 0x805d104, 3, 0x1f, 3, 0x805d180
..@0x805d0f4: times 0xc db 0
..@0x805d100: times 0x805d180-0x805d100 db 0  ; Padding.
__atexit_lock: equ $-B.data
..@0x805d180: dd 0, 0, 0, 1, 0, 0
__uclibc_progname: equ $-B.data
..@0x805d198: dd 0x8042565

X.gap7:      ;0x1a19c..0x1a1c4  +0x00028    @0x805d19c...0x805d1c4
..@0x805d19c:
times +0x00028 db 0
%endif  ; TARGET, x

$DT:  ; Symbolic constants for ELF DT_... (dynamic type).
.NULL equ 0
.NEEDED equ 1
.INIT equ 0xc
.FINI equ 0xd
.INIT_ARRAY equ 0x19
.INIT_ARRAYSZ equ 0x1b
.FINI_ARRAY equ 0x1a
.FINI_ARRAYSZ equ 0x1c
.HASH equ 4
.GNU_HASH equ 0x6ffffef5
.STRTAB equ 5
.SYMTAB equ 6
.STRSZ equ 0xa
.SYMENT equ 0xb
.DEBUG equ 0x15
.PLTGOT equ 3
.PLTRELSZ equ 2
.PLTREL equ 0x14
.JMPREL equ 0x17
.REL equ 0x11
.RELSZ equ 0x12
.RELENT equ 0x13  ; Size of each relocation entry (in bytes).
.VERNEED equ 0x6ffffffe
.VERNEEDNUM equ 0x6fffffff
.VERSYM equ 0x6ffffff0

%ifidn TARGET, l
L.gap11:  ; addr=0x805ba20 off=0x13a20 base=B.code
..@0x805ba20: times 0x805c000-0x805ba20 db 0  ; Padding.

L.dynamic:  ; addr=0x805d000 off=0x14000
_elf_dynamic: equ $-B.data  ; PT.DYNAMIC must be at a read-write location, otherwise it will segfault.
; https://refspecs.linuxbase.org/elf/gabi4+/ch5.dynamic.html explains that
; some of these are not required in an executable, but it indeed works on
; Linux glibc with $DT.GNU_HASH (and $DT.HASH) even if it's missing.
..@0x805d000: dd $DT.NEEDED,       dynstr_libm_so_6-_dynamic_strtab  ; Required.
              dd $DT.NEEDED,       dynstr_libc_so_6-_dynamic_strtab  ; Required.
              dd $DT.GNU_HASH,     _dynamic_gnu_hash  ; Keep it because without it libc.so.6 won't autoswitch stdout to line-buffered (on a TTY). Having _IO_stdin_used doesn't matter though.
              dd $DT.STRTAB,       _dynamic_strtab  ; Required.
              dd $DT.SYMTAB,       _dynamic_symtab  ; Required. How do we get the number of symbols.
              ;dd $DT.STRSZ,        _dynamic_strtab.end-_dynamic_strtab  ; It works without this.
              ;dd $DT.SYMENT,       0x10  ; It works without this. Size of a $DT.SYMTAB entry. The number of symbols seems to be te same as the number of strings at $DT.STRTAB (except for the first, empty string).
              dd $DT.PLTGOT,       _dynamic_pltgot  ; Required. It segfaults without this.
              dd $DT.PLTRELSZ,     _dynamic_jmprel.end-_dynamic_jmprel  ; Required. It segfaults without this.
              ;dd $DT.PLTREL,       $DT.REL  ; It works without this.
              dd $DT.JMPREL,       _dynamic_jmprel  ; Required. It segfaults without this.
              dd $DT.REL,          _dynamic_rel  ; Required. It segfaults without this.
              dd $DT.RELSZ,        _dynamic_rel.end-_dynamic_rel  ; Required. It segfaults without this.
              dd $DT.RELENT,       8  ; Required. It segfaults without this. Size of a relocation ($DT.REL) entry.
              dd $DT.VERNEED,      _dynamic_verneed  ; Required. It segfaults without this.
              ;dd $DT.VERNEEDNUM,   2  ; It works (and enforces versions) without this. Computing this is complicated, see https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-PDA/LSB-PDA.junk/symversion.html
              dd $DT.VERSYM,       _dynamic_versym  ; Required. It segfaults without this.
              dd $DT.NULL,         0  ; Required. Terminates the list. Value is always 0.
_elf_dynamic.end: equ $-B.data

L.got.plt:  ; addr=0x805d100 off=0x14100
_dynamic_pltgot: equ $-B.data  ; $DT.PLTGOT must be at a read-write location, otherwise it will segfault.
_GLOBAL_OFFSET_TABLE_: equ $-B.data
; Values below will be overwritten at load time by the dynamic linker /lib/ld-linux.so.2.
_GLOBAL_OFFSET_TABLE_special0: equ $-B.data
..@0x805d100: dd _elf_dynamic  ; Special entry 0.
_GLOBAL_OFFSET_TABLE_special1: equ $-B.data
..@0x805d104: dd 0  ; Special entry 1.
_GLOBAL_OFFSET_TABLE_special2@got: equ $-B.data
..@0x805d108: dd 0  ; Special entry 2.
; Functions below correspond to L.plt, but their order doesn't matter.
log@GLIBC_2.0@got: equ $-B.data
..@0x805d10c: dd log+6
read@GLIBC_2.0@got: equ $-B.data
..@0x805d110: dd read+6
fflush@GLIBC_2.0@got: equ $-B.data
..@0x805d118: dd fflush+6
memmove@GLIBC_2.0@got: equ $-B.data
..@0x805d11c: dd memmove+6
free@GLIBC_2.0@got: equ $-B.data
..@0x805d120: dd free+6
memcpy@GLIBC_2.0@got: equ $-B.data
..@0x805d124: dd memcpy+6
fgets@GLIBC_2.0@got: equ $-B.data
..@0x805d128: dd fgets+6
fclose@GLIBC_2.1@got: equ $-B.data
..@0x805d12c: dd fclose+6
time@GLIBC_2.0@got: equ $-B.data
..@0x805d130: dd time+6
gettimeofday@GLIBC_2.0@got: equ $-B.data
..@0x805d134: dd gettimeofday+6
stpcpy@GLIBC_2.0@got: equ $-B.data
..@0x805d138: dd stpcpy+6
fseek@GLIBC_2.0@got: equ $-B.data
..@0x805d13c: dd fseek+6
fwrite@GLIBC_2.0@got: equ $-B.data
..@0x805d140: dd fwrite+6
strcat@GLIBC_2.0@got: equ $-B.data
..@0x805d144: dd strcat+6
fread@GLIBC_2.0@got: equ $-B.data
..@0x805d148: dd fread+6
strcpy@GLIBC_2.0@got: equ $-B.data
..@0x805d14c: dd strcpy+6
realloc@GLIBC_2.0@got: equ $-B.data
..@0x805d150: dd realloc+6
malloc@GLIBC_2.0@got: equ $-B.data
..@0x805d154: dd malloc+6
exit@GLIBC_2.0@got: equ $-B.data
..@0x805d160: dd exit+6
srand@GLIBC_2.0@got: equ $-B.data
..@0x805d164: dd srand+6
strchr@GLIBC_2.0@got: equ $-B.data
..@0x805d168: dd strchr+6
strlen@GLIBC_2.0@got: equ $-B.data
..@0x805d16c: dd strlen+6
__libc_start_main@GLIBC_2.0@got: equ $-B.data
..@0x805d170: dd __libc_start_main+6
strcasecmp@GLIBC_2.0@got: equ $-B.data
..@0x805d174: dd strcasecmp+6
ftell@GLIBC_2.0@got: equ $-B.data
..@0x805d178: dd ftell+6
fopen@GLIBC_2.1@got: equ $-B.data
..@0x805d17c: dd fopen+6
memset@GLIBC_2.0@got: equ $-B.data
..@0x805d180: dd memset+6
fileno@GLIBC_2.0@got: equ $-B.data
..@0x805d184: dd fileno+6
strtod@GLIBC_2.0@got: equ $-B.data
..@0x805d188: dd strtod+6
fgetc@GLIBC_2.0@got: equ $-B.data
..@0x805d18c: dd fgetc+6
strncasecmp@GLIBC_2.0@got: equ $-B.data
..@0x805d190: dd strncasecmp+6
rand@GLIBC_2.0@got: equ $-B.data
..@0x805d194: dd rand+6
strtok@GLIBC_2.0@got: equ $-B.data
..@0x805d198: dd strtok+6
vfprintf@GLIBC_2.0@got: equ $-B.data
..@0x805d19c: dd vfprintf+6
strtol@GLIBC_2.0@got: equ $-B.data
..@0x805d1a0: dd strtol+6

L.gap12:
              times $$+0x805d1c4-$+B.data db 0  ; Padding (about 0x9c bytes).
%endif  ; TARGET, ;

%ifidn TARGET, d
D.gap16:  ; addr=0x805ba20 off=0x13a20
..@0x805ba20: times 0x805bd1e-0x805ba20 nop  ; Padding.
..@0x805bd1e: db 0xff, 0x25
..@0x805bd20: db 0x1c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x20, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x24, 0xc0, 0x05, 0x08
..@0x805bd30: db 0xff, 0x25, 0x28, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x2c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x30, 0xc0
..@0x805bd40: db 0x05, 0x08, 0xff, 0x25, 0x34, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x38, 0xc0, 0x05, 0x08, 0xff, 0x25
..@0x805bd50: db 0x3c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x40, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x44, 0xc0, 0x05, 0x08
..@0x805bd60: db 0xff, 0x25, 0x48, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x4c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x50, 0xc0
..@0x805bd70: db 0x05, 0x08, 0xff, 0x25, 0x54, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x58, 0xc0, 0x05, 0x08, 0xff, 0x25
..@0x805bd80: db 0x5c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x60, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x64, 0xc0, 0x05, 0x08
..@0x805bd90: db 0xff, 0x25, 0x68, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x6c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x70, 0xc0
..@0x805bda0: db 0x05, 0x08, 0xff, 0x25, 0x74, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x78, 0xc0, 0x05, 0x08, 0xff, 0x25
..@0x805bdb0: db 0x7c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x80, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x84, 0xc0, 0x05, 0x08
..@0x805bdc0: db 0xff, 0x25, 0x88, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x8c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x90, 0xc0
..@0x805bdd0: db 0x05, 0x08, 0xff, 0x25, 0x94, 0xc0, 0x05, 0x08, 0xff, 0x25, 0x98, 0xc0, 0x05, 0x08, 0xff, 0x25
..@0x805bde0: db 0x9c, 0xc0, 0x05, 0x08, 0xff, 0x25, 0xa0, 0xc0, 0x05, 0x08, 0xff, 0x25, 0xa4, 0xc0, 0x05, 0x08
..@0x805bdf0: db 0xff, 0x25, 0xa8, 0xc0, 0x05, 0x08, 0xff, 0x25, 0xac, 0xc0, 0x05, 0x08, 0x68, 0x1c, 0xc0, 0x05
..@0x805be00: db 0x08, 0xe9, 0xae, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x20, 0xc0, 0x05, 0x08, 0xe9, 0xa2, 0xce
..@0x805be10: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x24, 0xc0, 0x05, 0x08, 0xe9, 0x96, 0xce, 0xfe, 0xff, 0x00, 0x00
..@0x805be20: db 0x68, 0x28, 0xc0, 0x05, 0x08, 0xe9, 0x8a, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x2c, 0xc0, 0x05
..@0x805be30: db 0x08, 0xe9, 0x7e, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x30, 0xc0, 0x05, 0x08, 0xe9, 0x72, 0xce
..@0x805be40: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x34, 0xc0, 0x05, 0x08, 0xe9, 0x66, 0xce, 0xfe, 0xff, 0x00, 0x00
..@0x805be50: db 0x68, 0x38, 0xc0, 0x05, 0x08, 0xe9, 0x5a, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x3c, 0xc0, 0x05
..@0x805be60: db 0x08, 0xe9, 0x4e, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x40, 0xc0, 0x05, 0x08, 0xe9, 0x42, 0xce
..@0x805be70: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x44, 0xc0, 0x05, 0x08, 0xe9, 0x36, 0xce, 0xfe, 0xff, 0x00, 0x00
..@0x805be80: db 0x68, 0x48, 0xc0, 0x05, 0x08, 0xe9, 0x2a, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x4c, 0xc0, 0x05
..@0x805be90: db 0x08, 0xe9, 0x1e, 0xce, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x50, 0xc0, 0x05, 0x08, 0xe9, 0x12, 0xce
..@0x805bea0: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x54, 0xc0, 0x05, 0x08, 0xe9, 0x06, 0xce, 0xfe, 0xff, 0x00, 0x00
..@0x805beb0: db 0x68, 0x58, 0xc0, 0x05, 0x08, 0xe9, 0xfa, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x5c, 0xc0, 0x05
..@0x805bec0: db 0x08, 0xe9, 0xee, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x60, 0xc0, 0x05, 0x08, 0xe9, 0xe2, 0xcd
..@0x805bed0: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x64, 0xc0, 0x05, 0x08, 0xe9, 0xd6, 0xcd, 0xfe, 0xff, 0x00, 0x00
..@0x805bee0: db 0x68, 0x68, 0xc0, 0x05, 0x08, 0xe9, 0xca, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x6c, 0xc0, 0x05
..@0x805bef0: db 0x08, 0xe9, 0xbe, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x70, 0xc0, 0x05, 0x08, 0xe9, 0xb2, 0xcd
..@0x805bf00: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x74, 0xc0, 0x05, 0x08, 0xe9, 0xa6, 0xcd, 0xfe, 0xff, 0x00, 0x00
..@0x805bf10: db 0x68, 0x78, 0xc0, 0x05, 0x08, 0xe9, 0x9a, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x7c, 0xc0, 0x05
..@0x805bf20: db 0x08, 0xe9, 0x8e, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x80, 0xc0, 0x05, 0x08, 0xe9, 0x82, 0xcd
..@0x805bf30: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x84, 0xc0, 0x05, 0x08, 0xe9, 0x76, 0xcd, 0xfe, 0xff, 0x00, 0x00
..@0x805bf40: db 0x68, 0x88, 0xc0, 0x05, 0x08, 0xe9, 0x6a, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x8c, 0xc0, 0x05
..@0x805bf50: db 0x08, 0xe9, 0x5e, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x90, 0xc0, 0x05, 0x08, 0xe9, 0x52, 0xcd
..@0x805bf60: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0x94, 0xc0, 0x05, 0x08, 0xe9, 0x46, 0xcd, 0xfe, 0xff, 0x00, 0x00
..@0x805bf70: db 0x68, 0x98, 0xc0, 0x05, 0x08, 0xe9, 0x3a, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0x9c, 0xc0, 0x05
..@0x805bf80: db 0x08, 0xe9, 0x2e, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0xa0, 0xc0, 0x05, 0x08, 0xe9, 0x22, 0xcd
..@0x805bf90: db 0xfe, 0xff, 0x00, 0x00, 0x68, 0xa4, 0xc0, 0x05, 0x08, 0xe9, 0x16, 0xcd, 0xfe, 0xff, 0x00, 0x00
..@0x805bfa0: db 0x68, 0xa8, 0xc0, 0x05, 0x08, 0xe9, 0x0a, 0xcd, 0xfe, 0xff, 0x00, 0x00, 0x68, 0xac, 0xc0, 0x05
..@0x805bfb0: db 0x08, 0xe9, 0xfe, 0xcc, 0xfe, 0xff, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00
..@0x805bfc0: db 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00
..@0x805bfd0: db 0x02, 0x00, 0x00, 0x00, 0x74, 0x0c, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00
..@0x805bfe0: db 0x1e, 0x3d, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
..@0x805bff0: db 0x0c, 0x00, 0x01, 0x00, 0x10, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805c000: db 0x00, 0x10, 0xe0, 0x8f, 0x08, 0x10, 0xe0, 0x8f, 0x00, 0x80, 0x04, 0x08, 0xf0, 0xd1, 0x05, 0x08
..@0x805c010: db 0xf4, 0xd1, 0x05, 0x08, 0xf8, 0xd1, 0x05, 0x08, 0xfc, 0xd1, 0x05, 0x08, 0xfc, 0xbd, 0x05, 0x08
..@0x805c020: db 0x08, 0xbe, 0x05, 0x08, 0x14, 0xbe, 0x05, 0x08, 0x20, 0xbe, 0x05, 0x08, 0x2c, 0xbe, 0x05, 0x08
..@0x805c030: db 0x38, 0xbe, 0x05, 0x08, 0x44, 0xbe, 0x05, 0x08, 0x50, 0xbe, 0x05, 0x08, 0x5c, 0xbe, 0x05, 0x08
..@0x805c040: db 0x68, 0xbe, 0x05, 0x08, 0x74, 0xbe, 0x05, 0x08, 0x80, 0xbe, 0x05, 0x08, 0x8c, 0xbe, 0x05, 0x08
..@0x805c050: db 0x98, 0xbe, 0x05, 0x08, 0xa4, 0xbe, 0x05, 0x08, 0xb0, 0xbe, 0x05, 0x08, 0xbc, 0xbe, 0x05, 0x08
..@0x805c060: db 0xc8, 0xbe, 0x05, 0x08, 0xd4, 0xbe, 0x05, 0x08, 0xe0, 0xbe, 0x05, 0x08, 0xec, 0xbe, 0x05, 0x08
..@0x805c070: db 0xf8, 0xbe, 0x05, 0x08, 0x04, 0xbf, 0x05, 0x08, 0x10, 0xbf, 0x05, 0x08, 0x1c, 0xbf, 0x05, 0x08
..@0x805c080: db 0x28, 0xbf, 0x05, 0x08, 0x34, 0xbf, 0x05, 0x08, 0x40, 0xbf, 0x05, 0x08, 0x4c, 0xbf, 0x05, 0x08
..@0x805c090: db 0x58, 0xbf, 0x05, 0x08, 0x64, 0xbf, 0x05, 0x08, 0x70, 0xbf, 0x05, 0x08, 0x7c, 0xbf, 0x05, 0x08
..@0x805c0a0: db 0x88, 0xbf, 0x05, 0x08, 0x94, 0xbf, 0x05, 0x08, 0xa0, 0xbf, 0x05, 0x08, 0xac, 0xbf, 0x05, 0x08
..@0x805c0b0: db 0x00, 0x80, 0x04, 0x08
..@0x805c0b4: times 0x805d1c4-0x805c0b4 db 1  ; Padding.
;..@0x805d1c4:
%endif  ; TARGET, d

%ifidn TARGET, ls
LS.eh_frame_hdr:  ; addr=0x805ba20 off=0x13a20
; .eh_frame has helper tables for stack unwinding (i.e. with
; `gcc -fomit-frame-pointer') and debugging in DWARF format. It's a
; compressed stream of CIE and FDE entries.
;
; .eh_frame_hdr is a binary search inde table of .eh_frame.
;
; More info about .eh_frame_hdr and .eh_frame:
; https://maskray.me/blog/2020-11-08-stack-unwinding
_elf_eh_frame_hdr: equ $-B.code
..@0x805ba20: db 0x01, 0x1b, 0x03, 0x3b, 0x08, 0x02, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x20, 0xd0, 0xfe, 0xff
..@0x805ba30: db 0x24, 0x02, 0x00, 0x00, 0xf0, 0xd2, 0xfe, 0xff, 0x40, 0x04, 0x00, 0x00, 0x57, 0xdc, 0xfe, 0xff
..@0x805ba40: db 0x48, 0x07, 0x00, 0x00, 0xa0, 0xdf, 0xfe, 0xff, 0xd4, 0x02, 0x00, 0x00, 0x40, 0xfc, 0xfe, 0xff
..@0x805ba50: db 0x48, 0x02, 0x00, 0x00, 0x60, 0xfc, 0xfe, 0xff, 0x5c, 0x02, 0x00, 0x00, 0x90, 0xfc, 0xfe, 0xff
..@0x805ba60: db 0x74, 0x02, 0x00, 0x00, 0x00, 0xfd, 0xfe, 0xff, 0x94, 0x02, 0x00, 0x00, 0x70, 0xfd, 0xfe, 0xff
..@0x805ba70: db 0xb8, 0x02, 0x00, 0x00, 0xb0, 0xfe, 0xfe, 0xff, 0x04, 0x03, 0x00, 0x00, 0xc0, 0xfe, 0xfe, 0xff
..@0x805ba80: db 0x18, 0x03, 0x00, 0x00, 0xd0, 0xfe, 0xfe, 0xff, 0x2c, 0x03, 0x00, 0x00, 0x30, 0xff, 0xfe, 0xff
..@0x805ba90: db 0x68, 0x03, 0x00, 0x00, 0xf0, 0xff, 0xfe, 0xff, 0xa4, 0x03, 0x00, 0x00, 0xc0, 0x00, 0xff, 0xff
..@0x805baa0: db 0xe4, 0x03, 0x00, 0x00, 0x60, 0x01, 0xff, 0xff, 0x24, 0x04, 0x00, 0x00, 0x80, 0x02, 0xff, 0xff
..@0x805bab0: db 0x80, 0x04, 0x00, 0x00, 0xa0, 0x02, 0xff, 0xff, 0x94, 0x04, 0x00, 0x00, 0xf0, 0x02, 0xff, 0xff
..@0x805bac0: db 0xa8, 0x04, 0x00, 0x00, 0x10, 0x03, 0xff, 0xff, 0xbc, 0x04, 0x00, 0x00, 0x80, 0x07, 0xff, 0xff
..@0x805bad0: db 0x14, 0x05, 0x00, 0x00, 0x80, 0x0d, 0xff, 0xff, 0x58, 0x05, 0x00, 0x00, 0xd0, 0x0e, 0xff, 0xff
..@0x805bae0: db 0xa0, 0x05, 0x00, 0x00, 0xb0, 0x1c, 0xff, 0xff, 0xe4, 0x05, 0x00, 0x00, 0x10, 0x1d, 0xff, 0xff
..@0x805baf0: db 0x08, 0x06, 0x00, 0x00, 0x80, 0x1f, 0xff, 0xff, 0x48, 0x06, 0x00, 0x00, 0xe0, 0x23, 0xff, 0xff
..@0x805bb00: db 0x80, 0x06, 0x00, 0x00, 0x30, 0x27, 0xff, 0xff, 0xb8, 0x06, 0x00, 0x00, 0x50, 0x2c, 0xff, 0xff
..@0x805bb10: db 0x10, 0x07, 0x00, 0x00, 0x90, 0x2e, 0xff, 0xff, 0x88, 0x07, 0x00, 0x00, 0xc0, 0x31, 0xff, 0xff
..@0x805bb20: db 0xe0, 0x07, 0x00, 0x00, 0x00, 0x32, 0xff, 0xff, 0xfc, 0x07, 0x00, 0x00, 0x40, 0x33, 0xff, 0xff
..@0x805bb30: db 0x34, 0x08, 0x00, 0x00, 0xe0, 0x68, 0xff, 0xff, 0x78, 0x08, 0x00, 0x00, 0x10, 0x6a, 0xff, 0xff
..@0x805bb40: db 0xb8, 0x08, 0x00, 0x00, 0xc0, 0x6a, 0xff, 0xff, 0xf8, 0x08, 0x00, 0x00, 0x50, 0x6b, 0xff, 0xff
..@0x805bb50: db 0x44, 0x09, 0x00, 0x00, 0x90, 0x6d, 0xff, 0xff, 0x84, 0x09, 0x00, 0x00, 0xb0, 0x72, 0xff, 0xff
..@0x805bb60: db 0xc4, 0x09, 0x00, 0x00, 0xd0, 0x73, 0xff, 0xff, 0xfc, 0x09, 0x00, 0x00, 0x30, 0x74, 0xff, 0xff
..@0x805bb70: db 0x20, 0x0a, 0x00, 0x00, 0xb0, 0x77, 0xff, 0xff, 0x60, 0x0a, 0x00, 0x00, 0xa0, 0x7f, 0xff, 0xff
..@0x805bb80: db 0xa0, 0x0a, 0x00, 0x00, 0x80, 0x80, 0xff, 0xff, 0xc8, 0x0a, 0x00, 0x00, 0x80, 0x98, 0xff, 0xff
..@0x805bb90: db 0x0c, 0x0b, 0x00, 0x00, 0x70, 0x9a, 0xff, 0xff, 0x3c, 0x0b, 0x00, 0x00, 0x40, 0x9b, 0xff, 0xff
..@0x805bba0: db 0xa4, 0x0b, 0x00, 0x00, 0xf0, 0xa1, 0xff, 0xff, 0x00, 0x0c, 0x00, 0x00, 0x60, 0xa2, 0xff, 0xff
..@0x805bbb0: db 0x3c, 0x0c, 0x00, 0x00, 0x00, 0xa6, 0xff, 0xff, 0x68, 0x0c, 0x00, 0x00, 0x20, 0xcc, 0xff, 0xff
..@0x805bbc0: db 0xf0, 0x0c, 0x00, 0x00, 0x60, 0xcc, 0xff, 0xff, 0x08, 0x0d, 0x00, 0x00, 0x70, 0xd5, 0xff, 0xff
..@0x805bbd0: db 0x48, 0x0d, 0x00, 0x00, 0xf0, 0xd5, 0xff, 0xff, 0x64, 0x0d, 0x00, 0x00, 0xa0, 0xda, 0xff, 0xff
..@0x805bbe0: db 0xbc, 0x0d, 0x00, 0x00, 0x30, 0xdb, 0xff, 0xff, 0xe0, 0x0d, 0x00, 0x00, 0xd0, 0xde, 0xff, 0xff
..@0x805bbf0: db 0x20, 0x0e, 0x00, 0x00, 0xa0, 0xe9, 0xff, 0xff, 0x4c, 0x0e, 0x00, 0x00, 0xc0, 0xe9, 0xff, 0xff
..@0x805bc00: db 0x60, 0x0e, 0x00, 0x00, 0x50, 0xea, 0xff, 0xff, 0x74, 0x0e, 0x00, 0x00, 0x70, 0xea, 0xff, 0xff
..@0x805bc10: db 0x88, 0x0e, 0x00, 0x00, 0xa0, 0xea, 0xff, 0xff, 0xa4, 0x0e, 0x00, 0x00, 0xd0, 0xea, 0xff, 0xff
..@0x805bc20: db 0xb8, 0x0e, 0x00, 0x00, 0x00, 0xeb, 0xff, 0xff, 0xd0, 0x0e, 0x00, 0x00
_elf_eh_frame_hdr.end: equ $-B.code

LS.eh_frame:  ; addr=0x805bc2c off=0x13c2c
..@0x805bc2c: db 0x14, 0x00, 0x00, 0x00
..@0x805bc30: db 0x00, 0x00, 0x00, 0x00, 0x01, 0x7a, 0x52, 0x00, 0x01, 0x7c, 0x08, 0x01, 0x1b, 0x0c, 0x04, 0x04
..@0x805bc40: db 0x88, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x1c, 0x00, 0x00, 0x00, 0xf4, 0xcd, 0xfe, 0xff
..@0x805bc50: db 0xd0, 0x02, 0x00, 0x00, 0x00, 0x0e, 0x08, 0x46, 0x0e, 0x0c, 0x4a, 0x0f, 0x0b, 0x74, 0x04, 0x78
..@0x805bc60: db 0x00, 0x3f, 0x1a, 0x3b, 0x2a, 0x32, 0x24, 0x22, 0x10, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00
..@0x805bc70: db 0xf0, 0xf9, 0xfe, 0xff, 0x18, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00
..@0x805bc80: db 0x54, 0x00, 0x00, 0x00, 0xfc, 0xf9, 0xfe, 0xff, 0x2c, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x0e, 0x20
..@0x805bc90: db 0x5b, 0x0e, 0x04, 0x00, 0x1c, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x14, 0xfa, 0xfe, 0xff
..@0x805bca0: db 0x68, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x20, 0x4a, 0x0a, 0x0e, 0x04, 0x43, 0x0b, 0x02, 0x57
..@0x805bcb0: db 0x0e, 0x04, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x8c, 0x00, 0x00, 0x00, 0x64, 0xfa, 0xfe, 0xff
..@0x805bcc0: db 0x6e, 0x00, 0x00, 0x00, 0x00, 0x59, 0x0e, 0x08, 0x83, 0x02, 0x46, 0x0e, 0xb0, 0x01, 0x02, 0x4d
..@0x805bcd0: db 0x0e, 0x08, 0x41, 0xc3, 0x0e, 0x04, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0xb0, 0x00, 0x00, 0x00
..@0x805bce0: db 0xb0, 0xfa, 0xfe, 0xff, 0x3b, 0x01, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x20, 0x03, 0x37, 0x01, 0x0e
..@0x805bcf0: db 0x04, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00, 0xcc, 0x00, 0x00, 0x00, 0xc4, 0xdc, 0xfe, 0xff
..@0x805bd00: db 0xb0, 0x1b, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x47, 0x0d, 0x05, 0x4c, 0x87, 0x03
..@0x805bd10: db 0x86, 0x04, 0x83, 0x05, 0x03, 0x35, 0x0f, 0x0a, 0xc3, 0x41, 0xc6, 0x41, 0xc7, 0x41, 0xc5, 0x0c
..@0x805bd20: db 0x04, 0x04, 0x44, 0x0b, 0x10, 0x00, 0x00, 0x00, 0xfc, 0x00, 0x00, 0x00, 0xa4, 0xfb, 0xfe, 0xff
..@0x805bd30: db 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x10, 0x01, 0x00, 0x00
..@0x805bd40: db 0xa0, 0xfb, 0xfe, 0xff, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00
..@0x805bd50: db 0x24, 0x01, 0x00, 0x00, 0x9c, 0xfb, 0xfe, 0xff, 0x53, 0x00, 0x00, 0x00, 0x00, 0x45, 0x0e, 0x08
..@0x805bd60: db 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x43, 0x0e, 0x14, 0x83
..@0x805bd70: db 0x05, 0x43, 0x0e, 0x18, 0x02, 0x40, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c
..@0x805bd80: db 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x38, 0x00, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00
..@0x805bd90: db 0xc0, 0xfb, 0xfe, 0xff, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805bda0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x20
..@0x805bdb0: db 0x02, 0xb0, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08
..@0x805bdc0: db 0x41, 0xc5, 0x0e, 0x04, 0x3c, 0x00, 0x00, 0x00, 0x9c, 0x01, 0x00, 0x00, 0x44, 0xfc, 0xfe, 0xff
..@0x805bdd0: db 0xcf, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805bde0: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x18, 0x02, 0xbc, 0x0a, 0x0e
..@0x805bdf0: db 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e
..@0x805be00: db 0x04, 0x41, 0x0b, 0x00, 0x3c, 0x00, 0x00, 0x00, 0xdc, 0x01, 0x00, 0x00, 0xd4, 0xfc, 0xfe, 0xff
..@0x805be10: db 0x9c, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x43, 0x0e, 0x0c, 0x87, 0x03, 0x43
..@0x805be20: db 0x0e, 0x10, 0x86, 0x04, 0x43, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x94, 0x01, 0x02, 0x8a, 0x0e
..@0x805be30: db 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e
..@0x805be40: db 0x04, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x1c, 0x02, 0x00, 0x00, 0x34, 0xfd, 0xfe, 0xff
..@0x805be50: db 0x1f, 0x01, 0x00, 0x00, 0x00, 0x67, 0x0e, 0x08, 0x83, 0x02, 0x02, 0xe9, 0xc3, 0x0e, 0x04, 0x00
..@0x805be60: db 0x3c, 0x00, 0x00, 0x00, 0x38, 0x02, 0x00, 0x00, 0xa8, 0xce, 0xfe, 0xff, 0x67, 0x09, 0x00, 0x00
..@0x805be70: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04
..@0x805be80: db 0x41, 0x0e, 0x14, 0x83, 0x05, 0x45, 0x0e, 0x70, 0x03, 0x59, 0x09, 0x0e, 0x14, 0x41, 0xc3, 0x0e
..@0x805be90: db 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x00, 0x00, 0x00
..@0x805bea0: db 0x10, 0x00, 0x00, 0x00, 0x78, 0x02, 0x00, 0x00, 0xf8, 0xfd, 0xfe, 0xff, 0x14, 0x00, 0x00, 0x00
..@0x805beb0: db 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x8c, 0x02, 0x00, 0x00, 0x04, 0xfe, 0xfe, 0xff
..@0x805bec0: db 0x48, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0xa0, 0x02, 0x00, 0x00
..@0x805bed0: db 0x40, 0xfe, 0xfe, 0xff, 0x1b, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00
..@0x805bee0: db 0xb4, 0x02, 0x00, 0x00, 0x4c, 0xfe, 0xfe, 0xff, 0x63, 0x04, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08
..@0x805bef0: db 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83
..@0x805bf00: db 0x05, 0x43, 0x0e, 0x60, 0x03, 0xbc, 0x03, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6
..@0x805bf10: db 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x02, 0x58, 0x0a, 0x0e
..@0x805bf20: db 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e
..@0x805bf30: db 0x04, 0x41, 0x0b, 0x00, 0x40, 0x00, 0x00, 0x00, 0x0c, 0x03, 0x00, 0x00, 0x64, 0x02, 0xff, 0xff
..@0x805bf40: db 0xf9, 0x05, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805bf50: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x48, 0x0e, 0xe0, 0x01, 0x03, 0xa3, 0x02
..@0x805bf60: db 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41
..@0x805bf70: db 0xc5, 0x0e, 0x04, 0x45, 0x0b, 0x00, 0x00, 0x00, 0x44, 0x00, 0x00, 0x00, 0x50, 0x03, 0x00, 0x00
..@0x805bf80: db 0x20, 0x08, 0xff, 0xff, 0x4f, 0x01, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x87, 0x02, 0x41, 0x0e
..@0x805bf90: db 0x0c, 0x86, 0x03, 0x41, 0x0e, 0x10, 0x83, 0x04, 0x43, 0x0e, 0x20, 0x02, 0xfa, 0x0a, 0x0e, 0x10
..@0x805bfa0: db 0x41, 0xc3, 0x0e, 0x0c, 0x41, 0xc6, 0x0e, 0x08, 0x41, 0xc7, 0x0e, 0x04, 0x41, 0x0b, 0x6c, 0x0a
..@0x805bfb0: db 0x0e, 0x10, 0x47, 0xc3, 0x0e, 0x0c, 0x46, 0xc6, 0x0e, 0x08, 0x41, 0xc7, 0x0e, 0x04, 0x45, 0x0b
..@0x805bfc0: db 0x40, 0x00, 0x00, 0x00, 0x98, 0x03, 0x00, 0x00, 0x28, 0x09, 0xff, 0xff, 0xd2, 0x0d, 0x00, 0x00
..@0x805bfd0: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04
..@0x805bfe0: db 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x90, 0x01, 0x03, 0x14, 0x03, 0x0a, 0x0e, 0x14, 0x41
..@0x805bff0: db 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41
..@0x805c000: db 0x0b, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0xdc, 0x03, 0x00, 0x00, 0xc4, 0x16, 0xff, 0xff
..@0x805c010: db 0x56, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x83, 0x02, 0x43, 0x0e, 0x20, 0x02, 0x50, 0x0e
..@0x805c020: db 0x08, 0x41, 0xc3, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00
..@0x805c030: db 0x00, 0x17, 0xff, 0xff, 0x70, 0x02, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x45, 0x0e
..@0x805c040: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x40
..@0x805c050: db 0x03, 0xc3, 0x01, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7
..@0x805c060: db 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x46, 0x0b, 0x34, 0x00, 0x00, 0x00, 0x40, 0x04, 0x00, 0x00
..@0x805c070: db 0x30, 0x19, 0xff, 0xff, 0x5e, 0x04, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x50, 0x4a, 0x83, 0x05, 0x4e
..@0x805c080: db 0x86, 0x04, 0x87, 0x03, 0x85, 0x02, 0x03, 0x5d, 0x01, 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04
..@0x805c090: db 0x48, 0x0b, 0x02, 0x5b, 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x45, 0x0b, 0x00, 0x00, 0x00
..@0x805c0a0: db 0x34, 0x00, 0x00, 0x00, 0x78, 0x04, 0x00, 0x00, 0x58, 0x1d, 0xff, 0xff, 0x4b, 0x03, 0x00, 0x00
..@0x805c0b0: db 0x00, 0x43, 0x0e, 0x40, 0x4a, 0x83, 0x05, 0x4e, 0x86, 0x04, 0x87, 0x03, 0x85, 0x02, 0x03, 0xd3
..@0x805c0c0: db 0x01, 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x42, 0x0b, 0x02, 0x5b, 0x0a, 0xc5, 0xc7, 0xc6
..@0x805c0d0: db 0xc3, 0x0e, 0x04, 0x45, 0x0b, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0xb0, 0x04, 0x00, 0x00
..@0x805c0e0: db 0x70, 0x20, 0xff, 0xff, 0x20, 0x05, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c0f0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x45, 0x0e, 0x50
..@0x805c100: db 0x03, 0xc5, 0x02, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7
..@0x805c110: db 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x46, 0x0b, 0x02, 0x53, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e
..@0x805c120: db 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x49, 0x0b, 0x00
..@0x805c130: db 0x34, 0x00, 0x00, 0x00, 0x08, 0x05, 0x00, 0x00, 0x38, 0x25, 0xff, 0xff, 0x3d, 0x02, 0x00, 0x00
..@0x805c140: db 0x00, 0x43, 0x0e, 0x40, 0x44, 0x83, 0x05, 0x53, 0x86, 0x04, 0x87, 0x03, 0x85, 0x02, 0x03, 0x2b
..@0x805c150: db 0x01, 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x4b, 0x0b, 0x02, 0x5b, 0x0a, 0xc5, 0xc7, 0xc6
..@0x805c160: db 0xc3, 0x0e, 0x04, 0x45, 0x0b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x40, 0x05, 0x00, 0x00
..@0x805c170: db 0x07, 0xd5, 0xfe, 0xff, 0x3b, 0x03, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x43, 0x0e
..@0x805c180: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x43, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x40
..@0x805c190: db 0x03, 0x29, 0x03, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e
..@0x805c1a0: db 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x54, 0x00, 0x00, 0x00, 0x80, 0x05, 0x00, 0x00
..@0x805c1b0: db 0x00, 0x27, 0xff, 0xff, 0x2e, 0x03, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c1c0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x45, 0x0e, 0x14, 0x83, 0x05, 0x4a, 0x0e, 0x90
..@0x805c1d0: db 0x01, 0x03, 0xde, 0x02, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41
..@0x805c1e0: db 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x5b, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e
..@0x805c1f0: db 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x00
..@0x805c200: db 0x18, 0x00, 0x00, 0x00, 0xd8, 0x05, 0x00, 0x00, 0xd8, 0x29, 0xff, 0xff, 0x37, 0x00, 0x00, 0x00
..@0x805c210: db 0x00, 0x46, 0x0e, 0x08, 0x87, 0x02, 0x70, 0xc7, 0x0e, 0x04, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00
..@0x805c220: db 0xf4, 0x05, 0x00, 0x00, 0xfc, 0x29, 0xff, 0xff, 0x3e, 0x01, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08
..@0x805c230: db 0x87, 0x02, 0x41, 0x0e, 0x0c, 0x86, 0x03, 0x41, 0x0e, 0x10, 0x83, 0x04, 0x43, 0x0e, 0x40, 0x02
..@0x805c240: db 0xed, 0x0a, 0x0e, 0x10, 0x41, 0xc3, 0x0e, 0x0c, 0x41, 0xc6, 0x0e, 0x08, 0x41, 0xc7, 0x0e, 0x04
..@0x805c250: db 0x4a, 0x0b, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00, 0x2c, 0x06, 0x00, 0x00, 0x04, 0x2b, 0xff, 0xff
..@0x805c260: db 0x95, 0x35, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x46, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805c270: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0xc0, 0x01, 0x03, 0xb4, 0x02
..@0x805c280: db 0x0a, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41
..@0x805c290: db 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x70, 0x06, 0x00, 0x00
..@0x805c2a0: db 0x60, 0x60, 0xff, 0xff, 0x22, 0x01, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c2b0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x38
..@0x805c2c0: db 0x03, 0x12, 0x01, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7
..@0x805c2d0: db 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x3c, 0x00, 0x00, 0x00, 0xb0, 0x06, 0x00, 0x00
..@0x805c2e0: db 0x50, 0x61, 0xff, 0xff, 0xa3, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c2f0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x94
..@0x805c300: db 0x01, 0x02, 0x97, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e
..@0x805c310: db 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x00, 0x00, 0x00, 0x48, 0x00, 0x00, 0x00, 0xf0, 0x06, 0x00, 0x00
..@0x805c320: db 0xc0, 0x61, 0xff, 0xff, 0x89, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x44, 0x0e
..@0x805c330: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x4a, 0x0e, 0x14, 0x83, 0x05, 0x02, 0x44, 0x0a
..@0x805c340: db 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x49
..@0x805c350: db 0x0b, 0x65, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e
..@0x805c360: db 0x04, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x3c, 0x07, 0x00, 0x00, 0x04, 0x62, 0xff, 0xff
..@0x805c370: db 0x3a, 0x02, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805c380: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x34, 0x03, 0x2e, 0x02, 0x0e
..@0x805c390: db 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e
..@0x805c3a0: db 0x04, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x7c, 0x07, 0x00, 0x00, 0x04, 0x64, 0xff, 0xff
..@0x805c3b0: db 0x1d, 0x05, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805c3c0: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x94, 0x01, 0x03, 0x11, 0x05
..@0x805c3d0: db 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5
..@0x805c3e0: db 0x0e, 0x04, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0xbc, 0x07, 0x00, 0x00, 0xe4, 0x68, 0xff, 0xff
..@0x805c3f0: db 0x13, 0x01, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x83, 0x02, 0x43, 0x0e, 0x20, 0x7b, 0x0a, 0x0e
..@0x805c400: db 0x08, 0x41, 0xc3, 0x0e, 0x04, 0x48, 0x0b, 0x02, 0x58, 0x0a, 0x0e, 0x08, 0x41, 0xc3, 0x0e, 0x04
..@0x805c410: db 0x47, 0x0b, 0x02, 0x69, 0x0e, 0x08, 0x41, 0xc3, 0x0e, 0x04, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00
..@0x805c420: db 0xf4, 0x07, 0x00, 0x00, 0xcc, 0x69, 0xff, 0xff, 0x57, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x20
..@0x805c430: db 0x44, 0x83, 0x04, 0x4a, 0x86, 0x03, 0x4a, 0x87, 0x02, 0x7b, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x00
..@0x805c440: db 0x3c, 0x00, 0x00, 0x00, 0x18, 0x08, 0x00, 0x00, 0x08, 0x6a, 0xff, 0xff, 0x76, 0x03, 0x00, 0x00
..@0x805c450: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x46, 0x0e, 0x10, 0x86, 0x04
..@0x805c460: db 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x50, 0x03, 0x4b, 0x02, 0x0a, 0x0e, 0x14, 0x43, 0xc3
..@0x805c470: db 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x43, 0x0b
..@0x805c480: db 0x3c, 0x00, 0x00, 0x00, 0x58, 0x08, 0x00, 0x00, 0x48, 0x6d, 0xff, 0xff, 0xea, 0x07, 0x00, 0x00
..@0x805c490: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04
..@0x805c4a0: db 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x50, 0x03, 0x66, 0x05, 0x0a, 0x0e, 0x14, 0x41, 0xc3
..@0x805c4b0: db 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x47, 0x0b
..@0x805c4c0: db 0x24, 0x00, 0x00, 0x00, 0x98, 0x08, 0x00, 0x00, 0xf8, 0x74, 0xff, 0xff, 0xdc, 0x00, 0x00, 0x00
..@0x805c4d0: db 0x00, 0x43, 0x0e, 0x20, 0x44, 0x87, 0x02, 0x4a, 0x86, 0x03, 0x46, 0x83, 0x04, 0x02, 0x5b, 0x0a
..@0x805c4e0: db 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x46, 0x0b, 0x00, 0x40, 0x00, 0x00, 0x00, 0xc0, 0x08, 0x00, 0x00
..@0x805c4f0: db 0xb0, 0x75, 0xff, 0xff, 0xf3, 0x17, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c500: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0x80
..@0x805c510: db 0x04, 0x03, 0x9d, 0x03, 0x0a, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41
..@0x805c520: db 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00
..@0x805c530: db 0x04, 0x09, 0x00, 0x00, 0x6c, 0x8d, 0xff, 0xff, 0xe5, 0x01, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08
..@0x805c540: db 0x86, 0x02, 0x45, 0x0e, 0x0c, 0x83, 0x03, 0x4a, 0x0e, 0x2c, 0x03, 0x81, 0x01, 0x0a, 0x0e, 0x0c
..@0x805c550: db 0x41, 0xc3, 0x0e, 0x08, 0x41, 0xc6, 0x0e, 0x04, 0x41, 0x0b, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00
..@0x805c560: db 0x34, 0x09, 0x00, 0x00, 0x2c, 0x8f, 0xff, 0xff, 0xca, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08
..@0x805c570: db 0x85, 0x02, 0x46, 0x0e, 0x0c, 0x87, 0x03, 0x43, 0x0e, 0x10, 0x86, 0x04, 0x44, 0x0e, 0x14, 0x83
..@0x805c580: db 0x05, 0x43, 0x0e, 0x30, 0x02, 0x99, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e
..@0x805c590: db 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x42, 0x0b, 0x43, 0x0a, 0x0e, 0x14, 0x46
..@0x805c5a0: db 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x44
..@0x805c5b0: db 0x0b, 0x43, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08
..@0x805c5c0: db 0x41, 0xc5, 0x0e, 0x04, 0x58, 0x00, 0x00, 0x00, 0x9c, 0x09, 0x00, 0x00, 0x94, 0x8f, 0xff, 0xff
..@0x805c5d0: db 0xab, 0x06, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805c5e0: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0xf0, 0x09, 0x03, 0x26, 0x01
..@0x805c5f0: db 0x0a, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41
..@0x805c600: db 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x03, 0x4f, 0x04, 0x0a, 0x0e, 0x14, 0x46, 0xc3, 0x0e, 0x10, 0x41
..@0x805c610: db 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x00, 0x00, 0x00
..@0x805c620: db 0x38, 0x00, 0x00, 0x00, 0xf8, 0x09, 0x00, 0x00, 0xe8, 0x95, 0xff, 0xff, 0x6a, 0x00, 0x00, 0x00
..@0x805c630: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x43, 0x0e, 0x0c, 0x87, 0x03, 0x43, 0x0e, 0x10, 0x86, 0x04
..@0x805c640: db 0x43, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x30, 0x02, 0x58, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10
..@0x805c650: db 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x28, 0x00, 0x00, 0x00
..@0x805c660: db 0x34, 0x0a, 0x00, 0x00, 0x1c, 0x96, 0xff, 0xff, 0x95, 0x03, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x14
..@0x805c670: db 0x4b, 0x83, 0x05, 0x86, 0x04, 0x50, 0x87, 0x03, 0x85, 0x02, 0x02, 0x64, 0x0a, 0xc5, 0xc7, 0xc6
..@0x805c680: db 0xc3, 0x0e, 0x04, 0x46, 0x0b, 0x00, 0x00, 0x00, 0x84, 0x00, 0x00, 0x00, 0x60, 0x0a, 0x00, 0x00
..@0x805c690: db 0x90, 0x99, 0xff, 0xff, 0x20, 0x26, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c6a0: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0xb0
..@0x805c6b0: db 0x01, 0x03, 0xa7, 0x03, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41
..@0x805c6c0: db 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b, 0x03, 0x4f, 0x02, 0x0a, 0x0e, 0x14, 0x41
..@0x805c6d0: db 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x45
..@0x805c6e0: db 0x0b, 0x02, 0xdc, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7
..@0x805c6f0: db 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x42, 0x0b, 0x03, 0x2b, 0x06, 0x0a, 0x0e, 0x14, 0x41, 0xc3
..@0x805c700: db 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x45, 0x0b
..@0x805c710: db 0x14, 0x00, 0x00, 0x00, 0xe8, 0x0a, 0x00, 0x00, 0x28, 0xbf, 0xff, 0xff, 0x40, 0x00, 0x00, 0x00
..@0x805c720: db 0x00, 0x43, 0x0e, 0x20, 0x7c, 0x0e, 0x04, 0x00, 0x3c, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00
..@0x805c730: db 0x50, 0xbf, 0xff, 0xff, 0x07, 0x09, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e
..@0x805c740: db 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0x90
..@0x805c750: db 0x03, 0x02, 0xbb, 0x0a, 0x0e, 0x14, 0x43, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7
..@0x805c760: db 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x45, 0x0b, 0x18, 0x00, 0x00, 0x00, 0x40, 0x0b, 0x00, 0x00
..@0x805c770: db 0x20, 0xc8, 0xff, 0xff, 0x77, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x80, 0x01, 0x02, 0x64, 0x0a
..@0x805c780: db 0x0e, 0x04, 0x49, 0x0b, 0x54, 0x00, 0x00, 0x00, 0x5c, 0x0b, 0x00, 0x00, 0x84, 0xc8, 0xff, 0xff
..@0x805c790: db 0xa3, 0x04, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41
..@0x805c7a0: db 0x0e, 0x10, 0x86, 0x04, 0x41, 0x0e, 0x14, 0x83, 0x05, 0x46, 0x0e, 0xd0, 0x03, 0x02, 0x90, 0x0a
..@0x805c7b0: db 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5
..@0x805c7c0: db 0x0e, 0x04, 0x41, 0x0b, 0x03, 0xeb, 0x01, 0x0a, 0x0e, 0x14, 0x41, 0xc3, 0x0e, 0x10, 0x41, 0xc6
..@0x805c7d0: db 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x42, 0x0b, 0x20, 0x00, 0x00, 0x00
..@0x805c7e0: db 0xb4, 0x0b, 0x00, 0x00, 0xdc, 0xcc, 0xff, 0xff, 0x82, 0x00, 0x00, 0x00, 0x00, 0x41, 0x0e, 0x08
..@0x805c7f0: db 0x83, 0x02, 0x43, 0x0e, 0x20, 0x02, 0x65, 0x0a, 0x0e, 0x08, 0x41, 0xc3, 0x0e, 0x04, 0x46, 0x0b
..@0x805c800: db 0x3c, 0x00, 0x00, 0x00, 0xd8, 0x0b, 0x00, 0x00, 0x48, 0xcd, 0xff, 0xff, 0x99, 0x03, 0x00, 0x00
..@0x805c810: db 0x00, 0x41, 0x0e, 0x08, 0x85, 0x02, 0x41, 0x0e, 0x0c, 0x87, 0x03, 0x41, 0x0e, 0x10, 0x86, 0x04
..@0x805c820: db 0x41, 0x0e, 0x14, 0x83, 0x05, 0x43, 0x0e, 0x30, 0x03, 0xaf, 0x02, 0x0a, 0x0e, 0x14, 0x41, 0xc3
..@0x805c830: db 0x0e, 0x10, 0x41, 0xc6, 0x0e, 0x0c, 0x41, 0xc7, 0x0e, 0x08, 0x41, 0xc5, 0x0e, 0x04, 0x41, 0x0b
..@0x805c840: db 0x28, 0x00, 0x00, 0x00, 0x18, 0x0c, 0x00, 0x00, 0xa8, 0xd0, 0xff, 0xff, 0xc1, 0x0a, 0x00, 0x00
..@0x805c850: db 0x00, 0x43, 0x0e, 0x50, 0x4d, 0x85, 0x02, 0x83, 0x05, 0x4c, 0x86, 0x04, 0x87, 0x03, 0x02, 0x59
..@0x805c860: db 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x4b, 0x0b, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00
..@0x805c870: db 0x44, 0x0c, 0x00, 0x00, 0x4c, 0xdb, 0xff, 0xff, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0x805c880: db 0x10, 0x00, 0x00, 0x00, 0x58, 0x0c, 0x00, 0x00, 0x58, 0xdb, 0xff, 0xff, 0x83, 0x00, 0x00, 0x00
..@0x805c890: db 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x6c, 0x0c, 0x00, 0x00, 0xd4, 0xdb, 0xff, 0xff
..@0x805c8a0: db 0x15, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x80, 0x0c, 0x00, 0x00
..@0x805c8b0: db 0xe0, 0xdb, 0xff, 0xff, 0x2f, 0x00, 0x00, 0x00, 0x00, 0x43, 0x0e, 0x30, 0x60, 0x0a, 0x0e, 0x04
..@0x805c8c0: db 0x45, 0x0b, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x9c, 0x0c, 0x00, 0x00, 0xf4, 0xdb, 0xff, 0xff
..@0x805c8d0: db 0x21, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x14, 0x00, 0x00, 0x00, 0xb0, 0x0c, 0x00, 0x00
..@0x805c8e0: db 0x10, 0xdc, 0xff, 0xff, 0x23, 0x00, 0x00, 0x00, 0x00, 0x4c, 0x0e, 0x20, 0x55, 0x0e, 0x04, 0x00
..@0x805c8f0: db 0x38, 0x00, 0x00, 0x00, 0xc8, 0x0c, 0x00, 0x00, 0x28, 0xdc, 0xff, 0xff, 0x78, 0x01, 0x00, 0x00
..@0x805c900: db 0x00, 0x43, 0x0e, 0x50, 0x48, 0x83, 0x05, 0x54, 0x87, 0x03, 0x85, 0x02, 0x86, 0x04, 0x02, 0xed
..@0x805c910: db 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04, 0x4c, 0x0b, 0x6b, 0x0a, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e
..@0x805c920: db 0x04, 0x45, 0x0b, 0x6b, 0xc5, 0xc7, 0xc6, 0xc3, 0x0e, 0x04
..@0x805c92a: times 0x805d000-0x805c92a db 0

LS.init_array:  ; addr=0x805d000 off=0x15000
_dynamic_init_array: equ $-B.data
; Also label: __init_array_start.
; From crtbegin.o, section .init_array:
..@0x805d000: dd frame_dummy
; End from crtbegin.o.
; Also label: __init_array_end.
_dynamic_init_array.end: equ $-B.data

LS.fini_array:  ; addr=0x805d004 off=0x15004
; From crtbegin.o, section .init_array:
_dynamic_fini_array: equ $-B.data
..@0x805d004: dd __do_global_dtors_aux
; End from crtbegin.o.
_dynamic_fini_array.end: equ $-B.data

LS.jcr:  ; addr=0x805d008 off=0x15008
; From crtbegin.o, section .jcr:
__JCR_LIST__: equ $-B.data
; End from crtbegin.o.
; From crtend.o, section .jcr:
..@0x805d008: dd 0
; End from crtend.o.

LS.dynamic:  ; addr=0x805d00c off=0x1500c
_elf_dynamic: equ $-B.data  ; PT.DYNAMIC must be at a read-write location, otherwise it will segfault.
; https://refspecs.linuxbase.org/elf/gabi4+/ch5.dynamic.html explains that
; some of these are not required in an executable, but it indeed works on
; Linux glibc with $DT.GNU_HASH (and $DT.HASH) even if it's missing.
..@0x805d00c: dd $DT.NEEDED,       dynstr_libm_so_6-_dynamic_strtab  ; Seems to be required.
              dd $DT.NEEDED,       dynstr_libc_so_6-_dynamic_strtab  ; Seems to be required.
              dd $DT.INIT,         _dynamic_init  ; Optional.
              dd $DT.FINI,         _dynamic_fini  ; Optional.
              dd $DT.INIT_ARRAY,   _dynamic_init_array  ; Optional.
              dd $DT.INIT_ARRAYSZ, _dynamic_init_array.end-_dynamic_init_array  ; Optional.
              dd $DT.FINI_ARRAY,   _dynamic_fini_array  ; Optional.
              dd $DT.FINI_ARRAYSZ, _dynamic_fini_array.end-_dynamic_fini_array  ; Optional.
              dd $DT.HASH,         _dynamic_hash  ; Optional. `gcc -Wl,--hash-style=both' was used the generated it.
              dd $DT.GNU_HASH,     _dynamic_gnu_hash  ; Optional.
              dd $DT.STRTAB,       _dynamic_strtab  ; Seems to be required.
              dd $DT.SYMTAB,       _dynamic_symtab  ; Seems to be required. How do we get the number of symbols.
              dd $DT.STRSZ,        _dynamic_strtab.end-_dynamic_strtab  ; Seems to be required.
              dd $DT.SYMENT,       0x10  ; Seems to be required. Size of a $DT.SYMTAB entry. The number of symbols seems to be te same as the number of strings at $DT.STRTAB (except for the first, empty string).
              dd $DT.DEBUG,        0  ; Optional (?).
              dd $DT.PLTGOT,       _dynamic_pltgot  ; Seems to be required.
              dd $DT.PLTRELSZ,     _dynamic_jmprel.end-_dynamic_jmprel  ; Seems to be required.
              dd $DT.PLTREL,       $DT.REL  ; Seems to be required.
              dd $DT.JMPREL,       _dynamic_jmprel  ; Seems to be required.
              dd $DT.REL,          _dynamic_rel  ; Seems to be required.
              dd $DT.RELSZ,        _dynamic_rel.end-_dynamic_rel  ; Seems to be required.
              dd $DT.RELENT,       8  ; Seems to be required. Size of a relocation ($DT.REL) entry.
              dd $DT.VERNEED,      _dynamic_verneed  ; Seems to be required.
              dd $DT.VERNEEDNUM,   2  ; Seems to be required. Computing this is complicated, see https://refspecs.linuxfoundation.org/LSB_3.0.0/LSB-PDA/LSB-PDA.junk/symversion.html
              dd $DT.VERSYM,       _dynamic_versym  ; Seems to be required.
              dd $DT.NULL,         0  ; Required. Terminates the list. Value is always 0.
..@0x805d0d4: times 0x805d104-0x805d0dc db 0  ; Padding.
_elf_dynamic.end: equ $-B.code

LS.got:  ; addr=0x805d104 off=0x15104
; From crti.o, implicit section .got:
__gmon_start__@weak: equ $-B.data
; End from crti.o.
..@0x805d104: dd 0  ; NULL function pointer.

LS.got.plt:  ; addr=0x805d108 off=0x15108
_dynamic_pltgot: equ $-B.data  ; $DT.PLTGOT must be at a read-write location, otherwise it will segfault.
times -(LS.got.plt-B.code-$$)+0x805d108 times 0 nop  ; Assert.
times +(LS.got.plt-B.code-$$)-0x805d108 times 0 nop  ; Assert.
_GLOBAL_OFFSET_TABLE_: equ $-B.data
; Values below will be overwritten at load time by the dynamic linker /lib/ld-linux.so.2.
_GLOBAL_OFFSET_TABLE_special0: equ $-B.data
..@0x805d108: dd _elf_dynamic  ; Special entry 0.
_GLOBAL_OFFSET_TABLE_special1: equ $-B.data
..@0x805d10c: dd 0  ; Special entry 1.
_GLOBAL_OFFSET_TABLE_special2@got: equ $-B.data
..@0x805d110: dd 0  ; Special entry 2.
; Functions below correspond to L.plt, but their order doesn't matter.
log@GLIBC_2.0@got: equ $-B.data
..@0x805d114: dd log+6
read@GLIBC_2.0@got: equ $-B.data
..@0x805d118: dd read+6
printf@GLIBC_2.0@got: equ $-B.data
..@0x805d11c: dd printf+6
fflush@GLIBC_2.0@got: equ $-B.data
..@0x805d120: dd fflush+6
memmove@GLIBC_2.0@got: equ $-B.code
..@0x805d124: dd memmove+6
free@GLIBC_2.0@got: equ $-B.code
..@0x805d128: dd free+6
memcpy@GLIBC_2.0@got: equ $-B.code
..@0x805d12c: dd memcpy+6
fgets@GLIBC_2.0@got: equ $-B.code
..@0x805d130: dd fgets+6
fclose@GLIBC_2.1@got: equ $-B.code
..@0x805d134: dd fclose+6
time@GLIBC_2.0@got: equ $-B.code
..@0x805d138: dd time+6
gettimeofday@GLIBC_2.0@got: equ $-B.code
..@0x805d13c: dd gettimeofday+6
stpcpy@GLIBC_2.0@got: equ $-B.code
..@0x805d140: dd stpcpy+6
fseek@GLIBC_2.0@got: equ $-B.code
..@0x805d144: dd fseek+6
fwrite@GLIBC_2.0@got: equ $-B.code
..@0x805d148: dd fwrite+6
strcat@GLIBC_2.0@got: equ $-B.code
..@0x805d14c: dd strcat+6
fread@GLIBC_2.0@got: equ $-B.code
..@0x805d150: dd fread+6
strcpy@GLIBC_2.0@got: equ $-B.code
..@0x805d154: dd strcpy+6
realloc@GLIBC_2.0@got: equ $-B.code
..@0x805d158: dd realloc+6
malloc@GLIBC_2.0@got: equ $-B.code
..@0x805d15c: dd malloc+6
puts@GLIBC_2.0@got: equ $-B.code
..@0x805d160: dd puts+6
__fxstat@GLIBC_2.0@got: equ $-B.code
..@0x805d164: dd __fxstat+6
__gmon_start__@got: equ $-B.code
..@0x805d168: dd __gmon_start__+6
exit@GLIBC_2.0@got: equ $-B.code
..@0x805d16c: dd exit+6
srand@GLIBC_2.0@got: equ $-B.code
..@0x805d170: dd srand+6
strchr@GLIBC_2.0@got: equ $-B.code
..@0x805d174: dd strchr+6
strlen@GLIBC_2.0@got: equ $-B.code
..@0x805d178: dd strlen+6
__libc_start_main@GLIBC_2.0@got: equ $-B.code
..@0x805d17c: dd __libc_start_main+6
strcasecmp@GLIBC_2.0@got: equ $-B.code
..@0x805d180: dd strcasecmp+6
ftell@GLIBC_2.0@got: equ $-B.code
..@0x805d184: dd ftell+6
fopen@GLIBC_2.1@got: equ $-B.code
..@0x805d188: dd fopen+6
memset@GLIBC_2.0@got: equ $-B.code
..@0x805d18c: dd memset+6
fileno@GLIBC_2.0@got: equ $-B.code
..@0x805d190: dd fileno+6
strtod@GLIBC_2.0@got: equ $-B.code
..@0x805d194: dd strtod+6
fgetc@GLIBC_2.0@got: equ $-B.code
..@0x805d198: dd fgetc+6
strncasecmp@GLIBC_2.0@got: equ $-B.code
..@0x805d19c: dd strncasecmp+6
rand@GLIBC_2.0@got: equ $-B.code
..@0x805d1a0: dd rand+6
strtok@GLIBC_2.0@got: equ $-B.code
..@0x805d1a4: dd strtok+6
sigemptyset@GLIBC_2.0@got: equ $-B.code
..@0x805d1a8: dd sigemptyset+6
vfprintf@GLIBC_2.0@got: equ $-B.code
..@0x805d1ac: dd vfprintf+6
readdir@GLIBC_2.0@got: equ $-B.code
..@0x805d1b0: dd readdir+6
sigaction@GLIBC_2.0@got: equ $-B.code
..@0x805d1b4: dd sigaction+6
strtol@GLIBC_2.0@got: equ $-B.code
..@0x805d1b8: dd strtol+6
closedir@GLIBC_2.0@got: equ $-B.code
..@0x805d1bc: dd closedir+6
opendir@GLIBC_2.0@got: equ $-B.code
..@0x805d1c0: dd opendir+6
%endif  ; TARGET, ls

P.data:      ;0x1a1c4..0x1a1f0  +0x0002c    @0x805d1c4...0x805d1f0  file_size=end_off=0x1a1f0=106992 (previous attempt was 122880 bytes)
times -(P.data-B.data-$$)+0x805d1c4 times 0 nop  ; Assert.
times +(P.data-B.data-$$)-0x805d1c4 times 0 nop  ; Assert.
..@0x805d1c4: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
code_ptr_0x805d1cc: equ $-B.data
..@0x805d1cc: dd unknown_func1
..@0x805d1d0: db 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0x80, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0xff
..@0x805d1e0: db 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
;..@0x805d1f0:
P.data.end:
times -(P.data.end-P.data)+(0x805d1f0-0x805d1c4) times 0 nop  ; Assert.
times +(P.data.end-P.data)-(0x805d1f0-0x805d1c4) times 0 nop  ; Assert.

%ifidn TARGET, x
times (+($-$$)-0x1a1f0) times 0 nop  ; Assert on file size.
times (-($-$$)+0x1a1f0) times 0 nop  ; Assert on file size.

X.gap8:      ;---               +0x35       @0x805d1f0...0x805d225
absolute $
..@0x805d1f0: resb +0x35
%endif  ; TARGET, x

%ifidn TARGET, l
times (+($-$$)-0x141f0) times 0 nop  ; Assert on file size.
times (-($-$$)+0x141f0) times 0 nop  ; Assert on file size.

L.glibc.bss:  ; addr=0x805d1f0 off=0x141f0
absolute $
; From crtbegin.o, section .tm_clone_table:
__TMC_LIST__: equ $-B.data
; End from crtbegin.o.
; From crtend.o, section .tm_clone_table:
__TMC_END__: equ $-B.data
; End from crtend.o.
..@0x805d1f0: resb 0x805d200-0x805d1f0  ; Why this padding? It's not for alignment.
; These seem to be generated by the linker, relocation type is R_386_COPY.
stderr: equ $-B.data
..@0x805d200: resb 0x4
stdin: equ $-B.data
..@0x805d204: resb 0x1c
stdout: equ $-B.data
..@0x805d220: resb 0x4
; From crtbegin.o, section .bss:
completed.6600: equ $-B.data  ; A bool flag (0 or 1).
..@0x805d224: resb 1
; End from crtbegin.o.
%endif  ; TARGET, l

%ifidn TARGET, d
D.MachO_trail:  ; addr=0xa05d1f0 off=0x151f0
absolute_for_bss equ $
..@0xa05d1f0: times 0x1000-0x1f0 db 0  ; Padding.
..@0xa05e000: db 0xf4, 0x18, 0x40, 0x24, 0x0e, 0x2a
..@0xa05e006: db 0xb0, 0x19, 0xb0, 0x37  ; The 0xb0 byte changes if the darwin_main entry point changes. It's not reliable, there are cascading effects for big changes, also changes the file size.
..@0xa05e00a: db 0xbf, 0x01, 0x02, 0xe7, 0xe0, 0x03
..@0xa05e010: db 0xa8, 0x01, 0x2c, 0xb4, 0x25, 0x00, 0x00, 0x00, 0x6f, 0x01, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x00
..@0xa05e020: db 0xb4, 0x8c, 0x04, 0x08, 0x88, 0x01, 0x00, 0x00, 0x1e, 0x01, 0x00, 0x00, 0xd8, 0x8c, 0x04, 0x08
..@0xa05e030: db 0x9b, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x10, 0x8d, 0x04, 0x08, 0xa1, 0x01, 0x00, 0x00
..@0xa05e040: db 0x0e, 0x01, 0x00, 0x00, 0xc0, 0x99, 0x04, 0x08, 0xa8, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00
..@0xa05e050: db 0x2f, 0xb6, 0x04, 0x08, 0xaf, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x31, 0xb6, 0x04, 0x08
..@0xa05e060: db 0xb6, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x98, 0xa6, 0x05, 0x08, 0xc0, 0x01, 0x00, 0x00
..@0xa05e070: db 0x0e, 0x01, 0x00, 0x00, 0x40, 0xa7, 0x05, 0x08, 0xcf, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00
..@0xa05e080: db 0x6c, 0xa7, 0x05, 0x08, 0xd7, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x20, 0xba, 0x05, 0x08
..@0xa05e090: db 0xe3, 0x01, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x1d, 0xbd, 0x05, 0x08, 0xf7, 0x01, 0x00, 0x00
..@0xa05e0a0: db 0x0e, 0x07, 0x00, 0x00, 0xb0, 0xc0, 0x05, 0x08, 0x09, 0x02, 0x00, 0x00, 0x0e, 0x07, 0x00, 0x00
..@0xa05e0b0: db 0xc4, 0xd1, 0x05, 0x08, 0x0f, 0x02, 0x00, 0x00, 0x0e, 0x07, 0x00, 0x00, 0xf0, 0xd1, 0x05, 0x08
..@0xa05e0c0: db 0x19, 0x02, 0x00, 0x00, 0x0e, 0x07, 0x00, 0x00, 0xf0, 0xd1, 0x05, 0x08, 0x21, 0x02, 0x00, 0x00
..@0xa05e0d0: db 0x0e, 0x09, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x08, 0x28, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00
..@0xa05e0e0: db 0x04, 0xd2, 0x05, 0x08, 0x30, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00, 0x08, 0xd2, 0x05, 0x08
..@0xa05e0f0: db 0x38, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00, 0x0c, 0xd2, 0x05, 0x08, 0x44, 0x02, 0x00, 0x00
..@0xa05e100: db 0x0e, 0x09, 0x00, 0x00, 0x25, 0xd2, 0x05, 0x08, 0x50, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00
..@0xa05e110: db 0x25, 0xd2, 0x05, 0x08, 0x55, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00, 0x50, 0xca, 0x87, 0x09
..@0xa05e120: db 0x60, 0x02, 0x00, 0x00, 0x0e, 0x09, 0x00, 0x00, 0x50, 0xca, 0x87, 0x09, 0x69, 0x02, 0x00, 0x00
..@0xa05e130: db 0x0e, 0x09, 0x00, 0x00, 0x50, 0xce, 0x87, 0x09, 0x02, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00
..@0xa05e140: db 0xf0, 0xd1, 0x05, 0x08, 0x0a, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00, 0xf4, 0xd1, 0x05, 0x08
..@0xa05e150: db 0x12, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00, 0xfc, 0xd1, 0x05, 0x08, 0x1e, 0x00, 0x00, 0x00
..@0xa05e160: db 0x03, 0x01, 0x10, 0x00, 0x00, 0x80, 0x04, 0x08, 0x32, 0x00, 0x00, 0x00, 0x0f, 0x08, 0x00, 0x00
..@0xa05e170: db 0xf8, 0xd1, 0x05, 0x08, 0x3b, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00
..@0xa05e17c: dd darwin_main  ; Entry point. (Is it enough to change only here?)
..@0xa05e180: db 0x41, 0x00, 0x00, 0x00, 0x0f, 0x01, 0x00, 0x00, 0x74, 0x8c, 0x04, 0x08, 0x47, 0x00, 0x00, 0x00
..@0xa05e190: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x4d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e1a0: db 0x00, 0x00, 0x00, 0x00, 0x55, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e1b0: db 0x5d, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x65, 0x00, 0x00, 0x00
..@0xa05e1c0: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x6c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e1d0: db 0x00, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e1e0: db 0x7b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x82, 0x00, 0x00, 0x00
..@0xa05e1f0: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x89, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e200: db 0x00, 0x00, 0x00, 0x00, 0x8f, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e210: db 0x96, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x9d, 0x00, 0x00, 0x00
..@0xa05e220: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xa5, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e230: db 0x00, 0x00, 0x00, 0x00, 0xb3, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e240: db 0xbb, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc0, 0x00, 0x00, 0x00
..@0xa05e250: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e260: db 0x00, 0x00, 0x00, 0x00, 0xd0, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e270: db 0xd9, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe1, 0x00, 0x00, 0x00
..@0xa05e280: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xe7, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e290: db 0x00, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e2a0: db 0xf6, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0xff, 0x00, 0x00, 0x00
..@0xa05e2b0: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x06, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e2c0: db 0x00, 0x00, 0x00, 0x00, 0x0e, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e2d0: db 0x1a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x22, 0x01, 0x00, 0x00
..@0xa05e2e0: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x2a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e2f0: db 0x00, 0x00, 0x00, 0x00, 0x32, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e300: db 0x3a, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x47, 0x01, 0x00, 0x00
..@0xa05e310: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x4f, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01
..@0xa05e320: db 0x00, 0x00, 0x00, 0x00, 0x57, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00
..@0xa05e330: db 0x5f, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x65, 0x01, 0x00, 0x00
..@0xa05e340: db 0x01, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00
..@0xa05e350: db 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00
..@0xa05e360: db 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00, 0x28, 0x00, 0x00, 0x00
..@0xa05e370: db 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00, 0x2c, 0x00, 0x00, 0x00
..@0xa05e380: db 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
..@0xa05e390: db 0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00
..@0xa05e3a0: db 0x35, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x00
..@0xa05e3b0: db 0x39, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x00, 0x00
..@0xa05e3c0: db 0x3d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x00
..@0xa05e3d0: db 0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00, 0x1f, 0x00, 0x00, 0x00
..@0xa05e3e0: db 0x20, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x22, 0x00, 0x00, 0x00, 0x23, 0x00, 0x00, 0x00
..@0xa05e3f0: db 0x24, 0x00, 0x00, 0x00, 0x25, 0x00, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x27, 0x00, 0x00, 0x00
..@0xa05e400: db 0x28, 0x00, 0x00, 0x00, 0x29, 0x00, 0x00, 0x00, 0x2a, 0x00, 0x00, 0x00, 0x2b, 0x00, 0x00, 0x00
..@0xa05e410: db 0x2c, 0x00, 0x00, 0x00, 0x2d, 0x00, 0x00, 0x00, 0x2e, 0x00, 0x00, 0x00, 0x2f, 0x00, 0x00, 0x00
..@0xa05e420: db 0x30, 0x00, 0x00, 0x00, 0x31, 0x00, 0x00, 0x00, 0x32, 0x00, 0x00, 0x00, 0x33, 0x00, 0x00, 0x00
..@0xa05e430: db 0x34, 0x00, 0x00, 0x00, 0x35, 0x00, 0x00, 0x00, 0x36, 0x00, 0x00, 0x00, 0x37, 0x00, 0x00, 0x00
..@0xa05e440: db 0x38, 0x00, 0x00, 0x00, 0x39, 0x00, 0x00, 0x00, 0x3a, 0x00, 0x00, 0x00, 0x3b, 0x00, 0x00, 0x00
..@0xa05e450: db 0x3c, 0x00, 0x00, 0x00, 0x3d, 0x00, 0x00, 0x00, 0x3e, 0x00, 0x00, 0x00, 0x3f, 0x00, 0x00, 0x00
..@0xa05e460: db 0x40, 0x00, 0x00, 0x00, 0x41, 0x00, 0x00, 0x00, 0x42, 0x00, 0x00, 0x00, 0x43, 0x00, 0x00, 0x00
..@0xa05e470: db 0x20, 0x00, 0x5f, 0x4e, 0x58, 0x41, 0x72, 0x67, 0x63, 0x00, 0x5f, 0x4e, 0x58, 0x41, 0x72, 0x67
..@0xa05e480: db 0x76, 0x00, 0x5f, 0x5f, 0x5f, 0x70, 0x72, 0x6f, 0x67, 0x6e, 0x61, 0x6d, 0x65, 0x00, 0x5f, 0x5f
..@0xa05e490: db 0x6d, 0x68, 0x5f, 0x65, 0x78, 0x65, 0x63, 0x75, 0x74, 0x65, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65
..@0xa05e4a0: db 0x72, 0x00, 0x5f, 0x65, 0x6e, 0x76, 0x69, 0x72, 0x6f, 0x6e, 0x00, 0x5f, 0x6d, 0x61, 0x69, 0x6e
..@0xa05e4b0: db 0x00, 0x73, 0x74, 0x61, 0x72, 0x74, 0x00, 0x5f, 0x65, 0x78, 0x69, 0x74, 0x00, 0x5f, 0x66, 0x63
..@0xa05e4c0: db 0x6c, 0x6f, 0x73, 0x65, 0x00, 0x5f, 0x66, 0x64, 0x6f, 0x70, 0x65, 0x6e, 0x00, 0x5f, 0x66, 0x66
..@0xa05e4d0: db 0x6c, 0x75, 0x73, 0x68, 0x00, 0x5f, 0x66, 0x67, 0x65, 0x74, 0x63, 0x00, 0x5f, 0x66, 0x67, 0x65
..@0xa05e4e0: db 0x74, 0x73, 0x00, 0x5f, 0x66, 0x69, 0x6c, 0x65, 0x6e, 0x6f, 0x00, 0x5f, 0x66, 0x6f, 0x70, 0x65
..@0xa05e4f0: db 0x6e, 0x00, 0x5f, 0x66, 0x72, 0x65, 0x61, 0x64, 0x00, 0x5f, 0x66, 0x72, 0x65, 0x65, 0x00, 0x5f
..@0xa05e500: db 0x66, 0x73, 0x65, 0x65, 0x6b, 0x00, 0x5f, 0x66, 0x74, 0x65, 0x6c, 0x6c, 0x00, 0x5f, 0x66, 0x77
..@0xa05e510: db 0x72, 0x69, 0x74, 0x65, 0x00, 0x5f, 0x67, 0x65, 0x74, 0x74, 0x69, 0x6d, 0x65, 0x6f, 0x66, 0x64
..@0xa05e520: db 0x61, 0x79, 0x00, 0x5f, 0x69, 0x73, 0x61, 0x74, 0x74, 0x79, 0x00, 0x5f, 0x6c, 0x6f, 0x67, 0x00
..@0xa05e530: db 0x5f, 0x6d, 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x00, 0x5f, 0x6d, 0x65, 0x6d, 0x63, 0x70, 0x79, 0x00
..@0xa05e540: db 0x5f, 0x6d, 0x65, 0x6d, 0x6d, 0x6f, 0x76, 0x65, 0x00, 0x5f, 0x6d, 0x65, 0x6d, 0x73, 0x65, 0x74
..@0xa05e550: db 0x00, 0x5f, 0x72, 0x61, 0x6e, 0x64, 0x00, 0x5f, 0x72, 0x65, 0x61, 0x64, 0x00, 0x5f, 0x72, 0x65
..@0xa05e560: db 0x61, 0x6c, 0x6c, 0x6f, 0x63, 0x00, 0x5f, 0x73, 0x65, 0x74, 0x76, 0x62, 0x75, 0x66, 0x00, 0x5f
..@0xa05e570: db 0x73, 0x72, 0x61, 0x6e, 0x64, 0x00, 0x5f, 0x73, 0x74, 0x70, 0x63, 0x70, 0x79, 0x00, 0x5f, 0x73
..@0xa05e580: db 0x74, 0x72, 0x63, 0x61, 0x73, 0x65, 0x63, 0x6d, 0x70, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x63, 0x61
..@0xa05e590: db 0x74, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x63, 0x68, 0x72, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x63, 0x70
..@0xa05e5a0: db 0x79, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x6c, 0x65, 0x6e, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x6e, 0x63
..@0xa05e5b0: db 0x61, 0x73, 0x65, 0x63, 0x6d, 0x70, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x74, 0x6f, 0x64, 0x00, 0x5f
..@0xa05e5c0: db 0x73, 0x74, 0x72, 0x74, 0x6f, 0x6b, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x74, 0x6f, 0x6c, 0x00, 0x5f
..@0xa05e5d0: db 0x74, 0x69, 0x6d, 0x65, 0x00, 0x5f, 0x76, 0x66, 0x70, 0x72, 0x69, 0x6e, 0x74, 0x66, 0x00, 0x64
..@0xa05e5e0: db 0x79, 0x6c, 0x64, 0x5f, 0x73, 0x74, 0x75, 0x62, 0x5f, 0x62, 0x69, 0x6e, 0x64, 0x69, 0x6e, 0x67
..@0xa05e5f0: db 0x5f, 0x68, 0x65, 0x6c, 0x70, 0x65, 0x72, 0x00, 0x5f, 0x5f, 0x64, 0x79, 0x6c, 0x64, 0x5f, 0x66
..@0xa05e600: db 0x75, 0x6e, 0x63, 0x5f, 0x6c, 0x6f, 0x6f, 0x6b, 0x75, 0x70, 0x00, 0x5f, 0x74, 0x65, 0x78, 0x74
..@0xa05e610: db 0x00, 0x5f, 0x6d, 0x61, 0x69, 0x6e, 0x32, 0x00, 0x5f, 0x73, 0x74, 0x72, 0x5f, 0x77, 0x00, 0x5f
..@0xa05e620: db 0x73, 0x74, 0x72, 0x5f, 0x72, 0x00, 0x5f, 0x74, 0x65, 0x78, 0x74, 0x5f, 0x65, 0x6e, 0x64, 0x00
..@0xa05e630: db 0x5f, 0x62, 0x65, 0x66, 0x6f, 0x72, 0x65, 0x5f, 0x72, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x00, 0x5f
..@0xa05e640: db 0x72, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x00, 0x5f, 0x72, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65
..@0xa05e650: db 0x6e, 0x64, 0x00, 0x5f, 0x72, 0x6f, 0x64, 0x61, 0x74, 0x61, 0x5f, 0x70, 0x61, 0x64, 0x64, 0x69
..@0xa05e660: db 0x6e, 0x67, 0x5f, 0x65, 0x6e, 0x64, 0x00, 0x64, 0x79, 0x6c, 0x64, 0x5f, 0x5f, 0x6d, 0x61, 0x63
..@0xa05e670: db 0x68, 0x5f, 0x68, 0x65, 0x61, 0x64, 0x65, 0x72, 0x00, 0x5f, 0x64, 0x61, 0x74, 0x61, 0x00, 0x5f
..@0xa05e680: db 0x64, 0x61, 0x74, 0x61, 0x5f, 0x65, 0x6e, 0x64, 0x00, 0x5f, 0x70, 0x72, 0x65, 0x62, 0x73, 0x73
..@0xa05e690: db 0x00, 0x5f, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x00, 0x5f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74, 0x00
..@0xa05e6a0: db 0x5f, 0x73, 0x74, 0x64, 0x65, 0x72, 0x72, 0x00, 0x5f, 0x62, 0x73, 0x73, 0x5f, 0x70, 0x72, 0x65
..@0xa05e6b0: db 0x66, 0x69, 0x78, 0x00, 0x5f, 0x62, 0x75, 0x66, 0x5f, 0x69, 0x6e, 0x5f, 0x62, 0x73, 0x73, 0x00
..@0xa05e6c0: db 0x5f, 0x62, 0x73, 0x73, 0x00, 0x5f, 0x73, 0x74, 0x64, 0x69, 0x6e, 0x5f, 0x62, 0x75, 0x66, 0x00
..@0xa05e6d0: db 0x5f, 0x62, 0x73, 0x73, 0x5f, 0x65, 0x6e, 0x64, 0x00, 0x5f, 0x73, 0x74, 0x64, 0x6f, 0x75, 0x74
..@0xa05e6e0: db 0x5f, 0x62, 0x75, 0x66, 0x00, 0x00, 0x00, 0x00

times (+($-$$)-0x166e8) times 0 nop  ; Assert on file size.
times (-($-$$)+0x166e8) times 0 nop  ; Assert on file size.

D.libc.bss:  ; addr=0x805d1f0 off=0x151f0
absolute absolute_for_bss
..@0x805d1f0: resb 0x10  ; This padding is for address match with the other targets.
stdin: equ $-B.data
..@0x805d200: resb 4
stdout: equ $-B.data
..@0x805d204: resb 4
stderr: equ $-B.data
..@0x805d208: resb 4
..@0x805d20c: resb 0x805d225-0x805d20c
%endif  ; TARGET, d

%ifidn TARGET, ls
times (+($-$$)-0x151f0) times 0 nop  ; Assert on file size.
times (-($-$$)+0x151f0) times 0 nop  ; Assert on file size.

absolute_for_bss equ $

%if TARGET_LS_WITH_ELF_SECTIONS
LS.ELF_comment:  ; addr=0xa000000 off=0x151f0
..@0xa000000: db 'GCC: (Debian 4.7.2-5) 4.7.2', 0
..@0xa00001c: db 'GCC: (Debian 4.4.7-2) 4.4.7', 0

LS.ELF_shstrtab:  ; addr=0xa00038 off=0x15228
..@0xa000038: db 0
..@0xa000039: db '.shstrtab', 0
..@0xa000043: db '.interp', 0
..@0xa00004b: db '.note.ABI-tag', 0
..@0xa000059: db '.note.gnu.build-id', 0
..@0xa00006c: db '.gnu.hash', 0
..@0xa000076: db '.dynsym', 0
..@0xa00007e: db '.dynstr', 0
..@0xa000086: db '.gnu.version', 0
..@0xa000093: db '.gnu.version_r', 0
..@0xa0000a2: db '.rel.dyn', 0
..@0xa0000ab: db '.rel.plt', 0
..@0xa0000b4: db '.init', 0
..@0xa0000ba: db '.text', 0
..@0xa0000c0: db '.fini', 0
..@0xa0000c6: db '.rodata', 0
..@0xa0000ce: db '.eh_frame_hdr', 0
..@0xa0000dc: db '.eh_frame', 0
..@0xa0000e6: db '.init_array', 0
..@0xa0000f2: db '.fini_array', 0
..@0xa0000fe: db '.jcr', 0
..@0xa000103: db '.dynamic', 0
..@0xa00010c: db '.got', 0
..@0xa000111: db '.got.plt', 0
..@0xa00011a: db '.data', 0
..@0xa000120: db '.bss', 0
..@0xa000125: db '.comment', 0, 0, 0

LS.ELF_sections:  ; addr=0xa000130 off=0x15320
; ELF section headers, sstrip(1) strips them.
;LS.ELF_shdr:
..@0xa000130: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000140: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000150: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000160: db 0x02, 0x00, 0x00, 0x00, 0x34, 0x81, 0x04, 0x08, 0x34, 0x01, 0x00, 0x00, 0x13, 0x00, 0x00, 0x00
..@0xa000170: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000180: db 0x13, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x48, 0x81, 0x04, 0x08
..@0xa000190: db 0x48, 0x01, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0001a0: db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x21, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00
..@0xa0001b0: db 0x02, 0x00, 0x00, 0x00, 0x68, 0x81, 0x04, 0x08, 0x68, 0x01, 0x00, 0x00, 0x24, 0x00, 0x00, 0x00
..@0xa0001c0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0001d0: db 0x38, 0x00, 0x00, 0x00, 0x05, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x8c, 0x81, 0x04, 0x08
..@0xa0001e0: db 0x8c, 0x01, 0x00, 0x00, 0x64, 0x01, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0001f0: db 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x34, 0x00, 0x00, 0x00, 0xf6, 0xff, 0xff, 0x6f
..@0xa000200: db 0x02, 0x00, 0x00, 0x00, 0xf0, 0x82, 0x04, 0x08, 0xf0, 0x02, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00
..@0xa000210: db 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa000220: db 0x3e, 0x00, 0x00, 0x00, 0x0b, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x20, 0x83, 0x04, 0x08
..@0xa000230: db 0x20, 0x03, 0x00, 0x00, 0x20, 0x03, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000240: db 0x04, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x46, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00
..@0xa000250: db 0x02, 0x00, 0x00, 0x00, 0x40, 0x86, 0x04, 0x08, 0x40, 0x06, 0x00, 0x00, 0xa1, 0x01, 0x00, 0x00
..@0xa000260: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000270: db 0x4e, 0x00, 0x00, 0x00, 0xff, 0xff, 0xff, 0x6f, 0x02, 0x00, 0x00, 0x00, 0xe2, 0x87, 0x04, 0x08
..@0xa000280: db 0xe2, 0x07, 0x00, 0x00, 0x64, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000290: db 0x02, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x5b, 0x00, 0x00, 0x00, 0xfe, 0xff, 0xff, 0x6f
..@0xa0002a0: db 0x02, 0x00, 0x00, 0x00, 0x48, 0x88, 0x04, 0x08, 0x48, 0x08, 0x00, 0x00, 0x50, 0x00, 0x00, 0x00
..@0xa0002b0: db 0x07, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0002c0: db 0x6a, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x98, 0x88, 0x04, 0x08
..@0xa0002d0: db 0x98, 0x08, 0x00, 0x00, 0x20, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0002e0: db 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x73, 0x00, 0x00, 0x00, 0x09, 0x00, 0x00, 0x00
..@0xa0002f0: db 0x02, 0x00, 0x00, 0x00, 0xb8, 0x88, 0x04, 0x08, 0xb8, 0x08, 0x00, 0x00, 0x60, 0x01, 0x00, 0x00
..@0xa000300: db 0x06, 0x00, 0x00, 0x00, 0x0d, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00
..@0xa000310: db 0x7c, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x18, 0x8a, 0x04, 0x08
..@0xa000320: db 0x18, 0x0a, 0x00, 0x00, 0x26, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000330: db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x77, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000340: db 0x06, 0x00, 0x00, 0x00, 0x40, 0x8a, 0x04, 0x08, 0x40, 0x0a, 0x00, 0x00, 0xd0, 0x02, 0x00, 0x00
..@0xa000350: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x10, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa000360: db 0x82, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x10, 0x8d, 0x04, 0x08
..@0xa000370: db 0x10, 0x0d, 0x00, 0x00, 0x00, 0x1a, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000380: db 0x10, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x88, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000390: db 0x06, 0x00, 0x00, 0x00, 0x10, 0xa7, 0x05, 0x08, 0x10, 0x27, 0x01, 0x00, 0x17, 0x00, 0x00, 0x00
..@0xa0003a0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0003b0: db 0x8e, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x40, 0xa7, 0x05, 0x08
..@0xa0003c0: db 0x40, 0x27, 0x01, 0x00, 0xe0, 0x12, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0003d0: db 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x96, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa0003e0: db 0x02, 0x00, 0x00, 0x00, 0x20, 0xba, 0x05, 0x08, 0x20, 0x3a, 0x01, 0x00, 0x0c, 0x02, 0x00, 0x00
..@0xa0003f0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000400: db 0xa4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x02, 0x00, 0x00, 0x00, 0x2c, 0xbc, 0x05, 0x08
..@0xa000410: db 0x2c, 0x3c, 0x01, 0x00, 0x04, 0x0d, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000420: db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xae, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00
..@0xa000430: db 0x03, 0x00, 0x00, 0x00, 0x00, 0xd0, 0x05, 0x08, 0x00, 0x50, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa000440: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000450: db 0xba, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x04, 0xd0, 0x05, 0x08
..@0xa000460: db 0x04, 0x50, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000470: db 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc6, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000480: db 0x03, 0x00, 0x00, 0x00, 0x08, 0xd0, 0x05, 0x08, 0x08, 0x50, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa000490: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0004a0: db 0xcb, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x0c, 0xd0, 0x05, 0x08
..@0xa0004b0: db 0x0c, 0x50, 0x01, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x07, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0004c0: db 0x04, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0xd4, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa0004d0: db 0x03, 0x00, 0x00, 0x00, 0x04, 0xd1, 0x05, 0x08, 0x04, 0x51, 0x01, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa0004e0: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00
..@0xa0004f0: db 0xd9, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x08, 0xd1, 0x05, 0x08
..@0xa000500: db 0x08, 0x51, 0x01, 0x00, 0xbc, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000510: db 0x04, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0xe2, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000520: db 0x03, 0x00, 0x00, 0x00, 0xc4, 0xd1, 0x05, 0x08, 0xc4, 0x51, 0x01, 0x00, 0x2c, 0x00, 0x00, 0x00
..@0xa000530: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000540: db 0xe8, 0x00, 0x00, 0x00, 0x08, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0xd2, 0x05, 0x08
..@0xa000550: db 0xf0, 0x51, 0x01, 0x00, 0x50, 0xf8, 0x81, 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa000560: db 0x20, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xed, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000570: db 0x30, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0xf0, 0x51, 0x01, 0x00, 0x38, 0x00, 0x00, 0x00
..@0xa000580: db 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00, 0x01, 0x00, 0x00, 0x00
..@0xa000590: db 0x01, 0x00, 0x00, 0x00, 0x03, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0005a0: db 0x28, 0x52, 0x01, 0x00, 0xf6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
..@0xa0005b0: db 0x01, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
%endif  ; TARGET_LS_WITH_ELF_SECTIONS

LS.glibc.bss:  ; addr=0x805d1f0 off=0x151f0
absolute absolute_for_bss   ; $
; From crtbegin.o, section .tm_clone_table:
__TMC_LIST__: equ $-B.data
; End from crtbegin.o.
; From crtend.o, section .tm_clone_table:
__TMC_END__: equ $-B.data
; End from crtend.o.
..@0x805d1f0: resb 0x805d200-0x805d1f0  ; Why this padding? It's not for alignment.
; These seem to be generated by the linker, relocation type is R_386_COPY.
stderr: equ $-B.data
..@0x805d200: resb 0x4
stdin: equ $-B.data
..@0x805d204: resb 0x1c
stdout: equ $-B.data
..@0x805d220: resb 0x4
; From crtbegin.o, section .bss:
completed.6600: equ $-B.data  ; A bool flag (0 or 1).
..@0x805d224: resb 1
; End from crtbegin.o.
%endif  ; TARGET, ls

P.bss:       ;---               +0x181f840  @0x805d225...0x987ca40
times -(P.bss-B.data-$$)+0x805d225 times 0 nop  ; Assert.
times +(P.bss-B.data-$$)-0x805d225 times 0 nop  ; Assert.
..@0x805d225: resb 0x1b
global_cleanup_counter: equ $-B.data ; 0, 1 or 2.
..@0x805d240: resb 4
message_filep: equ $-B.data  ; FILE*.
..@0x805d244: resb 4
..@0x805d248: resb 0x41c
funcptr_printf: equ $-B.data
..@0x805d664: resb 0x181f338-0x41c
global_struct_sigaction: equ $-B.data
..@0x987c580: resb 0x4d0
_bss_end: equ $-B.data
;..@0x987ca50:;
P.bss.end:
times -(P.bss.end-P.bss)+(0x987ca50-0x805d225) times 0 nop  ; Assert.
times +(P.bss.end-P.bss)-(0x987ca50-0x805d225) times 0 nop  ; Assert.

%ifidn TARGET, x
X.ucbss:     ;---               +0x023e0    @0x987ca50...0x987ee20
_stdio_openlist_use_count: equ $-B.data
..@0x987ca50: resb 4
_stdio_openlist_del_count: equ $-B.data
..@0x987ca54: resb 4
seed: equ $-B.data
..@0x987ca58: resb 8
_fixed_buffers: equ $-B.data
buf_stdin: equ $-B.data
..@0x987ca60: resb +0x1000
buf_stdin.end: equ $-B.data
buf_stdout: equ $-B.data
..@0x987da60: resb +0x1000
buf_stdout.end: equ $-B.data
next_start.1278: equ $-B.data
..@0x987ea60: resb 4
been_there_done_that: equ $-B.data
..@0x987ea64: resb 1
..@0x987ea65: resb 3
_exit_cleanup: equ $-B.data
..@0x987ea68: resb 4
__libc_stack_end: equ $-B.data
..@0x987ea6c: resb 4
environ: equ $-B.data
..@0x987ea70: resb 4
__pagesize: equ $-B.data
..@0x987ea74: resb 4
__app_fini: equ $-B.data
..@0x987ea78: resb 4
__rtld_fini: equ $-B.data
..@0x987ea7c: resb 4
is_uClibc_init_called: equ $-B.data  ; Not an official uClibc symbol.
been_there_done_that.3001: equ $-B.data
..@0x987ea80: resb 1
..@0x987ea81: resb 3
errno: equ $-B.data
..@0x987ea84: resb 4
h_errno: equ $-B.data
..@0x987ea88: resb 4
__curbrk: equ $-B.data
..@0x987ea8c: resb 4
..@0x987ea90: resb 0x10
__malloc_state: equ $-B.data
..@0x987eaa0: resb 0x378
_dl_phdr: equ $-B.data
..@0x987ee18: resb 4
_dl_phnum: equ $-B.data
..@0x987ee1c: resb 4
..@0x987ee20:
X.ucbss.end:
times -(X.ucbss.end-X.ucbss)+(0x987ee20-0x987ca50) times 0 nop  ; Assert.
times +(X.ucbss.end-X.ucbss)-(0x987ee20-0x987ca50) times 0 nop  ; Assert.
%endif  ; TARGET, x

%ifidn TARGET, d
D.extra_bss:  ; addr=0x987ca50
_stdin_buf: equ $-B.data
..@0x987ca40: resb 0x400
_stdout_buf: equ $-B.data
..@0x987ce40: resb 0x400
..@0x987d040:
D.extra_bss.end:
times -(D.extra_bss.end-D.extra_bss)+0x800 times 0 nop  ; Assert.
times +(D.extra_bss.end-D.extra_bss)-0x800 times 0 nop  ; Assert.
%endif

; __END__
